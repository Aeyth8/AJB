#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_StartPointSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_StartPointSelect.WB_StartPointSelect_C.ExecuteUbergraph_WB_StartPointSelect
// 0x0110 (0x0110 - 0x0000)
struct WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAJBCurrentAreaTitle_Title;             // 0x0008(0x0018)()
	class FText                                   CallFunc_GetAJBCurrentAreaTitle_Sub_Title;         // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0078(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBOutGameHUD_BP_bSuccess;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBOutGameHUD_C*                    CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartLocationSelectTimeSecond_Second;  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartLocationSelectTimeSecond_SelectStartLocationMaxSecond; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect) == 0x000008, "Wrong alignment on WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect");
static_assert(sizeof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect) == 0x000110, "Wrong size on WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, EntryPoint) == 0x000000, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBCurrentAreaTitle_Title) == 0x000008, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBCurrentAreaTitle_Title' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBCurrentAreaTitle_Sub_Title) == 0x000020, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBCurrentAreaTitle_Sub_Title' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, K2Node_MakeStruct_FormatArgumentData1) == 0x000078, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBOutGameHUD_BP_bSuccess) == 0x0000B8, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBOutGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD) == 0x0000C0, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBOutGameHUD_BP_Out_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBGameInstance_bSuccess) == 0x0000F0, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0000F8, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000100, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetStartLocationSelectTimeSecond_Second) == 0x000108, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetStartLocationSelectTimeSecond_Second' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect, CallFunc_GetStartLocationSelectTimeSecond_SelectStartLocationMaxSecond) == 0x00010C, "Member 'WB_StartPointSelect_C_ExecuteUbergraph_WB_StartPointSelect::CallFunc_GetStartLocationSelectTimeSecond_SelectStartLocationMaxSecond' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_StartPointSelect_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_StartPointSelect_C_OnInputTurnRate");
static_assert(sizeof(WB_StartPointSelect_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_StartPointSelect_C_OnInputTurnRate");
static_assert(offsetof(WB_StartPointSelect_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_StartPointSelect_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedUp");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedUp");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedRight");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedRight");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedLeft");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedLeft");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedDown");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedDown");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedDecide");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedDecide");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedCancel");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedCancel");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedUp");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedUp");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedRight");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedRight");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedLeft");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedLeft");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedDown");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedDown");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedDecide");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedDecide");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedCancel");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedCancel");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_StartPointSelect_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_StartPointSelect_C_OnInputMoveRight");
static_assert(sizeof(WB_StartPointSelect_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_StartPointSelect_C_OnInputMoveRight");
static_assert(offsetof(WB_StartPointSelect_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_StartPointSelect_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_StartPointSelect_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_StartPointSelect_C_OnInputMoveForward");
static_assert(sizeof(WB_StartPointSelect_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_StartPointSelect_C_OnInputMoveForward");
static_assert(offsetof(WB_StartPointSelect_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_StartPointSelect_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_StartPointSelect_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_StartPointSelect_C_OnInputLookupRate");
static_assert(sizeof(WB_StartPointSelect_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_StartPointSelect_C_OnInputLookupRate");
static_assert(offsetof(WB_StartPointSelect_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_StartPointSelect_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_IsModeless) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_IsModeless");
static_assert(sizeof(WB_StartPointSelect_C_IsModeless) == 0x000001, "Wrong size on WB_StartPointSelect_C_IsModeless");
static_assert(offsetof(WB_StartPointSelect_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedTouch");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedTouch");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedTouch");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_StartPointSelect_C_OnInputPressedTouch");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_StartPointSelect_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_StartPointSelect_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedR2");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedR2");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedR1");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedR1");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedL3");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedL3");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedL2");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedL2");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputReleasedL1");
static_assert(sizeof(WB_StartPointSelect_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputReleasedL1");
static_assert(offsetof(WB_StartPointSelect_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedR2");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedR2");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedR1");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedR1");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedL3");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedL3");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedL2");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedL2");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_StartPointSelect.WB_StartPointSelect_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_StartPointSelect_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_StartPointSelect_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_StartPointSelect_C_OnInputPressedL1");
static_assert(sizeof(WB_StartPointSelect_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_StartPointSelect_C_OnInputPressedL1");
static_assert(offsetof(WB_StartPointSelect_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_StartPointSelect_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

}


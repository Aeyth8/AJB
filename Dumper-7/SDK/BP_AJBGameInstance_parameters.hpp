#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBGameInstance

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "ST_CharaSkinData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "Engine_structs.hpp"
#include "AmwPlugin_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ST_AkBankSettings_structs.hpp"
#include "ST_CharaSkin_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ExecuteUbergraph_BP_AJBGameInstance
// 0x09A0 (0x09A0 - 0x0000)
struct BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable1;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsSuccess;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGachaID                            K2Node_CustomEvent_GachaID;                        // 0x0050(0x0020)()
	TDelegate<void(bool bIsSuccess, const struct FAJBGachaID& GachaID)> K2Node_CreateDelegate_OutputDelegate1; // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FAJBGachaID                            Temp_struct_Variable;                              // 0x0080(0x0020)()
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBCheckRewardLottery*                 CallFunc_CheckRewardLottery_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAJBNetAPIResult Result, EAJBRewardReceivingStatus ReceiveingStatus, const struct FAJBGetRewardsResponse& GetRewards)> K2Node_CreateDelegate_OutputDelegate2; // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result1;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBRewardReceivingStatus                     K2Node_CustomEvent_ReceiveingStatus1;              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGetRewardsResponse                 K2Node_CustomEvent_GetRewards1;                    // 0x00C8(0x0010)()
	EAJBNetAPIResult                              K2Node_CustomEvent_Result;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBRewardReceivingStatus                     K2Node_CustomEvent_ReceiveingStatus;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGetRewardsResponse                 K2Node_CustomEvent_GetRewards;                     // 0x00E0(0x0010)()
	TDelegate<void(EAJBNetAPIResult Result, EAJBRewardReceivingStatus ReceiveingStatus, const struct FAJBGetRewardsResponse& GetRewards)> K2Node_CreateDelegate_OutputDelegate3; // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FAJBGetRewardsResponse                 Temp_struct_Variable1;                             // 0x0100(0x0010)()
	EAJBRewardReceivingStatus                     Temp_byte_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAJBNetAPIResult                              Temp_byte_Variable1;                               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CharaSkinData                      K2Node_MakeStruct_ST_CharaSkinData;                // 0x0148(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results;                        // 0x0170(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue;                 // 0x0180(0x0020)()
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreateSessionCallbackProxy*            CallFunc_CreateSession_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate4; // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results1;                       // 0x01E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue2;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFindSessionsCallbackProxy*             CallFunc_FindSessions_ReturnValue;                 // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate5; // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& SoundPath)> K2Node_CreateDelegate_OutputDelegate6;           // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ENetworkFailure                               K2Node_Event_FailureType1;                         // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsServer;                            // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETravelFailure                                K2Node_Event_FailureType;                          // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1; // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2; // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDistribution_ReturnValue;               // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerIconManager_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultCredit_ReturnValue;             // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue3;         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableDebugDisplay_ReturnValue;         // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamRepos*                         CallFunc_GetParamRepos_ReturnValue;                // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue4;            // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue12;              // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_EmoneyIcons_C*                      CallFunc_SpawnObject_ReturnValue1;                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAmwPluginEventListener*                CallFunc_GetEventListener_ReturnValue;             // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SoundPath;                      // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue13;              // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue14;              // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue1;                     // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue15;              // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue16;              // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAmwPluginEventListener*                CallFunc_SpawnObject_ReturnValue2;                 // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamRepos*                         CallFunc_GetParamRepos_ReturnValue1;               // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x0530(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x0548(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0558(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FMatchingPlayerInfo>            K2Node_CustomEvent_MatchingPlayerInfo;             // 0x0568(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_Array_Get_Item1;                          // 0x0580(0x0088)()
	struct FST_AkBankSettings                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0608(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertToCharaNameTag_CharaName;          // 0x0628(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertToCharaNameTag_StandName;          // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0648(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue17;              // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue18;              // 0x0668(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue19;              // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue1;           // 0x0688(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue20;              // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue21;              // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x06D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x06E8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_RequestSkinName;                // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharaSkin                          CallFunc_GetDataTableRowFromName_OutRow1;          // 0x0700(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue1;     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item2;                          // 0x0740(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x076C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x076D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchCompensationLoginUserDataID_ReturnValue; // 0x076E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F[0x1];                                      // 0x076F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate11;            // 0x0770(0x0010)(ZeroConstructor, NoDestructor)
	class UNetHttp*                               CallFunc_Create_ReturnValue;                       // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBNetAPI_ResultGetReward*             CallFunc_Request_ResultGetRewardCheckGachaID_ReturnValue; // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SubPP_ReturnValue;                        // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0798(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x07A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        Temp_struct_Variable2;                             // 0x07C0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item3;                          // 0x07D0(0x00B8)()
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item4;                          // 0x0888(0x00B8)()
	class UJoinSessionCallbackProxy*              CallFunc_JoinSession_ReturnValue;                  // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerName_ReturnValue;                // 0x0948(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_959[0x3];                                      // 0x0959(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAmwBuildType                                 CallFunc_AmwGetBuildType_ReturnValue;              // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_963[0x5];                                      // 0x0963(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue3; // 0x0968(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue22;              // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0998(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance");
static_assert(sizeof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance) == 0x0009A0, "Wrong size on BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, EntryPoint) == 0x000000, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_object_Variable) == 0x000018, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_DynamicCast_AsMaterial_Interface) == 0x000020, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_object_Variable1) == 0x000038, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000040, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_bIsSuccess) == 0x000049, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_bIsSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_GachaID) == 0x000050, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_GachaID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate1) == 0x000070, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_struct_Variable) == 0x000080, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_bool_Variable) == 0x0000A0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_CheckRewardLottery_ReturnValue) == 0x0000A8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_CheckRewardLottery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate2) == 0x0000B0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Result1) == 0x0000C1, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_ReceiveingStatus1) == 0x0000C2, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_ReceiveingStatus1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_GetRewards1) == 0x0000C8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_GetRewards1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Result) == 0x0000D8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_ReceiveingStatus) == 0x0000D9, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_ReceiveingStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_GetRewards) == 0x0000E0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_GetRewards' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_struct_Variable1) == 0x000100, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_byte_Variable) == 0x000110, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000111, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000112, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000118, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_BooleanOR_ReturnValue) == 0x000128, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x000130, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_byte_Variable1) == 0x000140, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_MakeStruct_ST_CharaSkinData) == 0x000148, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_MakeStruct_ST_CharaSkinData' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Variable) == 0x000164, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Variable1) == 0x000168, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Results) == 0x000170, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Results' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDebugTags_ReturnValue) == 0x000180, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDebugTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Loaded1) == 0x0001A0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_HasTag_ReturnValue) == 0x0001A8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetPlayerController_ReturnValue) == 0x0001B0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_CreateSession_ReturnValue) == 0x0001B8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_CreateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate4) == 0x0001C0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue1) == 0x0001D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_DestroySession_ReturnValue) == 0x0001D8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue2) == 0x0001E0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_Results1) == 0x0001E8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_Results1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetPlayerController_ReturnValue1) == 0x0001F8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetPlayerController_ReturnValue2) == 0x000200, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_FindSessions_ReturnValue) == 0x000208, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_FindSessions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue3) == 0x000210, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate5) == 0x000218, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_IntToString_ReturnValue) == 0x000228, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Array_Index_Variable) == 0x000238, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate6) == 0x000240, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetAJBGameInstance_bSuccess) == 0x000250, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000258, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_IntToString_ReturnValue1) == 0x000260, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue1) == 0x000270, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000280, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue2) == 0x000288, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue3) == 0x000298, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_Event_FailureType1) == 0x0002A8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_Event_FailureType1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_Event_bIsServer) == 0x0002A9, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_Event_bIsServer' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_Event_FailureType) == 0x0002AA, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_Event_FailureType' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1) == 0x0002B0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2) == 0x0002C0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue4) == 0x0002D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_string_Variable) == 0x0002E0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_IntToString_ReturnValue2) == 0x0002F0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_IntToString_ReturnValue3) == 0x000300, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue5) == 0x000310, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue6) == 0x000320, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue7) == 0x000330, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsDistribution_ReturnValue) == 0x000340, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Not_PreBool_ReturnValue) == 0x000341, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_SpawnObject_ReturnValue) == 0x000348, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDefaultCredit_ReturnValue) == 0x000350, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDefaultCredit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_BuildString_Int_ReturnValue) == 0x000358, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000368, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000370, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000378, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_string_Variable1) == 0x000380, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetPlayerController_ReturnValue3) == 0x000390, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue4) == 0x000398, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_bool_Variable1) == 0x000399, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_Select_Default) == 0x0003A0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsEnableDebugDisplay_ReturnValue) == 0x0003B0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsEnableDebugDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue8) == 0x0003B8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Not_PreBool_ReturnValue1) == 0x0003C8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue9) == 0x0003D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetAJBGameInstance_bSuccess1) == 0x0003E0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0003E8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Loop_Counter_Variable) == 0x0003F0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Add_IntInt_ReturnValue1) == 0x0003F4, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetParamRepos_ReturnValue) == 0x0003F8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetParamRepos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue5) == 0x000400, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_FloatToString_ReturnValue) == 0x000408, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_IntToString_ReturnValue4) == 0x000418, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_IntToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue10) == 0x000428, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue11) == 0x000438, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue12) == 0x000448, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_SpawnObject_ReturnValue1) == 0x000458, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_SpawnObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetEventListener_ReturnValue) == 0x000460, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetEventListener_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Loop_Counter_Variable1) == 0x000468, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Add_IntInt_ReturnValue2) == 0x00046C, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue6) == 0x000470, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_SoundPath) == 0x000478, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_SoundPath' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue13) == 0x000488, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Split_LeftS) == 0x000498, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Split_RightS) == 0x0004A8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Split_ReturnValue) == 0x0004B8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue14) == 0x0004C0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Replace_ReturnValue) == 0x0004D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Replace_ReturnValue1) == 0x0004E0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Replace_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_SwitchString_CmpSuccess) == 0x0004F0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue15) == 0x0004F8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue16) == 0x000508, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_SpawnObject_ReturnValue2) == 0x000518, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_SpawnObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetParamRepos_ReturnValue1) == 0x000520, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetParamRepos_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue7) == 0x000528, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate7) == 0x000530, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue8) == 0x000540, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsDedicatedServer_ReturnValue) == 0x000541, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate8) == 0x000548, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000558, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_MatchingPlayerInfo) == 0x000568, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_MatchingPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Get_Item) == 0x000578, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Get_Item1) == 0x000580, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDataTableRowFromName_OutRow) == 0x000608, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000620, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_ConvertToCharaNameTag_CharaName) == 0x000628, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_ConvertToCharaNameTag_CharaName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_ConvertToCharaNameTag_StandName) == 0x000638, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_ConvertToCharaNameTag_StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_ByteToString_ReturnValue) == 0x000648, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue17) == 0x000658, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue18) == 0x000668, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue19) == 0x000678, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_ByteToString_ReturnValue1) == 0x000688, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_ByteToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_StringToName_ReturnValue) == 0x000698, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue20) == 0x0006A0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Conv_StringToName_ReturnValue1) == 0x0006B0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue21) == 0x0006B8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Length_ReturnValue) == 0x0006C8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Length_ReturnValue1) == 0x0006CC, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0006D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate9) == 0x0006D8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate10) == 0x0006E8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CustomEvent_RequestSkinName) == 0x0006F8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CustomEvent_RequestSkinName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDataTableRowFromName_OutRow1) == 0x000700, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDataTableRowFromName_OutRow1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetDataTableRowFromName_ReturnValue1) == 0x000738, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetDataTableRowFromName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Get_Item2) == 0x000740, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Length_ReturnValue2) == 0x000768, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Less_IntInt_ReturnValue1) == 0x00076C, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Greater_IntInt_ReturnValue) == 0x00076D, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsMatchCompensationLoginUserDataID_ReturnValue) == 0x00076E, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsMatchCompensationLoginUserDataID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate11) == 0x000770, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Create_ReturnValue) == 0x000780, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Request_ResultGetRewardCheckGachaID_ReturnValue) == 0x000788, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Request_ResultGetRewardCheckGachaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue9) == 0x000790, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_SubPP_ReturnValue) == 0x000791, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_SubPP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate12) == 0x000798, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, K2Node_CreateDelegate_OutputDelegate13) == 0x0007A8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_int_Array_Index_Variable1) == 0x0007B8, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, Temp_struct_Variable2) == 0x0007C0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Get_Item3) == 0x0007D0, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Get_Item4) == 0x000888, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_JoinSession_ReturnValue) == 0x000940, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_JoinSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetServerName_ReturnValue) == 0x000948, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetServerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_IsValid_ReturnValue10) == 0x000958, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_Length_ReturnValue3) == 0x00095C, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Less_IntInt_ReturnValue2) == 0x000960, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000961, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_AmwGetBuildType_ReturnValue) == 0x000962, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_AmwGetBuildType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue3) == 0x000968, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_ToLower_ReturnValue) == 0x000978, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_Concat_StrStr_ReturnValue22) == 0x000988, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_Concat_StrStr_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000998, "Member 'BP_AJBGameInstance_C_ExecuteUbergraph_BP_AJBGameInstance::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RequestLoadSkinData
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBGameInstance_C_RequestLoadSkinData final
{
public:
	class FName                                   RequestSkinName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_RequestLoadSkinData) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_RequestLoadSkinData");
static_assert(sizeof(BP_AJBGameInstance_C_RequestLoadSkinData) == 0x000008, "Wrong size on BP_AJBGameInstance_C_RequestLoadSkinData");
static_assert(offsetof(BP_AJBGameInstance_C_RequestLoadSkinData, RequestSkinName) == 0x000000, "Member 'BP_AJBGameInstance_C_RequestLoadSkinData::RequestSkinName' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RequestLoadSkin
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_RequestLoadSkin final
{
public:
	TArray<struct FMatchingPlayerInfo>            MatchingPlayerInfo;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBGameInstance_C_RequestLoadSkin) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_RequestLoadSkin");
static_assert(sizeof(BP_AJBGameInstance_C_RequestLoadSkin) == 0x000010, "Wrong size on BP_AJBGameInstance_C_RequestLoadSkin");
static_assert(offsetof(BP_AJBGameInstance_C_RequestLoadSkin, MatchingPlayerInfo) == 0x000000, "Member 'BP_AJBGameInstance_C_RequestLoadSkin::MatchingPlayerInfo' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnPlayEMoneySound
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_OnPlayEMoneySound final
{
public:
	class FString                                 SoundPath;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_OnPlayEMoneySound) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnPlayEMoneySound");
static_assert(sizeof(BP_AJBGameInstance_C_OnPlayEMoneySound) == 0x000010, "Wrong size on BP_AJBGameInstance_C_OnPlayEMoneySound");
static_assert(offsetof(BP_AJBGameInstance_C_OnPlayEMoneySound, SoundPath) == 0x000000, "Member 'BP_AJBGameInstance_C_OnPlayEMoneySound::SoundPath' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.HandleTravelError
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBGameInstance_C_HandleTravelError final
{
public:
	ETravelFailure                                FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_HandleTravelError) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_HandleTravelError");
static_assert(sizeof(BP_AJBGameInstance_C_HandleTravelError) == 0x000001, "Wrong size on BP_AJBGameInstance_C_HandleTravelError");
static_assert(offsetof(BP_AJBGameInstance_C_HandleTravelError, FailureType) == 0x000000, "Member 'BP_AJBGameInstance_C_HandleTravelError::FailureType' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.HandleNetworkError
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBGameInstance_C_HandleNetworkError final
{
public:
	ENetworkFailure                               FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsServer;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_HandleNetworkError) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_HandleNetworkError");
static_assert(sizeof(BP_AJBGameInstance_C_HandleNetworkError) == 0x000002, "Wrong size on BP_AJBGameInstance_C_HandleNetworkError");
static_assert(offsetof(BP_AJBGameInstance_C_HandleNetworkError, FailureType) == 0x000000, "Member 'BP_AJBGameInstance_C_HandleNetworkError::FailureType' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_HandleNetworkError, bIsServer) == 0x000001, "Member 'BP_AJBGameInstance_C_HandleNetworkError::bIsServer' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBRewardReceivingStatus                     ReceiveingStatus;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGetRewardsResponse                 GetRewards;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C");
static_assert(sizeof(BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C) == 0x000018, "Wrong size on BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C");
static_assert(offsetof(BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C, Result) == 0x000000, "Member 'BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C, ReceiveingStatus) == 0x000001, "Member 'BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C::ReceiveingStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C, GetRewards) == 0x000008, "Member 'BP_AJBGameInstance_C_OnSuccess_07489EA04CE76F0D97F45BA7F12AA00C::GetRewards' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailed_07489EA04CE76F0D97F45BA7F12AA00C
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBRewardReceivingStatus                     ReceiveingStatus;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGetRewardsResponse                 GetRewards;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C");
static_assert(sizeof(BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C) == 0x000018, "Wrong size on BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C");
static_assert(offsetof(BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C, Result) == 0x000000, "Member 'BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C, ReceiveingStatus) == 0x000001, "Member 'BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C::ReceiveingStatus' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C, GetRewards) == 0x000008, "Member 'BP_AJBGameInstance_C_OnFailed_07489EA04CE76F0D97F45BA7F12AA00C::GetRewards' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_6528AD4A4A330DF560B5B9AE566DE724
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724 final
{
public:
	bool                                          bIsSuccess;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGachaID                            GachaID;                                           // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724");
static_assert(sizeof(BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724) == 0x000028, "Wrong size on BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724");
static_assert(offsetof(BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724, bIsSuccess) == 0x000000, "Member 'BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724::bIsSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724, GachaID) == 0x000008, "Member 'BP_AJBGameInstance_C_OnLoaded_6528AD4A4A330DF560B5B9AE566DE724::GachaID' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6");
static_assert(sizeof(BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6) == 0x000008, "Wrong size on BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6");
static_assert(offsetof(BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6, Loaded) == 0x000000, "Member 'BP_AJBGameInstance_C_OnLoaded_B2EBF95E4779073BBCE1E8A5C9CDFFF6::Loaded' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B");
static_assert(sizeof(BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B) == 0x000008, "Wrong size on BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B");
static_assert(offsetof(BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B, Loaded) == 0x000000, "Member 'BP_AJBGameInstance_C_OnLoaded_3ABC71234A3D5835EF365A9B9BBC648B::Loaded' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnSuccess_40E191A64A6BA168B19E32AAC266F212
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212");
static_assert(sizeof(BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212) == 0x000010, "Wrong size on BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212");
static_assert(offsetof(BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212, Results) == 0x000000, "Member 'BP_AJBGameInstance_C_OnSuccess_40E191A64A6BA168B19E32AAC266F212::Results' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OnFailure_40E191A64A6BA168B19E32AAC266F212
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212");
static_assert(sizeof(BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212) == 0x000010, "Wrong size on BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212");
static_assert(offsetof(BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212, Results) == 0x000000, "Member 'BP_AJBGameInstance_C_OnFailure_40E191A64A6BA168B19E32AAC266F212::Results' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ClearMatchingPlayerInfo
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBGameInstance_C_ClearMatchingPlayerInfo final
{
public:
	bool                                          bKeepMatchingPlayers;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_ClearMatchingPlayerInfo) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_ClearMatchingPlayerInfo");
static_assert(sizeof(BP_AJBGameInstance_C_ClearMatchingPlayerInfo) == 0x000002, "Wrong size on BP_AJBGameInstance_C_ClearMatchingPlayerInfo");
static_assert(offsetof(BP_AJBGameInstance_C_ClearMatchingPlayerInfo, bKeepMatchingPlayers) == 0x000000, "Member 'BP_AJBGameInstance_C_ClearMatchingPlayerInfo::bKeepMatchingPlayers' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ClearMatchingPlayerInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_AJBGameInstance_C_ClearMatchingPlayerInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FindMatchingPlayerInfoFromPlayerID
// 0x0168 (0x0168 - 0x0000)
struct BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID final
{
public:
	uint8                                         PlayerID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    Value;                                             // 0x0008(0x0088)(Parm, OutParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x00D8(0x0088)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID");
static_assert(sizeof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID) == 0x000168, "Wrong size on BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, PlayerID) == 0x000000, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, ReturnValue) == 0x000001, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, Value) == 0x000008, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_BooleanAND_ReturnValue) == 0x000161, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000162, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetupMatchingNPC
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_SetupMatchingNPC final
{
public:
	struct FStartLocation                         NPCLocation;                                       // 0x0000(0x0002)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStartLocation>                 RandomStartLocation;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         StartLocationTotal;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_SetupMatchingNPC) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_SetupMatchingNPC");
static_assert(sizeof(BP_AJBGameInstance_C_SetupMatchingNPC) == 0x000020, "Wrong size on BP_AJBGameInstance_C_SetupMatchingNPC");
static_assert(offsetof(BP_AJBGameInstance_C_SetupMatchingNPC, NPCLocation) == 0x000000, "Member 'BP_AJBGameInstance_C_SetupMatchingNPC::NPCLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetupMatchingNPC, RandomStartLocation) == 0x000008, "Member 'BP_AJBGameInstance_C_SetupMatchingNPC::RandomStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetupMatchingNPC, StartLocationTotal) == 0x000018, "Member 'BP_AJBGameInstance_C_SetupMatchingNPC::StartLocationTotal' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FindMatchingPlayerInfoFromPlayerName
// 0x0130 (0x0130 - 0x0000)
struct BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName final
{
public:
	class FString                                 FindName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    Value;                                             // 0x0018(0x0088)(Parm, OutParm)
	struct FMatchingPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x00A0(0x0088)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName");
static_assert(sizeof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName) == 0x000130, "Wrong size on BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName, FindName) == 0x000000, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName::FindName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName, Result) == 0x000010, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName, Value) == 0x000018, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'BP_AJBGameInstance_C_FindMatchingPlayerInfoFromPlayerName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetStartLocation_MatchingPlayerInfo
// 0x0118 (0x0118 - 0x0000)
struct BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo final
{
public:
	uint8                                         PlayerID;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStartLocation                         Start_Location;                                    // 0x0001(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_FindMatchingPlayerInfoFromPlayerID_Value; // 0x0008(0x0088)()
	struct FMatchingPlayerInfo                    K2Node_MakeStruct_MatchingPlayerInfo;              // 0x0090(0x0088)()
};
static_assert(alignof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo");
static_assert(sizeof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo) == 0x000118, "Wrong size on BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo");
static_assert(offsetof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo, PlayerID) == 0x000000, "Member 'BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo, Start_Location) == 0x000001, "Member 'BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo::Start_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo, CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue) == 0x000003, "Member 'BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo::CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo, CallFunc_FindMatchingPlayerInfoFromPlayerID_Value) == 0x000008, "Member 'BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo::CallFunc_FindMatchingPlayerInfoFromPlayerID_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo, K2Node_MakeStruct_MatchingPlayerInfo) == 0x000090, "Member 'BP_AJBGameInstance_C_SetStartLocation_MatchingPlayerInfo::K2Node_MakeStruct_MatchingPlayerInfo' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.TrySelectStartLocation
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBGameInstance_C_TrySelectStartLocation final
{
public:
	uint8                                         PlayerID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStartLocation                         SelectStartLocation;                               // 0x0001(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	EResultStartLocation                          Result;                                            // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddStartLocationNum_AddResult;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_FindMatchingPlayerInfoFromPlayerID_Value; // 0x0010(0x0088)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_TrySelectStartLocation) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_TrySelectStartLocation");
static_assert(sizeof(BP_AJBGameInstance_C_TrySelectStartLocation) == 0x0000A0, "Wrong size on BP_AJBGameInstance_C_TrySelectStartLocation");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, PlayerID) == 0x000000, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, SelectStartLocation) == 0x000001, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::SelectStartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, Result) == 0x000003, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, SelectIndex) == 0x000004, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::SelectIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, CallFunc_TryAddStartLocationNum_AddResult) == 0x000008, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::CallFunc_TryAddStartLocationNum_AddResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue) == 0x000009, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::CallFunc_FindMatchingPlayerInfoFromPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, CallFunc_FindMatchingPlayerInfoFromPlayerID_Value) == 0x000010, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::CallFunc_FindMatchingPlayerInfoFromPlayerID_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TrySelectStartLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_TrySelectStartLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.AddMatchingPlayerInfo
// 0x0198 (0x0198 - 0x0000)
struct BP_AJBGameInstance_C_AddMatchingPlayerInfo final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    PlayerInfo;                                        // 0x0010(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    K2Node_MakeStruct_MatchingPlayerInfo;              // 0x00A0(0x0088)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue1;           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_AddMatchingPlayerInfo) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_AddMatchingPlayerInfo");
static_assert(sizeof(BP_AJBGameInstance_C_AddMatchingPlayerInfo) == 0x000198, "Wrong size on BP_AJBGameInstance_C_AddMatchingPlayerInfo");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, PlayerID) == 0x000000, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, PlayerInfo) == 0x000010, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::PlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Map_Length_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, K2Node_MakeStruct_MatchingPlayerInfo) == 0x0000A0, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::K2Node_MakeStruct_MatchingPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Conv_ByteToString_ReturnValue) == 0x000130, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Conv_ByteToString_ReturnValue1) == 0x000140, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Conv_ByteToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000150, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Now_ReturnValue) == 0x000160, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Concat_StrStr_ReturnValue1) == 0x000168, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Concat_StrStr_ReturnValue2) == 0x000178, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_AddMatchingPlayerInfo, CallFunc_Concat_StrStr_ReturnValue3) == 0x000188, "Member 'BP_AJBGameInstance_C_AddMatchingPlayerInfo::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsFinishMatching
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBGameInstance_C_IsFinishMatching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue1;                 // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue1;                         // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue1;   // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_IsFinishMatching) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_IsFinishMatching");
static_assert(sizeof(BP_AJBGameInstance_C_IsFinishMatching) == 0x000060, "Wrong size on BP_AJBGameInstance_C_IsFinishMatching");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_IsFinishMatching::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x000001, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_PlayModeEquals_bResult) == 0x000002, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_PlayModeEquals_bResult1) == 0x000003, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_FromSeconds_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_BooleanOR_ReturnValue1) == 0x000010, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Now_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000028, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Greater_TimespanTimespan_ReturnValue) == 0x000030, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Greater_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_IsEditor_ReturnValue) == 0x000031, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_SelectFloat_ReturnValue) == 0x000034, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_FromSeconds_ReturnValue1) == 0x000038, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_FromSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Map_Length_ReturnValue) == 0x000040, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Now_ReturnValue1) == 0x000048, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Now_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Subtract_DateTimeDateTime_ReturnValue1) == 0x000050, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Subtract_DateTimeDateTime_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishMatching, CallFunc_Greater_TimespanTimespan_ReturnValue1) == 0x000058, "Member 'BP_AJBGameInstance_C_IsFinishMatching::CallFunc_Greater_TimespanTimespan_ReturnValue1' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetCharacterIDFromPlayerName
// 0x0128 (0x0128 - 0x0000)
struct BP_AJBGameInstance_C_SetCharacterIDFromPlayerName final
{
public:
	class FString                                 FindName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CharacterID;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMatchingPlayerInfoFromPlayerName_Result; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_FindMatchingPlayerInfoFromPlayerName_Value; // 0x0018(0x0088)()
	struct FMatchingPlayerInfo                    K2Node_MakeStruct_MatchingPlayerInfo;              // 0x00A0(0x0088)()
};
static_assert(alignof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_SetCharacterIDFromPlayerName");
static_assert(sizeof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName) == 0x000128, "Wrong size on BP_AJBGameInstance_C_SetCharacterIDFromPlayerName");
static_assert(offsetof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName, FindName) == 0x000000, "Member 'BP_AJBGameInstance_C_SetCharacterIDFromPlayerName::FindName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName, CharacterID) == 0x000010, "Member 'BP_AJBGameInstance_C_SetCharacterIDFromPlayerName::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName, CallFunc_FindMatchingPlayerInfoFromPlayerName_Result) == 0x000011, "Member 'BP_AJBGameInstance_C_SetCharacterIDFromPlayerName::CallFunc_FindMatchingPlayerInfoFromPlayerName_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName, CallFunc_FindMatchingPlayerInfoFromPlayerName_Value) == 0x000018, "Member 'BP_AJBGameInstance_C_SetCharacterIDFromPlayerName::CallFunc_FindMatchingPlayerInfoFromPlayerName_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetCharacterIDFromPlayerName, K2Node_MakeStruct_MatchingPlayerInfo) == 0x0000A0, "Member 'BP_AJBGameInstance_C_SetCharacterIDFromPlayerName::K2Node_MakeStruct_MatchingPlayerInfo' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsFinishSelectStartLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_IsFinishSelectStartLocation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_IsFinishSelectStartLocation) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_IsFinishSelectStartLocation");
static_assert(sizeof(BP_AJBGameInstance_C_IsFinishSelectStartLocation) == 0x000028, "Wrong size on BP_AJBGameInstance_C_IsFinishSelectStartLocation");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishSelectStartLocation, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_IsFinishSelectStartLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishSelectStartLocation, CallFunc_FromSeconds_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_IsFinishSelectStartLocation::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishSelectStartLocation, CallFunc_Now_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_IsFinishSelectStartLocation::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishSelectStartLocation, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_IsFinishSelectStartLocation::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_IsFinishSelectStartLocation, CallFunc_Greater_TimespanTimespan_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_IsFinishSelectStartLocation::CallFunc_Greater_TimespanTimespan_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.TryAddStartLocationNum
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_TryAddStartLocationNum final
{
public:
	struct FStartLocation                         StartLocation;                                     // 0x0000(0x0002)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          AddResult;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcStartLocationArrayIndex_Index;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_TryAddStartLocationNum) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_TryAddStartLocationNum");
static_assert(sizeof(BP_AJBGameInstance_C_TryAddStartLocationNum) == 0x000020, "Wrong size on BP_AJBGameInstance_C_TryAddStartLocationNum");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, StartLocation) == 0x000000, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, AddResult) == 0x000002, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::AddResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, SelectIndex) == 0x000004, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::SelectIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, CallFunc_CalcStartLocationArrayIndex_Index) == 0x000008, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::CallFunc_CalcStartLocationArrayIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, Temp_int_Variable) == 0x00000C, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_TryAddStartLocationNum, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'BP_AJBGameInstance_C_TryAddStartLocationNum::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CheckSelecedAll
// 0x003C (0x003C - 0x0000)
struct BP_AJBGameInstance_C_CheckSelecedAll final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelecedNum;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCameramanNumber_Count;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_CheckSelecedAll) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_CheckSelecedAll");
static_assert(sizeof(BP_AJBGameInstance_C_CheckSelecedAll) == 0x00003C, "Wrong size on BP_AJBGameInstance_C_CheckSelecedAll");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, SelecedNum) == 0x000004, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::SelecedNum' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x000014, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_GetCameramanNumber_Count) == 0x000018, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_GetCameramanNumber_Count' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Map_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Add_IntInt_ReturnValue2) == 0x000030, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CheckSelecedAll, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBGameInstance_C_CheckSelecedAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.BeginSelectStartLocation
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_BeginSelectStartLocation final
{
public:
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_BeginSelectStartLocation) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_BeginSelectStartLocation");
static_assert(sizeof(BP_AJBGameInstance_C_BeginSelectStartLocation) == 0x000008, "Wrong size on BP_AJBGameInstance_C_BeginSelectStartLocation");
static_assert(offsetof(BP_AJBGameInstance_C_BeginSelectStartLocation, CallFunc_Now_ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_BeginSelectStartLocation::CallFunc_Now_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetMatchingSecond
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBGameInstance_C_GetMatchingSecond final
{
public:
	float                                         second;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MatchingMaxSecond_0;                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsShopCompetition_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetMatchingSecond) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetMatchingSecond");
static_assert(sizeof(BP_AJBGameInstance_C_GetMatchingSecond) == 0x000030, "Wrong size on BP_AJBGameInstance_C_GetMatchingSecond");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, second) == 0x000000, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::second' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, MatchingMaxSecond_0) == 0x000004, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::MatchingMaxSecond_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_PlayModeIsShopCompetition_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_PlayModeIsShopCompetition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_Now_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_GetTotalSeconds_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetMatchingSecond, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BP_AJBGameInstance_C_GetMatchingSecond::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStartLocationSelectTimeSecond
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond final
{
public:
	float                                         second;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelectStartLocationMaxSecond_0;                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond");
static_assert(sizeof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond) == 0x000028, "Wrong size on BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, second) == 0x000000, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::second' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, SelectStartLocationMaxSecond_0) == 0x000004, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::SelectStartLocationMaxSecond_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, CallFunc_Now_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, CallFunc_GetTotalSeconds_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_GetStartLocationSelectTimeSecond::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CalcStartLocationTotalNum
// 0x000C (0x000C - 0x0000)
struct BP_AJBGameInstance_C_CalcStartLocationTotalNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Multiply_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_CalcStartLocationTotalNum) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_CalcStartLocationTotalNum");
static_assert(sizeof(BP_AJBGameInstance_C_CalcStartLocationTotalNum) == 0x00000C, "Wrong size on BP_AJBGameInstance_C_CalcStartLocationTotalNum");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationTotalNum, Num) == 0x000000, "Member 'BP_AJBGameInstance_C_CalcStartLocationTotalNum::Num' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationTotalNum, CallFunc_Multiply_ByteByte_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_CalcStartLocationTotalNum::CallFunc_Multiply_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationTotalNum, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_CalcStartLocationTotalNum::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.CalcStartLocationArrayIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_CalcStartLocationArrayIndex final
{
public:
	struct FStartLocation                         StartLocation;                                     // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Multiply_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_CalcStartLocationArrayIndex");
static_assert(sizeof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex) == 0x000010, "Wrong size on BP_AJBGameInstance_C_CalcStartLocationArrayIndex");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex, StartLocation) == 0x000000, "Member 'BP_AJBGameInstance_C_CalcStartLocationArrayIndex::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex, Index_0) == 0x000004, "Member 'BP_AJBGameInstance_C_CalcStartLocationArrayIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex, CallFunc_Multiply_ByteByte_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_CalcStartLocationArrayIndex::CallFunc_Multiply_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex, CallFunc_Add_ByteByte_ReturnValue) == 0x000009, "Member 'BP_AJBGameInstance_C_CalcStartLocationArrayIndex::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_CalcStartLocationArrayIndex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_AJBGameInstance_C_CalcStartLocationArrayIndex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStartLocationNumber
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBGameInstance_C_GetStartLocationNumber final
{
public:
	struct FStartLocation                         StartLocationNum_0;                                // 0x0000(0x0002)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_GetStartLocationNumber) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_GetStartLocationNumber");
static_assert(sizeof(BP_AJBGameInstance_C_GetStartLocationNumber) == 0x000002, "Wrong size on BP_AJBGameInstance_C_GetStartLocationNumber");
static_assert(offsetof(BP_AJBGameInstance_C_GetStartLocationNumber, StartLocationNum_0) == 0x000000, "Member 'BP_AJBGameInstance_C_GetStartLocationNumber::StartLocationNum_0' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParam
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBGameInstance_C_InitializeDamageAreaParam final
{
public:
	int32                                         AreaTypeID_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       UseContent;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ParamFIleNameBase;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDamegeAreaFileNameBase_File_Name_Base; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamFile*                          CallFunc_GetParamFile_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetDefaultContent_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamRepos*                         CallFunc_GetParamRepos_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue1;              // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_InitializeDamageAreaParam) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_InitializeDamageAreaParam");
static_assert(sizeof(BP_AJBGameInstance_C_InitializeDamageAreaParam) == 0x000088, "Wrong size on BP_AJBGameInstance_C_InitializeDamageAreaParam");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, AreaTypeID_0) == 0x000000, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::AreaTypeID_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, UseContent) == 0x000008, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::UseContent' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, ParamFIleNameBase) == 0x000010, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::ParamFIleNameBase' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetDamegeAreaFileNameBase_File_Name_Base) == 0x000020, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetDamegeAreaFileNameBase_File_Name_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetParamFile_ReturnValue) == 0x000048, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetParamFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetDefaultContent_ReturnValue) == 0x000050, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetParamRepos_ReturnValue) == 0x000058, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetParamRepos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetVectorValue_ReturnValue) == 0x000064, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_Contains_ReturnValue) == 0x000070, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetFloatValue_ReturnValue1) == 0x000074, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetFloatValue_ReturnValue2) == 0x000078, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetFloatValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam, CallFunc_GetVectorValue_ReturnValue1) == 0x00007C, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam::CallFunc_GetVectorValue_ReturnValue1' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.LogoutMatchingPlayer
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBGameInstance_C_LogoutMatchingPlayer final
{
public:
	ENetworkFailure                               Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_LogoutMatchingPlayer) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_LogoutMatchingPlayer");
static_assert(sizeof(BP_AJBGameInstance_C_LogoutMatchingPlayer) == 0x000003, "Wrong size on BP_AJBGameInstance_C_LogoutMatchingPlayer");
static_assert(offsetof(BP_AJBGameInstance_C_LogoutMatchingPlayer, Selection) == 0x000000, "Member 'BP_AJBGameInstance_C_LogoutMatchingPlayer::Selection' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_LogoutMatchingPlayer, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'BP_AJBGameInstance_C_LogoutMatchingPlayer::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_LogoutMatchingPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_AJBGameInstance_C_LogoutMatchingPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RandomFindStartLocation
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBGameInstance_C_RandomFindStartLocation final
{
public:
	struct FStartLocation                         StartLocation;                                     // 0x0000(0x0002)(Parm, OutParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectLocationIndex;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CanSelectLocationIndex;                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue1;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStartLocation                         K2Node_MakeStruct_StartLocation;                   // 0x0049(0x0002)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_RandomFindStartLocation) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_RandomFindStartLocation");
static_assert(sizeof(BP_AJBGameInstance_C_RandomFindStartLocation) == 0x000060, "Wrong size on BP_AJBGameInstance_C_RandomFindStartLocation");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, StartLocation) == 0x000000, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, SelectLocationIndex) == 0x000004, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::SelectLocationIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CanSelectLocationIndex) == 0x000008, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CanSelectLocationIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Percent_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Conv_IntToByte_ReturnValue) == 0x000040, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Divide_IntInt_ReturnValue) == 0x000044, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Conv_IntToByte_ReturnValue1) == 0x000048, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Conv_IntToByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, K2Node_MakeStruct_StartLocation) == 0x000049, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::K2Node_MakeStruct_StartLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Array_Get_Item1) == 0x00004C, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Array_Length_ReturnValue1) == 0x000054, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_RandomFindStartLocation, CallFunc_Less_IntInt_ReturnValue1) == 0x000058, "Member 'BP_AJBGameInstance_C_RandomFindStartLocation::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.FinishStartLocationSelect
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_FinishStartLocationSelect final
{
public:
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_FinishStartLocationSelect) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_FinishStartLocationSelect");
static_assert(sizeof(BP_AJBGameInstance_C_FinishStartLocationSelect) == 0x000008, "Wrong size on BP_AJBGameInstance_C_FinishStartLocationSelect");
static_assert(offsetof(BP_AJBGameInstance_C_FinishStartLocationSelect, CallFunc_MakeDateTime_ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_FinishStartLocationSelect::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GotoOutGameLevel
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_GotoOutGameLevel final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                CallFunc_GetLevelListNeedUnloadDuringOutGame_Un_Load_Level_Primary_Asset_Id_List; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBGameInstance_C_GotoOutGameLevel) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GotoOutGameLevel");
static_assert(sizeof(BP_AJBGameInstance_C_GotoOutGameLevel) == 0x000020, "Wrong size on BP_AJBGameInstance_C_GotoOutGameLevel");
static_assert(offsetof(BP_AJBGameInstance_C_GotoOutGameLevel, NewLocalVar_0) == 0x000000, "Member 'BP_AJBGameInstance_C_GotoOutGameLevel::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GotoOutGameLevel, CallFunc_GetAJBHighlightManager_bIsValid) == 0x000001, "Member 'BP_AJBGameInstance_C_GotoOutGameLevel::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GotoOutGameLevel, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_GotoOutGameLevel::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GotoOutGameLevel, CallFunc_GetLevelListNeedUnloadDuringOutGame_Un_Load_Level_Primary_Asset_Id_List) == 0x000010, "Member 'BP_AJBGameInstance_C_GotoOutGameLevel::CallFunc_GetLevelListNeedUnloadDuringOutGame_Un_Load_Level_Primary_Asset_Id_List' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetLastPlayedWwiseBGMInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayingID;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo");
static_assert(sizeof(BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo) == 0x000010, "Wrong size on BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo");
static_assert(offsetof(BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo, EventTag) == 0x000000, "Member 'BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo, PlayingID) == 0x000008, "Member 'BP_AJBGameInstance_C_GetLastPlayedWwiseBGMInfo::PlayingID' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetPlayingWwiseBGMInfo
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayingID;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo");
static_assert(sizeof(BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo) == 0x000010, "Wrong size on BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo");
static_assert(offsetof(BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo, EventTag) == 0x000000, "Member 'BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo, PlayingID) == 0x000008, "Member 'BP_AJBGameInstance_C_SetPlayingWwiseBGMInfo::PlayingID' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCreaditNumClamp
// 0x000C (0x000C - 0x0000)
struct BP_AJBGameInstance_C_GetCreaditNumClamp final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCreaditNum_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetCreaditNumClamp) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetCreaditNumClamp");
static_assert(sizeof(BP_AJBGameInstance_C_GetCreaditNumClamp) == 0x00000C, "Wrong size on BP_AJBGameInstance_C_GetCreaditNumClamp");
static_assert(offsetof(BP_AJBGameInstance_C_GetCreaditNumClamp, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetCreaditNumClamp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCreaditNumClamp, CallFunc_GetCreaditNum_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_GetCreaditNumClamp::CallFunc_GetCreaditNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCreaditNumClamp, CallFunc_Min_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_GetCreaditNumClamp::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeEquals
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBGameInstance_C_PlayModeEquals final
{
public:
	EPlayMode                                     PlayMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_PlayModeEquals) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_PlayModeEquals");
static_assert(sizeof(BP_AJBGameInstance_C_PlayModeEquals) == 0x000003, "Wrong size on BP_AJBGameInstance_C_PlayModeEquals");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeEquals, PlayMode_0) == 0x000000, "Member 'BP_AJBGameInstance_C_PlayModeEquals::PlayMode_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeEquals, bResult) == 0x000001, "Member 'BP_AJBGameInstance_C_PlayModeEquals::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeEquals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBGameInstance_C_PlayModeEquals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetPlayModeTitle
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_GetPlayModeTitle final
{
public:
	EPlayMode                                     PlayMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_GetPlayModeTitle) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetPlayModeTitle");
static_assert(sizeof(BP_AJBGameInstance_C_GetPlayModeTitle) == 0x000028, "Wrong size on BP_AJBGameInstance_C_GetPlayModeTitle");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayModeTitle, PlayMode_0) == 0x000000, "Member 'BP_AJBGameInstance_C_GetPlayModeTitle::PlayMode_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayModeTitle, Result) == 0x000008, "Member 'BP_AJBGameInstance_C_GetPlayModeTitle::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayModeTitle, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_AJBGameInstance_C_GetPlayModeTitle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCurrentPlayModeTitle
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBGameInstance_C_GetCurrentPlayModeTitle final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetPlayModeTitle_Result;                  // 0x0018(0x0018)()
};
static_assert(alignof(BP_AJBGameInstance_C_GetCurrentPlayModeTitle) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetCurrentPlayModeTitle");
static_assert(sizeof(BP_AJBGameInstance_C_GetCurrentPlayModeTitle) == 0x000030, "Wrong size on BP_AJBGameInstance_C_GetCurrentPlayModeTitle");
static_assert(offsetof(BP_AJBGameInstance_C_GetCurrentPlayModeTitle, Result) == 0x000000, "Member 'BP_AJBGameInstance_C_GetCurrentPlayModeTitle::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCurrentPlayModeTitle, CallFunc_GetPlayModeTitle_Result) == 0x000018, "Member 'BP_AJBGameInstance_C_GetCurrentPlayModeTitle::CallFunc_GetPlayModeTitle_Result' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OpenNoticeErrorLevel
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBGameInstance_C_OpenNoticeErrorLevel final
{
public:
	ENetworkFailure                               Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_OpenNoticeErrorLevel) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_OpenNoticeErrorLevel");
static_assert(sizeof(BP_AJBGameInstance_C_OpenNoticeErrorLevel) == 0x000018, "Wrong size on BP_AJBGameInstance_C_OpenNoticeErrorLevel");
static_assert(offsetof(BP_AJBGameInstance_C_OpenNoticeErrorLevel, Selection) == 0x000000, "Member 'BP_AJBGameInstance_C_OpenNoticeErrorLevel::Selection' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OpenNoticeErrorLevel, CallFunc_GetAJBHighlightManager_bIsValid) == 0x000001, "Member 'BP_AJBGameInstance_C_OpenNoticeErrorLevel::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OpenNoticeErrorLevel, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_OpenNoticeErrorLevel::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OpenNoticeErrorLevel, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_AJBGameInstance_C_OpenNoticeErrorLevel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeSettings
// 0x001C (0x001C - 0x0000)
struct BP_AJBGameInstance_C_ReflectVolumeSettings final
{
public:
	bool                                          bUseUserSettingVolumeRateDefault;                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_NormalizedVolumeValue;                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVolumeAttract_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVolumeGame_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectVolumeSettings) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectVolumeSettings");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectVolumeSettings) == 0x00001C, "Wrong size on BP_AJBGameInstance_C_ReflectVolumeSettings");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, bUseUserSettingVolumeRateDefault) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::bUseUserSettingVolumeRateDefault' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, Temp_NormalizedVolumeValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::Temp_NormalizedVolumeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, Temp_float_Variable) == 0x00000C, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, CallFunc_GetVolumeAttract_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::CallFunc_GetVolumeAttract_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, K2Node_Select_Default) == 0x000014, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeSettings, CallFunc_GetVolumeGame_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_ReflectVolumeSettings::CallFunc_GetVolumeGame_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeGameByTestModeValue
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue final
{
public:
	int32                                         NewVolume;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue) == 0x000014, "Wrong size on BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue, NewVolume) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue::NewVolume' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue, CallFunc_GetMaxSoundVolumeValue_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue::CallFunc_GetMaxSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00000C, "Member 'BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_ReflectVolumeGameByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeAttractByTestModeValue
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue final
{
public:
	int32                                         NewVolume;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue) == 0x000014, "Wrong size on BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue, NewVolume) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue::NewVolume' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue, CallFunc_GetMaxSoundVolumeValue_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue::CallFunc_GetMaxSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00000C, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttractByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.IsDamageAreaParamInitialized
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBGameInstance_C_IsDamageAreaParamInitialized final
{
public:
	bool                                          bDamageAreaParamInitialized_0;                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_IsDamageAreaParamInitialized) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_IsDamageAreaParamInitialized");
static_assert(sizeof(BP_AJBGameInstance_C_IsDamageAreaParamInitialized) == 0x000001, "Wrong size on BP_AJBGameInstance_C_IsDamageAreaParamInitialized");
static_assert(offsetof(BP_AJBGameInstance_C_IsDamageAreaParamInitialized, bDamageAreaParamInitialized_0) == 0x000000, "Member 'BP_AJBGameInstance_C_IsDamageAreaParamInitialized::bDamageAreaParamInitialized_0' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetInitialDamageAreaCenter
// 0x000C (0x000C - 0x0000)
struct BP_AJBGameInstance_C_GetInitialDamageAreaCenter final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetInitialDamageAreaCenter) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetInitialDamageAreaCenter");
static_assert(sizeof(BP_AJBGameInstance_C_GetInitialDamageAreaCenter) == 0x00000C, "Wrong size on BP_AJBGameInstance_C_GetInitialDamageAreaCenter");
static_assert(offsetof(BP_AJBGameInstance_C_GetInitialDamageAreaCenter, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetInitialDamageAreaCenter::ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetInitialDamageAreaRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_GetInitialDamageAreaRadius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetInitialDamageAreaRadius) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetInitialDamageAreaRadius");
static_assert(sizeof(BP_AJBGameInstance_C_GetInitialDamageAreaRadius) == 0x000004, "Wrong size on BP_AJBGameInstance_C_GetInitialDamageAreaRadius");
static_assert(offsetof(BP_AJBGameInstance_C_GetInitialDamageAreaRadius, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetInitialDamageAreaRadius::ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.OverwriteDamageAreaInitialParams
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams final
{
public:
	int32                                         AreaTypeID_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageAreaCenter_0;                                // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageAreaRadius_0;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams");
static_assert(sizeof(BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams) == 0x000014, "Wrong size on BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams");
static_assert(offsetof(BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams, AreaTypeID_0) == 0x000000, "Member 'BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams::AreaTypeID_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams, DamageAreaCenter_0) == 0x000004, "Member 'BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams::DamageAreaCenter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams, DamageAreaRadius_0) == 0x000010, "Member 'BP_AJBGameInstance_C_OverwriteDamageAreaInitialParams::DamageAreaRadius_0' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetBlockingLoadStageAssetId
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_GetBlockingLoadStageAssetId final
{
public:
	TArray<struct FPrimaryAssetId>                Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FPrimaryAssetId>                CallFunc_GetPreLoadLevelList_Pre_Load_Level_Primary_Asset_Id_List; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBGameInstance_C_GetBlockingLoadStageAssetId) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetBlockingLoadStageAssetId");
static_assert(sizeof(BP_AJBGameInstance_C_GetBlockingLoadStageAssetId) == 0x000020, "Wrong size on BP_AJBGameInstance_C_GetBlockingLoadStageAssetId");
static_assert(offsetof(BP_AJBGameInstance_C_GetBlockingLoadStageAssetId, Result) == 0x000000, "Member 'BP_AJBGameInstance_C_GetBlockingLoadStageAssetId::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetBlockingLoadStageAssetId, CallFunc_GetPreLoadLevelList_Pre_Load_Level_Primary_Asset_Id_List) == 0x000010, "Member 'BP_AJBGameInstance_C_GetBlockingLoadStageAssetId::CallFunc_GetPreLoadLevelList_Pre_Load_Level_Primary_Asset_Id_List' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeSelectedStartLoacation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBGameInstance_C_InitializeSelectedStartLoacation final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Multiply_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_Array_Get_Item;                           // 0x0010(0x0088)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddStartLocationNum_AddResult;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_InitializeSelectedStartLoacation");
static_assert(sizeof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation) == 0x0000A8, "Wrong size on BP_AJBGameInstance_C_InitializeSelectedStartLoacation");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Multiply_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Multiply_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_TryAddStartLocationNum_AddResult) == 0x00009C, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_TryAddStartLocationNum_AddResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeSelectedStartLoacation, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_AJBGameInstance_C_InitializeSelectedStartLoacation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetPlayerControllerUserDataID
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBGameInstance_C_GetPlayerControllerUserDataID final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 UserDataID;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBPlayerControllerBase*               K2Node_DynamicCast_AsAJBPlayer_Controller_Base;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetPlayerControllerUserDataID");
static_assert(sizeof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID) == 0x000058, "Wrong size on BP_AJBGameInstance_C_GetPlayerControllerUserDataID");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, PlayerController) == 0x000000, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, UserDataID) == 0x000008, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::UserDataID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, K2Node_DynamicCast_AsAJBPlayer_Controller_Base) == 0x000020, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::K2Node_DynamicCast_AsAJBPlayer_Controller_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetPlayerControllerUserDataID, K2Node_Select_Default) == 0x000048, "Member 'BP_AJBGameInstance_C_GetPlayerControllerUserDataID::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParamRandom
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_InitializeDamageAreaParamRandom final
{
public:
	class UAJBParamContent*                       UseContent;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ParamFIleNameBase;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomAreaNo_AreaNo;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_InitializeDamageAreaParamRandom) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_InitializeDamageAreaParamRandom");
static_assert(sizeof(BP_AJBGameInstance_C_InitializeDamageAreaParamRandom) == 0x000020, "Wrong size on BP_AJBGameInstance_C_InitializeDamageAreaParamRandom");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParamRandom, UseContent) == 0x000000, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParamRandom::UseContent' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParamRandom, ParamFIleNameBase) == 0x000008, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParamRandom::ParamFIleNameBase' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParamRandom, CallFunc_RandomAreaNo_AreaNo) == 0x000018, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParamRandom::CallFunc_RandomAreaNo_AreaNo' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeDamageAreaParam_ForDebug
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug final
{
public:
	int32                                         AreaTypeID_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       UseContent;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ParamFIleNameBase;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug");
static_assert(sizeof(BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug) == 0x000020, "Wrong size on BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug, AreaTypeID_0) == 0x000000, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug::AreaTypeID_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug, UseContent) == 0x000008, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug::UseContent' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug, ParamFIleNameBase) == 0x000010, "Member 'BP_AJBGameInstance_C_InitializeDamageAreaParam_ForDebug::ParamFIleNameBase' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectUserOutputLevelHeadphone
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone final
{
public:
	float                                         UserSettingVolumeRate_0;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOutputLevelIndexHeadphone_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone) == 0x000008, "Wrong size on BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone, UserSettingVolumeRate_0) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone::UserSettingVolumeRate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone, CallFunc_GetOutputLevelIndexHeadphone_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectUserOutputLevelHeadphone::CallFunc_GetOutputLevelIndexHeadphone_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeGame
// 0x0024 (0x0024 - 0x0000)
struct BP_AJBGameInstance_C_ReflectVolumeGame final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultSoundVolumeValue_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectVolumeGame) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectVolumeGame");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectVolumeGame) == 0x000024, "Wrong size on BP_AJBGameInstance_C_ReflectVolumeGame");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, Rate) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_GetDefaultSoundVolumeValue_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_GetDefaultSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_GetMaxSoundVolumeValue_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_GetMaxSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000014, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeGame, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000020, "Member 'BP_AJBGameInstance_C_ReflectVolumeGame::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectVolumeAttract
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_ReflectVolumeAttract final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectVolumeAttract) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_ReflectVolumeAttract");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectVolumeAttract) == 0x000008, "Wrong size on BP_AJBGameInstance_C_ReflectVolumeAttract");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttract, Rate) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttract::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectVolumeAttract, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectVolumeAttract::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ReflectOutputLevelHeadphoneByTestModeValue
// 0x01C0 (0x01C0 - 0x0000)
struct BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UserSettingVolumeRate_0;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVolumeGame_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue1;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultSoundVolumeValue_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSoundVolumeValue_ReturnValue2;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue4;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue5;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVolumeGame_ReturnValue1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultSoundVolumeValue_ReturnValue1;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOutputLevelIndex_ReturnValue;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue6;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue7;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue1;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue2;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue3;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue4;          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue5;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue12;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue13;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue");
static_assert(sizeof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue) == 0x0001C0, "Wrong size on BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, NewIndex) == 0x000000, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::NewIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, UserSettingVolumeRate_0) == 0x000004, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::UserSettingVolumeRate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetVolumeGame_ReturnValue) == 0x00000C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetVolumeGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetMaxSoundVolumeValue_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetMaxSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000014, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000018, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetMaxSoundVolumeValue_ReturnValue1) == 0x00001C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetMaxSoundVolumeValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x000024, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetDefaultSoundVolumeValue_ReturnValue) == 0x000038, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetDefaultSoundVolumeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetMaxSoundVolumeValue_ReturnValue2) == 0x00003C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetMaxSoundVolumeValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue4) == 0x000040, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue5) == 0x000044, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000048, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetVolumeGame_ReturnValue1) == 0x00004C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetVolumeGame_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetDefaultSoundVolumeValue_ReturnValue1) == 0x000050, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetDefaultSoundVolumeValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Max_ReturnValue) == 0x000054, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_GetMaxOutputLevelIndex_ReturnValue) == 0x000058, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_GetMaxOutputLevelIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue6) == 0x00005C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_IntToFloat_ReturnValue7) == 0x000060, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_IntToFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000064, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000068, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue1) == 0x000070, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x000084, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000088, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_FMax_ReturnValue) == 0x00008C, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000090, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000094, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue2) == 0x000098, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0000A8, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue3) == 0x0000C0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000D0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000E0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000F0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue4) == 0x000100, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue5) == 0x000110, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue6) == 0x000120, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue4) == 0x000130, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue7) == 0x000140, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue8) == 0x000150, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Conv_FloatToString_ReturnValue5) == 0x000160, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Conv_FloatToString_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue9) == 0x000170, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue10) == 0x000180, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue11) == 0x000190, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue12) == 0x0001A0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue, CallFunc_Concat_StrStr_ReturnValue13) == 0x0001B0, "Member 'BP_AJBGameInstance_C_ReflectOutputLevelHeadphoneByTestModeValue::CallFunc_Concat_StrStr_ReturnValue13' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetStageID
// 0x000C (0x000C - 0x0000)
struct BP_AJBGameInstance_C_GetStageID final
{
public:
	int32                                         StageTypeID_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaTypeID_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageIDByAreaType_StageID;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetStageID) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetStageID");
static_assert(sizeof(BP_AJBGameInstance_C_GetStageID) == 0x00000C, "Wrong size on BP_AJBGameInstance_C_GetStageID");
static_assert(offsetof(BP_AJBGameInstance_C_GetStageID, StageTypeID_0) == 0x000000, "Member 'BP_AJBGameInstance_C_GetStageID::StageTypeID_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStageID, CallFunc_GetAreaTypeID_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_GetStageID::CallFunc_GetAreaTypeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetStageID, CallFunc_GetStageIDByAreaType_StageID) == 0x000008, "Member 'BP_AJBGameInstance_C_GetStageID::CallFunc_GetStageIDByAreaType_StageID' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.InitializeInGameParam
// 0x0160 (0x0160 - 0x0000)
struct BP_AJBGameInstance_C_InitializeInGameParam final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamRepos*                         CallFunc_GetParamRepos_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item2;                          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistParamFile_ReturnValue;          // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_InitializeInGameParam) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_InitializeInGameParam");
static_assert(sizeof(BP_AJBGameInstance_C_InitializeInGameParam) == 0x000160, "Wrong size on BP_AJBGameInstance_C_InitializeInGameParam");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Array_Index_Variable1) == 0x000008, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Array_Index_Variable2) == 0x000014, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Loop_Counter_Variable1) == 0x000018, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Add_IntInt_ReturnValue1) == 0x00003C, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, Temp_int_Loop_Counter_Variable2) == 0x000040, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Get_Item1) == 0x000058, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Length_ReturnValue1) == 0x000060, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Right_ReturnValue) == 0x000080, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Less_IntInt_ReturnValue1) == 0x0000F0, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Add_IntInt_ReturnValue2) == 0x000120, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_AddUnique_ReturnValue) == 0x000138, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_GetParamRepos_ReturnValue) == 0x000140, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_GetParamRepos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Get_Item2) == 0x000148, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Array_Length_ReturnValue2) == 0x000158, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_Less_IntInt_ReturnValue2) == 0x00015C, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_InitializeInGameParam, CallFunc_CheckExistParamFile_ReturnValue) == 0x00015D, "Member 'BP_AJBGameInstance_C_InitializeInGameParam::CallFunc_CheckExistParamFile_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetAreaTypeID
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_GetAreaTypeID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetAreaTypeID) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetAreaTypeID");
static_assert(sizeof(BP_AJBGameInstance_C_GetAreaTypeID) == 0x000004, "Wrong size on BP_AJBGameInstance_C_GetAreaTypeID");
static_assert(offsetof(BP_AJBGameInstance_C_GetAreaTypeID, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetAreaTypeID::ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetRandomAreaTypeID
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_GetRandomAreaTypeID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetRandomAreaTypeID) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetRandomAreaTypeID");
static_assert(sizeof(BP_AJBGameInstance_C_GetRandomAreaTypeID) == 0x000008, "Wrong size on BP_AJBGameInstance_C_GetRandomAreaTypeID");
static_assert(offsetof(BP_AJBGameInstance_C_GetRandomAreaTypeID, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetRandomAreaTypeID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetRandomAreaTypeID, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_GetRandomAreaTypeID::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetCameramanNumber
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBGameInstance_C_GetCameramanNumber final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LCount;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMatchingPlayerInfo>            CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_Array_Get_Item;                           // 0x0038(0x0088)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_GetCameramanNumber) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_GetCameramanNumber");
static_assert(sizeof(BP_AJBGameInstance_C_GetCameramanNumber) == 0x0000C8, "Wrong size on BP_AJBGameInstance_C_GetCameramanNumber");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, Count) == 0x000000, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::Count' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, LCount) == 0x000004, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::LCount' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, Temp_int_Variable) == 0x000014, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Add_IntInt_ReturnValue1) == 0x000018, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Map_Values_Values) == 0x000020, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetCameramanNumber, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_AJBGameInstance_C_GetCameramanNumber::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetUserSettingVolumeRate
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_GetUserSettingVolumeRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetUserSettingVolumeRate) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetUserSettingVolumeRate");
static_assert(sizeof(BP_AJBGameInstance_C_GetUserSettingVolumeRate) == 0x000004, "Wrong size on BP_AJBGameInstance_C_GetUserSettingVolumeRate");
static_assert(offsetof(BP_AJBGameInstance_C_GetUserSettingVolumeRate, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetUserSettingVolumeRate::ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetEMoneyPrice
// 0x000C (0x000C - 0x0000)
struct BP_AJBGameInstance_C_GetEMoneyPrice final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEMoneyPrice_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetEMoneyPrice) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetEMoneyPrice");
static_assert(sizeof(BP_AJBGameInstance_C_GetEMoneyPrice) == 0x00000C, "Wrong size on BP_AJBGameInstance_C_GetEMoneyPrice");
static_assert(offsetof(BP_AJBGameInstance_C_GetEMoneyPrice, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_GetEMoneyPrice::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetEMoneyPrice, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBGameInstance_C_GetEMoneyPrice::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetEMoneyPrice, CallFunc_GetEMoneyPrice_ReturnValue) == 0x000008, "Member 'BP_AJBGameInstance_C_GetEMoneyPrice::CallFunc_GetEMoneyPrice_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.SetConnectionTimeOutSec
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_SetConnectionTimeOutSec final
{
public:
	float                                         NewTimeSec;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_SetConnectionTimeOutSec) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_SetConnectionTimeOutSec");
static_assert(sizeof(BP_AJBGameInstance_C_SetConnectionTimeOutSec) == 0x000004, "Wrong size on BP_AJBGameInstance_C_SetConnectionTimeOutSec");
static_assert(offsetof(BP_AJBGameInstance_C_SetConnectionTimeOutSec, NewTimeSec) == 0x000000, "Member 'BP_AJBGameInstance_C_SetConnectionTimeOutSec::NewTimeSec' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.ConvertToCharaNameTag
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_ConvertToCharaNameTag final
{
public:
	uint8                                         CharaID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CharaName;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StandName;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_ConvertToCharaNameTag) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_ConvertToCharaNameTag");
static_assert(sizeof(BP_AJBGameInstance_C_ConvertToCharaNameTag) == 0x000028, "Wrong size on BP_AJBGameInstance_C_ConvertToCharaNameTag");
static_assert(offsetof(BP_AJBGameInstance_C_ConvertToCharaNameTag, CharaID) == 0x000000, "Member 'BP_AJBGameInstance_C_ConvertToCharaNameTag::CharaID' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ConvertToCharaNameTag, CharaName) == 0x000008, "Member 'BP_AJBGameInstance_C_ConvertToCharaNameTag::CharaName' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_ConvertToCharaNameTag, StandName) == 0x000018, "Member 'BP_AJBGameInstance_C_ConvertToCharaNameTag::StandName' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.UnloadAllSkinData
// 0x02F8 (0x02F8 - 0x0000)
struct BP_AJBGameInstance_C_UnloadAllSkinData final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_wildcard_Variable;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FST_CharaSkinData                      Temp_wildcard_Variable1;                           // 0x0070(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00E8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0128(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_wildcard_Variable2;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x01A0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x01C8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0228(0x0018)()
	class FString                                 K2Node_Select_Default;                             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_CharaSkinData>              CallFunc_Map_Values_Values;                        // 0x0260(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0270(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x02B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x02C0(0x0018)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x02D8(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_UnloadAllSkinData) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_UnloadAllSkinData");
static_assert(sizeof(BP_AJBGameInstance_C_UnloadAllSkinData) == 0x0002F8, "Wrong size on BP_AJBGameInstance_C_UnloadAllSkinData");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_bool_Variable) == 0x000000, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_wildcard_Variable) == 0x000008, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_wildcard_Variable1) == 0x000070, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_wildcard_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_GetDisplayName_ReturnValue) == 0x0000A0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_GetDisplayName_ReturnValue1) == 0x0000B8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_GetDisplayName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_int_Array_Index_Variable1) == 0x0000E0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeStruct_FormatArgumentData1) == 0x0000E8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeStruct_FormatArgumentData2) == 0x000128, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_MakeLiteralString_ReturnValue) == 0x000168, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_int_Loop_Counter_Variable1) == 0x000178, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, Temp_wildcard_Variable2) == 0x000180, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::Temp_wildcard_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Conv_StringToText_ReturnValue1) == 0x0001A0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Concat_StrStr_ReturnValue1) == 0x0001B8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeStruct_FormatArgumentData3) == 0x0001C8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Len_ReturnValue) == 0x000208, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeArray_Array) == 0x000210, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000220, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Format_ReturnValue) == 0x000228, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_Select_Default) == 0x000240, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Less_IntInt_ReturnValue) == 0x000250, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Add_IntInt_ReturnValue1) == 0x000254, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Map_Length_ReturnValue) == 0x000258, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Map_Values_Values) == 0x000260, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeStruct_FormatArgumentData4) == 0x000270, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, K2Node_MakeArray_Array1) == 0x0002B0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Format_ReturnValue1) == 0x0002C0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Map_Keys_Keys) == 0x0002D8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Array_Get_Item1) == 0x0002E8, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Array_Length_ReturnValue1) == 0x0002F0, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UnloadAllSkinData, CallFunc_Less_IntInt_ReturnValue1) == 0x0002F4, "Member 'BP_AJBGameInstance_C_UnloadAllSkinData::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsPair
// 0x000F (0x000F - 0x0000)
struct BP_AJBGameInstance_C_PlayModeIsPair final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EPlayMode                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable9;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable10;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayMode                                     CallFunc_GetPlayMode_PlayMode;                     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_PlayModeIsPair) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_PlayModeIsPair");
static_assert(sizeof(BP_AJBGameInstance_C_PlayModeIsPair) == 0x00000F, "Wrong size on BP_AJBGameInstance_C_PlayModeIsPair");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable4) == 0x000006, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable5) == 0x000007, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable6) == 0x000008, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable7) == 0x000009, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable8) == 0x00000A, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable9) == 0x00000B, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, Temp_bool_Variable10) == 0x00000C, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::Temp_bool_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, CallFunc_GetPlayMode_PlayMode) == 0x00000D, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::CallFunc_GetPlayMode_PlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsPair, K2Node_Select_Default) == 0x00000E, "Member 'BP_AJBGameInstance_C_PlayModeIsPair::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsShopCompetition
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_PlayModeIsShopCompetition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_PlayModeIsShopCompetition) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_PlayModeIsShopCompetition");
static_assert(sizeof(BP_AJBGameInstance_C_PlayModeIsShopCompetition) == 0x000004, "Wrong size on BP_AJBGameInstance_C_PlayModeIsShopCompetition");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopCompetition, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_PlayModeIsShopCompetition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_PlayModeEquals_bResult) == 0x000001, "Member 'BP_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_PlayModeEquals_bResult1) == 0x000002, "Member 'BP_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsSupportingCharacterAchievement
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement");
static_assert(sizeof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement) == 0x000004, "Wrong size on BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_PlayModeEquals_bResult) == 0x000001, "Member 'BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_PlayModeEquals_bResult1) == 0x000002, "Member 'BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.RegistStageMapTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBGameInstance_C_RegistStageMapTexture final
{
public:
	class UObject*                                UseStageMapTexture_0;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_RegistStageMapTexture) == 0x000008, "Wrong alignment on BP_AJBGameInstance_C_RegistStageMapTexture");
static_assert(sizeof(BP_AJBGameInstance_C_RegistStageMapTexture) == 0x000008, "Wrong size on BP_AJBGameInstance_C_RegistStageMapTexture");
static_assert(offsetof(BP_AJBGameInstance_C_RegistStageMapTexture, UseStageMapTexture_0) == 0x000000, "Member 'BP_AJBGameInstance_C_RegistStageMapTexture::UseStageMapTexture_0' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.PlayModeIsShopLocal
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBGameInstance_C_PlayModeIsShopLocal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_PlayModeIsShopLocal) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_PlayModeIsShopLocal");
static_assert(sizeof(BP_AJBGameInstance_C_PlayModeIsShopLocal) == 0x000004, "Wrong size on BP_AJBGameInstance_C_PlayModeIsShopLocal");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopLocal, ReturnValue) == 0x000000, "Member 'BP_AJBGameInstance_C_PlayModeIsShopLocal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopLocal, CallFunc_PlayModeEquals_bResult) == 0x000001, "Member 'BP_AJBGameInstance_C_PlayModeIsShopLocal::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopLocal, CallFunc_PlayModeEquals_bResult1) == 0x000002, "Member 'BP_AJBGameInstance_C_PlayModeIsShopLocal::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_PlayModeIsShopLocal, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_AJBGameInstance_C_PlayModeIsShopLocal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetEasyOperationSettingsLogin
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBGameInstance_C_GetEasyOperationSettingsLogin final
{
public:
	bool                                          bEnableEasyOperation;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_GetEasyOperationSettingsLogin) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_GetEasyOperationSettingsLogin");
static_assert(sizeof(BP_AJBGameInstance_C_GetEasyOperationSettingsLogin) == 0x000001, "Wrong size on BP_AJBGameInstance_C_GetEasyOperationSettingsLogin");
static_assert(offsetof(BP_AJBGameInstance_C_GetEasyOperationSettingsLogin, bEnableEasyOperation) == 0x000000, "Member 'BP_AJBGameInstance_C_GetEasyOperationSettingsLogin::bEnableEasyOperation' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.UpdateEasyOperationChangeFlag
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag final
{
public:
	bool                                          bEnableEasyOperation;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEasyOperationSettingsLogin_bEnableEasyOperation; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag");
static_assert(sizeof(BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag) == 0x000003, "Wrong size on BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag");
static_assert(offsetof(BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag, bEnableEasyOperation) == 0x000000, "Member 'BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag::bEnableEasyOperation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag, CallFunc_GetEasyOperationSettingsLogin_bEnableEasyOperation) == 0x000001, "Member 'BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag::CallFunc_GetEasyOperationSettingsLogin_bEnableEasyOperation' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_AJBGameInstance_C_UpdateEasyOperationChangeFlag::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetShouldEnableEasyOperation
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBGameInstance_C_GetShouldEnableEasyOperation final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldEnable;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation) == 0x000001, "Wrong alignment on BP_AJBGameInstance_C_GetShouldEnableEasyOperation");
static_assert(sizeof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation) == 0x000005, "Wrong size on BP_AJBGameInstance_C_GetShouldEnableEasyOperation");
static_assert(offsetof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation, bEnable) == 0x000000, "Member 'BP_AJBGameInstance_C_GetShouldEnableEasyOperation::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation, bShouldEnable) == 0x000001, "Member 'BP_AJBGameInstance_C_GetShouldEnableEasyOperation::bShouldEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBGameInstance_C_GetShouldEnableEasyOperation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBGameInstance_C_GetShouldEnableEasyOperation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetShouldEnableEasyOperation, K2Node_Select_Default) == 0x000004, "Member 'BP_AJBGameInstance_C_GetShouldEnableEasyOperation::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBGameInstance.BP_AJBGameInstance_C.GetAreaRangeLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBGameInstance_C_GetAreaRangeLocation final
{
public:
	struct FVector                                AreaRangeLocation_0;                               // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetInitialDamageAreaCenter_ReturnValue;   // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBGameInstance_C_GetAreaRangeLocation) == 0x000004, "Wrong alignment on BP_AJBGameInstance_C_GetAreaRangeLocation");
static_assert(sizeof(BP_AJBGameInstance_C_GetAreaRangeLocation) == 0x000028, "Wrong size on BP_AJBGameInstance_C_GetAreaRangeLocation");
static_assert(offsetof(BP_AJBGameInstance_C_GetAreaRangeLocation, AreaRangeLocation_0) == 0x000000, "Member 'BP_AJBGameInstance_C_GetAreaRangeLocation::AreaRangeLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetAreaRangeLocation, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBGameInstance_C_GetAreaRangeLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetAreaRangeLocation, CallFunc_GetInitialDamageAreaCenter_ReturnValue) == 0x000010, "Member 'BP_AJBGameInstance_C_GetAreaRangeLocation::CallFunc_GetInitialDamageAreaCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBGameInstance_C_GetAreaRangeLocation, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBGameInstance_C_GetAreaRangeLocation::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBubbleCutterSkill

#include "Basic.hpp"

#include "BP_AJBBubbleCutterSkill_classes.hpp"
#include "BP_AJBBubbleCutterSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ExecuteUbergraph_BP_AJBBubbleCutterSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ExecuteUbergraph_BP_AJBBubbleCutterSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ExecuteUbergraph_BP_AJBBubbleCutterSkill");

	Params::BP_AJBBubbleCutterSkill_C_ExecuteUbergraph_BP_AJBBubbleCutterSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ROC_OnUpdatedLockOnTargetableActors
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            LockOnTargetableActors_0                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UBP_AJBBubbleCutterSkill_C::ROC_OnUpdatedLockOnTargetableActors(const TArray<class AActor*>& LockOnTargetableActors_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ROC_OnUpdatedLockOnTargetableActors");

	Params::BP_AJBBubbleCutterSkill_C_ROC_OnUpdatedLockOnTargetableActors Parms{};

	Parms.LockOnTargetableActors_0 = std::move(LockOnTargetableActors_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.InitLockOnTargets
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::InitLockOnTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "InitLockOnTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnFinishedCharacterSetup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::OnFinishedCharacterSetup(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnFinishedCharacterSetup");

	Params::BP_AJBBubbleCutterSkill_C_OnFinishedCharacterSetup Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnReadyControlledCharacter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::OnReadyControlledCharacter(class AAJBInGameCharacterBase* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnReadyControlledCharacter");

	Params::BP_AJBBubbleCutterSkill_C_OnReadyControlledCharacter Parms{};

	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnTargetSpawned_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ABP_AJBInGameCharacter_C*   Actor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::OnTargetSpawned_Server(const class ABP_AJBInGameCharacter_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnTargetSpawned_Server");

	Params::BP_AJBBubbleCutterSkill_C_OnTargetSpawned_Server Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.BindCharacterSpawnedEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::BindCharacterSpawnedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "BindCharacterSpawnedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ROS_SpawnProjectile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   ProjectileIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ROS_SpawnProjectile(const struct FVector& Location, const struct FRotator& Rotation, int32 ProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ROS_SpawnProjectile");

	Params::BP_AJBBubbleCutterSkill_C_ROS_SpawnProjectile Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.ProjectileIndex = ProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ROS_SetRockedOnTargets
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            LockedOnTargets                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UBP_AJBBubbleCutterSkill_C::ROS_SetRockedOnTargets(const TArray<class AActor*>& LockedOnTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ROS_SetRockedOnTargets");

	Params::BP_AJBBubbleCutterSkill_C_ROS_SetRockedOnTargets Parms{};

	Parms.LockedOnTargets = std::move(LockedOnTargets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.DebugPrint_ScanLog
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBBubbleCutterSkill_C::DebugPrint_ScanLog(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "DebugPrint_ScanLog");

	Params::BP_AJBBubbleCutterSkill_C_DebugPrint_ScanLog Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.SetDebugPrintPrefix
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::SetDebugPrintPrefix(int32 Index_0, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "SetDebugPrintPrefix");

	Params::BP_AJBBubbleCutterSkill_C_SetDebugPrintPrefix Parms{};

	Parms.Index_0 = Index_0;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Close_DebugPrint_ScanResult
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Close_DebugPrint_ScanResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Close_DebugPrint_ScanResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Open_DebugPrint_ScanResult
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Open_DebugPrint_ScanResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Open_DebugPrint_ScanResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.DebugPrint_ScanResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBBubbleCutterSkill_C::DebugPrint_ScanResult(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "DebugPrint_ScanResult");

	Params::BP_AJBBubbleCutterSkill_C_DebugPrint_ScanResult Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Debug_Tick
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Debug_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Debug_Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Debug_BeginPlay
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Debug_BeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Debug_BeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnInactivate_LockOn
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::OnInactivate_LockOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnInactivate_LockOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Resolve_ReservedRemoving_LockingOnTargetsQueue
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Resolve_ReservedRemoving_LockingOnTargetsQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Resolve_ReservedRemoving_LockingOnTargetsQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ShootProjectileEffect_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ShootProjectileEffect_Local(int32 ShootProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ShootProjectileEffect_Local");

	Params::BP_AJBBubbleCutterSkill_C_ShootProjectileEffect_Local Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnChargeCompleted_Client
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargingPointCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldShowNextEffect                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::OnChargeCompleted_Client(int32 ChargingPointCount, bool ShouldShowNextEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnChargeCompleted_Client");

	Params::BP_AJBBubbleCutterSkill_C_OnChargeCompleted_Client Parms{};

	Parms.ChargingPointCount = ChargingPointCount;
	Parms.ShouldShowNextEffect = ShouldShowNextEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Hide_ChargeSnipeSkillGuideUI
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Hide_ChargeSnipeSkillGuideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Hide_ChargeSnipeSkillGuideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Show_ChargeSnipeSkillGuideUI
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::Show_ChargeSnipeSkillGuideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Show_ChargeSnipeSkillGuideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ReserveRemoving_LockingOnTargetsQueue
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::ReserveRemoving_LockingOnTargetsQueue(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ReserveRemoving_LockingOnTargetsQueue");

	Params::BP_AJBBubbleCutterSkill_C_ReserveRemoving_LockingOnTargetsQueue Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Tick_LockedOnTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Tick_LockedOnTimer(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Tick_LockedOnTimer");

	Params::BP_AJBBubbleCutterSkill_C_Tick_LockedOnTimer Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ScanLockedOnTargets
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::ScanLockedOnTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ScanLockedOnTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ROS_Run_LockOnEffectSpecified
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// EAJBLockOnState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ROS_Run_LockOnEffectSpecified(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ROS_Run_LockOnEffectSpecified");

	Params::BP_AJBBubbleCutterSkill_C_ROS_Run_LockOnEffectSpecified Parms{};

	Parms.Info = std::move(Info);
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.MC_Run_LockOnEffectSpecified
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// EAJBLockOnState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::MC_Run_LockOnEffectSpecified(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "MC_Run_LockOnEffectSpecified");

	Params::BP_AJBBubbleCutterSkill_C_MC_Run_LockOnEffectSpecified Parms{};

	Parms.Info = std::move(Info);
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.RestoreLockingOnState_SimulatedClient
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::RestoreLockingOnState_SimulatedClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "RestoreLockingOnState_SimulatedClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ClearLockingOnRepCache_Server
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::ClearLockingOnRepCache_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ClearLockingOnRepCache_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnRun_LockOnEffectSpecified_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// EAJBLockOnState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::OnRun_LockOnEffectSpecified_Server(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnRun_LockOnEffectSpecified_Server");

	Params::BP_AJBBubbleCutterSkill_C_OnRun_LockOnEffectSpecified_Server Parms{};

	Parms.Info = std::move(Info);
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_EndLockOnEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::Run_EndLockOnEffect(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_EndLockOnEffect");

	Params::BP_AJBBubbleCutterSkill_C_Run_EndLockOnEffect Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_LockOnEffectSpecified_Local
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// EAJBLockOnState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Run_LockOnEffectSpecified_Local(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_LockOnEffectSpecified_Local");

	Params::BP_AJBBubbleCutterSkill_C_Run_LockOnEffectSpecified_Local Parms{};

	Parms.Info = std::move(Info);
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_LockOnEffectSpecified_OnAll
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// EAJBLockOnState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Run_LockOnEffectSpecified_OnAll(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_LockOnEffectSpecified_OnAll");

	Params::BP_AJBBubbleCutterSkill_C_Run_LockOnEffectSpecified_OnAll Parms{};

	Parms.Info = std::move(Info);
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Play_ShootProjectileGion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Play_ShootProjectileGion(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Play_ShootProjectileGion");

	Params::BP_AJBBubbleCutterSkill_C_Play_ShootProjectileGion Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_CancelLockOnEffect
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::Run_CancelLockOnEffect(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_CancelLockOnEffect");

	Params::BP_AJBBubbleCutterSkill_C_Run_CancelLockOnEffect Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_PreLockOnEffect
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::Run_PreLockOnEffect(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_PreLockOnEffect");

	Params::BP_AJBBubbleCutterSkill_C_Run_PreLockOnEffect Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_LockOnEffect
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::Run_LockOnEffect(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_LockOnEffect");

	Params::BP_AJBBubbleCutterSkill_C_Run_LockOnEffect Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.RefreshAllLockOnQueueWidgetState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::RefreshAllLockOnQueueWidgetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "RefreshAllLockOnQueueWidgetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_LockOnAttackEffectByIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Run_LockOnAttackEffectByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_LockOnAttackEffectByIndex");

	Params::BP_AJBBubbleCutterSkill_C_Run_LockOnAttackEffectByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Run_LockOnAttackEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::Run_LockOnAttackEffect(const struct FAJBLockOnTargetInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Run_LockOnAttackEffect");

	Params::BP_AJBBubbleCutterSkill_C_Run_LockOnAttackEffect Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.CancelAllLockOnWidget
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::CancelAllLockOnWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "CancelAllLockOnWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.RefreshLockOnWidgetStateByIndex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::RefreshLockOnWidgetStateByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "RefreshLockOnWidgetStateByIndex");

	Params::BP_AJBBubbleCutterSkill_C_RefreshLockOnWidgetStateByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetChargePoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>*         ChargingPoints                                         (Parm, OutParm, ZeroConstructor)

void UBP_AJBBubbleCutterSkill_C::GetChargePoints(TArray<class USceneComponent*>* ChargingPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetChargePoints");

	Params::BP_AJBBubbleCutterSkill_C_GetChargePoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChargingPoints != nullptr)
		*ChargingPoints = std::move(Parms.ChargingPoints);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetOwnerHamonStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsHamonMode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::GetOwnerHamonStatus(bool* bIsHamonMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetOwnerHamonStatus");

	Params::BP_AJBBubbleCutterSkill_C_GetOwnerHamonStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsHamonMode != nullptr)
		*bIsHamonMode = Parms.bIsHamonMode;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.CollectAllLockOnTargetableActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>*                  Targets                                                (Parm, OutParm, ZeroConstructor)

void UBP_AJBBubbleCutterSkill_C::CollectAllLockOnTargetableActors(TArray<class AActor*>* Targets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "CollectAllLockOnTargetableActors");

	Params::BP_AJBBubbleCutterSkill_C_CollectAllLockOnTargetableActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Targets != nullptr)
		*Targets = std::move(Parms.Targets);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsLockOnTargetableActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsTargetableActor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsLockOnTargetableActor(class AActor* Target, bool* IsTargetableActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsLockOnTargetableActor");

	Params::BP_AJBBubbleCutterSkill_C_IsLockOnTargetableActor Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (IsTargetableActor != nullptr)
		*IsTargetableActor = Parms.IsTargetableActor;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetLockOnScreenRect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBox2D*                          ScreenRect                                             (Parm, OutParm, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::GetLockOnScreenRect(struct FBox2D* ScreenRect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetLockOnScreenRect");

	Params::BP_AJBBubbleCutterSkill_C_GetLockOnScreenRect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenRect != nullptr)
		*ScreenRect = std::move(Parms.ScreenRect);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.CollectSamplingPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 SamplingPoints                                         (Parm, OutParm, ZeroConstructor)

void UBP_AJBBubbleCutterSkill_C::CollectSamplingPoints(class AActor* Target, TArray<struct FVector>* SamplingPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "CollectSamplingPoints");

	Params::BP_AJBBubbleCutterSkill_C_CollectSamplingPoints Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (SamplingPoints != nullptr)
		*SamplingPoints = std::move(Parms.SamplingPoints);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.RefreshLockOnTargets
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::RefreshLockOnTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "RefreshLockOnTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.EnqueueLockingOnTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*&                    Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAJBLockOnTargetInfo*            Output                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::EnqueueLockingOnTarget(const class AActor*& Target, struct FAJBLockOnTargetInfo* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "EnqueueLockingOnTarget");

	Params::BP_AJBBubbleCutterSkill_C_EnqueueLockingOnTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.FindLockedOnTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   WasFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAJBLockOnTargetInfo*            LockOnTargetInfo                                       (Parm, OutParm, IsPlainOldData, NoDestructor)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::FindLockedOnTarget(class AActor* Target, bool* WasFound, struct FAJBLockOnTargetInfo* LockOnTargetInfo, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "FindLockedOnTarget");

	Params::BP_AJBBubbleCutterSkill_C_FindLockedOnTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (WasFound != nullptr)
		*WasFound = Parms.WasFound;

	if (LockOnTargetInfo != nullptr)
		*LockOnTargetInfo = std::move(Parms.LockOnTargetInfo);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.CollectLockedOnTargets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>*                  LockedOnTarget                                         (Parm, OutParm, ZeroConstructor)

void UBP_AJBBubbleCutterSkill_C::CollectLockedOnTargets(TArray<class AActor*>* LockedOnTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "CollectLockedOnTargets");

	Params::BP_AJBBubbleCutterSkill_C_CollectLockedOnTargets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LockedOnTarget != nullptr)
		*LockedOnTarget = std::move(Parms.LockedOnTarget);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsFocusedOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool*                                   IsFocusedOn_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsFocusedOn(const struct FAJBLockOnTargetInfo& Info, bool* IsFocusedOn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsFocusedOn");

	Params::BP_AJBBubbleCutterSkill_C_IsFocusedOn Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (IsFocusedOn_0 != nullptr)
		*IsFocusedOn_0 = Parms.IsFocusedOn_0;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.MakeLockOnTargetInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAJBLockOnTargetInfo*            Info                                                   (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::MakeLockOnTargetInfo(class AActor* Target, struct FAJBLockOnTargetInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "MakeLockOnTargetInfo");

	Params::BP_AJBBubbleCutterSkill_C_MakeLockOnTargetInfo Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetLockedOnTarget_Server
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BulletIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          LockedOnTarget                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetLockedOnTarget_Server(int32 BulletIndex, class AActor** LockedOnTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetLockedOnTarget_Server");

	Params::BP_AJBBubbleCutterSkill_C_GetLockedOnTarget_Server Parms{};

	Parms.BulletIndex = BulletIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (LockedOnTarget != nullptr)
		*LockedOnTarget = Parms.LockedOnTarget;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetLockOnFocusTimeDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  LockOnFocusTime                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetLockOnFocusTimeDefault(float* LockOnFocusTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetLockOnFocusTimeDefault");

	Params::BP_AJBBubbleCutterSkill_C_GetLockOnFocusTimeDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LockOnFocusTime != nullptr)
		*LockOnFocusTime = Parms.LockOnFocusTime;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetOccludedTimeBufferDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  OccludedTimeBuffer                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetOccludedTimeBufferDefault(float* OccludedTimeBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetOccludedTimeBufferDefault");

	Params::BP_AJBBubbleCutterSkill_C_GetOccludedTimeBufferDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OccludedTimeBuffer != nullptr)
		*OccludedTimeBuffer = Parms.OccludedTimeBuffer;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetOutOfScreenTimeBufferDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  OutOfScreenTimeBuffer                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetOutOfScreenTimeBufferDefault(float* OutOfScreenTimeBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetOutOfScreenTimeBufferDefault");

	Params::BP_AJBBubbleCutterSkill_C_GetOutOfScreenTimeBufferDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutOfScreenTimeBuffer != nullptr)
		*OutOfScreenTimeBuffer = Parms.OutOfScreenTimeBuffer;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetLockOnRectSize
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       LockOnRectSize                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetLockOnRectSize(struct FVector2D* LockOnRectSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetLockOnRectSize");

	Params::BP_AJBBubbleCutterSkill_C_GetLockOnRectSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LockOnRectSize != nullptr)
		*LockOnRectSize = std::move(Parms.LockOnRectSize);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.FindLockOnChaseActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   WasFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C**ChaseActor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::FindLockOnChaseActor(class AActor* Target, bool* WasFound, class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C** ChaseActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "FindLockOnChaseActor");

	Params::BP_AJBBubbleCutterSkill_C_FindLockOnChaseActor Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (WasFound != nullptr)
		*WasFound = Parms.WasFound;

	if (ChaseActor != nullptr)
		*ChaseActor = Parms.ChaseActor;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.CreateLockOnChaseActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C**ChaseActor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::CreateLockOnChaseActor(class AActor* Target, class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C** ChaseActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "CreateLockOnChaseActor");

	Params::BP_AJBBubbleCutterSkill_C_CreateLockOnChaseActor Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (ChaseActor != nullptr)
		*ChaseActor = Parms.ChaseActor;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.FindOrCreateLockOnChaseActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C**ChaseActor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::FindOrCreateLockOnChaseActor(class AActor* Target, class ABP_AJBBubbleCutterLockOnChaseWidgetActor_C** ChaseActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "FindOrCreateLockOnChaseActor");

	Params::BP_AJBBubbleCutterSkill_C_FindOrCreateLockOnChaseActor Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (ChaseActor != nullptr)
		*ChaseActor = Parms.ChaseActor;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetLockOnTargetableActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>*                  LockOnTargetableActors_0                               (Parm, OutParm, ZeroConstructor)

void UBP_AJBBubbleCutterSkill_C::GetLockOnTargetableActors(TArray<class AActor*>* LockOnTargetableActors_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetLockOnTargetableActors");

	Params::BP_AJBBubbleCutterSkill_C_GetLockOnTargetableActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LockOnTargetableActors_0 != nullptr)
		*LockOnTargetableActors_0 = std::move(Parms.LockOnTargetableActors_0);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ReduceInvalidLockOnTargets
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::ReduceInvalidLockOnTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ReduceInvalidLockOnTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.MakeLockOnState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// EAJBLockOnState*                        LockOnState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::MakeLockOnState(const struct FAJBLockOnTargetInfo& Info, EAJBLockOnState* LockOnState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "MakeLockOnState");

	Params::BP_AJBBubbleCutterSkill_C_MakeLockOnState Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (LockOnState != nullptr)
		*LockOnState = Parms.LockOnState;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetShootingProjectileSETag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag*                    ShootProjectileSETag_0                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetShootingProjectileSETag(struct FGameplayTag* ShootProjectileSETag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetShootingProjectileSETag");

	Params::BP_AJBBubbleCutterSkill_C_GetShootingProjectileSETag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootProjectileSETag_0 != nullptr)
		*ShootProjectileSETag_0 = std::move(Parms.ShootProjectileSETag_0);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetFocusingOccludedTimeBufferDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  FocusingOccludedTimeBuffer                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetFocusingOccludedTimeBufferDefault(float* FocusingOccludedTimeBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetFocusingOccludedTimeBufferDefault");

	Params::BP_AJBBubbleCutterSkill_C_GetFocusingOccludedTimeBufferDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FocusingOccludedTimeBuffer != nullptr)
		*FocusingOccludedTimeBuffer = Parms.FocusingOccludedTimeBuffer;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Process_FocusedTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InfoIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Process_FocusedTimer(int32 InfoIndex, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Process_FocusedTimer");

	Params::BP_AJBBubbleCutterSkill_C_Process_FocusedTimer Parms{};

	Parms.InfoIndex = InfoIndex;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Process_OccludedTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InfoIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Process_OccludedTimer(int32 InfoIndex, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Process_OccludedTimer");

	Params::BP_AJBBubbleCutterSkill_C_Process_OccludedTimer Parms{};

	Parms.InfoIndex = InfoIndex;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.Process_OutOfScreenTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InfoIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::Process_OutOfScreenTimer(int32 InfoIndex, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "Process_OutOfScreenTimer");

	Params::BP_AJBBubbleCutterSkill_C_Process_OutOfScreenTimer Parms{};

	Parms.InfoIndex = InfoIndex;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsOccluded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool*                                   IsOccluded_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsOccluded(const struct FAJBLockOnTargetInfo& Info, bool* IsOccluded_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsOccluded");

	Params::BP_AJBBubbleCutterSkill_C_IsOccluded Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (IsOccluded_0 != nullptr)
		*IsOccluded_0 = Parms.IsOccluded_0;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsOutOfScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool*                                   IsOutOfScreen_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsOutOfScreen(const struct FAJBLockOnTargetInfo& Info, bool* IsOutOfScreen_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsOutOfScreen");

	Params::BP_AJBBubbleCutterSkill_C_IsOutOfScreen Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (IsOutOfScreen_0 != nullptr)
		*IsOutOfScreen_0 = Parms.IsOutOfScreen_0;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsOccludedOverFocusingBuffer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAJBLockOnTargetInfo&      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool*                                   IsOccluded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsOccludedOverFocusingBuffer(const struct FAJBLockOnTargetInfo& Info, bool* IsOccluded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsOccludedOverFocusingBuffer");

	Params::BP_AJBBubbleCutterSkill_C_IsOccludedOverFocusingBuffer Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (IsOccluded != nullptr)
		*IsOccluded = Parms.IsOccluded;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ShouldLostTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldLost                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::ShouldLostTarget(class AActor* Target, bool* ShouldLost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ShouldLostTarget");

	Params::BP_AJBBubbleCutterSkill_C_ShouldLostTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldLost != nullptr)
		*ShouldLost = Parms.ShouldLost;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ProcessLostTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InfoIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ProcessLostTarget(int32 InfoIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ProcessLostTarget");

	Params::BP_AJBBubbleCutterSkill_C_ProcessLostTarget Parms{};

	Parms.InfoIndex = InfoIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnRep_Rep_LockingOnTargets
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::OnRep_Rep_LockingOnTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnRep_Rep_LockingOnTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.FindUnderWaterVisibleRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsMasked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::FindUnderWaterVisibleRadius(bool* IsMasked, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "FindUnderWaterVisibleRadius");

	Params::BP_AJBBubbleCutterSkill_C_FindUnderWaterVisibleRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMasked != nullptr)
		*IsMasked = Parms.IsMasked;

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.GetVampireDamageRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  VampireDamageRate                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::GetVampireDamageRate(float* VampireDamageRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "GetVampireDamageRate");

	Params::BP_AJBBubbleCutterSkill_C_GetVampireDamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VampireDamageRate != nullptr)
		*VampireDamageRate = Parms.VampireDamageRate;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ShouldApplyHamonRateDirectly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   ShouldApplyDirectly                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::ShouldApplyHamonRateDirectly(bool* ShouldApplyDirectly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ShouldApplyHamonRateDirectly");

	Params::BP_AJBBubbleCutterSkill_C_ShouldApplyHamonRateDirectly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldApplyDirectly != nullptr)
		*ShouldApplyDirectly = Parms.ShouldApplyDirectly;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.IsHamonRateEnabledSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::IsHamonRateEnabledSkill(bool* IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "IsHamonRateEnabledSkill");

	Params::BP_AJBBubbleCutterSkill_C_IsHamonRateEnabledSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::OnStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "StateBeginPlay");

	Params::BP_AJBBubbleCutterSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBBubbleCutterSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBubbleCutterSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "NotifyTheWorld");

	Params::BP_AJBBubbleCutterSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBubbleCutterSkill.BP_AJBBubbleCutterSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBubbleCutterSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBubbleCutterSkill_C", "ReceiveTick");

	Params::BP_AJBBubbleCutterSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_MDB

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_MDB_classes.hpp"
#include "BP_AJBInGameCharacter_MDB_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ExecuteUbergraph_BP_AJBInGameCharacter_MDB
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::ExecuteUbergraph_BP_AJBInGameCharacter_MDB(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ExecuteUbergraph_BP_AJBInGameCharacter_MDB");

	Params::BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeDubbingSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ChangeDubbingSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeDubbingSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMDBPartsSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ChangeMDBPartsSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMDBPartsSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeABCSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ChangeABCSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeABCSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ROS_SyncProperties
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ROS_SyncProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ROS_SyncProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ProcessDubbingState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::ProcessDubbingState(const struct FGameplayTag& DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ProcessDubbingState");

	Params::BP_AJBInGameCharacter_MDB_C_ProcessDubbingState Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMDBMeshVisibleCore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeMDBMeshVisibleCore(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMDBMeshVisibleCore");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMDBMeshVisibleServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeMDBMeshVisibleServer(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMDBMeshVisibleServer");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMeshVisibleCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeMeshVisibleCore(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMeshVisibleCore");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMeshVisibleServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeMeshVisibleServer(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMeshVisibleServer");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetupPropertyStandInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::SetupPropertyStandInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "SetupPropertyStandInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeEnableCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeEnableCore(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeEnableCore");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeEnableCore Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeEnableServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeEnableServer(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeEnableServer");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeEnableServer Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.FollowCharacterWhenUnpossessed_OnServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::FollowCharacterWhenUnpossessed_OnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "FollowCharacterWhenUnpossessed_OnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.MC_SpawnDamageDisplay
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBDamageDisplayParams&   DisplayParams                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FAJBDamageDisplayProperty& DisplayProperty                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::MC_SpawnDamageDisplay(const struct FAJBDamageDisplayParams& DisplayParams, const struct FAJBDamageDisplayProperty& DisplayProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "MC_SpawnDamageDisplay");

	Params::BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay Parms{};

	Parms.DisplayParams = std::move(DisplayParams);
	Parms.DisplayProperty = std::move(DisplayProperty);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ForceEndShakeTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ForceEndShakeTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ForceEndShakeTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.PlayShakeTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::PlayShakeTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "PlayShakeTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetSerialNumber
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::SetSerialNumber(int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "SetSerialNumber");

	Params::BP_AJBInGameCharacter_MDB_C_SetSerialNumber Parms{};

	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7");

	Params::BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_6FEB94C2436C868ECDE635947C259434
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::OnLoaded_6FEB94C2436C868ECDE635947C259434(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnLoaded_6FEB94C2436C868ECDE635947C259434");

	Params::BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB");

	Params::BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnRep_bRepEnable
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnRep_bRepEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnRep_bRepEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnRep_bRepMDBMeshVisible
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnRep_bRepMDBMeshVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnRep_bRepMDBMeshVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnRep_bRepABCMeshVisible
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnRep_bRepABCMeshVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnRep_bRepABCMeshVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShoudRecording
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bShouldRecording                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ShoudRecording(const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool* bShouldRecording)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ShoudRecording");

	Params::BP_AJBInGameCharacter_MDB_C_ShoudRecording Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldRecording != nullptr)
		*bShouldRecording = Parms.bShouldRecording;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsActive_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsActive(bool* IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsActive");

	Params::BP_AJBInGameCharacter_MDB_C_IsActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive_0 != nullptr)
		*IsActive_0 = Parms.IsActive_0;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsAppear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsActiveState                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsAppear(bool* IsActiveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsAppear");

	Params::BP_AJBInGameCharacter_MDB_C_IsAppear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActiveState != nullptr)
		*IsActiveState = Parms.IsActiveState;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldPropagatePassiveToABC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldPropagate                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ShouldPropagatePassiveToABC(const struct FGameplayTag& PassiveTag, bool* ShouldPropagate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ShouldPropagatePassiveToABC");

	Params::BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC Parms{};

	Parms.PassiveTag = std::move(PassiveTag);

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldPropagate != nullptr)
		*ShouldPropagate = Parms.ShouldPropagate;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldRecordImmidiatelyPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldRecord                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ShouldRecordImmidiatelyPassive(const struct FGameplayTag& PassiveTag, bool* ShouldRecord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ShouldRecordImmidiatelyPassive");

	Params::BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive Parms{};

	Parms.PassiveTag = std::move(PassiveTag);

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldRecord != nullptr)
		*ShouldRecord = Parms.ShouldRecord;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CacheOwnerMatchingPlayerIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OwnerMatchingPlayerIndexCache_0                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::CacheOwnerMatchingPlayerIndex(int32 OwnerMatchingPlayerIndexCache_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "CacheOwnerMatchingPlayerIndex");

	Params::BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex Parms{};

	Parms.OwnerMatchingPlayerIndexCache_0 = OwnerMatchingPlayerIndexCache_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnRep_OwnerMatchingPlayerIndexCache
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnRep_OwnerMatchingPlayerIndexCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnRep_OwnerMatchingPlayerIndexCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.UpdateCameraOnSucceedReplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::UpdateCameraOnSucceedReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "UpdateCameraOnSucceedReplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CalcIgnoreDistanceDateTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDateTime*                       DateTime                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::CalcIgnoreDistanceDateTime(struct FDateTime* DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "CalcIgnoreDistanceDateTime");

	Params::BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DateTime != nullptr)
		*DateTime = std::move(Parms.DateTime);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetMDBMeshOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::SetMDBMeshOffset(const struct FVector& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "SetMDBMeshOffset");

	Params::BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset Parms{};

	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldForceSkipDubbingAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldForceSkip                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ShouldForceSkipDubbingAction(const struct FGameplayTag& DamageType, bool* ShouldForceSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ShouldForceSkipDubbingAction");

	Params::BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction Parms{};

	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldForceSkip != nullptr)
		*ShouldForceSkip = Parms.ShouldForceSkip;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsIgnoredPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsIgnored                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsIgnoredPassive(const struct FGameplayTag& PassiveTag, bool* IsIgnored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsIgnoredPassive");

	Params::BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive Parms{};

	Parms.PassiveTag = std::move(PassiveTag);

	UObject::ProcessEvent(Func, &Parms);

	if (IsIgnored != nullptr)
		*IsIgnored = Parms.IsIgnored;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPropertyType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBCharacterPropertyType*              PropertyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::GetPropertyType(EAJBCharacterPropertyType* PropertyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "GetPropertyType");

	Params::BP_AJBInGameCharacter_MDB_C_GetPropertyType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PropertyType != nullptr)
		*PropertyType = Parms.PropertyType;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPropertyOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::GetPropertyOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "GetPropertyOwnerCharacterBP");

	Params::BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.TracableByAI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTracable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::TracableByAI(bool* bTracable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "TracableByAI");

	Params::BP_AJBInGameCharacter_MDB_C_TracableByAI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTracable != nullptr)
		*bTracable = Parms.bTracable;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.DetectableByTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bDetectable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::DetectableByTrap(bool* bDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "DetectableByTrap");

	Params::BP_AJBInGameCharacter_MDB_C_DetectableByTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDetectable != nullptr)
		*bDetectable = Parms.bDetectable;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.TreatAsCharacterBySpecialProjectile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTreat                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::TreatAsCharacterBySpecialProjectile(bool* bTreat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "TreatAsCharacterBySpecialProjectile");

	Params::BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTreat != nullptr)
		*bTreat = Parms.bTreat;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsDetectableByDirectAttackGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsDetectable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsDetectableByDirectAttackGuide(bool* bIsDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsDetectableByDirectAttackGuide");

	Params::BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsDetectable != nullptr)
		*bIsDetectable = Parms.bIsDetectable;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetCO2Scan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsTargetCO2Scan(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsTargetCO2Scan");

	Params::BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetClourBarrier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsTargetClourBarrier(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsTargetClourBarrier");

	Params::BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetOverGrow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsTargetOverGrow(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsTargetOverGrow");

	Params::BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnGetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsPlayOwnerVoiceOnGetItem(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsPlayOwnerVoiceOnGetItem");

	Params::BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsPlayOwnerVoiceOnJump(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsPlayOwnerVoiceOnJump");

	Params::BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnPassThruEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::IsPlayOwnerVoiceOnPassThruEnter(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "IsPlayOwnerVoiceOnPassThruEnter");

	Params::BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ChangeSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ReceiveTick");

	Params::BP_AJBInGameCharacter_MDB_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnReleasedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnReleasedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnReleasedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnPressedEmote
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::OnPressedEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "OnPressedEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMovementModeOnTimeStop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeMovementModeOnTimeStop(bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeMovementModeOnTimeStop");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop Parms{};

	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_MDB_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.AddGameplayTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::AddGameplayTag(const struct FGameplayTag& Tag, class UObject* Operator, class UObject* Target, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "AddGameplayTag");

	Params::BP_AJBInGameCharacter_MDB_C_AddGameplayTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Operator = Operator;
	Parms.Target = Target;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.AJBDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithSeparatedStandAttack                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitEnemysSeparatedStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNotUseCollision                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEndured                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FAJBDamageDisplayParams&   DamageDisplayParams                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FAJBDamageDisplayProperty& DamageDisplayProperty                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::AJBDamage(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool WithSeparatedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP, bool bNotUseCollision, bool IsEndured, const struct FAJBDamageDisplayParams& DamageDisplayParams, const struct FAJBDamageDisplayProperty& DamageDisplayProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "AJBDamage");

	Params::BP_AJBInGameCharacter_MDB_C_AJBDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.CutDamage = CutDamage;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.DamagePriority = DamagePriority;
	Parms.AttackDistance = AttackDistance;
	Parms.DamageCauser = DamageCauser;
	Parms.WithSeparatedStandAttack = WithSeparatedStandAttack;
	Parms.HitEnemysSeparatedStand = HitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;
	Parms.bNotUseCollision = bNotUseCollision;
	Parms.IsEndured = IsEndured;
	Parms.DamageDisplayParams = std::move(DamageDisplayParams);
	Parms.DamageDisplayProperty = std::move(DamageDisplayProperty);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.UpdateCameraParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::UpdateCameraParam(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "UpdateCameraParam");

	Params::BP_AJBInGameCharacter_MDB_C_UpdateCameraParam Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_MDB_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetSystemEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::SetSystemEnable(bool bEnable, bool bCollision, bool bGravity, bool bSpringArm, bool bMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "SetSystemEnable");

	Params::BP_AJBInGameCharacter_MDB_C_SetSystemEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ResetSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ResetSystemEnable(bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ResetSystemEnable");

	Params::BP_AJBInGameCharacter_MDB_C_ResetSystemEnable Parms{};

	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeSystemEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeSystemEnable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeSystemEnable");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeSystemDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCollision                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGravity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpringArm                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMovement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::ChangeSystemDisable(bool bCollision, bool bGravity, bool bSpringArm, bool bMovement, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "ChangeSystemDisable");

	Params::BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable Parms{};

	Parms.bCollision = bCollision;
	Parms.bGravity = bGravity;
	Parms.bSpringArm = bSpringArm;
	Parms.bMovement = bMovement;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CheckPossibleDetection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bPossibleDetection                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::CheckPossibleDetection(bool* bPossibleDetection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "CheckPossibleDetection");

	Params::BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleDetection != nullptr)
		*bPossibleDetection = Parms.bPossibleDetection;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CheckTargetSelf
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForDamageOverlap                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreMovableStand                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIncludeSelf                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAfterReflectShouldHitOwner                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::CheckTargetSelf(class AActor* DamageCauser, bool bForDamageOverlap, bool bIgnoreMovableStand, bool bIncludeSelf, bool bAfterReflectShouldHitOwner, bool* bTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "CheckTargetSelf");

	Params::BP_AJBInGameCharacter_MDB_C_CheckTargetSelf Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.bForDamageOverlap = bForDamageOverlap;
	Parms.bIgnoreMovableStand = bIgnoreMovableStand;
	Parms.bIncludeSelf = bIncludeSelf;
	Parms.bAfterReflectShouldHitOwner = bAfterReflectShouldHitOwner;

	UObject::ProcessEvent(Func, &Parms);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.InteractableOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_MDB_C::InteractableOperator(class AActor* InteractActor, bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "InteractableOperator");

	Params::BP_AJBInGameCharacter_MDB_C_InteractableOperator Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPrimitivesToChangeStencil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StencilDigit                          StencilDigit                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPrimitiveComponent*>*     PrimitiveComponents                                    (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameCharacter_MDB_C::GetPrimitivesToChangeStencil(E_StencilDigit StencilDigit, TArray<class UPrimitiveComponent*>* PrimitiveComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "GetPrimitivesToChangeStencil");

	Params::BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil Parms{};

	Parms.StencilDigit = StencilDigit;

	UObject::ProcessEvent(Func, &Parms);

	if (PrimitiveComponents != nullptr)
		*PrimitiveComponents = std::move(Parms.PrimitiveComponents);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetGionOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          GionOwner                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::GetGionOwner(class AActor** GionOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "GetGionOwner");

	Params::BP_AJBInGameCharacter_MDB_C_GetGionOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GionOwner != nullptr)
		*GionOwner = Parms.GionOwner;
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.FindOwnerMatchingPlayerInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString*                          PlayerName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FMatchingPlayerInfo*             MatchingPlayerInfo                                     (Parm, OutParm)

void ABP_AJBInGameCharacter_MDB_C::FindOwnerMatchingPlayerInfo(bool* Success, class FString* PlayerName, struct FMatchingPlayerInfo* MatchingPlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "FindOwnerMatchingPlayerInfo");

	Params::BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (PlayerName != nullptr)
		*PlayerName = std::move(Parms.PlayerName);

	if (MatchingPlayerInfo != nullptr)
		*MatchingPlayerInfo = std::move(Parms.MatchingPlayerInfo);
}


// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetOwnerMatchingPlayerIndexCache
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  OwnerMatchingPlayerIndexCache_0                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_MDB_C::GetOwnerMatchingPlayerIndexCache(int32* OwnerMatchingPlayerIndexCache_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_MDB_C", "GetOwnerMatchingPlayerIndexCache");

	Params::BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OwnerMatchingPlayerIndexCache_0 != nullptr)
		*OwnerMatchingPlayerIndexCache_0 = Parms.OwnerMatchingPlayerIndexCache_0;
}

}


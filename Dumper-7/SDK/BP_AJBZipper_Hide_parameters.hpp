#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_Hide

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ExecuteUbergraph_BP_AJBZipper_Hide
// 0x0580 (0x0580 - 0x0000)
struct BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UStaticMesh*                            CallFunc_GetValidStaticMeshFromComponent_StaticMesh; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidStaticMeshFromComponent_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DamageDetectionSphere_C*            K2Node_DynamicCast_AsBP_Damage_Detection_Sphere;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTagFromStaticMesh_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAffectorAreaIn_ReturnValue;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetLastDamageInfo_LastDamageCauser;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastDamageInfo_LastDamageHitLocation;  // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLastDamageInfo_bLastDamagePenetrating; // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DecalingDamageDetection_C*          K2Node_DynamicCast_AsBP_Decaling_Damage_Detection; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PenetratingDamage_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop2;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Radius;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ServerIsInteractingPlayer;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamageCauser)>   K2Node_CreateDelegate_OutputDelegate1;             // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamageCauser4;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_DamageDetectionSphere_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DecalingDamageDetection_C*          CallFunc_FinishSpawningActor_ReturnValue1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop3;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0xF];                                      // 0x0181(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamagedActor2;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForHPAP2;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForAAP2;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CutDamage2;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType3;                    // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber2;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_CustomEvent_DamagePriority2;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_AttackDistance2;                // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser3;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparetedStandAttack1;     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_HitEnemysSeparatedStand;        // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrateAP2;                  // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0208(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0214(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor1;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForHPAP1;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForAAP1;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CutDamage1;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType2;                    // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber1;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_CustomEvent_DamagePriority1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_AttackDistance1;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser2;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparetedStandAttack;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparatedStand1;      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrateAP1;                  // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_263[0x1];                                      // 0x0263(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForHPAP;  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForAAP;   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_AJBDamage_self_CastInput;                 // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_CheckDisableDamage_self_CastInput;        // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDamageAreaAffecter_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x02A0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Damage1;                        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP)> K2Node_CreateDelegate_OutputDelegate3; // 0x02B8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop4;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForHPAP;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageForAAP;                   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CutDamage;                      // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType1;                    // 0x02F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_CustomEvent_DamagePriority;                 // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_AttackDistance;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser1;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWithSeparatedStandAttack;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHitEnemysSeparatedStand;       // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrateAP;                   // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313[0x1];                                      // 0x0313(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForHPAP1; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForAAP1;  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_CheckDisableDamage_self1_CastInput;       // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage1;       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_AJBDamage_self1_CastInput;                // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DestroyingActor1;               // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyingActor;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Damage)>                 K2Node_CreateDelegate_OutputDelegate4;             // 0x0360(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_AJBDamageAreaAffecter_C*            CallFunc_GetComponentByClass_ReturnValue1;         // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x038E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x038F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP)> K2Node_CreateDelegate_OutputDelegate5; // 0x0390(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Damage)>                 K2Node_CreateDelegate_OutputDelegate6;             // 0x03A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_CheckDisableDamage_self2_CastInput;       // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage2;       // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DamageDetectionSphere_C*            K2Node_DynamicCast_AsBP_Damage_Detection_Sphere1;  // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAffectorAreaIn_ReturnValue1;            // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB[0x5];                                      // 0x03DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_CheckDisableDamage_self3_CastInput;       // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage3;       // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP)> K2Node_CreateDelegate_OutputDelegate7; // 0x0438(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRestore;                       // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyingActor)> K2Node_CreateDelegate_OutputDelegate8;            // 0x0450(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_463[0x5];                                      // 0x0463(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InGameProp_C*                       K2Node_CustomEvent_BPProp;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Damage;                         // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0478(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRemainHP;                      // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageIsCut;                   // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNotUseCollision;               // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSelfDamage;                    // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision, bool bSelfDamage)> K2Node_CreateDelegate_OutputDelegate9; // 0x0490(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A3[0x1];                                      // 0x04A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForHPAP2; // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RecalcDamageForZipperHide_DamageForAAP2;  // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision, bool bSelfDamage)> K2Node_CreateDelegate_OutputDelegate10; // 0x04B0(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBI_AJBInterface_C>    CallFunc_AJBDamage_self2_CastInput;                // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x04F8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate13;            // 0x0510(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x0528(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate15;            // 0x0538(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate16;            // 0x0550(0x0010)(ZeroConstructor, NoDestructor)
	class UStaticMesh*                            CallFunc_GetValidStaticMeshFromComponent_StaticMesh1; // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidStaticMeshFromComponent_ReturnValue1; // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTagFromStaticMesh_ReturnValue1; // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTagFromStaticMesh_ReturnValue2; // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide) == 0x000010, "Wrong alignment on BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide");
static_assert(sizeof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide) == 0x000580, "Wrong size on BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, EntryPoint) == 0x000000, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetValidStaticMeshFromComponent_StaticMesh) == 0x000020, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetValidStaticMeshFromComponent_StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetValidStaticMeshFromComponent_ReturnValue) == 0x000028, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetValidStaticMeshFromComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_Damage_Detection_Sphere) == 0x000030, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_Damage_Detection_Sphere' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_HasGameplayTagFromStaticMesh_ReturnValue) == 0x000039, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_HasGameplayTagFromStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsAffectorAreaIn_ReturnValue) == 0x00003A, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsAffectorAreaIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsDedicatedServer_ReturnValue) == 0x00003B, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_in_Game_Prop) == 0x000040, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_in_Game_Prop' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_in_Game_Prop1) == 0x000050, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_in_Game_Prop1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetLastDamageInfo_LastDamageCauser) == 0x000060, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetLastDamageInfo_LastDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetLastDamageInfo_LastDamageHitLocation) == 0x000068, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetLastDamageInfo_LastDamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetLastDamageInfo_bLastDamagePenetrating) == 0x000074, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetLastDamageInfo_bLastDamagePenetrating' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_Decaling_Damage_Detection) == 0x000088, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_Decaling_Damage_Detection' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess3) == 0x000090, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_VSize_ReturnValue) == 0x000094, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_PenetratingDamage_ReturnValue) == 0x000098, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_PenetratingDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_in_Game_Prop2) == 0x0000A0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_in_Game_Prop2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess4) == 0x0000A8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_Radius) == 0x0000AC, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_InteractingActor) == 0x0000B8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_ServerIsInteractingPlayer) == 0x0000C0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_ServerIsInteractingPlayer' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000C8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess5) == 0x0000D0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate1) == 0x0000D8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageCauser4) == 0x000120, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageCauser4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000128, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetTransform_ReturnValue1) == 0x000130, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x000168, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_FinishSpawningActor_ReturnValue1) == 0x000170, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_in_Game_Prop3) == 0x000178, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_in_Game_Prop3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess6) == 0x000180, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000190, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagedActor2) == 0x0001C0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagedActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForHPAP2) == 0x0001C8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForHPAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForAAP2) == 0x0001CC, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_CutDamage2) == 0x0001D0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_CutDamage2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageType3) == 0x0001D8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageType3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_SerialNumber2) == 0x0001E0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagePriority2) == 0x0001E4, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagePriority2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_AttackDistance2) == 0x0001E8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_AttackDistance2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageCauser3) == 0x0001F0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageCauser3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bWithSeparetedStandAttack1) == 0x0001F8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bWithSeparetedStandAttack1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_HitEnemysSeparatedStand) == 0x0001F9, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bPenetrateAP2) == 0x0001FA, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bPenetrateAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BreakTransform_Location) == 0x0001FC, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BreakTransform_Rotation) == 0x000208, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BreakTransform_Scale) == 0x000214, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000220, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagedActor1) == 0x000228, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagedActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForHPAP1) == 0x000230, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForHPAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForAAP1) == 0x000234, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_CutDamage1) == 0x000238, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_CutDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageType2) == 0x000240, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageType2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_SerialNumber1) == 0x000248, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagePriority1) == 0x00024C, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagePriority1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_AttackDistance1) == 0x000250, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_AttackDistance1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageCauser2) == 0x000258, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageCauser2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bWithSeparetedStandAttack) == 0x000260, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bWithSeparetedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bHitEnemysSeparatedStand1) == 0x000261, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bHitEnemysSeparatedStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bPenetrateAP1) == 0x000262, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bPenetrateAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForHPAP) == 0x000264, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForAAP) == 0x000268, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_AJBDamage_self_CastInput) == 0x000270, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_AJBDamage_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_self_CastInput) == 0x000280, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_bDisableDamage) == 0x000290, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsValid_ReturnValue) == 0x000291, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetComponentByClass_ReturnValue) == 0x000298, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate2) == 0x0002A0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_Damage1) == 0x0002B0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_Damage1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate3) == 0x0002B8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_in_Game_Prop4) == 0x0002C8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_in_Game_Prop4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess7) == 0x0002D0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagedActor) == 0x0002D8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForHPAP) == 0x0002E0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageForAAP) == 0x0002E4, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_CutDamage) == 0x0002E8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageType1) == 0x0002F0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageType1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_SerialNumber) == 0x0002F8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamagePriority) == 0x0002FC, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_AttackDistance) == 0x000300, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageCauser1) == 0x000308, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bWithSeparatedStandAttack) == 0x000310, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bHitEnemysSeparatedStand) == 0x000311, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bPenetrateAP) == 0x000312, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForHPAP1) == 0x000314, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForHPAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForAAP1) == 0x000318, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_self1_CastInput) == 0x000320, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_self1_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_bDisableDamage1) == 0x000330, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_bDisableDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_AJBDamage_self1_CastInput) == 0x000338, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_AJBDamage_self1_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DestroyingActor1) == 0x000348, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DestroyingActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsValid_ReturnValue1) == 0x000350, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DestroyingActor) == 0x000358, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DestroyingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate4) == 0x000360, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetComponentByClass_ReturnValue1) == 0x000370, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_Not_PreBool_ReturnValue) == 0x000378, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_BooleanAND_ReturnValue) == 0x000379, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_Operator) == 0x000380, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_Time) == 0x000388, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_Timing) == 0x00038C, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_bEnable) == 0x00038D, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Event_bOperatorIsEmpty) == 0x00038E, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsDedicatedServer_ReturnValue1) == 0x00038F, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate5) == 0x000390, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate6) == 0x0003A0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsDedicatedServer_ReturnValue2) == 0x0003B0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_self2_CastInput) == 0x0003B8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_self2_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_bDisableDamage2) == 0x0003C8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_bDisableDamage2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_Damage_Detection_Sphere1) == 0x0003D0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_Damage_Detection_Sphere1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess8) == 0x0003D8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsAffectorAreaIn_ReturnValue1) == 0x0003D9, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsAffectorAreaIn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_Has_Been_Initd_Variable) == 0x0003DA, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_self3_CastInput) == 0x0003E0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_self3_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CheckDisableDamage_bDisableDamage3) == 0x0003F0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CheckDisableDamage_bDisableDamage3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x0003F8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess9) == 0x000408, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000410, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsValid_ReturnValue2) == 0x000418, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_IsClosed_Variable) == 0x000419, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetPlayerController_ReturnValue) == 0x000420, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000428, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_DynamicCast_bSuccess10) == 0x000430, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate7) == 0x000438, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsLocalController_ReturnValue) == 0x000448, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsValid_ReturnValue3) == 0x000449, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00044A, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bRestore) == 0x00044B, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate8) == 0x000450, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_Has_Been_Initd_Variable1) == 0x000460, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_IsClosed_Variable1) == 0x000461, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsServer_ReturnValue) == 0x000462, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_BPProp) == 0x000468, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_BPProp' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_Damage) == 0x000470, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageType) == 0x000478, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_DamageCauser) == 0x000480, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bRemainHP) == 0x000488, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bDamageIsCut) == 0x000489, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bNotUseCollision) == 0x00048A, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_bSelfDamage) == 0x00048B, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_bSelfDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate9) == 0x000490, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_Variable) == 0x0004A0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_Variable1) == 0x0004A1, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_bool_Variable2) == 0x0004A2, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForHPAP2) == 0x0004A4, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForHPAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_RecalcDamageForZipperHide_DamageForAAP2) == 0x0004A8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_RecalcDamageForZipperHide_DamageForAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate10) == 0x0004B0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_AJBDamage_self2_CastInput) == 0x0004C0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_AJBDamage_self2_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, Temp_name_Variable) == 0x0004D0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate11) == 0x0004D8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_NotifyName) == 0x0004E8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_NotifyName1) == 0x0004F0, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate12) == 0x0004F8, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_NotifyName2) == 0x000508, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate13) == 0x000510, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_NotifyName3) == 0x000520, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate14) == 0x000528, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate15) == 0x000538, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CustomEvent_NotifyName4) == 0x000548, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_CreateDelegate_OutputDelegate16) == 0x000550, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetValidStaticMeshFromComponent_StaticMesh1) == 0x000560, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetValidStaticMeshFromComponent_StaticMesh1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_GetValidStaticMeshFromComponent_ReturnValue1) == 0x000568, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_GetValidStaticMeshFromComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_IsValid_ReturnValue4) == 0x000569, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_HasGameplayTagFromStaticMesh_ReturnValue1) == 0x00056A, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_HasGameplayTagFromStaticMesh_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_HasGameplayTagFromStaticMesh_ReturnValue2) == 0x00056B, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_HasGameplayTagFromStaticMesh_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, CallFunc_HasLocalSharedController_ReturnValue) == 0x00056C, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Select_Default) == 0x000570, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Select1_Default) == 0x000574, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide, K2Node_Select2_Default) == 0x000578, "Member 'BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide::K2Node_Select2_Default' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnReceiveDamageServer
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBZipper_Hide_C_OnReceiveDamageServer final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemainHP;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageIsCut;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelfDamage;                                       // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnReceiveDamageServer) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnReceiveDamageServer");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnReceiveDamageServer) == 0x000020, "Wrong size on BP_AJBZipper_Hide_C_OnReceiveDamageServer");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, Damage) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, DamageType) == 0x000008, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, DamageCauser) == 0x000010, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, bRemainHP) == 0x000018, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, bDamageIsCut) == 0x000019, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::bDamageIsCut' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, bNotUseCollision) == 0x00001A, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnReceiveDamageServer, bSelfDamage) == 0x00001B, "Member 'BP_AJBZipper_Hide_C_OnReceiveDamageServer::bSelfDamage' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ServerSetup_Prop
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBZipper_Hide_C_ServerSetup_Prop final
{
public:
	class ABP_InGameProp_C*                       BPProp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_ServerSetup_Prop) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_ServerSetup_Prop");
static_assert(sizeof(BP_AJBZipper_Hide_C_ServerSetup_Prop) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_ServerSetup_Prop");
static_assert(offsetof(BP_AJBZipper_Hide_C_ServerSetup_Prop, BPProp) == 0x000000, "Member 'BP_AJBZipper_Hide_C_ServerSetup_Prop::BPProp' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.CloseZipperOnHideBegin
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBZipper_Hide_C_CloseZipperOnHideBegin final
{
public:
	bool                                          bRestore;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_CloseZipperOnHideBegin) == 0x000001, "Wrong alignment on BP_AJBZipper_Hide_C_CloseZipperOnHideBegin");
static_assert(sizeof(BP_AJBZipper_Hide_C_CloseZipperOnHideBegin) == 0x000001, "Wrong size on BP_AJBZipper_Hide_C_CloseZipperOnHideBegin");
static_assert(offsetof(BP_AJBZipper_Hide_C_CloseZipperOnHideBegin, bRestore) == 0x000000, "Member 'BP_AJBZipper_Hide_C_CloseZipperOnHideBegin::bRestore' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLifeTimeElapsed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBZipper_Hide_C_OnLifeTimeElapsed final
{
public:
	class AActor*                                 DestroyingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnLifeTimeElapsed) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnLifeTimeElapsed");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnLifeTimeElapsed) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnLifeTimeElapsed");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLifeTimeElapsed, DestroyingActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnLifeTimeElapsed::DestroyingActor' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLifeTimeElapsedZipperHide_OnLocal
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal final
{
public:
	class AActor*                                 DestroyingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal, DestroyingActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal::DestroyingActor' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnSphereDamaged
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBZipper_Hide_C_Server_OnSphereDamaged final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparatedStandAttack;                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_Server_OnSphereDamaged");
static_assert(sizeof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged) == 0x000040, "Wrong size on BP_AJBZipper_Hide_C_Server_OnSphereDamaged");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamagedActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamageForHPAP) == 0x000008, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamageForAAP) == 0x00000C, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, CutDamage) == 0x000010, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamageType) == 0x000018, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, SerialNumber) == 0x000020, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamagePriority) == 0x000024, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, AttackDistance) == 0x000028, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, DamageCauser) == 0x000030, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, bWithSeparatedStandAttack) == 0x000038, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::bWithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, bHitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnSphereDamaged, bPenetrateAP) == 0x00003A, "Member 'BP_AJBZipper_Hide_C_Server_OnSphereDamaged::bPenetrateAP' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnDamagedByDamageArea
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBZipper_Hide_C_OnDamagedByDamageArea final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnDamagedByDamageArea) == 0x000004, "Wrong alignment on BP_AJBZipper_Hide_C_OnDamagedByDamageArea");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnDamagedByDamageArea) == 0x000004, "Wrong size on BP_AJBZipper_Hide_C_OnDamagedByDamageArea");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnDamagedByDamageArea, Damage) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnDamagedByDamageArea::Damage' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnPropDamaged
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBZipper_Hide_C_Server_OnPropDamaged final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparetedStandAttack;                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHitEnemysSeparatedStand;                          // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Server_OnPropDamaged) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_Server_OnPropDamaged");
static_assert(sizeof(BP_AJBZipper_Hide_C_Server_OnPropDamaged) == 0x000040, "Wrong size on BP_AJBZipper_Hide_C_Server_OnPropDamaged");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamagedActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamageForHPAP) == 0x000008, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamageForAAP) == 0x00000C, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, CutDamage) == 0x000010, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamageType) == 0x000018, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, SerialNumber) == 0x000020, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamagePriority) == 0x000024, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, AttackDistance) == 0x000028, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, DamageCauser) == 0x000030, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, bWithSeparetedStandAttack) == 0x000038, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::bWithSeparetedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, bHitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::bHitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnPropDamaged, bPenetrateAP) == 0x00003A, "Member 'BP_AJBZipper_Hide_C_Server_OnPropDamaged::bPenetrateAP' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnDecalingDamaged
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBZipper_Hide_C_Server_OnDecalingDamaged final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSeparetedStandAttack;                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_Server_OnDecalingDamaged");
static_assert(sizeof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged) == 0x000040, "Wrong size on BP_AJBZipper_Hide_C_Server_OnDecalingDamaged");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamagedActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamageForHPAP) == 0x000008, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamageForAAP) == 0x00000C, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, CutDamage) == 0x000010, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamageType) == 0x000018, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, SerialNumber) == 0x000020, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamagePriority) == 0x000024, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, AttackDistance) == 0x000028, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, DamageCauser) == 0x000030, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, bWithSeparetedStandAttack) == 0x000038, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::bWithSeparetedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, HitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDecalingDamaged, bPenetrateAP) == 0x00003A, "Member 'BP_AJBZipper_Hide_C_Server_OnDecalingDamaged::bPenetrateAP' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnDamageAffectorDamageDetected
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected");
static_assert(sizeof(BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected, DamageCauser) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected::DamageCauser' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_SetSphereInfo
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBZipper_Hide_C_Server_SetSphereInfo final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Server_SetSphereInfo) == 0x000004, "Wrong alignment on BP_AJBZipper_Hide_C_Server_SetSphereInfo");
static_assert(sizeof(BP_AJBZipper_Hide_C_Server_SetSphereInfo) == 0x000004, "Wrong size on BP_AJBZipper_Hide_C_Server_SetSphereInfo");
static_assert(offsetof(BP_AJBZipper_Hide_C_Server_SetSphereInfo, Radius) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Server_SetSphereInfo::Radius' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnROSInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBZipper_Hide_C_OnROSInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerIsInteractingPlayer;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnROSInteract) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnROSInteract");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnROSInteract) == 0x000010, "Wrong size on BP_AJBZipper_Hide_C_OnROSInteract");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnROSInteract, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnROSInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnROSInteract, ServerIsInteractingPlayer) == 0x000008, "Member 'BP_AJBZipper_Hide_C_OnROSInteract::ServerIsInteractingPlayer' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBZipper_Hide_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBZipper_Hide_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBZipper_Hide_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBZipper_Hide_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBZipper_Hide_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBZipper_Hide_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBZipper_Hide_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBZipper_Hide_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2, NotifyName) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2::NotifyName' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2, NotifyName) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2::NotifyName' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2, NotifyName) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2::NotifyName' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2, NotifyName) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2::NotifyName' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2) == 0x000008, "Wrong size on BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2, NotifyName) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2::NotifyName' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Interactable
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBZipper_Hide_C_Interactable final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Interactable_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInteractCameraForwardVector_ReturnValue; // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_Interactable) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_Interactable");
static_assert(sizeof(BP_AJBZipper_Hide_C_Interactable) == 0x000038, "Wrong size on BP_AJBZipper_Hide_C_Interactable");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, Character) == 0x000000, "Member 'BP_AJBZipper_Hide_C_Interactable::Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, TraceLength) == 0x000008, "Member 'BP_AJBZipper_Hide_C_Interactable::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, ReturnValue) == 0x00000C, "Member 'BP_AJBZipper_Hide_C_Interactable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_Interactable_ReturnValue) == 0x00000D, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_Interactable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_GetInteractCameraForwardVector_ReturnValue) == 0x00001C, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_GetInteractCameraForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_Dot_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_Interactable, CallFunc_BooleanAND_ReturnValue1) == 0x000030, "Member 'BP_AJBZipper_Hide_C_Interactable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.TryGetInteractableText
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBZipper_Hide_C_TryGetInteractableText final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InteractMessage;                                   // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_AJBZipper_Hide_C_TryGetInteractableText) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_TryGetInteractableText");
static_assert(sizeof(BP_AJBZipper_Hide_C_TryGetInteractableText) == 0x000028, "Wrong size on BP_AJBZipper_Hide_C_TryGetInteractableText");
static_assert(offsetof(BP_AJBZipper_Hide_C_TryGetInteractableText, OperatorCharacter) == 0x000000, "Member 'BP_AJBZipper_Hide_C_TryGetInteractableText::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_TryGetInteractableText, bSuccess) == 0x000008, "Member 'BP_AJBZipper_Hide_C_TryGetInteractableText::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_TryGetInteractableText, InteractMessage) == 0x000010, "Member 'BP_AJBZipper_Hide_C_TryGetInteractableText::InteractMessage' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLocalInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBZipper_Hide_C_OnLocalInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnLocalInteract_bSuccess;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_OnLocalInteract");
static_assert(sizeof(BP_AJBZipper_Hide_C_OnLocalInteract) == 0x000020, "Wrong size on BP_AJBZipper_Hide_C_OnLocalInteract");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, InteractingActor) == 0x000000, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, bSuccess) == 0x000008, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, CallFunc_OnLocalInteract_bSuccess) == 0x000019, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::CallFunc_OnLocalInteract_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_OnLocalInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'BP_AJBZipper_Hide_C_OnLocalInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.DeactiveDamageDetection
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBZipper_Hide_C_DeactiveDamageDetection final
{
public:
	class ABP_DamageDetectionSphere_C*            K2Node_DynamicCast_AsBP_Damage_Detection_Sphere;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DecalingDamageDetection_C*          K2Node_DynamicCast_AsBP_Decaling_Damage_Detection; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_DeactiveDamageDetection) == 0x000008, "Wrong alignment on BP_AJBZipper_Hide_C_DeactiveDamageDetection");
static_assert(sizeof(BP_AJBZipper_Hide_C_DeactiveDamageDetection) == 0x000020, "Wrong size on BP_AJBZipper_Hide_C_DeactiveDamageDetection");
static_assert(offsetof(BP_AJBZipper_Hide_C_DeactiveDamageDetection, K2Node_DynamicCast_AsBP_Damage_Detection_Sphere) == 0x000000, "Member 'BP_AJBZipper_Hide_C_DeactiveDamageDetection::K2Node_DynamicCast_AsBP_Damage_Detection_Sphere' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_DeactiveDamageDetection, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_AJBZipper_Hide_C_DeactiveDamageDetection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_DeactiveDamageDetection, K2Node_DynamicCast_AsBP_Decaling_Damage_Detection) == 0x000010, "Member 'BP_AJBZipper_Hide_C_DeactiveDamageDetection::K2Node_DynamicCast_AsBP_Decaling_Damage_Detection' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_DeactiveDamageDetection, K2Node_DynamicCast_bSuccess1) == 0x000018, "Member 'BP_AJBZipper_Hide_C_DeactiveDamageDetection::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.NotifyToCharacterHidingPropDamaged
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged) == 0x000001, "Wrong alignment on BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged");
static_assert(sizeof(BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged) == 0x000002, "Wrong size on BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_AJBZipper_Hide_C_NotifyToCharacterHidingPropDamaged::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_ObjectLoader

#include "Basic.hpp"

#include "BPC_ObjectLoader_classes.hpp"
#include "BPC_ObjectLoader_parameters.hpp"


namespace SDK
{

// Function BPC_ObjectLoader.BPC_ObjectLoader_C.ExecuteUbergraph_BPC_ObjectLoader
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::ExecuteUbergraph_BPC_ObjectLoader(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "ExecuteUbergraph_BPC_ObjectLoader");

	Params::BPC_ObjectLoader_C_ExecuteUbergraph_BPC_ObjectLoader Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.StartLoadObjectClass
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_ObjectClassLoadInfo&   LoadObjClassInfo                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::StartLoadObjectClass(const struct FST_ObjectClassLoadInfo& LoadObjClassInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "StartLoadObjectClass");

	Params::BPC_ObjectLoader_C_StartLoadObjectClass Parms{};

	Parms.LoadObjClassInfo = std::move(LoadObjClassInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "ReceiveTick");

	Params::BPC_ObjectLoader_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RequestLoadObjectClass
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LoadId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             ObjectClassAssetId                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::RequestLoadObjectClass(const class FString& LoadId, TSoftClassPtr<class UClass> ObjectClassAssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "RequestLoadObjectClass");

	Params::BPC_ObjectLoader_C_RequestLoadObjectClass Parms{};

	Parms.LoadId = std::move(LoadId);
	Parms.ObjectClassAssetId = ObjectClassAssetId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RequestLoadObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LoadId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UObject>           ObjectAssetId                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::RequestLoadObject(const class FString& LoadId, TSoftObjectPtr<class UObject> ObjectAssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "RequestLoadObject");

	Params::BPC_ObjectLoader_C_RequestLoadObject Parms{};

	Parms.LoadId = std::move(LoadId);
	Parms.ObjectAssetId = ObjectAssetId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.StartLoadObject
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_ObjectLoadInfo&        LoadObjInfo                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::StartLoadObject(const struct FST_ObjectLoadInfo& LoadObjInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "StartLoadObject");

	Params::BPC_ObjectLoader_C_StartLoadObject Parms{};

	Parms.LoadObjInfo = std::move(LoadObjInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949(class UClass* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949");

	Params::BPC_ObjectLoader_C_OnLoaded_B3CE73F644F30E7B1B2ECAA2C7ED9949 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.OnLoaded_066D0130431550B75D2FBDB198B97FBC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::OnLoaded_066D0130431550B75D2FBDB198B97FBC(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "OnLoaded_066D0130431550B75D2FBDB198B97FBC");

	Params::BPC_ObjectLoader_C_OnLoaded_066D0130431550B75D2FBDB198B97FBC Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AddLoadingList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LoadId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UObject>           ObjectAssetId                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::AddLoadingList(const class FString& LoadId, TSoftObjectPtr<class UObject> ObjectAssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "AddLoadingList");

	Params::BPC_ObjectLoader_C_AddLoadingList Parms{};

	Parms.LoadId = std::move(LoadId);
	Parms.ObjectAssetId = ObjectAssetId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.RemoveLoadingList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LoadId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::RemoveLoadingList(const class FString& LoadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "RemoveLoadingList");

	Params::BPC_ObjectLoader_C_RemoveLoadingList Parms{};

	Parms.LoadId = std::move(LoadId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AssetLoadObject
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_ObjectLoadInfo&              LoadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::AssetLoadObject(struct FST_ObjectLoadInfo& LoadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "AssetLoadObject");

	Params::BPC_ObjectLoader_C_AssetLoadObject Parms{};

	Parms.LoadInfo = std::move(LoadInfo);

	UObject::ProcessEvent(Func, &Parms);

	LoadInfo = std::move(Parms.LoadInfo);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AddLoadingClassList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    LoadId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             ObjClassAssetId                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::AddLoadingClassList(const class FString& LoadId, TSoftClassPtr<class UClass> ObjClassAssetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "AddLoadingClassList");

	Params::BPC_ObjectLoader_C_AddLoadingClassList Parms{};

	Parms.LoadId = std::move(LoadId);
	Parms.ObjClassAssetId = ObjClassAssetId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ObjectLoader.BPC_ObjectLoader_C.AssetLoadObjClass
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_ObjectClassLoadInfo&         LoadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_ObjectLoader_C::AssetLoadObjClass(struct FST_ObjectClassLoadInfo& LoadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ObjectLoader_C", "AssetLoadObjClass");

	Params::BPC_ObjectLoader_C_AssetLoadObjClass Parms{};

	Parms.LoadInfo = std::move(LoadInfo);

	UObject::ProcessEvent(Func, &Parms);

	LoadInfo = std::move(Parms.LoadInfo);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RecordingMarkerWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.ExecuteUbergraph_WB_RecordingMarkerWidget
// 0x00D8 (0x00D8 - 0x0000)
struct WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x005C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0088(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x0094(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcScale_Scale;                          // 0x009C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00AC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C8(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget) == 0x000008, "Wrong alignment on WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget");
static_assert(sizeof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget) == 0x0000D8, "Wrong size on WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, EntryPoint) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, K2Node_CustomEvent_Value) == 0x000004, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, Temp_struct_Variable) == 0x000010, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000028, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000030, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_GetViewportScale_ReturnValue) == 0x000054, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_GetDesiredSize_ReturnValue) == 0x00005C, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000064, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, Temp_bool_Variable) == 0x00006C, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000070, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000088, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000090, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x000094, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_CalcScale_Scale) == 0x00009C, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_CalcScale_Scale' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A4, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, K2Node_Select_Default) == 0x0000AC, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x0000B4, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C8, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget, CallFunc_IsValid_ReturnValue1) == 0x0000D1, "Member 'WB_RecordingMarkerWidget_C_ExecuteUbergraph_WB_RecordingMarkerWidget::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.StartDamageDirection
// 0x0004 (0x0004 - 0x0000)
struct WB_RecordingMarkerWidget_C_StartDamageDirection final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_StartDamageDirection) == 0x000004, "Wrong alignment on WB_RecordingMarkerWidget_C_StartDamageDirection");
static_assert(sizeof(WB_RecordingMarkerWidget_C_StartDamageDirection) == 0x000004, "Wrong size on WB_RecordingMarkerWidget_C_StartDamageDirection");
static_assert(offsetof(WB_RecordingMarkerWidget_C_StartDamageDirection, Value) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_StartDamageDirection::Value' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.PlayVanishFade
// 0x0020 (0x0020 - 0x0000)
struct WB_RecordingMarkerWidget_C_PlayVanishFade final
{
public:
	bool                                          bIsFadeOut;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_PlayVanishFade) == 0x000008, "Wrong alignment on WB_RecordingMarkerWidget_C_PlayVanishFade");
static_assert(sizeof(WB_RecordingMarkerWidget_C_PlayVanishFade) == 0x000020, "Wrong size on WB_RecordingMarkerWidget_C_PlayVanishFade");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PlayVanishFade, bIsFadeOut) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_PlayVanishFade::bIsFadeOut' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PlayVanishFade, ReturnValue) == 0x000004, "Member 'WB_RecordingMarkerWidget_C_PlayVanishFade::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PlayVanishFade, Temp_bool_Variable) == 0x000008, "Member 'WB_RecordingMarkerWidget_C_PlayVanishFade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PlayVanishFade, K2Node_Select_Default) == 0x000010, "Member 'WB_RecordingMarkerWidget_C_PlayVanishFade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PlayVanishFade, CallFunc_GetEndTime_ReturnValue) == 0x000018, "Member 'WB_RecordingMarkerWidget_C_PlayVanishFade::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.CalcRandomRange
// 0x0008 (0x0008 - 0x0000)
struct WB_RecordingMarkerWidget_C_CalcRandomRange final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_CalcRandomRange) == 0x000004, "Wrong alignment on WB_RecordingMarkerWidget_C_CalcRandomRange");
static_assert(sizeof(WB_RecordingMarkerWidget_C_CalcRandomRange) == 0x000008, "Wrong size on WB_RecordingMarkerWidget_C_CalcRandomRange");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcRandomRange, Value) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_CalcRandomRange::Value' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcRandomRange, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'WB_RecordingMarkerWidget_C_CalcRandomRange::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcRandomRange, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000005, "Member 'WB_RecordingMarkerWidget_C_CalcRandomRange::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcRandomRange, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x000006, "Member 'WB_RecordingMarkerWidget_C_CalcRandomRange::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.CalcScale
// 0x00B8 (0x00B8 - 0x0000)
struct WB_RecordingMarkerWidget_C_CalcScale final
{
public:
	struct FVector2D                              Scale;                                             // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCharacterCheckPoint_Point1;           // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcCharacterCheckPoint_Point2;           // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition1;     // 0x0090(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X1;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_CalcScale) == 0x000008, "Wrong alignment on WB_RecordingMarkerWidget_C_CalcScale");
static_assert(sizeof(WB_RecordingMarkerWidget_C_CalcScale) == 0x0000B8, "Wrong size on WB_RecordingMarkerWidget_C_CalcScale");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, Scale) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_CalcScale::Scale' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_GetCameraLocation_ReturnValue) == 0x000010, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, Temp_bool_Variable) == 0x00001C, "Member 'WB_RecordingMarkerWidget_C_CalcScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_CalcCharacterCheckPoint_Point1) == 0x00002C, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_CalcCharacterCheckPoint_Point1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_CalcCharacterCheckPoint_Point2) == 0x000038, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_CalcCharacterCheckPoint_Point2' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_MapRangeClamped_ReturnValue1) == 0x00005C, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, K2Node_Select_Default) == 0x000068, "Member 'WB_RecordingMarkerWidget_C_CalcScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x00006C, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000074, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_BreakVector2D_X) == 0x000080, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_BreakVector2D_Y) == 0x000084, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_GetPlayerController_ReturnValue1) == 0x000088, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_ProjectWorldToScreen_ScreenPosition1) == 0x000090, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_ProjectWorldToScreen_ScreenPosition1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_ProjectWorldToScreen_ReturnValue1) == 0x000098, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_ProjectWorldToScreen_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_BreakVector2D_X1) == 0x00009C, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_BreakVector2D_Y1) == 0x0000A0, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A4, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_MapRangeClamped_ReturnValue2) == 0x0000AC, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcScale, CallFunc_MakeVector2D_ReturnValue1) == 0x0000B0, "Member 'WB_RecordingMarkerWidget_C_CalcScale::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.CalcCharacterCheckPoint
// 0x0098 (0x0098 - 0x0000)
struct WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint final
{
public:
	struct FVector                                Point1;                                            // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point2;                                            // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempPoint2;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempPoint1;                                        // 0x0024(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue1;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint) == 0x000004, "Wrong alignment on WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint");
static_assert(sizeof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint) == 0x000098, "Wrong size on WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, Point1) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::Point1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, Point2) == 0x00000C, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::Point2' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, TempPoint2) == 0x000018, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::TempPoint2' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, TempPoint1) == 0x000024, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::TempPoint1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000030, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue1) == 0x000034, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000050, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_GetActorUpVector_ReturnValue) == 0x000068, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_NegateVector_ReturnValue) == 0x000074, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint, CallFunc_Add_VectorVector_ReturnValue1) == 0x00008C, "Member 'WB_RecordingMarkerWidget_C_CalcCharacterCheckPoint::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function WB_RecordingMarkerWidget.WB_RecordingMarkerWidget_C.PauseCurrentAnimation
// 0x0001 (0x0001 - 0x0000)
struct WB_RecordingMarkerWidget_C_PauseCurrentAnimation final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_RecordingMarkerWidget_C_PauseCurrentAnimation) == 0x000001, "Wrong alignment on WB_RecordingMarkerWidget_C_PauseCurrentAnimation");
static_assert(sizeof(WB_RecordingMarkerWidget_C_PauseCurrentAnimation) == 0x000001, "Wrong size on WB_RecordingMarkerWidget_C_PauseCurrentAnimation");
static_assert(offsetof(WB_RecordingMarkerWidget_C_PauseCurrentAnimation, bPause) == 0x000000, "Member 'WB_RecordingMarkerWidget_C_PauseCurrentAnimation::bPause' has a wrong offset!");

}


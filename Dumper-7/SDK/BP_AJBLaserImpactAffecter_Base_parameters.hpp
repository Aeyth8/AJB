#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBLaserImpactAffecter_Base

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base
// 0x0108 (0x0108 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcScale_Scale;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledRadius_Radius;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPartitionLocation_Location;            // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable1;                             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAffecterEnabled_IsEnabled;              // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAffecterEnabled_IsEnabled1;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Center;                         // 0x0074(0x000C)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Radius;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Segments;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_LineColor;                      // 0x0088(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Thickness;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x00A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcScale_Scale1;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledRadius_Radius1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00F0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAffecterEnabled_IsEnabled2;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledRadius_Radius2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base) == 0x000008, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base) == 0x000108, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, EntryPoint) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_bEnable) == 0x000004, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_CalcScale_Scale) == 0x00000C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_CalcScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetScaledRadius_Radius) == 0x000010, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetScaledRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_int_Variable) == 0x000014, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetPartitionLocation_Location) == 0x00001C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetPartitionLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_struct_Variable) == 0x00002C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_bool_IsClosed_Variable) == 0x000048, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000050, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000058, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_HasLocalSharedController_ReturnValue) == 0x000059, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_IsValid_ReturnValue) == 0x00005A, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_IsValid_ReturnValue1) == 0x00005C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_bool_Has_Been_Initd_Variable) == 0x00005D, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_Operator) == 0x000060, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_Time) == 0x000068, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_Timing) == 0x00006C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_bEnable1) == 0x00006D, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Event_bOperatorIsEmpty) == 0x00006E, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_IsAffecterEnabled_IsEnabled) == 0x00006F, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_IsAffecterEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_IsAffecterEnabled_IsEnabled1) == 0x000070, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_IsAffecterEnabled_IsEnabled1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_CustomEvent_Center) == 0x000074, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_CustomEvent_Center' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_CustomEvent_Radius) == 0x000080, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_CustomEvent_Segments) == 0x000084, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_CustomEvent_Segments' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_CustomEvent_LineColor) == 0x000088, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_CustomEvent_LineColor' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_CustomEvent_Thickness) == 0x000098, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_CustomEvent_Thickness' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Add_IntInt_ReturnValue1) == 0x0000A0, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_struct_Variable1) == 0x0000A4, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_CalcScale_Scale1) == 0x0000B4, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_CalcScale_Scale1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0000B8, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_BooleanAND_ReturnValue1) == 0x0000BC, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Array_Get_Item) == 0x0000C4, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetScaledRadius_Radius1) == 0x0000E0, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetScaledRadius_Radius1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_MakeLiteralFloat_ReturnValue1) == 0x0000E4, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_MakeLiteralFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, Temp_bool_Variable) == 0x0000E8, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000EC, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, K2Node_Select_Default) == 0x0000F0, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_IsAffecterEnabled_IsEnabled2) == 0x000100, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_IsAffecterEnabled_IsEnabled2' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base, CallFunc_GetScaledRadius_Radius2) == 0x000104, "Member 'BP_AJBLaserImpactAffecter_Base_C_ExecuteUbergraph_BP_AJBLaserImpactAffecter_Base::CallFunc_GetScaledRadius_Radius2' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.MC_DrawDebugSphere
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_0;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Segments;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere) == 0x000004, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere) == 0x000028, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere, Center) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere::Center' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere, Radius_0) == 0x00000C, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere::Radius_0' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere, Segments) == 0x000010, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere::Segments' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere, LineColor) == 0x000014, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere::LineColor' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere, Thickness) == 0x000024, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_DrawDebugSphere::Thickness' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.IsAffecterEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled) == 0x000001, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled) == 0x000001, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled, IsEnabled) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_IsAffecterEnabled::IsEnabled' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.SetAffecterEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled) == 0x000001, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled) == 0x000001, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled, Value) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetAffecterEnabled::Value' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.SetCollisionToBreakEnabled
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled) == 0x000008, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled) == 0x000028, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled, IsEnabled) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled, Temp_name_Variable) == 0x000008, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled, Temp_name_Variable1) == 0x000010, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBLaserImpactAffecter_Base_C_SetCollisionToBreakEnabled::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.MC_TheWorldAleady
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady) == 0x000001, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady) == 0x000001, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady, bEnable) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_MC_TheWorldAleady::bEnable' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBLaserImpactAffecter_Base_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBLaserImpactAffecter_Base.BP_AJBLaserImpactAffecter_Base_C.CalcAttackDistance
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackDistance;                                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance) == 0x000008, "Wrong alignment on BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance");
static_assert(sizeof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance) == 0x000040, "Wrong size on BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, DamagedActor) == 0x000000, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, AttackDistance) == 0x000008, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000024, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'BP_AJBLaserImpactAffecter_Base_C_CalcAttackDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");

}


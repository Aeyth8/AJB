#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAccompanyMGRSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBAccompanyMGRSkill.BP_AJBAccompanyMGRSkill_C.ExecuteUbergraph_BP_AJBAccompanyMGRSkill
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABD_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill) == 0x000008, "Wrong alignment on BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill");
static_assert(sizeof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill) == 0x000038, "Wrong size on BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, EntryPoint) == 0x000000, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD) == 0x000028, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_AJBAccompanyMGRSkill_C_ExecuteUbergraph_BP_AJBAccompanyMGRSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBAccompanyMGRSkill.BP_AJBAccompanyMGRSkill_C.UpdateMP
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBAccompanyMGRSkill_C_UpdateMP final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAccompanyMGRSkill_C_UpdateMP) == 0x000004, "Wrong alignment on BP_AJBAccompanyMGRSkill_C_UpdateMP");
static_assert(sizeof(BP_AJBAccompanyMGRSkill_C_UpdateMP) == 0x000004, "Wrong size on BP_AJBAccompanyMGRSkill_C_UpdateMP");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_UpdateMP, DeltaSeconds) == 0x000000, "Member 'BP_AJBAccompanyMGRSkill_C_UpdateMP::DeltaSeconds' has a wrong offset!");

// Function BP_AJBAccompanyMGRSkill.BP_AJBAccompanyMGRSkill_C.CheckOtherSkill
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBAccompanyMGRSkill_C_CheckOtherSkill final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive_0;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABD_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckOtherSkill_IsActive;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHealStop_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill) == 0x000008, "Wrong alignment on BP_AJBAccompanyMGRSkill_C_CheckOtherSkill");
static_assert(sizeof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill) == 0x000020, "Wrong size on BP_AJBAccompanyMGRSkill_C_CheckOtherSkill");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CharacterBP) == 0x000000, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, IsActive_0) == 0x000008, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::IsActive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000009, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD) == 0x000010, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABD' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_CheckOtherSkill_IsActive) == 0x000019, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_CheckOtherSkill_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_IsHealStop_ReturnValue) == 0x00001A, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_IsHealStop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAccompanyMGRSkill_C_CheckOtherSkill, CallFunc_BooleanOR_ReturnValue) == 0x00001E, "Member 'BP_AJBAccompanyMGRSkill_C_CheckOtherSkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


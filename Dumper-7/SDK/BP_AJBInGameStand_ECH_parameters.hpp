#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_ECH

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ExecuteUbergraph_BP_AJBInGameStand_ECH
// 0x0370 (0x0370 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable1;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable2;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable1;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable3;                               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable2;                               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable3;                               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LaunchPart_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     K2Node_CustomEvent_NewACT;                         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldPlayAct3Montage3;         // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EECHState                                     K2Node_CustomEvent_ACT4;                           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldPlayAct3Montage2;         // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EECHState                                     K2Node_CustomEvent_ACT3;                           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldPlayAct3Montage1;         // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EECHState                                     K2Node_CustomEvent_ACT2;                           // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldPlayAct3Montage;          // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x01B8(0x0010)(ZeroConstructor, NoDestructor)
	class UClass*                                 Temp_class_Variable;                               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable1;                              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable4;                               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       CallFunc_GetComponentsByTag_ReturnValue;           // 0x0200(0x0010)(ZeroConstructor, ReferenceParm)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select2_Default;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select3_Default;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select4_Default;                            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStandAccompanyTransition                     K2Node_Event_AccompanyTransition;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldDestroy;                       // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Event_Montage;                              // 0x0270(0x0028)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExtractEmoteId_Success;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ExtractEmoteId_CharacterTag;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_ExtractEmoteId_EmoteId;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     CallFunc_StringToAct_Act;                          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_Event_StandName;                            // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SkinId;                               // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     Temp_byte_Variable5;                               // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     K2Node_CustomEvent_Act1;                           // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item1;                          // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue1;             // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x030E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select5_Default;                            // 0x030F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EECHState                                     K2Node_CustomEvent_Act;                            // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate8;             // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate9;             // 0x0350(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH) == 0x000010, "Wrong alignment on BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH) == 0x000370, "Wrong size on BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetNumMaterials_ReturnValue) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName1) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate1) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_name_Variable) == 0x000040, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable) == 0x000048, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_object_Variable) == 0x000050, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_object_Variable1) == 0x000058, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_object_Variable2) == 0x000060, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable1) == 0x000068, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_name_Variable1) == 0x000070, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_name_Variable2) == 0x000078, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_name_Variable3) == 0x000080, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000088, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable2) == 0x000090, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_bool_Variable) == 0x000091, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_bool_Variable1) == 0x000092, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_bool_Variable2) == 0x000093, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName9) == 0x000098, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsServer_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetOwner_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName2) == 0x0000C0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0000C8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0000D0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x0000D1, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue1) == 0x0000D2, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000D3, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate3) == 0x0000D8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName3) == 0x0000E8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_int_Array_Index_Variable1) == 0x0000FC, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_MakeLiteralByte_ReturnValue) == 0x000100, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate4) == 0x000108, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName4) == 0x000118, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_bool_Variable3) == 0x000120, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_int_Variable) == 0x000124, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000128, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Add_IntInt_ReturnValue1) == 0x000134, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable3) == 0x000138, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000140, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue2) == 0x000148, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x00014C, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetOwner_ReturnValue1) == 0x000190, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000198, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NewACT) == 0x0001A8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NewACT' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ShouldPlayAct3Montage3) == 0x0001A9, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ShouldPlayAct3Montage3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ACT4) == 0x0001AA, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ACT4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ShouldPlayAct3Montage2) == 0x0001AB, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ShouldPlayAct3Montage2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ACT3) == 0x0001AC, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ACT3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ShouldPlayAct3Montage1) == 0x0001AD, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ShouldPlayAct3Montage1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ACT2) == 0x0001AE, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ACT2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_ShouldPlayAct3Montage) == 0x0001AF, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_ShouldPlayAct3Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_BooleanOR_ReturnValue) == 0x0001B1, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate5) == 0x0001B8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_class_Variable) == 0x0001C8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetOwner_ReturnValue2) == 0x0001D0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_DynamicCast_AsPawn) == 0x0001D8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue3) == 0x0001E1, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001E2, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_class_Variable1) == 0x0001E8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_class_Variable2) == 0x0001F0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable4) == 0x0001F8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_GetComponentsByTag_ReturnValue) == 0x000200, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Get_Item) == 0x000210, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select_Default) == 0x000218, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_ComponentHasTag_ReturnValue) == 0x000220, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Length_ReturnValue) == 0x000224, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Not_PreBool_ReturnValue) == 0x000228, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select1_Default) == 0x000229, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select2_Default) == 0x000230, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue4) == 0x000238, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select3_Default) == 0x000240, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select4_Default) == 0x000248, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_int_Loop_Counter_Variable1) == 0x00024C, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_BooleanAND_ReturnValue) == 0x000250, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Less_IntInt_ReturnValue) == 0x000251, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Add_IntInt_ReturnValue2) == 0x000254, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Event_AccompanyTransition) == 0x000258, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Event_AccompanyTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000259, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x000260, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValid_ReturnValue5) == 0x000268, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_bool_Variable4) == 0x000269, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Event_bShouldDestroy) == 0x00026A, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Event_bShouldDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Event_Montage) == 0x000270, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Event_Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_name_Variable4) == 0x000298, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002A0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_ExtractEmoteId_Success) == 0x0002A1, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_ExtractEmoteId_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_ExtractEmoteId_CharacterTag) == 0x0002A8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_ExtractEmoteId_CharacterTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_ExtractEmoteId_EmoteId) == 0x0002B8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_ExtractEmoteId_EmoteId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName5) == 0x0002C0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_StringToAct_Act) == 0x0002C8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_StringToAct_Act' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName6) == 0x0002D0, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate6) == 0x0002D8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Event_StandName) == 0x0002E8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Event_StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Event_SkinId) == 0x0002F8, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Event_SkinId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, Temp_byte_Variable5) == 0x0002F9, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_Act1) == 0x0002FA, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_Act1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Get_Item1) == 0x000300, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Length_ReturnValue1) == 0x000308, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_ComponentHasTag_ReturnValue1) == 0x00030C, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_ComponentHasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Less_IntInt_ReturnValue1) == 0x00030D, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Not_PreBool_ReturnValue1) == 0x00030E, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_Select5_Default) == 0x00030F, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate7) == 0x000310, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName7) == 0x000320, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_Act) == 0x000328, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_Act' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate8) == 0x000330, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CustomEvent_NotifyName8) == 0x000340, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Add_ReturnValue) == 0x000348, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, K2Node_CreateDelegate_OutputDelegate9) == 0x000350, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH, CallFunc_Array_Add_ReturnValue1) == 0x000360, "Member 'BP_AJBInGameStand_ECH_C_ExecuteUbergraph_BP_AJBInGameStand_ECH::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ChangeEmoteAct
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ChangeEmoteAct final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ChangeEmoteAct) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_ChangeEmoteAct");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ChangeEmoteAct) == 0x000001, "Wrong size on BP_AJBInGameStand_ECH_C_ChangeEmoteAct");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeEmoteAct, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ChangeEmoteAct::ACT_0' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.UpdateAuraVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_ECH_C_UpdateAuraVisibility final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_UpdateAuraVisibility) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_UpdateAuraVisibility");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_UpdateAuraVisibility) == 0x000001, "Wrong size on BP_AJBInGameStand_ECH_C_UpdateAuraVisibility");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_UpdateAuraVisibility, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_UpdateAuraVisibility::ACT_0' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ChangeAct_Local
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ChangeAct_Local final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayAct3Montage;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ChangeAct_Local) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_ChangeAct_Local");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ChangeAct_Local) == 0x000002, "Wrong size on BP_AJBInGameStand_ECH_C_ChangeAct_Local");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeAct_Local, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ChangeAct_Local::ACT_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeAct_Local, ShouldPlayAct3Montage) == 0x000001, "Member 'BP_AJBInGameStand_ECH_C_ChangeAct_Local::ShouldPlayAct3Montage' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.MC_Change
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_ECH_C_MC_Change final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayAct3Montage;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_MC_Change) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_MC_Change");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_MC_Change) == 0x000002, "Wrong size on BP_AJBInGameStand_ECH_C_MC_Change");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_MC_Change, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_MC_Change::ACT_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_MC_Change, ShouldPlayAct3Montage) == 0x000001, "Member 'BP_AJBInGameStand_ECH_C_MC_Change::ShouldPlayAct3Montage' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ROS_Change
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ROS_Change final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayAct3Montage;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ROS_Change) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_ROS_Change");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ROS_Change) == 0x000002, "Wrong size on BP_AJBInGameStand_ECH_C_ROS_Change");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ROS_Change, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ROS_Change::ACT_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ROS_Change, ShouldPlayAct3Montage) == 0x000001, "Member 'BP_AJBInGameStand_ECH_C_ROS_Change::ShouldPlayAct3Montage' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ChangeAct
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ChangeAct final
{
public:
	EECHState                                     NewACT;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayAct3Montage;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ChangeAct) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_ChangeAct");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ChangeAct) == 0x000002, "Wrong size on BP_AJBInGameStand_ECH_C_ChangeAct");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeAct, NewACT) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ChangeAct::NewACT' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeAct, ShouldPlayAct3Montage) == 0x000001, "Member 'BP_AJBInGameStand_ECH_C_ChangeAct::ShouldPlayAct3Montage' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnCompleted_AE5112D74E9B95EC4A8998BF9C53585E::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ChangeSkin
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ChangeSkin final
{
public:
	class FString                                 StandName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         skinID;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ChangeSkin) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_ChangeSkin");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ChangeSkin) == 0x000018, "Wrong size on BP_AJBInGameStand_ECH_C_ChangeSkin");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeSkin, StandName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ChangeSkin::StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ChangeSkin, skinID) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_ChangeSkin::skinID' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.CleanUp
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_ECH_C_CleanUp final
{
public:
	bool                                          bShouldDestroy;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_CleanUp) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_CleanUp");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_CleanUp) == 0x000001, "Wrong size on BP_AJBInGameStand_ECH_C_CleanUp");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CleanUp, bShouldDestroy) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_CleanUp::bShouldDestroy' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnBlendOut_AE5112D74E9B95EC4A8998BF9C53585E::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnInterrupted_AE5112D74E9B95EC4A8998BF9C53585E::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnNotifyBegin_AE5112D74E9B95EC4A8998BF9C53585E::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnNotifyEnd_AE5112D74E9B95EC4A8998BF9C53585E::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnCompleted_E707BD7D424D88E2F60E5E8E708E45E5::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnBlendOut_E707BD7D424D88E2F60E5E8E708E45E5::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnInterrupted_E707BD7D424D88E2F60E5E8E708E45E5::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnNotifyBegin_E707BD7D424D88E2F60E5E8E708E45E5::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5) == 0x000008, "Wrong size on BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnNotifyEnd_E707BD7D424D88E2F60E5E8E708E45E5::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.SetActMeshAndMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial final
{
public:
	EECHState                                     ACT_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial) == 0x000028, "Wrong size on BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, ACT_0) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::ACT_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x000022, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000023, "Member 'BP_AJBInGameStand_ECH_C_SetActMeshAndMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.StringToAct
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStand_ECH_C_StringToAct final
{
public:
	class FString                                 CharacterTag;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EECHState                                     ACT_0;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_StringToAct) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_StringToAct");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_StringToAct) == 0x000018, "Wrong size on BP_AJBInGameStand_ECH_C_StringToAct");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_StringToAct, CharacterTag) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_StringToAct::CharacterTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_StringToAct, ACT_0) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_StringToAct::ACT_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_StringToAct, K2Node_SwitchString_CmpSuccess) == 0x000011, "Member 'BP_AJBInGameStand_ECH_C_StringToAct::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetLaunchedActorHomeLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation) == 0x000038, "Wrong size on BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, CallFunc_GetFixedLocation_Location) == 0x000014, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBInGameStand_ECH_C_GetLaunchedActorHomeLocation::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetCloseRangeLaunchedActor
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor) == 0x000020, "Wrong size on BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_GetCloseRangeLaunchedActor::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetAttackRange
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBThreeFreezeSkill_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBTailRushSkill_C*                 CallFunc_GetComponentByClass_ReturnValue1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetAttackRange) == 0x000050, "Wrong size on BP_AJBInGameStand_ECH_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00004C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetAttackCollisionRadius
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBThreeFreezeSkill_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBTailRushSkill_C*                 CallFunc_GetComponentByClass_ReturnValue1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius) == 0x000040, "Wrong size on BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_ECH_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetAttackLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetAttackLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetAttackLocation) == 0x000028, "Wrong size on BP_AJBInGameStand_ECH_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackLocation, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_GetAttackLocation::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetAttackLocation, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x00001C, "Member 'BP_AJBInGameStand_ECH_C_GetAttackLocation::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetStandAttackOffset
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBThreeFreezeSkill_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBTailRushSkill_C*                 CallFunc_GetComponentByClass_ReturnValue1;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset) == 0x000050, "Wrong size on BP_AJBInGameStand_ECH_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, Temp_int_Variable) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetStandAttackOffset, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_ECH_C_GetStandAttackOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.ShouldShowNGPoint
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_ECH_C_ShouldShowNGPoint final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBThreeFreezeSkill_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_ShouldShowNGPoint");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint) == 0x000030, "Wrong size on BP_AJBInGameStand_ECH_C_ShouldShowNGPoint");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, bResult) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, CallFunc_IsSkillActive_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_ShouldShowNGPoint, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_AJBInGameStand_ECH_C_ShouldShowNGPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetShutTraceRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetShutTraceRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetShutTraceRadius) == 0x000004, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetShutTraceRadius");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetShutTraceRadius) == 0x000004, "Wrong size on BP_AJBInGameStand_ECH_C_GetShutTraceRadius");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShutTraceRadius, Radius) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetShutTraceRadius::Radius' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetShotLocation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetShotLocation final
{
public:
	bool                                          bConsiderCharacterCapsuleRadius;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SkillTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locations;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FVector>                        TempReturnLocations;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USceneComponent*>                TempComponents;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetViewRotation_Rotation;                 // 0x0058(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetShotLocation");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetShotLocation) == 0x0000A8, "Wrong size on BP_AJBInGameStand_ECH_C_GetShotLocation");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, bConsiderCharacterCapsuleRadius) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::bConsiderCharacterCapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, SkillTag) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, Locations) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, TempReturnLocations) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::TempReturnLocations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, TempComponents) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::TempComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_GetViewRotation_Rotation) == 0x000058, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_GetViewRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000078, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_GetComponentsByTag_ReturnValue) == 0x000090, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetShotLocation, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameStand_ECH_C_GetShotLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.CheckLocallyControlled
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_ECH_C_CheckLocallyControlled final
{
public:
	bool                                          bLocallyControlled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_CheckLocallyControlled");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled) == 0x000038, "Wrong size on BP_AJBInGameStand_ECH_C_CheckLocallyControlled");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, bLocallyControlled) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::bLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000028, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, CallFunc_HasLocalSharedController_ReturnValue) == 0x000031, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_CheckLocallyControlled, CallFunc_IsPlayerController_ReturnValue) == 0x000032, "Member 'BP_AJBInGameStand_ECH_C_CheckLocallyControlled::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetDummyShotLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetDummyShotLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetShotLocation_Locations;                // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetDummyShotLocation");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation) == 0x000030, "Wrong size on BP_AJBInGameStand_ECH_C_GetDummyShotLocation");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetDummyShotLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation, CallFunc_GetShotLocation_Locations) == 0x000010, "Member 'BP_AJBInGameStand_ECH_C_GetDummyShotLocation::CallFunc_GetShotLocation_Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_ECH_C_GetDummyShotLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetDummyShotLocation, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_AJBInGameStand_ECH_C_GetDummyShotLocation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.GetDamageActorTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation) == 0x00000C, "Wrong size on BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_GetDamageActorTargetLocation::Location' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.OnPreEmoteAccompany
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany) == 0x000008, "Wrong alignment on BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany) == 0x000028, "Wrong size on BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany, Montage) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_OnPreEmoteAccompany::Montage' has a wrong offset!");

// Function BP_AJBInGameStand_ECH.BP_AJBInGameStand_ECH_C.SpawnAccompanyEmitter
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter final
{
public:
	EStandAccompanyTransition                     AccompanyTransition;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter) == 0x000001, "Wrong alignment on BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter");
static_assert(sizeof(BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter) == 0x000001, "Wrong size on BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter");
static_assert(offsetof(BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter, AccompanyTransition) == 0x000000, "Member 'BP_AJBInGameStand_ECH_C_SpawnAccompanyEmitter::AccompanyTransition' has a wrong offset!");

}


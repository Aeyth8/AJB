#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_InteractOperatorInterface

#include "Basic.hpp"

#include "BI_InteractOperatorInterface_classes.hpp"
#include "BI_InteractOperatorInterface_parameters.hpp"


namespace SDK
{

// Function BI_InteractOperatorInterface.BI_InteractOperatorInterface_C.CheckErrorConditionOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bErrorCondition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8*                                  ErrorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_InteractOperatorInterface_C::CheckErrorConditionOperator(class AActor* InteractActor, bool* bErrorCondition, uint8* ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_InteractOperatorInterface_C", "CheckErrorConditionOperator");

	Params::BI_InteractOperatorInterface_C_CheckErrorConditionOperator Parms{};

	Parms.InteractActor = InteractActor;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bErrorCondition != nullptr)
		*bErrorCondition = Parms.bErrorCondition;

	if (ErrorType != nullptr)
		*ErrorType = Parms.ErrorType;
}


// Function BI_InteractOperatorInterface.BI_InteractOperatorInterface_C.InteractableOperator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bReturnValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_InteractOperatorInterface_C::InteractableOperator(class AActor* InteractActor, bool* bReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_InteractOperatorInterface_C", "InteractableOperator");

	Params::BI_InteractOperatorInterface_C_InteractableOperator Parms{};

	Parms.InteractActor = InteractActor;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bReturnValue != nullptr)
		*bReturnValue = Parms.bReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBProjectileSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "E_VoiceRushType_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBProjectileSkill.BP_AJBProjectileSkill_C
// 0x00C0 (0x02A8 - 0x01E8)
class UBP_AJBProjectileSkill_C : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBProjectileSkill_C;            // 0x01E8(0x0008)(Transient, DuplicateTransient)
	float                                         ShotInterval;                                      // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ProjectileClass;                                   // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ShotGion;                                          // 0x0200(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          LoopParticleEffect;                                // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShotTimeCount;                                     // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LoopMontage;                                       // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LaunchPointParticleTag;                            // 0x0220(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ShotSETag;                                         // 0x0228(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowerSpread;                                       // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpreadHealStopTime;                                // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalProjectileGravityPower;                  // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialAdditionalProjectileGravityPower;           // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CameraShake;                                       // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IrregularAngleThresould_Deg_;                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreTarget;                                     // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectileSpeedScale;                              // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAppearEffectMultiple;                             // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseShotContinuedGion;                             // 0x025D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ShotContinuedGionTag;                              // 0x0260(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldGenerateShotContinuedGion;                  // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_VoiceRushType                               RushVoiceType;                                     // 0x0269(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           RushPlayVoiceTag;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RushStopVoiceTag;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpeakAvoidedVoice;                                // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DefendedVoiceTag;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AvoidedVoiceTag;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldCameraShake;                                // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRotationStandOnlyYaw;                             // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotInactiveIfAccompany;                           // 0x029A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ButtonDownSafetyTime;                              // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyTime;                                         // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBProjectileSkill(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Update_Shot(float DeltaSeconds);
	void OnBlocked(const struct FGameplayTag& SkillTag_0, bool bAvoidSkill);
	void BindCharacterDispatcher(class ABP_AJBInGameCharacter_C* CharacterBP);
	void ChangeSpread();
	void MC_Shot(const TArray<struct FTransform>& Transforms, const struct FVector& NotMultiple_Location);
	void AppearEffect(const struct FVector& Location);
	void ROS_Shot(class ABP_AJBInGameCharacter_C* OwnerCharacter, const TArray<struct FTransform>& Transforms, const struct FVector& NotMultipleLocation, bool IsAttackBySeparatedStand);
	void ShotProjectile();
	void TickState_Ready(float DeltaSeconds);
	void OnBeginState_Ready();
	void OnStateEnd();
	void TickState_Shot(float DeltaSeconds);
	void OnBeginState_Shot();
	void StateTick(float DeltaSeconds);
	void ChangeProjectileSpeedScale(float SpeedScale);
	void ChangeAdditionalProjectileGravityPower(float Power);
	void StopRushVoice();
	void SpeakRushVoice();
	void OnCompleted_507963AC4207790E61D7AEBC50FCD8C6(class FName NotifyName);
	void OnBlendOut_507963AC4207790E61D7AEBC50FCD8C6(class FName NotifyName);
	void OnInterrupted_507963AC4207790E61D7AEBC50FCD8C6(class FName NotifyName);
	void OnNotifyBegin_507963AC4207790E61D7AEBC50FCD8C6(class FName NotifyName);
	void OnNotifyEnd_507963AC4207790E61D7AEBC50FCD8C6(class FName NotifyName);
	void SpawnProjectile(class ABP_AJBInGameCharacter_C* OwnerCharacter, const struct FVector& Location, const struct FRotator& Rotation, bool IsAttackBySeparatedStand, class ABP_AJBInGameProjectile_C** SpawnedProjectile);
	void SpawnGion(const struct FVector& Location, const struct FGameplayTag& GionTag);
	void TryDestroyLoopParticle();
	void SpawnLaunchParticle();
	void ChangeLaunchParticleDilation(bool bEnable);
	float GetSkillAttackRange();
	void ReceiveBeginPlay();
	void StateBeginPlay(bool bShouldRestore);
	void OnActive();
	void ReceiveTick(float DeltaSeconds);
	void OnInactive();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void InitializeVariables();
	void ChangeState(uint8 NextState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBProjectileSkill_C">();
	}
	static class UBP_AJBProjectileSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBProjectileSkill_C>();
	}
};
static_assert(alignof(UBP_AJBProjectileSkill_C) == 0x000008, "Wrong alignment on UBP_AJBProjectileSkill_C");
static_assert(sizeof(UBP_AJBProjectileSkill_C) == 0x0002A8, "Wrong size on UBP_AJBProjectileSkill_C");
static_assert(offsetof(UBP_AJBProjectileSkill_C, UberGraphFrame_BP_AJBProjectileSkill_C) == 0x0001E8, "Member 'UBP_AJBProjectileSkill_C::UberGraphFrame_BP_AJBProjectileSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ShotInterval) == 0x0001F0, "Member 'UBP_AJBProjectileSkill_C::ShotInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ProjectileClass) == 0x0001F8, "Member 'UBP_AJBProjectileSkill_C::ProjectileClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ShotGion) == 0x000200, "Member 'UBP_AJBProjectileSkill_C::ShotGion' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, LoopParticleEffect) == 0x000208, "Member 'UBP_AJBProjectileSkill_C::LoopParticleEffect' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ShotTimeCount) == 0x000210, "Member 'UBP_AJBProjectileSkill_C::ShotTimeCount' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, LoopMontage) == 0x000218, "Member 'UBP_AJBProjectileSkill_C::LoopMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, LaunchPointParticleTag) == 0x000220, "Member 'UBP_AJBProjectileSkill_C::LaunchPointParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ShotSETag) == 0x000228, "Member 'UBP_AJBProjectileSkill_C::ShotSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, TraceLength) == 0x000230, "Member 'UBP_AJBProjectileSkill_C::TraceLength' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, LowerSpread) == 0x000234, "Member 'UBP_AJBProjectileSkill_C::LowerSpread' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, SpreadHealStopTime) == 0x000238, "Member 'UBP_AJBProjectileSkill_C::SpreadHealStopTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, AdditionalProjectileGravityPower) == 0x00023C, "Member 'UBP_AJBProjectileSkill_C::AdditionalProjectileGravityPower' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, InitialAdditionalProjectileGravityPower) == 0x000240, "Member 'UBP_AJBProjectileSkill_C::InitialAdditionalProjectileGravityPower' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, CameraShake) == 0x000248, "Member 'UBP_AJBProjectileSkill_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, IrregularAngleThresould_Deg_) == 0x000250, "Member 'UBP_AJBProjectileSkill_C::IrregularAngleThresould_Deg_' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bIgnoreTarget) == 0x000254, "Member 'UBP_AJBProjectileSkill_C::bIgnoreTarget' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ProjectileSpeedScale) == 0x000258, "Member 'UBP_AJBProjectileSkill_C::ProjectileSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bAppearEffectMultiple) == 0x00025C, "Member 'UBP_AJBProjectileSkill_C::bAppearEffectMultiple' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bUseShotContinuedGion) == 0x00025D, "Member 'UBP_AJBProjectileSkill_C::bUseShotContinuedGion' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ShotContinuedGionTag) == 0x000260, "Member 'UBP_AJBProjectileSkill_C::ShotContinuedGionTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bShouldGenerateShotContinuedGion) == 0x000268, "Member 'UBP_AJBProjectileSkill_C::bShouldGenerateShotContinuedGion' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, RushVoiceType) == 0x000269, "Member 'UBP_AJBProjectileSkill_C::RushVoiceType' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, RushPlayVoiceTag) == 0x000270, "Member 'UBP_AJBProjectileSkill_C::RushPlayVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, RushStopVoiceTag) == 0x000278, "Member 'UBP_AJBProjectileSkill_C::RushStopVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bSpeakAvoidedVoice) == 0x000280, "Member 'UBP_AJBProjectileSkill_C::bSpeakAvoidedVoice' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, DefendedVoiceTag) == 0x000288, "Member 'UBP_AJBProjectileSkill_C::DefendedVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, AvoidedVoiceTag) == 0x000290, "Member 'UBP_AJBProjectileSkill_C::AvoidedVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bShouldCameraShake) == 0x000298, "Member 'UBP_AJBProjectileSkill_C::bShouldCameraShake' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bRotationStandOnlyYaw) == 0x000299, "Member 'UBP_AJBProjectileSkill_C::bRotationStandOnlyYaw' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, bNotInactiveIfAccompany) == 0x00029A, "Member 'UBP_AJBProjectileSkill_C::bNotInactiveIfAccompany' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ButtonDownSafetyTime) == 0x00029C, "Member 'UBP_AJBProjectileSkill_C::ButtonDownSafetyTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBProjectileSkill_C, ReadyTime) == 0x0002A0, "Member 'UBP_AJBProjectileSkill_C::ReadyTime' has a wrong offset!");

}


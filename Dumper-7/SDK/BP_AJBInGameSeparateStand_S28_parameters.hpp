#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameSeparateStand_S28

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.ExecuteUbergraph_BP_AJBInGameSeparateStand_S28
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBeforeInteract_bShouldInteract;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28) == 0x000020, "Wrong size on BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28, EntryPoint) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28, CallFunc_OnBeforeInteract_bShouldInteract) == 0x000019, "Member 'BP_AJBInGameSeparateStand_S28_C_ExecuteUbergraph_BP_AJBInGameSeparateStand_S28::CallFunc_OnBeforeInteract_bShouldInteract' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetStandAttackOffset
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStandAttackOffset_StandAttackOffset;   // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset) == 0x000058, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_AsBI_Fighter_Interface) == 0x000038, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_AsBI_Fighter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset, CallFunc_GetStandAttackOffset_StandAttackOffset) == 0x00004C, "Member 'BP_AJBInGameSeparateStand_S28_C_GetStandAttackOffset::CallFunc_GetStandAttackOffset_StandAttackOffset' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetAttackRange
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttackRange_AttackRange;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange) == 0x000048, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_AsBI_Fighter_Interface) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_AsBI_Fighter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackRange, CallFunc_GetAttackRange_AttackRange) == 0x000044, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackRange::CallFunc_GetAttackRange_AttackRange' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetAttackCollisionRadius
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttackCollisionRadius_Radius;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius) == 0x000048, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBI_Fighter_Interface) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBI_Fighter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius, CallFunc_GetAttackCollisionRadius_Radius) == 0x000044, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackCollisionRadius::CallFunc_GetAttackCollisionRadius_Radius' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetAttackLocation
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_FighterInterface_C> K2Node_DynamicCast_AsBI_Fighter_Interface;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAttackLocation_Location;               // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation) == 0x000060, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_AsBI_Fighter_Interface) == 0x000040, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_AsBI_Fighter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetAttackLocation, CallFunc_GetAttackLocation_Location) == 0x000054, "Member 'BP_AJBInGameSeparateStand_S28_C_GetAttackLocation::CallFunc_GetAttackLocation_Location' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetDamageActorTargetLocation
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLaunchedActorInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDamageActorTargetLocation_Location;    // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation) == 0x000058, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface) == 0x000038, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_AsBI_Close_Range_Launched_Actor_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation, CallFunc_GetDamageActorTargetLocation_Location) == 0x00004C, "Member 'BP_AJBInGameSeparateStand_S28_C_GetDamageActorTargetLocation::CallFunc_GetDamageActorTargetLocation_Location' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetLaunchedActorHomeLocation
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation) == 0x000058, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000038, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x00004C, "Member 'BP_AJBInGameSeparateStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");

// Function BP_AJBInGameSeparateStand_S28.BP_AJBInGameSeparateStand_S28_C.GetCloseRangeLaunchedActor
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor) == 0x000058, "Wrong size on BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000028, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000038, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000050, "Member 'BP_AJBInGameSeparateStand_S28_C_GetCloseRangeLaunchedActor::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");

}


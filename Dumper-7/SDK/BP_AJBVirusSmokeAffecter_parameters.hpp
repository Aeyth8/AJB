#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVirusSmokeAffecter

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.ExecuteUbergraph_BP_AJBVirusSmokeAffecter
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAddSelf;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_Event_TargetCharacter;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_PPH_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter) == 0x000008, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter) == 0x000038, "Wrong size on BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, EntryPoint) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000010, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000018, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, K2Node_Event_bAddSelf) == 0x00001A, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::K2Node_Event_bAddSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, K2Node_Event_TargetCharacter) == 0x000020, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH) == 0x000028, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBVirusSmokeAffecter_C_ExecuteUbergraph_BP_AJBVirusSmokeAffecter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.GetCauserOwnerCharacterBP
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP) == 0x000028, "Wrong size on BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBVirusSmokeAffecter_C_GetCauserOwnerCharacterBP::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag_0;                                 // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag, PassiveSkillTag_0) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_GetPassiveSkillTag::PassiveSkillTag_0' has a wrong offset!");

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_GetDuration");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_GetDuration) == 0x000004, "Wrong size on BP_AJBVirusSmokeAffecter_C_GetDuration");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_GetDuration::Duration' has a wrong offset!");

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.OnAddPassiveFirst
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst final
{
public:
	bool                                          bAddSelf;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                TargetCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst) == 0x000008, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst) == 0x000010, "Wrong size on BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst, bAddSelf) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst::bAddSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst, TargetCharacter) == 0x000008, "Member 'BP_AJBVirusSmokeAffecter_C_OnAddPassiveFirst::TargetCharacter' has a wrong offset!");

// Function BP_AJBVirusSmokeAffecter.BP_AJBVirusSmokeAffecter_C.CalcScale
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBVirusSmokeAffecter_C_CalcScale final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcScale_Scale;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVirusSmokeAffecter_C_CalcScale) == 0x000004, "Wrong alignment on BP_AJBVirusSmokeAffecter_C_CalcScale");
static_assert(sizeof(BP_AJBVirusSmokeAffecter_C_CalcScale) == 0x000014, "Wrong size on BP_AJBVirusSmokeAffecter_C_CalcScale");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_CalcScale, Index_0) == 0x000000, "Member 'BP_AJBVirusSmokeAffecter_C_CalcScale::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_CalcScale, Scale_0) == 0x000004, "Member 'BP_AJBVirusSmokeAffecter_C_CalcScale::Scale_0' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_CalcScale, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBVirusSmokeAffecter_C_CalcScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_CalcScale, CallFunc_CalcScale_Scale) == 0x00000C, "Member 'BP_AJBVirusSmokeAffecter_C_CalcScale::CallFunc_CalcScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBVirusSmokeAffecter_C_CalcScale, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBVirusSmokeAffecter_C_CalcScale::K2Node_Select_Default' has a wrong offset!");

}


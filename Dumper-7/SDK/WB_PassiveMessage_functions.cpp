#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PassiveMessage

#include "Basic.hpp"

#include "WB_PassiveMessage_classes.hpp"
#include "WB_PassiveMessage_parameters.hpp"


namespace SDK
{

// Function WB_PassiveMessage.WB_PassiveMessage_C.ExecuteUbergraph_WB_PassiveMessage
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::ExecuteUbergraph_WB_PassiveMessage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "ExecuteUbergraph_WB_PassiveMessage");

	Params::WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.TryUpdatePhase
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   IntegerValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::TryUpdatePhase(const struct FGameplayTag& PassiveTag, int32 IntegerValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "TryUpdatePhase");

	Params::WB_PassiveMessage_C_TryUpdatePhase Parms{};

	Parms.PassiveTag = std::move(PassiveTag);
	Parms.IntegerValue = IntegerValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.TryUpdateLeftTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PassiveTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   FloatValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::TryUpdateLeftTime(const struct FGameplayTag& PassiveTag, float FloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "TryUpdateLeftTime");

	Params::WB_PassiveMessage_C_TryUpdateLeftTime Parms{};

	Parms.PassiveTag = std::move(PassiveTag);
	Parms.FloatValue = FloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.UnbindFinishedAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::UnbindFinishedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "UnbindFinishedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.ResetPassive
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::ResetPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "ResetPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.OnStartSwitchingCountDownTimer
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::OnStartSwitchingCountDownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "OnStartSwitchingCountDownTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.UpdatePassiveTextByInteger
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IntegerValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::UpdatePassiveTextByInteger(int32 IntegerValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "UpdatePassiveTextByInteger");

	Params::WB_PassiveMessage_C_UpdatePassiveTextByInteger Parms{};

	Parms.IntegerValue = IntegerValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.OnFinishedPassiveEndAnim
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::OnFinishedPassiveEndAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "OnFinishedPassiveEndAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.OnFinishedAnim
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::OnFinishedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "OnFinishedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.OnSwitching
// (BlueprintCallable, BlueprintEvent)

void UWB_PassiveMessage_C::OnSwitching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "OnSwitching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.RemoveMessage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::RemoveMessage(const struct FGameplayTag& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "RemoveMessage");

	Params::WB_PassiveMessage_C_RemoveMessage Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.AddMessage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_PassiveMessage_C::AddMessage(const struct FGameplayTag& Key, const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "AddMessage");

	Params::WB_PassiveMessage_C_AddMessage Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PassiveMessage.WB_PassiveMessage_C.UpdateTextMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CurrentPassiveTag                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWB_PassiveMessage_C::UpdateTextMaterial(const struct FGameplayTag& CurrentPassiveTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PassiveMessage_C", "UpdateTextMaterial");

	Params::WB_PassiveMessage_C_UpdateTextMaterial Parms{};

	Parms.CurrentPassiveTag = std::move(CurrentPassiveTag);

	UObject::ProcessEvent(Func, &Parms);
}

}


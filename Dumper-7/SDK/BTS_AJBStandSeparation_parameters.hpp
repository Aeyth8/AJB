#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBStandSeparation

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBStandSeparation.BTS_AJBStandSeparation_C.ExecuteUbergraph_BTS_AJBStandSeparation
// 0x00A0 (0x00A0 - 0x0000)
struct BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_OwnerController1;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_ControlledPawn1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_CustomEvent_OwnerController;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_ControlledPawn;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 K2Node_CustomEvent_NodeResult;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetInput_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetInput_ReturnValue1;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue1;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSeparateSkill_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAIBTExtension_C*                 CallFunc_GetBTExtension_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTD_AJBExecutionNotifier_C*            CallFunc_GetExecutionNotifier_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult)> K2Node_CreateDelegate_OutputDelegate; // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AAIController* OwnerController, class APawn* ControlledPawn)> K2Node_CreateDelegate_OutputDelegate1; // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsStandSeparating_bSeparation;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation) == 0x000008, "Wrong alignment on BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation");
static_assert(sizeof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation) == 0x0000A0, "Wrong size on BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, EntryPoint) == 0x000000, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CustomEvent_OwnerController1) == 0x000008, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CustomEvent_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CustomEvent_ControlledPawn1) == 0x000010, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CustomEvent_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_Event_OwnerController) == 0x000018, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CustomEvent_OwnerController) == 0x000028, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CustomEvent_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CustomEvent_ControlledPawn) == 0x000030, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CustomEvent_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CustomEvent_NodeResult) == 0x000038, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CustomEvent_NodeResult' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetInput_ReturnValue) == 0x000040, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetImaginaryCharacterBody_ReturnValue) == 0x000048, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetImaginaryCharacterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetInput_ReturnValue1) == 0x000050, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetInput_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetImaginaryCharacterBody_ReturnValue1) == 0x000058, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetImaginaryCharacterBody_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_HasSeparateSkill_ReturnValue) == 0x000060, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_HasSeparateSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetBTExtension_ReturnValue) == 0x000068, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetBTExtension_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_GetExecutionNotifier_ReturnValue) == 0x000070, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_GetExecutionNotifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, K2Node_CreateDelegate_OutputDelegate1) == 0x000088, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation, CallFunc_IsStandSeparating_bSeparation) == 0x000098, "Member 'BTS_AJBStandSeparation_C_ExecuteUbergraph_BTS_AJBStandSeparation::CallFunc_IsStandSeparating_bSeparation' has a wrong offset!");

// Function BTS_AJBStandSeparation.BTS_AJBStandSeparation_C.OnExecutionFinish
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBStandSeparation_C_OnExecutionFinish final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 NodeResult;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBStandSeparation_C_OnExecutionFinish) == 0x000008, "Wrong alignment on BTS_AJBStandSeparation_C_OnExecutionFinish");
static_assert(sizeof(BTS_AJBStandSeparation_C_OnExecutionFinish) == 0x000018, "Wrong size on BTS_AJBStandSeparation_C_OnExecutionFinish");
static_assert(offsetof(BTS_AJBStandSeparation_C_OnExecutionFinish, OwnerController) == 0x000000, "Member 'BTS_AJBStandSeparation_C_OnExecutionFinish::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_OnExecutionFinish, ControlledPawn) == 0x000008, "Member 'BTS_AJBStandSeparation_C_OnExecutionFinish::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_OnExecutionFinish, NodeResult) == 0x000010, "Member 'BTS_AJBStandSeparation_C_OnExecutionFinish::NodeResult' has a wrong offset!");

// Function BTS_AJBStandSeparation.BTS_AJBStandSeparation_C.OnExecutionStart
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBStandSeparation_C_OnExecutionStart final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBStandSeparation_C_OnExecutionStart) == 0x000008, "Wrong alignment on BTS_AJBStandSeparation_C_OnExecutionStart");
static_assert(sizeof(BTS_AJBStandSeparation_C_OnExecutionStart) == 0x000010, "Wrong size on BTS_AJBStandSeparation_C_OnExecutionStart");
static_assert(offsetof(BTS_AJBStandSeparation_C_OnExecutionStart, OwnerController) == 0x000000, "Member 'BTS_AJBStandSeparation_C_OnExecutionStart::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_OnExecutionStart, ControlledPawn) == 0x000008, "Member 'BTS_AJBStandSeparation_C_OnExecutionStart::ControlledPawn' has a wrong offset!");

// Function BTS_AJBStandSeparation.BTS_AJBStandSeparation_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBStandSeparation_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBStandSeparation_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_AJBStandSeparation_C_ReceiveActivationAI");
static_assert(sizeof(BTS_AJBStandSeparation_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_AJBStandSeparation_C_ReceiveActivationAI");
static_assert(offsetof(BTS_AJBStandSeparation_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBStandSeparation_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBStandSeparation_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBStandSeparation_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAIDebugComponent

#include "Basic.hpp"

#include "BP_AJBAIDebugComponent_classes.hpp"
#include "BP_AJBAIDebugComponent_parameters.hpp"


namespace SDK
{

// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.ExecuteUbergraph_BP_AJBAIDebugComponent
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::ExecuteUbergraph_BP_AJBAIDebugComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "ExecuteUbergraph_BP_AJBAIDebugComponent");

	Params::BP_AJBAIDebugComponent_C_ExecuteUbergraph_BP_AJBAIDebugComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnPawnDestroy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnPawnDestroy(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnPawnDestroy");

	Params::BP_AJBAIDebugComponent_C_OnPawnDestroy Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnNPCCharacterDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DeadActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnNPCCharacterDead(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnNPCCharacterDead");

	Params::BP_AJBAIDebugComponent_C_OnNPCCharacterDead Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DeadActor = DeadActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.ChangeBehaviorToIdle
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::ChangeBehaviorToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "ChangeBehaviorToIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.SetupWithDebugAIStartPoint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBDebugAIStartPoint_C*       DebugAIStartPoint_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::SetupWithDebugAIStartPoint(class ABP_AJBDebugAIStartPoint_C* DebugAIStartPoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "SetupWithDebugAIStartPoint");

	Params::BP_AJBAIDebugComponent_C_SetupWithDebugAIStartPoint Parms{};

	Parms.DebugAIStartPoint_0 = DebugAIStartPoint_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.UpdateStatusLabel
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::UpdateStatusLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "UpdateStatusLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "ReceiveTick");

	Params::BP_AJBAIDebugComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.SetupLogging
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::SetupLogging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "SetupLogging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnDeadLogging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AIController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnDeadLogging(class AAIController* AIController, const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnDeadLogging");

	Params::BP_AJBAIDebugComponent_C_OnDeadLogging Parms{};

	Parms.AIController = AIController;
	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventUnlockedLogging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventUnlockedLogging(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventUnlockedLogging");

	Params::BP_AJBAIDebugComponent_C_OnEventUnlockedLogging Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventLockedLogging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventLockedLogging(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventLockedLogging");

	Params::BP_AJBAIDebugComponent_C_OnEventLockedLogging Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnErrorContextPushedLogging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnErrorContextPushedLogging(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnErrorContextPushedLogging");

	Params::BP_AJBAIDebugComponent_C_OnErrorContextPushedLogging Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnContextPushedLogging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnContextPushedLogging(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnContextPushedLogging");

	Params::BP_AJBAIDebugComponent_C_OnContextPushedLogging Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.LogDumpLast30SecLogs
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::LogDumpLast30SecLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "LogDumpLast30SecLogs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.LogDumpAllLogs
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::LogDumpAllLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "LogDumpAllLogs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.LogEventLock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAIDebugComponent_C::LogEventLock(const struct FGameplayTag& EventTag, bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "LogEventLock");

	Params::BP_AJBAIDebugComponent_C_LogEventLock Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.bLocked = bLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.LogEventContextPush
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::LogEventContextPush(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "LogEventContextPush");

	Params::BP_AJBAIDebugComponent_C_LogEventContextPush Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnDeadMonitoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AIController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnDeadMonitoring(class AAIController* AIController, const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnDeadMonitoring");

	Params::BP_AJBAIDebugComponent_C_OnDeadMonitoring Parms{};

	Parms.AIController = AIController;
	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventUnlockedMonitoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventUnlockedMonitoring(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventUnlockedMonitoring");

	Params::BP_AJBAIDebugComponent_C_OnEventUnlockedMonitoring Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventLockedMonitoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventLockedMonitoring(const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventLockedMonitoring");

	Params::BP_AJBAIDebugComponent_C_OnEventLockedMonitoring Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.SetupMonitoring
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::SetupMonitoring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "SetupMonitoring");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.CancelMonitor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::CancelMonitor(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "CancelMonitor");

	Params::BP_AJBAIDebugComponent_C_CancelMonitor Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.RequestMonitor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::RequestMonitor(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "RequestMonitor");

	Params::BP_AJBAIDebugComponent_C_RequestMonitor Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventReplayPathPushed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath*                  NavigationPath                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventReplayPathPushed(const struct FGameplayTag& Tag, class UNavigationPath* NavigationPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventReplayPathPushed");

	Params::BP_AJBAIDebugComponent_C_OnEventReplayPathPushed Parms{};

	Parms.Tag = std::move(Tag);
	Parms.NavigationPath = NavigationPath;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnDeadAtRecognition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    AIController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnDeadAtRecognition(class AAIController* AIController, const struct FGameplayTag& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnDeadAtRecognition");

	Params::BP_AJBAIDebugComponent_C_OnDeadAtRecognition Parms{};

	Parms.AIController = AIController;
	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.OnEventReplayPushed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   v1                                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   v2                                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::OnEventReplayPushed(const struct FGameplayTag& Tag, const struct FVector& v1, const struct FVector& v2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "OnEventReplayPushed");

	Params::BP_AJBAIDebugComponent_C_OnEventReplayPushed Parms{};

	Parms.Tag = std::move(Tag);
	Parms.v1 = std::move(v1);
	Parms.v2 = std::move(v2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.SendEventReplayTransLoop
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::SendEventReplayTransLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "SendEventReplayTransLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.NotifyDestroyToEventReplay
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBAIDebugComponent_C::NotifyDestroyToEventReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "NotifyDestroyToEventReplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.SetupEventReplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReplayTargetIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_AJBAIMessenger_C*             EventReplaySendingTarget_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::SetupEventReplay(int32 ReplayTargetIndex, class UBP_AJBAIMessenger_C* EventReplaySendingTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "SetupEventReplay");

	Params::BP_AJBAIDebugComponent_C_SetupEventReplay Parms{};

	Parms.ReplayTargetIndex = ReplayTargetIndex;
	Parms.EventReplaySendingTarget_0 = EventReplaySendingTarget_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetStatusCaption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetStatusCaption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetStatusCaption");

	Params::BP_AJBAIDebugComponent_C_GetStatusCaption Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetUpdatedStatusLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetUpdatedStatusLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetUpdatedStatusLabel");

	Params::BP_AJBAIDebugComponent_C_GetUpdatedStatusLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetStatusLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetStatusLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetStatusLabel");

	Params::BP_AJBAIDebugComponent_C_GetStatusLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetEventLogsAsString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 ElapsedTimeGetLogFrom                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetEventLogsAsString(const struct FTimespan& ElapsedTimeGetLogFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetEventLogsAsString");

	Params::BP_AJBAIDebugComponent_C_GetEventLogsAsString Parms{};

	Parms.ElapsedTimeGetLogFrom = std::move(ElapsedTimeGetLogFrom);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.DumpLogs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPrintToScreen                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPrintToLog                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FLinearColor&              TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAIDebugComponent_C::DumpLogs(bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "DumpLogs");

	Params::BP_AJBAIDebugComponent_C_DumpLogs Parms{};

	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = std::move(TextColor);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetAllLogsAsString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetAllLogsAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetAllLogsAsString");

	Params::BP_AJBAIDebugComponent_C_GetAllLogsAsString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetLogsLast30SecAsString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_AJBAIDebugComponent_C::GetLogsLast30SecAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetLogsLast30SecAsString");

	Params::BP_AJBAIDebugComponent_C_GetLogsLast30SecAsString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetDebugAIMonitor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWB_AJBDebugAIMonitor_C*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWB_AJBDebugAIMonitor_C* UBP_AJBAIDebugComponent_C::GetDebugAIMonitor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetDebugAIMonitor");

	Params::BP_AJBAIDebugComponent_C_GetDebugAIMonitor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.IfDebugDrawCurrentTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBAIDebugComponent_C::IfDebugDrawCurrentTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "IfDebugDrawCurrentTask");

	Params::BP_AJBAIDebugComponent_C_IfDebugDrawCurrentTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.HasStatusCaption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBAIDebugComponent_C::HasStatusCaption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "HasStatusCaption");

	Params::BP_AJBAIDebugComponent_C_HasStatusCaption Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBAIDebugComponent.BP_AJBAIDebugComponent_C.GetElapsedTimeFromSpawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan UBP_AJBAIDebugComponent_C::GetElapsedTimeFromSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAIDebugComponent_C", "GetElapsedTimeFromSpawn");

	Params::BP_AJBAIDebugComponent_C_GetElapsedTimeFromSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


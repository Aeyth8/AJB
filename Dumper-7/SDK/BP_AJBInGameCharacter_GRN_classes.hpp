#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_GRN

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBInGameCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameCharacter_GRN.BP_AJBInGameCharacter_GRN_C
// 0x0040 (0x17F0 - 0x17B0)
class ABP_AJBInGameCharacter_GRN_C final : public ABP_AJBInGameCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameCharacter_GRN_C;        // 0x17A8(0x0008)(Transient, DuplicateTransient)
	class UCapsuleComponent*                      RerquiemCapsule;                                   // 0x17B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBPartsMaker_C*                    BP_AJBPartsMaker;                                  // 0x17B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBGEXRequiemSkill_C*               BP_AJBGEXRequiemSkill;                             // 0x17C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBOverGrowSkill_C*                 BP_AJBOverGrowSkill;                               // 0x17C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBMudaRushGEXSkill_C*              BP_AJBMudaRushGEXSill;                             // 0x17D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAccompanyGEXSkill_C*             BP_AJBAccompanyGEXSkill;                           // 0x17D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bContinuedAccompany;                               // 0x17E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E1[0x7];                                     // 0x17E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        PairOverGrow;                                      // 0x17E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameCharacter_GRN(int32 EntryPoint);
	void NotifyTheWorldOnEventGraph(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void ROS_AddGameplayTag_InvincibleGEXRequiem();
	void AddGameplayTag_InvincibleGEXRequiem();
	void InactiveContinuedAccompany();
	void ActiveContinuedAccompany();
	void OnBlocking(const struct FVector& BlockingLocation, bool Reflect, bool bIsPairAttack, bool bImpulseDamage, class AActor* DamageOwner, bool bSeparateStandAttack);
	void CheckBlockingValid(class AActor* DamageActor, bool* bBlockingValid);
	void CheckBlockingComponent(class UPrimitiveComponent* Component, bool* bBlockingComponent);
	void IgnoreGivePassive(class UPrimitiveComponent* Component, bool* bIgnore);
	void BlockPenetrate(class AActor* CauserActor, bool* bBlock);
	void ReceiveBeginPlay();
	void ReleasedButton_ActiveSpecial();
	void PressedButton_ActiveSpecial();
	void PressedButton_ActiveBase();
	void ReleasedButton_Basic();
	void PressedButton_Ultimate();
	void PressedButton_Basic();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void UserConstructionScript();
	void SkillInactivated(class UBP_AJBSkillBase_C* InactivatedSkill);
	void CanEmote(struct FGameplayTagContainer* FailureFactor, struct FGameplayTagContainer* FailureSkills, bool* bCanEmote);
	void CheckAnySkillActiveOnTiltOneDash(bool* bAnySkillActive);
	void CheckSidlingOnTiltOnce(bool* bSidling);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameCharacter_GRN_C">();
	}
	static class ABP_AJBInGameCharacter_GRN_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameCharacter_GRN_C>();
	}
};
static_assert(alignof(ABP_AJBInGameCharacter_GRN_C) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_GRN_C");
static_assert(sizeof(ABP_AJBInGameCharacter_GRN_C) == 0x0017F0, "Wrong size on ABP_AJBInGameCharacter_GRN_C");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, UberGraphFrame_BP_AJBInGameCharacter_GRN_C) == 0x0017A8, "Member 'ABP_AJBInGameCharacter_GRN_C::UberGraphFrame_BP_AJBInGameCharacter_GRN_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, RerquiemCapsule) == 0x0017B0, "Member 'ABP_AJBInGameCharacter_GRN_C::RerquiemCapsule' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, BP_AJBPartsMaker) == 0x0017B8, "Member 'ABP_AJBInGameCharacter_GRN_C::BP_AJBPartsMaker' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, BP_AJBGEXRequiemSkill) == 0x0017C0, "Member 'ABP_AJBInGameCharacter_GRN_C::BP_AJBGEXRequiemSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, BP_AJBOverGrowSkill) == 0x0017C8, "Member 'ABP_AJBInGameCharacter_GRN_C::BP_AJBOverGrowSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, BP_AJBMudaRushGEXSill) == 0x0017D0, "Member 'ABP_AJBInGameCharacter_GRN_C::BP_AJBMudaRushGEXSill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, BP_AJBAccompanyGEXSkill) == 0x0017D8, "Member 'ABP_AJBInGameCharacter_GRN_C::BP_AJBAccompanyGEXSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, bContinuedAccompany) == 0x0017E0, "Member 'ABP_AJBInGameCharacter_GRN_C::bContinuedAccompany' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_GRN_C, PairOverGrow) == 0x0017E8, "Member 'ABP_AJBInGameCharacter_GRN_C::PairOverGrow' has a wrong offset!");

}


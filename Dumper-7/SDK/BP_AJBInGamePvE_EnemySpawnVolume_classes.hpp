#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGamePvE_EnemySpawnVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGamePvE_EnemySpawnVolume.BP_AJBInGamePvE_EnemySpawnVolume_C
// 0x0050 (0x0378 - 0x0328)
class ABP_AJBInGamePvE_EnemySpawnVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       SpawnSESpekaer;                                    // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   AreaNameDisplay;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SpawnableArea;                                     // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaIndex;                                         // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SpawnEffectTag;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnEnemySpawned;                                    // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         InitialPassiveAbilityDuration;                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringTheWorld;                                    // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnVolume(int32 EntryPoint);
	void SpawnEnemy(const struct FST_AJBInGamePvE_EnemyInfo& EnemyInfo, const struct FGameplayTag& SpawnType);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void SpawnEnemiesWithProperty(const TArray<struct FST_AJBInGamePvE_EnemyInfo>& Enemies, float DelayDuration);
	void UserConstructionScript();
	void GetRandomLocationInArea(struct FVector* InAreaLocation);
	void SpawnEnemy_Internal(const struct FST_AJBInGamePvE_EnemyInfo& EnemyInfo, const struct FGameplayTag& SpawnType, class ABP_AJBInGameAIController_C** EnemyController, class ABP_AJBInGameCharacter_C** SpawnedEnemy);
	void SetAreaIndex(int32 AreaIndex_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGamePvE_EnemySpawnVolume_C">();
	}
	static class ABP_AJBInGamePvE_EnemySpawnVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGamePvE_EnemySpawnVolume_C>();
	}
};
static_assert(alignof(ABP_AJBInGamePvE_EnemySpawnVolume_C) == 0x000008, "Wrong alignment on ABP_AJBInGamePvE_EnemySpawnVolume_C");
static_assert(sizeof(ABP_AJBInGamePvE_EnemySpawnVolume_C) == 0x000378, "Wrong size on ABP_AJBInGamePvE_EnemySpawnVolume_C");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, SpawnSESpekaer) == 0x000330, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::SpawnSESpekaer' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, AreaNameDisplay) == 0x000338, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::AreaNameDisplay' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, SpawnableArea) == 0x000340, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::SpawnableArea' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, DefaultSceneRoot) == 0x000348, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, AreaIndex) == 0x000350, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::AreaIndex' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, SpawnEffectTag) == 0x000358, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::SpawnEffectTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, OnEnemySpawned) == 0x000360, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::OnEnemySpawned' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, InitialPassiveAbilityDuration) == 0x000370, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::InitialPassiveAbilityDuration' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGamePvE_EnemySpawnVolume_C, DuringTheWorld) == 0x000374, "Member 'ABP_AJBInGamePvE_EnemySpawnVolume_C::DuringTheWorld' has a wrong offset!");

}


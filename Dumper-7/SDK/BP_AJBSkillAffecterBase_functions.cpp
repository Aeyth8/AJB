#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSkillAffecterBase

#include "Basic.hpp"

#include "BP_AJBSkillAffecterBase_classes.hpp"
#include "BP_AJBSkillAffecterBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ExecuteUbergraph_BP_AJBSkillAffecterBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::ExecuteUbergraph_BP_AJBSkillAffecterBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ExecuteUbergraph_BP_AJBSkillAffecterBase");

	Params::BP_AJBSkillAffecterBase_C_ExecuteUbergraph_BP_AJBSkillAffecterBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.CancelLocal
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::CancelLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "CancelLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ROS_Cancel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::ROS_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ROS_Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ReceiveTick");

	Params::BP_AJBSkillAffecterBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.StateEndServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::StateEndServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "StateEndServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.BeginStateClearingServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::BeginStateClearingServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "BeginStateClearingServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.BeginStateActiveServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::BeginStateActiveServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "BeginStateActiveServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.BeginStateReadyServer
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::BeginStateReadyServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "BeginStateReadyServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.MC_StateEnd
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::MC_StateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "MC_StateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.MC_BeginStateClearing
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::MC_BeginStateClearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "MC_BeginStateClearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.MC_BeginStateActive
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::MC_BeginStateActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "MC_BeginStateActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.MC_BeginStateReady
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   OwnerLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::MC_BeginStateReady(class AActor* Owner_0, const struct FVector& OwnerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "MC_BeginStateReady");

	Params::BP_AJBSkillAffecterBase_C_MC_BeginStateReady Parms{};

	Parms.Owner_0 = Owner_0;
	Parms.OwnerLocation = std::move(OwnerLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnStateEndOneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnStateEndOneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnStateEndOneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateClearingOneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnBeginStateClearingOneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateClearingOneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateActiveOneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnBeginStateActiveOneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateActiveOneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateReadyOneShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   OwnerLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::OnBeginStateReadyOneShot(class AActor* Owner_0, const struct FVector& OwnerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateReadyOneShot");

	Params::BP_AJBSkillAffecterBase_C_OnBeginStateReadyOneShot Parms{};

	Parms.Owner_0 = Owner_0;
	Parms.OwnerLocation = std::move(OwnerLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.StateTick
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::StateTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "StateTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.TickStateClearing
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::TickStateClearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "TickStateClearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.TickStateActive
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::TickStateActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "TickStateActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.TickStateReady
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::TickStateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "TickStateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnStateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnStateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateClearing
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnBeginStateClearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateClearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateActive
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnBeginStateActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnBeginStateReady
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnBeginStateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnBeginStateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBSkillAffecterBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "NotifyTheWorld");

	Params::BP_AJBSkillAffecterBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnRep_State
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnRep_State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::ChangeState(uint8 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ChangeState");

	Params::BP_AJBSkillAffecterBase_C_ChangeState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.CheckValidState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bValidState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBSkillAffecterBase_C::CheckValidState(bool* bValidState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "CheckValidState");

	Params::BP_AJBSkillAffecterBase_C_CheckValidState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bValidState != nullptr)
		*bValidState = Parms.bValidState;
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ShouldCancelOnReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bShouldCancel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBSkillAffecterBase_C::ShouldCancelOnReady(bool* bShouldCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ShouldCancelOnReady");

	Params::BP_AJBSkillAffecterBase_C_ShouldCancelOnReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldCancel != nullptr)
		*bShouldCancel = Parms.bShouldCancel;
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.GetLeftActiveTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::GetLeftActiveTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "GetLeftActiveTime");

	Params::BP_AJBSkillAffecterBase_C_GetLeftActiveTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ShouldCancelOnActive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bShouldCancel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBSkillAffecterBase_C::ShouldCancelOnActive(bool* bShouldCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ShouldCancelOnActive");

	Params::BP_AJBSkillAffecterBase_C_ShouldCancelOnActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldCancel != nullptr)
		*bShouldCancel = Parms.bShouldCancel;
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.CheckActiveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bActiveState                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBSkillAffecterBase_C::CheckActiveState(bool* bActiveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "CheckActiveState");

	Params::BP_AJBSkillAffecterBase_C_CheckActiveState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bActiveState != nullptr)
		*bActiveState = Parms.bActiveState;
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.ChangeStateCore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBSkillAffecterBase_C::ChangeStateCore(uint8 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "ChangeStateCore");

	Params::BP_AJBSkillAffecterBase_C_ChangeStateCore Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C.OnRep_StateCore
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBSkillAffecterBase_C::OnRep_StateCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillAffecterBase_C", "OnRep_StateCore");

	UObject::ProcessEvent(Func, nullptr);
}

}


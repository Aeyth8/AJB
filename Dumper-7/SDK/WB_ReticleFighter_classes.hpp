#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ReticleFighter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WB_ReticleBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ReticleFighter.WB_ReticleFighter_C
// 0x00C0 (0x0330 - 0x0270)
class UWB_ReticleFighter_C final : public UWB_ReticleBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_ReticleFighter_C;                // 0x0270(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       HitAnim;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       InRange;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_HITRoot;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Circle;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Dot;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_FullCircle;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Grade;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hit0;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hit1;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hit2;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hit3;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         Grades;                                            // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           DefaultGradeColor;                                 // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         Hits;                                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           DefaultHitColor;                                   // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHit;                                              // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDisplayTime;                                    // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         Circles;                                           // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_ReticleFighter(int32 EntryPoint);
	void Construct();
	void Update_ReticleColor(const struct FLinearColor& NewColor_Hits, const struct FLinearColor& NewColor_Other, bool* NewParam);
	void UpdateReticlePosition(const struct FVector2D& Position, bool bOutOfScreen);
	void OnHit(bool bHeadShot, bool bFInishBlow);
	void Update(float DeltaSeconds, class AAJBInGameCharacter* MyCharacter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ReticleFighter_C">();
	}
	static class UWB_ReticleFighter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ReticleFighter_C>();
	}
};
static_assert(alignof(UWB_ReticleFighter_C) == 0x000008, "Wrong alignment on UWB_ReticleFighter_C");
static_assert(sizeof(UWB_ReticleFighter_C) == 0x000330, "Wrong size on UWB_ReticleFighter_C");
static_assert(offsetof(UWB_ReticleFighter_C, UberGraphFrame_WB_ReticleFighter_C) == 0x000270, "Member 'UWB_ReticleFighter_C::UberGraphFrame_WB_ReticleFighter_C' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, HitAnim) == 0x000278, "Member 'UWB_ReticleFighter_C::HitAnim' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, InRange) == 0x000280, "Member 'UWB_ReticleFighter_C::InRange' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Canvas_HITRoot) == 0x000288, "Member 'UWB_ReticleFighter_C::Canvas_HITRoot' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Circle) == 0x000290, "Member 'UWB_ReticleFighter_C::Img_Circle' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Dot) == 0x000298, "Member 'UWB_ReticleFighter_C::Img_Dot' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_FullCircle) == 0x0002A0, "Member 'UWB_ReticleFighter_C::Img_FullCircle' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Grade) == 0x0002A8, "Member 'UWB_ReticleFighter_C::Img_Grade' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Hit0) == 0x0002B0, "Member 'UWB_ReticleFighter_C::Img_Hit0' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Hit1) == 0x0002B8, "Member 'UWB_ReticleFighter_C::Img_Hit1' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Hit2) == 0x0002C0, "Member 'UWB_ReticleFighter_C::Img_Hit2' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Img_Hit3) == 0x0002C8, "Member 'UWB_ReticleFighter_C::Img_Hit3' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Grades) == 0x0002D0, "Member 'UWB_ReticleFighter_C::Grades' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, DefaultGradeColor) == 0x0002E0, "Member 'UWB_ReticleFighter_C::DefaultGradeColor' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Hits) == 0x0002F0, "Member 'UWB_ReticleFighter_C::Hits' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, DefaultHitColor) == 0x000300, "Member 'UWB_ReticleFighter_C::DefaultHitColor' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, bHit) == 0x000310, "Member 'UWB_ReticleFighter_C::bHit' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, ElapsedTime) == 0x000314, "Member 'UWB_ReticleFighter_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, HitDisplayTime) == 0x000318, "Member 'UWB_ReticleFighter_C::HitDisplayTime' has a wrong offset!");
static_assert(offsetof(UWB_ReticleFighter_C, Circles) == 0x000320, "Member 'UWB_ReticleFighter_C::Circles' has a wrong offset!");

}


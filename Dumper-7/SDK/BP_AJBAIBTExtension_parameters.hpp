#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAIBTExtension

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBAIBTExtension.BP_AJBAIBTExtension_C.AddExecutionNotifier
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBAIBTExtension_C_AddExecutionNotifier final
{
public:
	const class UBTD_AJBExecutionNotifier_C*      NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIBTExtension_C_AddExecutionNotifier) == 0x000008, "Wrong alignment on BP_AJBAIBTExtension_C_AddExecutionNotifier");
static_assert(sizeof(BP_AJBAIBTExtension_C_AddExecutionNotifier) == 0x000010, "Wrong size on BP_AJBAIBTExtension_C_AddExecutionNotifier");
static_assert(offsetof(BP_AJBAIBTExtension_C_AddExecutionNotifier, NewItem) == 0x000000, "Member 'BP_AJBAIBTExtension_C_AddExecutionNotifier::NewItem' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_AddExecutionNotifier, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_AJBAIBTExtension_C_AddExecutionNotifier::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBAIBTExtension.BP_AJBAIBTExtension_C.GetExecutionNotifier
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBAIBTExtension_C_GetExecutionNotifier final
{
public:
	class UBTService_BlueprintBase*               Service;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTD_AJBExecutionNotifier_C*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTD_AJBExecutionNotifier_C*            Result;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTD_AJBExecutionNotifier_C*            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameParentBTNode_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIBTExtension_C_GetExecutionNotifier) == 0x000008, "Wrong alignment on BP_AJBAIBTExtension_C_GetExecutionNotifier");
static_assert(sizeof(BP_AJBAIBTExtension_C_GetExecutionNotifier) == 0x000040, "Wrong size on BP_AJBAIBTExtension_C_GetExecutionNotifier");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, Service) == 0x000000, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::Service' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, ReturnValue) == 0x000008, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, Result) == 0x000010, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIBTExtension_C_GetExecutionNotifier, CallFunc_IsSameParentBTNode_ReturnValue) == 0x00003A, "Member 'BP_AJBAIBTExtension_C_GetExecutionNotifier::CallFunc_IsSameParentBTNode_ReturnValue' has a wrong offset!");

}


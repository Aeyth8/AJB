#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_IngameGrowTree

#include "Basic.hpp"


namespace SDK::Params
{

// Function ABP_IngameGrowTree.ABP_IngameGrowTree_C.ExecuteUbergraph_ABP_IngameGrowTree
// 0x0030 (0x0030 - 0x0000)
struct ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBGrowTree_C*                      K2Node_DynamicCast_AsBP_AJBGrow_Tree;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAppliedCurveValue_Value;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree) == 0x000008, "Wrong alignment on ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree");
static_assert(sizeof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree) == 0x000030, "Wrong size on ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, EntryPoint) == 0x000000, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, K2Node_DynamicCast_AsBP_AJBGrow_Tree) == 0x000010, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::K2Node_DynamicCast_AsBP_AJBGrow_Tree' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, CallFunc_GetAppliedCurveValue_Value) == 0x00001C, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::CallFunc_GetAppliedCurveValue_Value' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree, K2Node_Event_DeltaTimeX) == 0x000028, "Member 'ABP_IngameGrowTree_C_ExecuteUbergraph_ABP_IngameGrowTree::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function ABP_IngameGrowTree.ABP_IngameGrowTree_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_IngameGrowTree_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_IngameGrowTree_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_IngameGrowTree_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_IngameGrowTree_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_IngameGrowTree_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_IngameGrowTree_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_IngameGrowTree_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}


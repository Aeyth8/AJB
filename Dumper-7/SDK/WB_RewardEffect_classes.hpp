#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RewardEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_RewardEffect.WB_RewardEffect_C
// 0x0058 (0x0318 - 0x02C0)
class UWB_RewardEffect_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear_1_2;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear_4;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear_3;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_CircleFlare1;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_CircleFlare2;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Flare;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Flash;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_GodRayFlare;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_SphereFlare;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_RewardEffect(int32 EntryPoint);
	void PlayRewardAnimation(int32 Rarity);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_RewardEffect_C">();
	}
	static class UWB_RewardEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_RewardEffect_C>();
	}
};
static_assert(alignof(UWB_RewardEffect_C) == 0x000008, "Wrong alignment on UWB_RewardEffect_C");
static_assert(sizeof(UWB_RewardEffect_C) == 0x000318, "Wrong size on UWB_RewardEffect_C");
static_assert(offsetof(UWB_RewardEffect_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_RewardEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, Appear_1_2) == 0x0002C8, "Member 'UWB_RewardEffect_C::Appear_1_2' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, Appear_4) == 0x0002D0, "Member 'UWB_RewardEffect_C::Appear_4' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, Appear_3) == 0x0002D8, "Member 'UWB_RewardEffect_C::Appear_3' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, Loop) == 0x0002E0, "Member 'UWB_RewardEffect_C::Loop' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_CircleFlare1) == 0x0002E8, "Member 'UWB_RewardEffect_C::AJBImage_CircleFlare1' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_CircleFlare2) == 0x0002F0, "Member 'UWB_RewardEffect_C::AJBImage_CircleFlare2' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_Flare) == 0x0002F8, "Member 'UWB_RewardEffect_C::AJBImage_Flare' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_Flash) == 0x000300, "Member 'UWB_RewardEffect_C::AJBImage_Flash' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_GodRayFlare) == 0x000308, "Member 'UWB_RewardEffect_C::AJBImage_GodRayFlare' has a wrong offset!");
static_assert(offsetof(UWB_RewardEffect_C, AJBImage_SphereFlare) == 0x000310, "Member 'UWB_RewardEffect_C::AJBImage_SphereFlare' has a wrong offset!");

}


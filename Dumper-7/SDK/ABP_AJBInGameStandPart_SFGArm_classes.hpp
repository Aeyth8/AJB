#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStandPart_SFGArm

#include "Basic.hpp"

#include "E_SFGArmType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStandPart_SFGArm.ABP_AJBInGameStandPart_SFGArm_C
// 0x0618 (0x0970 - 0x0358)
class UABP_AJBInGameStandPart_SFGArm_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_EA15D87E4524449A81D680815C1B4516; // 0x0368(0x0048)()
	struct FAnimNode_SplineIK                     AnimGraphNode_SplineIK_91E0A13E40501D3879771EA48B64C7C3; // 0x03B0(0x02B8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_017D9F9A413CD598DB61CFA450F323F1; // 0x0668(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2453D9934AFF616529831494BCD5EEE3; // 0x06B0(0x00B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12A031D947D3109D909E7598147510D8; // 0x0760(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_DE37A94A457DB1ACC76B02BC9FB1E362; // 0x07A8(0x0160)()
	class UBP_AJBMiddleRangeSkill_C*              MiddleRangeSkillComp;                              // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentLaunching;                                  // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BeforeLaunching;                                   // 0x0911(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationBlendAlpha;                               // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0918(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailFluctuationCoefficient;                        // 0x0924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        SplinePointOriginComponentLocations;               // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDebugView;                                        // 0x0938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     SplinePointComponentTransforms;                    // 0x0940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                SplinePointComponentLocationOffset;                // 0x0950(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SplinePointRotation;                               // 0x095C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SplinePointPitch_ArmR;                             // 0x0968(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFluctuationLength_cm_;                          // 0x096C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBInGameStandPart_SFGArm(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStandPart_SFGArm_AnimGraphNode_SplineIK_91E0A13E40501D3879771EA48B64C7C3();
	void IsStretching(bool* Result);
	void TryGetCloseRangeSkillComp(class UBP_AJBCloseRangeSkill_C** CloseRangeSkillComp);
	void IsLaunching(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStandPart_SFGArm_C">();
	}
	static class UABP_AJBInGameStandPart_SFGArm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStandPart_SFGArm_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStandPart_SFGArm_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStandPart_SFGArm_C");
static_assert(sizeof(UABP_AJBInGameStandPart_SFGArm_C) == 0x000970, "Wrong size on UABP_AJBInGameStandPart_SFGArm_C");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStandPart_SFGArm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_Root_EA15D87E4524449A81D680815C1B4516) == 0x000368, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_Root_EA15D87E4524449A81D680815C1B4516' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_SplineIK_91E0A13E40501D3879771EA48B64C7C3) == 0x0003B0, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_SplineIK_91E0A13E40501D3879771EA48B64C7C3' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_ComponentToLocalSpace_017D9F9A413CD598DB61CFA450F323F1) == 0x000668, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_ComponentToLocalSpace_017D9F9A413CD598DB61CFA450F323F1' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_SequencePlayer_2453D9934AFF616529831494BCD5EEE3) == 0x0006B0, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_SequencePlayer_2453D9934AFF616529831494BCD5EEE3' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_LocalToComponentSpace_12A031D947D3109D909E7598147510D8) == 0x000760, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_LocalToComponentSpace_12A031D947D3109D909E7598147510D8' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimGraphNode_ModifyBone_DE37A94A457DB1ACC76B02BC9FB1E362) == 0x0007A8, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimGraphNode_ModifyBone_DE37A94A457DB1ACC76B02BC9FB1E362' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, MiddleRangeSkillComp) == 0x000908, "Member 'UABP_AJBInGameStandPart_SFGArm_C::MiddleRangeSkillComp' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, CurrentLaunching) == 0x000910, "Member 'UABP_AJBInGameStandPart_SFGArm_C::CurrentLaunching' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, BeforeLaunching) == 0x000911, "Member 'UABP_AJBInGameStandPart_SFGArm_C::BeforeLaunching' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, AnimationBlendAlpha) == 0x000914, "Member 'UABP_AJBInGameStandPart_SFGArm_C::AnimationBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, TargetLocation) == 0x000918, "Member 'UABP_AJBInGameStandPart_SFGArm_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, TailFluctuationCoefficient) == 0x000924, "Member 'UABP_AJBInGameStandPart_SFGArm_C::TailFluctuationCoefficient' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, SplinePointOriginComponentLocations) == 0x000928, "Member 'UABP_AJBInGameStandPart_SFGArm_C::SplinePointOriginComponentLocations' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, bDebugView) == 0x000938, "Member 'UABP_AJBInGameStandPart_SFGArm_C::bDebugView' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, SplinePointComponentTransforms) == 0x000940, "Member 'UABP_AJBInGameStandPart_SFGArm_C::SplinePointComponentTransforms' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, SplinePointComponentLocationOffset) == 0x000950, "Member 'UABP_AJBInGameStandPart_SFGArm_C::SplinePointComponentLocationOffset' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, SplinePointRotation) == 0x00095C, "Member 'UABP_AJBInGameStandPart_SFGArm_C::SplinePointRotation' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, SplinePointPitch_ArmR) == 0x000968, "Member 'UABP_AJBInGameStandPart_SFGArm_C::SplinePointPitch_ArmR' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStandPart_SFGArm_C, MaxFluctuationLength_cm_) == 0x00096C, "Member 'UABP_AJBInGameStandPart_SFGArm_C::MaxFluctuationLength_cm_' has a wrong offset!");

}


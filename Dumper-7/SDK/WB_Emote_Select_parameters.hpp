#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Emote_Select

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Emote_Select.WB_Emote_Select_C.ExecuteUbergraph_WB_Emote_Select
// 0x0170 (0x0170 - 0x0000)
struct WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0044(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CharacterID;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_CustomEvent_LoadEmoteIds;                   // 0x0050(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Get_Item1;                          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0xF];                                       // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PreLoadEmoteHelper_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGamePlayerController_bIsValid;    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             CallFunc_GetAJBInGamePlayerController_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerController_bIsValid1;   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGamePlayerController*             CallFunc_GetAJBInGamePlayerController_ReturnValue1; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item2;                          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBImage*                              CallFunc_Array_Get_Item3;                          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UWB_EmoteTextLabel_C*>           K2Node_MakeArray_Array1;                           // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UAJBImage*>                      K2Node_MakeArray_Array2;                           // 0x0158(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select) == 0x000010, "Wrong alignment on WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select");
static_assert(sizeof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select) == 0x000170, "Wrong size on WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, EntryPoint) == 0x000000, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000040, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000044, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_CustomEvent_CharacterID) == 0x00004C, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_CustomEvent_CharacterID' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_CustomEvent_LoadEmoteIds) == 0x000050, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_CustomEvent_LoadEmoteIds' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000060, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_CustomEvent_Index) == 0x000064, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00006C, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetActiveWidgetIndex_ReturnValue1) == 0x000070, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetActiveWidgetIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000074, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Get_Item) == 0x000078, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, Temp_int_Array_Index_Variable) == 0x000080, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Get_Item1) == 0x000088, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetAJBInGamePlayerController_bIsValid) == 0x0000EC, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetAJBInGamePlayerController_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetAJBInGamePlayerController_ReturnValue) == 0x0000F0, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetAJBInGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_IsValid_ReturnValue1) == 0x0000F8, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetAJBInGamePlayerController_bIsValid1) == 0x0000F9, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetAJBInGamePlayerController_bIsValid1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetAJBInGamePlayerController_ReturnValue1) == 0x000100, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetAJBInGamePlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Get_Item2) == 0x000108, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Get_Item3) == 0x000110, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000120, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_Array_Add_ReturnValue) == 0x00012C, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000130, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000131, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000132, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000133, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_MakeArray_Array) == 0x000138, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_MakeArray_Array1) == 0x000148, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select, K2Node_MakeArray_Array2) == 0x000158, "Member 'WB_Emote_Select_C_ExecuteUbergraph_WB_Emote_Select::K2Node_MakeArray_Array2' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.FocusDirection
// 0x0004 (0x0004 - 0x0000)
struct WB_Emote_Select_C_FocusDirection final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Emote_Select_C_FocusDirection) == 0x000004, "Wrong alignment on WB_Emote_Select_C_FocusDirection");
static_assert(sizeof(WB_Emote_Select_C_FocusDirection) == 0x000004, "Wrong size on WB_Emote_Select_C_FocusDirection");
static_assert(offsetof(WB_Emote_Select_C_FocusDirection, Index_0) == 0x000000, "Member 'WB_Emote_Select_C_FocusDirection::Index_0' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.SetDebugPreloadEmoteHelper
// 0x0018 (0x0018 - 0x0000)
struct WB_Emote_Select_C_SetDebugPreloadEmoteHelper final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LoadEmoteIds;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WB_Emote_Select_C_SetDebugPreloadEmoteHelper) == 0x000008, "Wrong alignment on WB_Emote_Select_C_SetDebugPreloadEmoteHelper");
static_assert(sizeof(WB_Emote_Select_C_SetDebugPreloadEmoteHelper) == 0x000018, "Wrong size on WB_Emote_Select_C_SetDebugPreloadEmoteHelper");
static_assert(offsetof(WB_Emote_Select_C_SetDebugPreloadEmoteHelper, CharacterID) == 0x000000, "Member 'WB_Emote_Select_C_SetDebugPreloadEmoteHelper::CharacterID' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetDebugPreloadEmoteHelper, LoadEmoteIds) == 0x000008, "Member 'WB_Emote_Select_C_SetDebugPreloadEmoteHelper::LoadEmoteIds' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Emote_Select_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Emote_Select_C_Tick) == 0x000004, "Wrong alignment on WB_Emote_Select_C_Tick");
static_assert(sizeof(WB_Emote_Select_C_Tick) == 0x00003C, "Wrong size on WB_Emote_Select_C_Tick");
static_assert(offsetof(WB_Emote_Select_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Emote_Select_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Emote_Select_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.SetupIcon
// 0x0048 (0x0048 - 0x0000)
struct WB_Emote_Select_C_SetupIcon final
{
public:
	int32                                         CharacterIDLocal;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEmoteData>                     EmoteDataLocal;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Emote_Select_C_SetupIcon) == 0x000008, "Wrong alignment on WB_Emote_Select_C_SetupIcon");
static_assert(sizeof(WB_Emote_Select_C_SetupIcon) == 0x000048, "Wrong size on WB_Emote_Select_C_SetupIcon");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CharacterIDLocal) == 0x000000, "Member 'WB_Emote_Select_C_SetupIcon::CharacterIDLocal' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, EmoteDataLocal) == 0x000008, "Member 'WB_Emote_Select_C_SetupIcon::EmoteDataLocal' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, Temp_int_Variable) == 0x000018, "Member 'WB_Emote_Select_C_SetupIcon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, Temp_int_Variable1) == 0x000024, "Member 'WB_Emote_Select_C_SetupIcon::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000028, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_Add_IntInt_ReturnValue1) == 0x00002C, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_GetAJBGameInstance_bSuccess) == 0x000030, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000038, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIcon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'WB_Emote_Select_C_SetupIcon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.SetupIconFromIndexInternal
// 0x0170 (0x0170 - 0x0000)
struct WB_Emote_Select_C_SetupIconFromIndexInternal final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CharacterID;                                       // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEmoteData>                     Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UAJBPrimaryEmote*                       LEmoteAsset;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEmoteData                             LCurrent;                                          // 0x0020(0x0028)(Edit, BlueprintVisible)
	struct FEmoteData                             CallFunc_Array_Get_Item;                           // 0x0048(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_EmoteTextLabel_C*                   CallFunc_Array_Get_Item1;                          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item2;                          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBImage*                              CallFunc_Array_Get_Item3;                          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBImage*                              CallFunc_Array_Get_Item4;                          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue1;             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue3;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue1;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBAssetManager*                       CallFunc_Get_ReturnValue;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBPrimaryEmote*                       CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EmoteTextLabel_C*                   CallFunc_Array_Get_Item5;                          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBImage*                              CallFunc_Array_Get_Item6;                          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EmoteTextLabel_C*                   CallFunc_Array_Get_Item7;                          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item8;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Emote_Select_C_SetupIconFromIndexInternal) == 0x000008, "Wrong alignment on WB_Emote_Select_C_SetupIconFromIndexInternal");
static_assert(sizeof(WB_Emote_Select_C_SetupIconFromIndexInternal) == 0x000170, "Wrong size on WB_Emote_Select_C_SetupIconFromIndexInternal");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Index_0) == 0x000000, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Index_0' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CharacterID) == 0x000004, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CharacterID' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Array) == 0x000008, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Array' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, LEmoteAsset) == 0x000018, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::LEmoteAsset' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, LCurrent) == 0x000020, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::LCurrent' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_IsValid_ReturnValue1) == 0x000071, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, K2Node_DynamicCast_AsTexture_2D) == 0x000078, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000081, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000082, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x000083, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_BooleanOR_ReturnValue) == 0x000084, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_byte_Variable) == 0x000085, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item1) == 0x000088, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_byte_Variable1) == 0x000090, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_bool_Variable) == 0x000091, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item2) == 0x000092, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item3) == 0x000098, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_IsValid_ReturnValue2) == 0x0000A0, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, K2Node_Select_Default) == 0x0000A1, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item4) == 0x0000A8, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_bool_Variable1) == 0x0000B0, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_BuildString_Int_ReturnValue) == 0x0000B8, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_GetObjectName_ReturnValue) == 0x0000C8, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000D8, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_BuildString_Int_ReturnValue1) == 0x0000F0, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_BuildString_Int_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_NotEqual_ByteByte_ReturnValue3) == 0x000100, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_NotEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_GetObjectName_ReturnValue1) == 0x000108, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Concat_StrStr_ReturnValue1) == 0x000118, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Conv_ByteToInt_ReturnValue1) == 0x000128, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Conv_ByteToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Get_ReturnValue) == 0x000130, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue) == 0x000138, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Len_ReturnValue) == 0x000140, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000144, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_byte_Variable2) == 0x000145, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_BooleanAND_ReturnValue) == 0x000146, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, Temp_byte_Variable3) == 0x000147, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item5) == 0x000148, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, K2Node_Select1_Default) == 0x000150, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item6) == 0x000158, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item7) == 0x000160, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_SetupIconFromIndexInternal, CallFunc_Array_Get_Item8) == 0x000168, "Member 'WB_Emote_Select_C_SetupIconFromIndexInternal::CallFunc_Array_Get_Item8' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Emote_Select_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_Emote_Select_C_OnInputTurnRate");
static_assert(sizeof(WB_Emote_Select_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_Emote_Select_C_OnInputTurnRate");
static_assert(offsetof(WB_Emote_Select_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_Emote_Select_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_Emote_Select_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedUp");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedUp");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedTouch");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedTouch");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedRight");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedRight");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedLeft");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedLeft");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedDown");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedDown");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedDecide");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedDecide");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedCancel");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedCancel");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedUp");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedUp");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_Emote_Select_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_Emote_Select_C_OnInputPressedTouch");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_Emote_Select_C_OnInputPressedTouch");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_Emote_Select_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_Emote_Select_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedRight");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedRight");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedLeft");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedLeft");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedDown");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedDown");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedDecide");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedDecide");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedCancel");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedCancel");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_Emote_Select_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_Emote_Select_C_OnInputMoveRight");
static_assert(sizeof(WB_Emote_Select_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_Emote_Select_C_OnInputMoveRight");
static_assert(offsetof(WB_Emote_Select_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_Emote_Select_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_Emote_Select_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_Emote_Select_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_Emote_Select_C_OnInputMoveForward");
static_assert(sizeof(WB_Emote_Select_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_Emote_Select_C_OnInputMoveForward");
static_assert(offsetof(WB_Emote_Select_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_Emote_Select_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_Emote_Select_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Emote_Select_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_Emote_Select_C_OnInputLookupRate");
static_assert(sizeof(WB_Emote_Select_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_Emote_Select_C_OnInputLookupRate");
static_assert(offsetof(WB_Emote_Select_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_Emote_Select_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Emote_Select_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_Emote_Select_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_IsModeless) == 0x000001, "Wrong alignment on WB_Emote_Select_C_IsModeless");
static_assert(sizeof(WB_Emote_Select_C_IsModeless) == 0x000001, "Wrong size on WB_Emote_Select_C_IsModeless");
static_assert(offsetof(WB_Emote_Select_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedR2");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedR2");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedR1");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedR1");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedL2");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedL2");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedL1");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedL1");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedR2");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedR2");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedR1");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedR1");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedL2");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedL2");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedL1");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedL1");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputReleasedL3");
static_assert(sizeof(WB_Emote_Select_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputReleasedL3");
static_assert(offsetof(WB_Emote_Select_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_Emote_Select.WB_Emote_Select_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Emote_Select_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Emote_Select_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_Emote_Select_C_OnInputPressedL3");
static_assert(sizeof(WB_Emote_Select_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_Emote_Select_C_OnInputPressedL3");
static_assert(offsetof(WB_Emote_Select_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_Emote_Select_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


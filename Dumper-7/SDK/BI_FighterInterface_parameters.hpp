#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_FighterInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BI_FighterInterface.BI_FighterInterface_C.GetAttackLocation
// 0x0018 (0x0018 - 0x0000)
struct BI_FighterInterface_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_FighterInterface_C_GetAttackLocation) == 0x000004, "Wrong alignment on BI_FighterInterface_C_GetAttackLocation");
static_assert(sizeof(BI_FighterInterface_C_GetAttackLocation) == 0x000018, "Wrong size on BI_FighterInterface_C_GetAttackLocation");
static_assert(offsetof(BI_FighterInterface_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BI_FighterInterface_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BI_FighterInterface_C_GetAttackLocation, Location) == 0x00000C, "Member 'BI_FighterInterface_C_GetAttackLocation::Location' has a wrong offset!");

// Function BI_FighterInterface.BI_FighterInterface_C.GetAttackCollisionRadius
// 0x0008 (0x0008 - 0x0000)
struct BI_FighterInterface_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_FighterInterface_C_GetAttackCollisionRadius) == 0x000004, "Wrong alignment on BI_FighterInterface_C_GetAttackCollisionRadius");
static_assert(sizeof(BI_FighterInterface_C_GetAttackCollisionRadius) == 0x000008, "Wrong size on BI_FighterInterface_C_GetAttackCollisionRadius");
static_assert(offsetof(BI_FighterInterface_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BI_FighterInterface_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BI_FighterInterface_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BI_FighterInterface_C_GetAttackCollisionRadius::Radius' has a wrong offset!");

// Function BI_FighterInterface.BI_FighterInterface_C.GetAttackRange
// 0x0008 (0x0008 - 0x0000)
struct BI_FighterInterface_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_FighterInterface_C_GetAttackRange) == 0x000004, "Wrong alignment on BI_FighterInterface_C_GetAttackRange");
static_assert(sizeof(BI_FighterInterface_C_GetAttackRange) == 0x000008, "Wrong size on BI_FighterInterface_C_GetAttackRange");
static_assert(offsetof(BI_FighterInterface_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BI_FighterInterface_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BI_FighterInterface_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BI_FighterInterface_C_GetAttackRange::AttackRange' has a wrong offset!");

// Function BI_FighterInterface.BI_FighterInterface_C.GetStandAttackOffset
// 0x0010 (0x0010 - 0x0000)
struct BI_FighterInterface_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_FighterInterface_C_GetStandAttackOffset) == 0x000004, "Wrong alignment on BI_FighterInterface_C_GetStandAttackOffset");
static_assert(sizeof(BI_FighterInterface_C_GetStandAttackOffset) == 0x000010, "Wrong size on BI_FighterInterface_C_GetStandAttackOffset");
static_assert(offsetof(BI_FighterInterface_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BI_FighterInterface_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BI_FighterInterface_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BI_FighterInterface_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");

}


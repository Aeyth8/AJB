#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRobSdSkill

#include "Basic.hpp"

#include "BP_AJBRobSdSkill_classes.hpp"
#include "BP_AJBRobSdSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.ExecuteUbergraph_BP_AJBRobSdSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::ExecuteUbergraph_BP_AJBRobSdSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "ExecuteUbergraph_BP_AJBRobSdSkill");

	Params::BP_AJBRobSdSkill_C_ExecuteUbergraph_BP_AJBRobSdSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.TrySpaekHitResultVoice
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              VoiceTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::TrySpaekHitResultVoice(const struct FGameplayTag& VoiceTag, class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "TrySpaekHitResultVoice");

	Params::BP_AJBRobSdSkill_C_TrySpaekHitResultVoice Parms{};

	Parms.VoiceTag = std::move(VoiceTag);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.RequestFailedEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::RequestFailedEffects(class USceneComponent* AttachToComponent, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "RequestFailedEffects");

	Params::BP_AJBRobSdSkill_C_RequestFailedEffects Parms{};

	Parms.AttachToComponent = AttachToComponent;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.SpeakRushHitVoice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHitCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobSdSkill_C::SpeakRushHitVoice(bool bHitCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "SpeakRushHitVoice");

	Params::BP_AJBRobSdSkill_C_SpeakRushHitVoice Parms{};

	Parms.bHitCharacter = bHitCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.HitWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobSdSkill_C::HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "HitWait");

	Params::BP_AJBRobSdSkill_C_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.SpeakRushVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobSdSkill_C::SpeakRushVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "SpeakRushVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.CheckFailedTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bFailedTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobSdSkill_C::CheckFailedTarget(class AActor* HitActor, bool* bFailedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "CheckFailedTarget");

	Params::BP_AJBRobSdSkill_C_CheckFailedTarget Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bFailedTarget != nullptr)
		*bFailedTarget = Parms.bFailedTarget;
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.SnapPostProcess
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   BeforeLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         AfterLocation                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::SnapPostProcess(const struct FVector& BeforeLocation, class AActor* HitActor, struct FVector* AfterLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "SnapPostProcess");

	Params::BP_AJBRobSdSkill_C_SnapPostProcess Parms{};

	Parms.BeforeLocation = std::move(BeforeLocation);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AfterLocation != nullptr)
		*AfterLocation = std::move(Parms.AfterLocation);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.FacePostProcess
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FRotator&                  BeforeRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        AfterRotation                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBRobSdSkill_C::FacePostProcess(const struct FRotator& BeforeRotation, class AActor* HitActor, struct FRotator* AfterRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "FacePostProcess");

	Params::BP_AJBRobSdSkill_C_FacePostProcess Parms{};

	Parms.BeforeRotation = std::move(BeforeRotation);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AfterRotation != nullptr)
		*AfterRotation = std::move(Parms.AfterRotation);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.TimeExtension_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::TimeExtension_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "TimeExtension_Server");

	Params::BP_AJBRobSdSkill_C_TimeExtension_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobSdSkill.BP_AJBRobSdSkill_C.TimeRewind_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobSdSkill_C::TimeRewind_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobSdSkill_C", "TimeRewind_Server");

	Params::BP_AJBRobSdSkill_C_TimeRewind_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}


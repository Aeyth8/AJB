#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Fade

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Fade.WB_Fade_C.ExecuteUbergraph_WB_Fade
// 0x00A0 (0x00A0 - 0x0000)
struct WB_Fade_C_ExecuteUbergraph_WB_Fade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBFadeType                                  Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBFadeType                                  Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBFadeType                                  Temp_byte_Variable2;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBFadeType                                  Temp_byte_Variable3;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time1;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUD_bSuccess;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUD_AsAJBHUDBase;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHUD_bSuccess1;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUD_AsAJBHUDBase1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUD_bSuccess2;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUD_AsAJBHUDBase2;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBFadeType                                  K2Node_Select_Default;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBHUD_bSuccess3;                      // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            CallFunc_GetAJBHUD_AsAJBHUDBase3;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBFadeType                                  K2Node_Select1_Default;                            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Fade_C_ExecuteUbergraph_WB_Fade) == 0x000008, "Wrong alignment on WB_Fade_C_ExecuteUbergraph_WB_Fade");
static_assert(sizeof(WB_Fade_C_ExecuteUbergraph_WB_Fade) == 0x0000A0, "Wrong size on WB_Fade_C_ExecuteUbergraph_WB_Fade");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, EntryPoint) == 0x000000, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_bool_Variable) == 0x000004, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_byte_Variable) == 0x000005, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_byte_Variable1) == 0x000006, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_bool_Variable1) == 0x000007, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_byte_Variable2) == 0x000008, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, Temp_byte_Variable3) == 0x000009, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_CustomEvent_Time1) == 0x00000C, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_CustomEvent_Time1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_Event_MyGeometry) == 0x000010, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_Event_InDeltaTime) == 0x000048, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_CustomEvent_Time) == 0x00004C, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_FMin_ReturnValue) == 0x000054, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_bSuccess) == 0x00005C, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_AsAJBHUDBase) == 0x000060, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_bSuccess1) == 0x000069, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_AsAJBHUDBase1) == 0x000070, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_AsAJBHUDBase1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_bSuccess2) == 0x000078, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_AsAJBHUDBase2) == 0x000080, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_AsAJBHUDBase2' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_Not_PreBool_ReturnValue1) == 0x000089, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_Select_Default) == 0x00008A, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_bSuccess3) == 0x00008B, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_bSuccess3' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GetAJBHUD_AsAJBHUDBase3) == 0x000090, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GetAJBHUD_AsAJBHUDBase3' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000098, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, K2Node_Select1_Default) == 0x000099, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00009A, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x00009B, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_ExecuteUbergraph_WB_Fade, CallFunc_BooleanOR_ReturnValue) == 0x00009C, "Member 'WB_Fade_C_ExecuteUbergraph_WB_Fade::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.FadeIn
// 0x0004 (0x0004 - 0x0000)
struct WB_Fade_C_FadeIn final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Fade_C_FadeIn) == 0x000004, "Wrong alignment on WB_Fade_C_FadeIn");
static_assert(sizeof(WB_Fade_C_FadeIn) == 0x000004, "Wrong size on WB_Fade_C_FadeIn");
static_assert(offsetof(WB_Fade_C_FadeIn, Time) == 0x000000, "Member 'WB_Fade_C_FadeIn::Time' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Fade_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Fade_C_Tick) == 0x000004, "Wrong alignment on WB_Fade_C_Tick");
static_assert(sizeof(WB_Fade_C_Tick) == 0x00003C, "Wrong size on WB_Fade_C_Tick");
static_assert(offsetof(WB_Fade_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Fade_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Fade_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.FadeOut
// 0x0004 (0x0004 - 0x0000)
struct WB_Fade_C_FadeOut final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Fade_C_FadeOut) == 0x000004, "Wrong alignment on WB_Fade_C_FadeOut");
static_assert(sizeof(WB_Fade_C_FadeOut) == 0x000004, "Wrong size on WB_Fade_C_FadeOut");
static_assert(offsetof(WB_Fade_C_FadeOut, Time) == 0x000000, "Member 'WB_Fade_C_FadeOut::Time' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.UpdateColor
// 0x0020 (0x0020 - 0x0000)
struct WB_Fade_C_UpdateColor final
{
public:
	float                                         CallFunc_BreakColor_R;                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Fade_C_UpdateColor) == 0x000004, "Wrong alignment on WB_Fade_C_UpdateColor");
static_assert(sizeof(WB_Fade_C_UpdateColor) == 0x000020, "Wrong size on WB_Fade_C_UpdateColor");
static_assert(offsetof(WB_Fade_C_UpdateColor, CallFunc_BreakColor_R) == 0x000000, "Member 'WB_Fade_C_UpdateColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_UpdateColor, CallFunc_BreakColor_G) == 0x000004, "Member 'WB_Fade_C_UpdateColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_UpdateColor, CallFunc_BreakColor_B) == 0x000008, "Member 'WB_Fade_C_UpdateColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_UpdateColor, CallFunc_BreakColor_A) == 0x00000C, "Member 'WB_Fade_C_UpdateColor::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_UpdateColor, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'WB_Fade_C_UpdateColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.GetAJBHUD
// 0x0030 (0x0030 - 0x0000)
struct WB_Fade_C_GetAJBHUD final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            AsAJBHUDBase;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBHUDBase*                            K2Node_DynamicCast_AsAJBHUDBase;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Fade_C_GetAJBHUD) == 0x000008, "Wrong alignment on WB_Fade_C_GetAJBHUD");
static_assert(sizeof(WB_Fade_C_GetAJBHUD) == 0x000030, "Wrong size on WB_Fade_C_GetAJBHUD");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, bSuccess) == 0x000000, "Member 'WB_Fade_C_GetAJBHUD::bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, AsAJBHUDBase) == 0x000008, "Member 'WB_Fade_C_GetAJBHUD::AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WB_Fade_C_GetAJBHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'WB_Fade_C_GetAJBHUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, K2Node_DynamicCast_AsAJBHUDBase) == 0x000020, "Member 'WB_Fade_C_GetAJBHUD::K2Node_DynamicCast_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_Fade_C_GetAJBHUD, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_Fade_C_GetAJBHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_Fade.WB_Fade_C.GetCurrentFadeAlpha
// 0x0004 (0x0004 - 0x0000)
struct WB_Fade_C_GetCurrentFadeAlpha final
{
public:
	float                                         Alpha_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Fade_C_GetCurrentFadeAlpha) == 0x000004, "Wrong alignment on WB_Fade_C_GetCurrentFadeAlpha");
static_assert(sizeof(WB_Fade_C_GetCurrentFadeAlpha) == 0x000004, "Wrong size on WB_Fade_C_GetCurrentFadeAlpha");
static_assert(offsetof(WB_Fade_C_GetCurrentFadeAlpha, Alpha_0) == 0x000000, "Member 'WB_Fade_C_GetCurrentFadeAlpha::Alpha_0' has a wrong offset!");

}


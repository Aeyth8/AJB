#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBInGameCameraAccessor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BI_AJBInGameCameraAccessor.BI_AJBInGameCameraAccessor_C.GetCameraLocation
// 0x000C (0x000C - 0x0000)
struct BI_AJBInGameCameraAccessor_C_GetCameraLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBInGameCameraAccessor_C_GetCameraLocation) == 0x000004, "Wrong alignment on BI_AJBInGameCameraAccessor_C_GetCameraLocation");
static_assert(sizeof(BI_AJBInGameCameraAccessor_C_GetCameraLocation) == 0x00000C, "Wrong size on BI_AJBInGameCameraAccessor_C_GetCameraLocation");
static_assert(offsetof(BI_AJBInGameCameraAccessor_C_GetCameraLocation, ReturnValue) == 0x000000, "Member 'BI_AJBInGameCameraAccessor_C_GetCameraLocation::ReturnValue' has a wrong offset!");

// Function BI_AJBInGameCameraAccessor.BI_AJBInGameCameraAccessor_C.GetCameraForwardVector
// 0x000C (0x000C - 0x0000)
struct BI_AJBInGameCameraAccessor_C_GetCameraForwardVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBInGameCameraAccessor_C_GetCameraForwardVector) == 0x000004, "Wrong alignment on BI_AJBInGameCameraAccessor_C_GetCameraForwardVector");
static_assert(sizeof(BI_AJBInGameCameraAccessor_C_GetCameraForwardVector) == 0x00000C, "Wrong size on BI_AJBInGameCameraAccessor_C_GetCameraForwardVector");
static_assert(offsetof(BI_AJBInGameCameraAccessor_C_GetCameraForwardVector, ReturnValue) == 0x000000, "Member 'BI_AJBInGameCameraAccessor_C_GetCameraForwardVector::ReturnValue' has a wrong offset!");

// Function BI_AJBInGameCameraAccessor.BI_AJBInGameCameraAccessor_C.GetCameraInfo
// 0x001C (0x001C - 0x0000)
struct BI_AJBInGameCameraAccessor_C_GetCameraInfo final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                         FOV;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBInGameCameraAccessor_C_GetCameraInfo) == 0x000004, "Wrong alignment on BI_AJBInGameCameraAccessor_C_GetCameraInfo");
static_assert(sizeof(BI_AJBInGameCameraAccessor_C_GetCameraInfo) == 0x00001C, "Wrong size on BI_AJBInGameCameraAccessor_C_GetCameraInfo");
static_assert(offsetof(BI_AJBInGameCameraAccessor_C_GetCameraInfo, Location) == 0x000000, "Member 'BI_AJBInGameCameraAccessor_C_GetCameraInfo::Location' has a wrong offset!");
static_assert(offsetof(BI_AJBInGameCameraAccessor_C_GetCameraInfo, Rotation) == 0x00000C, "Member 'BI_AJBInGameCameraAccessor_C_GetCameraInfo::Rotation' has a wrong offset!");
static_assert(offsetof(BI_AJBInGameCameraAccessor_C_GetCameraInfo, FOV) == 0x000018, "Member 'BI_AJBInGameCameraAccessor_C_GetCameraInfo::FOV' has a wrong offset!");

}


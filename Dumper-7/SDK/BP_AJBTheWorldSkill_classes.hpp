#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTheWorldSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTheWorldSkill.BP_AJBTheWorldSkill_C
// 0x0030 (0x0218 - 0x01E8)
class UBP_AJBTheWorldSkill_C : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBTheWorldSkill_C;              // 0x01E8(0x0008)(Transient, DuplicateTransient)
	class UAnimMontage*                           PlayAnimation;                                     // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultStopTime;                                   // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rep_TotalStopTime;                                 // 0x01FC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBTheWorldAffecter_C*              ValidAffecter;                                     // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AffecterClass;                                     // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyTime;                                         // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToRevive;                                      // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBTheWorldSkill(int32 EntryPoint);
	void EndState();
	void StateBegin_Action();
	void StateTick_Action();
	void StateTick();
	void AddStopTime(float Seconds);
	void TryGetValidAffecter(class ABP_AJBTheWorldAffecter_C** Affecter);
	void SubStopTime(float Seconds);
	void ReceiveBeginPlay();
	void OnCancel();
	void OnActive();
	void ReceiveTick(float DeltaSeconds);
	void OnInactive();
	void OnRelatedCharacterBecomeLastSurvivor();
	void TimeExtension_Server(float Value);
	void TimeRewind_Server(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTheWorldSkill_C">();
	}
	static class UBP_AJBTheWorldSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBTheWorldSkill_C>();
	}
};
static_assert(alignof(UBP_AJBTheWorldSkill_C) == 0x000008, "Wrong alignment on UBP_AJBTheWorldSkill_C");
static_assert(sizeof(UBP_AJBTheWorldSkill_C) == 0x000218, "Wrong size on UBP_AJBTheWorldSkill_C");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, UberGraphFrame_BP_AJBTheWorldSkill_C) == 0x0001E8, "Member 'UBP_AJBTheWorldSkill_C::UberGraphFrame_BP_AJBTheWorldSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, PlayAnimation) == 0x0001F0, "Member 'UBP_AJBTheWorldSkill_C::PlayAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, DefaultStopTime) == 0x0001F8, "Member 'UBP_AJBTheWorldSkill_C::DefaultStopTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, Rep_TotalStopTime) == 0x0001FC, "Member 'UBP_AJBTheWorldSkill_C::Rep_TotalStopTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, ValidAffecter) == 0x000200, "Member 'UBP_AJBTheWorldSkill_C::ValidAffecter' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, AffecterClass) == 0x000208, "Member 'UBP_AJBTheWorldSkill_C::AffecterClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, ReadyTime) == 0x000210, "Member 'UBP_AJBTheWorldSkill_C::ReadyTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTheWorldSkill_C, TimeToRevive) == 0x000214, "Member 'UBP_AJBTheWorldSkill_C::TimeToRevive' has a wrong offset!");

}


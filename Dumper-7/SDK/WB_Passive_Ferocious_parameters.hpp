#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Passive_Ferocious

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.ExecuteUbergraph_WB_Passive_Ferocious
// 0x00A8 (0x00A8 - 0x0000)
struct WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_GetPassiveSkill_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAJBViewportWidgetOfClass_bSuccess;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_InGameMain_C*                       CallFunc_FindAJBViewportWidgetOfClass_OutWidget;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBFerocious_C*                     K2Node_DynamicCast_AsBP_AJBFerocious;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindAJBViewportWidgetOfClass_bSuccess1;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_InGameMain_C*                       CallFunc_FindAJBViewportWidgetOfClass_OutWidget1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_SkillPartsTimer_C*                  CallFunc_RegisterSkillTimer_ReturValue;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_GetPassiveSkill_ReturnValue1;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0068(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime1;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious) == 0x000008, "Wrong alignment on WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious");
static_assert(sizeof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious) == 0x0000A8, "Wrong size on WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, EntryPoint) == 0x000000, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_GetPassiveSkill_ReturnValue) == 0x000008, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_GetPassiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_FindAJBViewportWidgetOfClass_bSuccess) == 0x000010, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_FindAJBViewportWidgetOfClass_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_FindAJBViewportWidgetOfClass_OutWidget) == 0x000018, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_FindAJBViewportWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, K2Node_DynamicCast_AsBP_AJBFerocious) == 0x000020, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::K2Node_DynamicCast_AsBP_AJBFerocious' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_FindAJBViewportWidgetOfClass_bSuccess1) == 0x000029, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_FindAJBViewportWidgetOfClass_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_FindAJBViewportWidgetOfClass_OutWidget1) == 0x000030, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_FindAJBViewportWidgetOfClass_OutWidget1' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_RegisterSkillTimer_ReturValue) == 0x000038, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_RegisterSkillTimer_ReturValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_GetAJBGameInstance_bSuccess) == 0x000040, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000048, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, K2Node_Event_InDeltaTime) == 0x000050, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_IsPlayingReplay_ReturnValue) == 0x000054, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_GetPassiveSkill_ReturnValue1) == 0x000058, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_GetPassiveSkill_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_Not_PreBool_ReturnValue1) == 0x000063, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_IsVisible_ReturnValue) == 0x000065, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_Not_PreBool_ReturnValue2) == 0x000066, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, K2Node_Event_MyGeometry) == 0x000068, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, K2Node_Event_InDeltaTime1) == 0x0000A0, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::K2Node_Event_InDeltaTime1' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_BooleanOR_ReturnValue) == 0x0000A4, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious, CallFunc_IsValid_ReturnValue1) == 0x0000A5, "Member 'WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Passive_Ferocious_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Passive_Ferocious_C_Tick) == 0x000004, "Wrong alignment on WB_Passive_Ferocious_C_Tick");
static_assert(sizeof(WB_Passive_Ferocious_C_Tick) == 0x00003C, "Wrong size on WB_Passive_Ferocious_C_Tick");
static_assert(offsetof(WB_Passive_Ferocious_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Passive_Ferocious_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Passive_Ferocious_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Passive_Ferocious_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.OnOutsideComponentUpdate
// 0x0004 (0x0004 - 0x0000)
struct WB_Passive_Ferocious_C_OnOutsideComponentUpdate final
{
public:
	float                                         InDeltaTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Passive_Ferocious_C_OnOutsideComponentUpdate) == 0x000004, "Wrong alignment on WB_Passive_Ferocious_C_OnOutsideComponentUpdate");
static_assert(sizeof(WB_Passive_Ferocious_C_OnOutsideComponentUpdate) == 0x000004, "Wrong size on WB_Passive_Ferocious_C_OnOutsideComponentUpdate");
static_assert(offsetof(WB_Passive_Ferocious_C_OnOutsideComponentUpdate, InDeltaTime) == 0x000000, "Member 'WB_Passive_Ferocious_C_OnOutsideComponentUpdate::InDeltaTime' has a wrong offset!");

}


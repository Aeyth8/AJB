#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBStandAccompany

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBStandAccompany.BTS_AJBStandAccompany_C
// 0x0018 (0x00B0 - 0x0098)
class UBTS_AJBStandAccompany_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	bool                                          bInitialized;                                      // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBStandAccompany(int32 EntryPoint);
	void OnExecutionFinish(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult);
	void OnExecutionStart(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBStandAccompany_C">();
	}
	static class UBTS_AJBStandAccompany_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBStandAccompany_C>();
	}
};
static_assert(alignof(UBTS_AJBStandAccompany_C) == 0x000008, "Wrong alignment on UBTS_AJBStandAccompany_C");
static_assert(sizeof(UBTS_AJBStandAccompany_C) == 0x0000B0, "Wrong size on UBTS_AJBStandAccompany_C");
static_assert(offsetof(UBTS_AJBStandAccompany_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBStandAccompany_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBStandAccompany_C, bInitialized) == 0x0000A0, "Member 'UBTS_AJBStandAccompany_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UBTS_AJBStandAccompany_C, AIController) == 0x0000A8, "Member 'UBTS_AJBStandAccompany_C::AIController' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCollectMd

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_CollectMdTargetInfo_structs.hpp"
#include "BP_AJBLongPressInteract_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBCollectMd.BP_AJBCollectMd_C
// 0x0040 (0x0260 - 0x0220)
class UBP_AJBCollectMd_C final : public UBP_AJBLongPressInteract_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBCollectMd_C;                  // 0x0220(0x0008)(Transient, DuplicateTransient)
	TArray<struct FST_CollectMdTargetInfo>        TargetInfoList;                                    // 0x0228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FST_CollectMdTargetInfo>        CollectInfoList;                                   // 0x0238(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FST_CollectMdTargetInfo>        PrevCollectInfoList;                               // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CollectedDiscNumMax;                               // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCannotCollectOnOtnerCollecting;                   // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugShowCollectMdInfo;                           // 0x025D(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseEmphasizeActorOther;                           // 0x025E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFixed11683;                                       // 0x025F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBCollectMd(int32 EntryPoint);
	void ROC_Rewind(class ABP_AJBInGameCharacter_C* TargetCharacterBP, int32 RewindMatchingPlayerIndex);
	void ROS_DebugShowInfo(bool bEnable);
	void ROC_Cancel();
	void OnLongPressInteractBegan(class AActor* InteractActor_0);
	void OnSetViewTargetToNewSpectator_Local();
	void ResetKeepServer();
	void MC_Reset();
	void ResetServer();
	void OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag);
	void ROC_SendEffectiveCount(int32 EffectiveCount);
	void OnBecomeLastSurvivor(bool bBitesTheDust);
	void OnCharacterDead(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser);
	void MC_MDKeepChanged(int32 WBIndex, bool bKeep);
	void ROS_MDKeepChanged(int32 WBIndex, bool bKeep);
	void OnMDKeepChanged(int32 WBIndex, bool bKeep);
	void OnLongPressInteractEnded(bool bSuccess, bool bForceCancel, class AActor* InteractActor_0, bool bFlag01);
	void PlayLongInteractSE();
	void UpdateErrorTypeUI(uint8 ErrorType);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void MC_CollectMd(const TArray<struct FST_CollectMdTargetInfo>& TargetList, const TArray<struct FST_CollectMdTargetInfo>& PrevTargetList, int32 WBIndex, EAJBSkillType SkillType_0);
	void CollectMdServer(EAJBSkillType SkillType_0, const struct FST_CollectMdTargetInfo& TargetInfo);
	void TrySpawnCollectMdEmphasizeActor();
	void BeginInteract(bool* bSuccess);
	void GetPriority(int32* Priority);
	void GetText(bool* bSuccess, class FText* Text);
	void CheckInteractable(class ABP_AJBInGameCharacter_C* OperatorCharacter, class AActor* TargetActor, float BaseTraceLength, bool* bInteractable);
	void SelectMd(bool* bShouldUpdate, int32* WBIndex);
	void CheckKeepNum(int32* KeepNum);
	void CheckKeepMax(bool* bKeepMax);
	void CheckCollectNum(int32* CollectNum);
	void GetCollectLimit(int32* CollectLimit);
	void UpdateTargetInfoKeep(int32 WBIndex, bool bKeep);
	void PossibleMove(TArray<struct FST_CollectMdTargetInfo>& InCollectInfoList, int32 Index_0, bool* bPossibleMove);
	void PossibleMoveKeepCheck(TArray<struct FST_CollectMdTargetInfo>& InCollectInfoList, int32 Index_0, bool* bPossibleMove);
	void UpdateCollectedDiscNumMax();
	void UpdateKeepInfo(int32 WBIndex, bool bKeep);
	void RegisterCollectedCharacterBP(class ABP_AJBInGameCharacter_C* CharacterBP);
	void EnableCollectingCharacterBP(class ABP_AJBInGameCharacter_C* CharacterBP, bool bEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBCollectMd_C">();
	}
	static class UBP_AJBCollectMd_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBCollectMd_C>();
	}
};
static_assert(alignof(UBP_AJBCollectMd_C) == 0x000008, "Wrong alignment on UBP_AJBCollectMd_C");
static_assert(sizeof(UBP_AJBCollectMd_C) == 0x000260, "Wrong size on UBP_AJBCollectMd_C");
static_assert(offsetof(UBP_AJBCollectMd_C, UberGraphFrame_BP_AJBCollectMd_C) == 0x000220, "Member 'UBP_AJBCollectMd_C::UberGraphFrame_BP_AJBCollectMd_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, TargetInfoList) == 0x000228, "Member 'UBP_AJBCollectMd_C::TargetInfoList' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, CollectInfoList) == 0x000238, "Member 'UBP_AJBCollectMd_C::CollectInfoList' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, PrevCollectInfoList) == 0x000248, "Member 'UBP_AJBCollectMd_C::PrevCollectInfoList' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, CollectedDiscNumMax) == 0x000258, "Member 'UBP_AJBCollectMd_C::CollectedDiscNumMax' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, bCannotCollectOnOtnerCollecting) == 0x00025C, "Member 'UBP_AJBCollectMd_C::bCannotCollectOnOtnerCollecting' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, bDebugShowCollectMdInfo) == 0x00025D, "Member 'UBP_AJBCollectMd_C::bDebugShowCollectMdInfo' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, bUseEmphasizeActorOther) == 0x00025E, "Member 'UBP_AJBCollectMd_C::bUseEmphasizeActorOther' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMd_C, bFixed11683) == 0x00025F, "Member 'UBP_AJBCollectMd_C::bFixed11683' has a wrong offset!");

}


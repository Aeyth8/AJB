#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBReplayActor

#include "Basic.hpp"

#include "BP_AJBActorBase_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_StencilDigit_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBReplayActor.BP_AJBReplayActor_C
// 0x00B0 (0x03E0 - 0x0330)
class ABP_AJBReplayActor_C final : public ABP_AJBActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 AttachmentMesh;                                    // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TimerMesh;                                         // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_MDB_Replay_Start;                               // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ReplayMesh;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_45CB61014FBA1A883BBA0EBCE9B1D6E1; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_45CB61014FBA1A883BBA0EBCE9B1D6E1; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaName;                                         // 0x0370(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         charaSkinId;                                       // 0x0378(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentTime;                                       // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReplayTime;                                        // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          ParticleChanged;                                   // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimPlayRate;                                      // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReserveDisappear;                                 // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShakeIntensity;                                    // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTag_ChangedCharacterSide;                  // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReplayLoopSETag;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           ReplayLoopSEAkComponent;                           // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDuringTimeStop;                                   // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       DMI_TimerMesh;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bReplayByDubbing;                                  // 0x03D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReplayTimeDubbing;                                 // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReservedDestroy;                                  // 0x03D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnablePairStencil;                                // 0x03D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableSelfStencil;                                // 0x03DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBReplayActor(int32 EntryPoint);
	void TryDisappear();
	void ReceiveTick(float DeltaSeconds);
	void SettingReplayMesh();
	void ReceiveBeginPlay();
	void PlayTimelineShake(bool bEnd);
	void MC_ChangeTimeStopEnabled(bool bEnable);
	void ChangeTimeStopEnabledServer(bool Enable);
	void End_ReplayStartLoopSE();
	void Pause_ReplayStartLoopSE();
	void OnEnd_ReplayStartLoopSE(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void Resume_ReplayStartLoopSE();
	void Play_ReplayStartLoopSE();
	void OnLoaded_FECD4A5D42BE615C8245A9A53FD821C8(class UObject* Loaded);
	void OnLoaded_799572F546FAB5546C21A6B21C8E4FBD(class UObject* Loaded);
	void OnLoaded_10BAE1DB4E401A12E9CCC28EE30ED948(class UObject* Loaded);
	void OnLoaded_799572F546FAB5546C21A6B22CBB8FC0(class UObject* Loaded);
	void OnLoaded_10BAE1DB4E401A12E9CCC28ED33B1935(class UObject* Loaded);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void UpdateLifeTime(float DeltaSeconds);
	void UpdateStandTransition();
	void CreateDMIFlow();
	void GetPoliticReplayTime(float* ReplayTime_0);
	void UpdatePairStencil();
	void ChangeRelatedMeshStencilValueByDigit(E_StencilDigit DigitToChange, bool bFlag);
	void TryChangeEnablePairStencil(bool bEnable);
	void UpdateSelfStencil();
	void TryChangeEnableSelfStencil(bool bEnable);
	void OnChangedViewTarget();
	void CheckTarget(class ABP_AJBInGameCharacter_C* Operator, const struct FVector& Location, float Range, bool* bTarget);
	void GetParticleLocation(class FName SocketName, struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBReplayActor_C">();
	}
	static class ABP_AJBReplayActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBReplayActor_C>();
	}
};
static_assert(alignof(ABP_AJBReplayActor_C) == 0x000008, "Wrong alignment on ABP_AJBReplayActor_C");
static_assert(sizeof(ABP_AJBReplayActor_C) == 0x0003E0, "Wrong size on ABP_AJBReplayActor_C");
static_assert(offsetof(ABP_AJBReplayActor_C, UberGraphFrame) == 0x000330, "Member 'ABP_AJBReplayActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, AttachmentMesh) == 0x000338, "Member 'ABP_AJBReplayActor_C::AttachmentMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, TimerMesh) == 0x000340, "Member 'ABP_AJBReplayActor_C::TimerMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, PS_MDB_Replay_Start) == 0x000348, "Member 'ABP_AJBReplayActor_C::PS_MDB_Replay_Start' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ReplayMesh) == 0x000350, "Member 'ABP_AJBReplayActor_C::ReplayMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, Root) == 0x000358, "Member 'ABP_AJBReplayActor_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, Timeline_0_NewTrack_0_45CB61014FBA1A883BBA0EBCE9B1D6E1) == 0x000360, "Member 'ABP_AJBReplayActor_C::Timeline_0_NewTrack_0_45CB61014FBA1A883BBA0EBCE9B1D6E1' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, Timeline_0__Direction_45CB61014FBA1A883BBA0EBCE9B1D6E1) == 0x000364, "Member 'ABP_AJBReplayActor_C::Timeline_0__Direction_45CB61014FBA1A883BBA0EBCE9B1D6E1' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, Timeline_0) == 0x000368, "Member 'ABP_AJBReplayActor_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, CharaName) == 0x000370, "Member 'ABP_AJBReplayActor_C::CharaName' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, charaSkinId) == 0x000378, "Member 'ABP_AJBReplayActor_C::charaSkinId' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, CurrentTime) == 0x00037C, "Member 'ABP_AJBReplayActor_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ReplayTime) == 0x000380, "Member 'ABP_AJBReplayActor_C::ReplayTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ParticleChanged) == 0x000388, "Member 'ABP_AJBReplayActor_C::ParticleChanged' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, AnimPlayRate) == 0x000390, "Member 'ABP_AJBReplayActor_C::AnimPlayRate' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bReserveDisappear) == 0x000394, "Member 'ABP_AJBReplayActor_C::bReserveDisappear' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ShakeIntensity) == 0x000398, "Member 'ABP_AJBReplayActor_C::ShakeIntensity' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ParticleTag_ChangedCharacterSide) == 0x0003A0, "Member 'ABP_AJBReplayActor_C::ParticleTag_ChangedCharacterSide' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ReplayLoopSETag) == 0x0003A8, "Member 'ABP_AJBReplayActor_C::ReplayLoopSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ReplayLoopSEAkComponent) == 0x0003B0, "Member 'ABP_AJBReplayActor_C::ReplayLoopSEAkComponent' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bDuringTimeStop) == 0x0003B8, "Member 'ABP_AJBReplayActor_C::bDuringTimeStop' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, DMI_TimerMesh) == 0x0003C0, "Member 'ABP_AJBReplayActor_C::DMI_TimerMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bReplayByDubbing) == 0x0003D0, "Member 'ABP_AJBReplayActor_C::bReplayByDubbing' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, ReplayTimeDubbing) == 0x0003D4, "Member 'ABP_AJBReplayActor_C::ReplayTimeDubbing' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bReservedDestroy) == 0x0003D8, "Member 'ABP_AJBReplayActor_C::bReservedDestroy' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bEnablePairStencil) == 0x0003D9, "Member 'ABP_AJBReplayActor_C::bEnablePairStencil' has a wrong offset!");
static_assert(offsetof(ABP_AJBReplayActor_C, bEnableSelfStencil) == 0x0003DA, "Member 'ABP_AJBReplayActor_C::bEnableSelfStencil' has a wrong offset!");

}


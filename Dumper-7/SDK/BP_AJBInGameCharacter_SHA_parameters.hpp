#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_SHA

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_GionSpawnedSpace_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ExecuteUbergraph_BP_AJBInGameCharacter_SHA
// 0x0290 (0x0290 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESHABehavior                                  K2Node_CustomEvent_NewBehavior;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bParam01;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSHABehavior_Server_bMatch;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSHABehavior_Server_bMatch1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSHABehavior_Server_bMatch2;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSHABehavior_Server_bMatch3;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_KIR_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromBombing1;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromBombing;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSHASkill_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSHAImpulse_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_Operator;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_CustomEvent_Timing;                         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOperatorIsEmpty;               // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHitTarget_Server_bHit;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewVisibility;                       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewVisibility1;                      // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable1;                             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnable2;                             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetSkillComponentByTag_bSuccess;       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBSkillBase_C*                     CallFunc_TryGetSkillComponentByTag_SkillComponent; // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DuringTheWorld_Result;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue2;                    // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF[0x1];                                      // 0x01DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x01F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x01F8(0x0020)()
	bool                                          CallFunc_CheckPassiveTagProhibition_bProhibitionTag; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0220(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue3;                    // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxMoveSpeed_MaxSpeed;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FGameplayTag& AddCondition, class UObject* Causer, const struct FGameplayTag& CauserType)> K2Node_CreateDelegate_OutputDelegate1; // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsInDoor_Result;                          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA) == 0x000290, "Wrong size on BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, EntryPoint) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_NewBehavior) == 0x000004, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_NewBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_bParam01) == 0x000005, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_bParam01' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckSHABehavior_Server_bMatch) == 0x000025, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckSHABehavior_Server_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000026, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckSHABehavior_Server_bMatch1) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckSHABehavior_Server_bMatch1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000029, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_BooleanAND_ReturnValue1) == 0x00002A, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, Temp_float_Variable) == 0x00002C, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsDedicatedServer_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckSHABehavior_Server_bMatch2) == 0x000072, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckSHABehavior_Server_bMatch2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckSHABehavior_Server_bMatch3) == 0x000073, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckSHABehavior_Server_bMatch3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000074, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_BooleanAND_ReturnValue2) == 0x000080, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR) == 0x000088, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_KIR' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_DeltaSeconds) == 0x000094, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_bFromBombing1) == 0x000098, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_bFromBombing1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_bFromBombing) == 0x0000A0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_bFromBombing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetObjectClass_ReturnValue) == 0x0000A8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue1) == 0x0000B8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue2) == 0x0000C0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000C8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess1) == 0x0000D0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000D8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000104, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000110, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsServer_ReturnValue) == 0x000118, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_Operator) == 0x000120, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_Time) == 0x000128, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_Timing) == 0x00012C, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_bEnable) == 0x00012D, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_bOperatorIsEmpty) == 0x00012E, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_SwitchEnum1_CmpSuccess) == 0x00012F, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckHitTarget_Server_bHit) == 0x000130, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckHitTarget_Server_bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_Operator) == 0x000138, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_Time) == 0x000140, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_Timing) == 0x000144, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bEnable) == 0x000145, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bOperatorIsEmpty) == 0x000146, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_DeltaSeconds) == 0x000148, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, Temp_float_Variable1) == 0x00014C, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_SerialNumber) == 0x000150, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bNewVisibility) == 0x000154, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bNewVisibility1) == 0x000155, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bNewVisibility1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000156, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000158, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetFloatValue_ReturnValue) == 0x000160, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetFloatValue_ReturnValue1) == 0x000164, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bEnable1) == 0x000168, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_bEnable2) == 0x000169, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_bEnable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue3) == 0x000170, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000178, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess3) == 0x000180, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000181, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue4) == 0x000188, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000190, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess4) == 0x000198, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsServer_ReturnValue1) == 0x000199, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x0001A0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x0001A8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetOwner_ReturnValue5) == 0x0001B0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, Temp_bool_Variable) == 0x0001B8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0001C0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess5) == 0x0001C8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_TryGetSkillComponentByTag_bSuccess) == 0x0001C9, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_TryGetSkillComponentByTag_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_TryGetSkillComponentByTag_SkillComponent) == 0x0001D0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_TryGetSkillComponentByTag_SkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Select_Default) == 0x0001D8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_DuringTheWorld_Result) == 0x0001DC, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_DuringTheWorld_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_BooleanAND_ReturnValue3) == 0x0001DD, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsServer_ReturnValue2) == 0x0001DE, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_AddCondition) == 0x0001E0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_Causer) == 0x0001E8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CustomEvent_CauserType) == 0x0001F0, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0001F8, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_CheckPassiveTagProhibition_bProhibitionTag) == 0x000218, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_CheckPassiveTagProhibition_bProhibitionTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, Temp_struct_Variable) == 0x000220, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetPlayerController_ReturnValue) == 0x000228, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, Temp_bool_Variable1) == 0x000230, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000238, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_DynamicCast_bSuccess6) == 0x000240, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsLocalController_ReturnValue) == 0x000241, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsServer_ReturnValue3) == 0x000242, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Event_EndPlayReason) == 0x000243, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_GetMaxMoveSpeed_MaxSpeed) == 0x000244, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_GetMaxMoveSpeed_MaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000248, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CreateDelegate_OutputDelegate) == 0x000250, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_CreateDelegate_OutputDelegate1) == 0x000260, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_IsInDoor_Result) == 0x000270, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_IsInDoor_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000278, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000280, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000288, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA, K2Node_Select1_Default) == 0x00028C, "Member 'BP_AJBInGameCharacter_SHA_C_ExecuteUbergraph_BP_AJBInGameCharacter_SHA::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.OnPassiveAddedAfterSetCauser_SHA
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA) == 0x000018, "Wrong size on BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA, AddCondition) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA, Causer) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA, CauserType) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_OnPassiveAddedAfterSetCauser_SHA::CauserType' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.OnBeginSHABehavior_Clearing_OneShot
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot final
{
public:
	bool                                          bFromBombing;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot, bFromBombing) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_OnBeginSHABehavior_Clearing_OneShot::bFromBombing' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.MC_ChangeSHABehavior_Clearing
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing final
{
public:
	bool                                          bFromBombing;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing, bFromBombing) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_MC_ChangeSHABehavior_Clearing::bFromBombing' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeSHABehavior_Server
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server final
{
public:
	ESHABehavior                                  NewBehavior;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bParam01;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server) == 0x000002, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server, NewBehavior) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server::NewBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server, bParam01) == 0x000001, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeSHABehavior_Server::bParam01' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.UpdateSHABehavior_Server
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server) == 0x000004, "Wrong size on BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_UpdateSHABehavior_Server::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.MC_NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_SHA_C_MC_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.SetSerialNumber
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_SetSerialNumber final
{
public:
	int32                                         SerialNumber_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_SetSerialNumber) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_SetSerialNumber");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_SetSerialNumber) == 0x000004, "Wrong size on BP_AJBInGameCharacter_SHA_C_SetSerialNumber");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_SetSerialNumber, SerialNumber_0) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_SetSerialNumber::SerialNumber_0' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeMeshVisibleCore
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleCore::bNewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeMeshVisibleServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeMeshVisibleServer::bNewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeEnableCore
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeEnableCore final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeEnableCore) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeEnableCore");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeEnableCore) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeEnableCore");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeEnableCore, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeEnableCore::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeEnableServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeEnableServer final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeEnableServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeEnableServer");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeEnableServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeEnableServer");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeEnableServer, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeEnableServer::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.OnRep_Rep_SHABehavior
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_OnRep_Rep_SHABehavior::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.CheckSHABehavior_Server
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server final
{
public:
	ESHABehavior                                  SHABehavior;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatch;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server) == 0x000003, "Wrong size on BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server, SHABehavior) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server::SHABehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server, bMatch) == 0x000001, "Member 'BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server::bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBInGameCharacter_SHA_C_CheckSHABehavior_Server::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.CheckHitTarget_Server
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetJoinPawns_OutPawns;                    // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TracableByAI_bTracable;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0098(0x0020)()
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInteractAction_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckState_bMatch;                        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server) == 0x000100, "Wrong size on BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, bHit) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::bHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GetJoinPawns_OutPawns) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GetJoinPawns_OutPawns' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000068, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_bSuccess1) == 0x000078, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_TracableByAI_bTracable) == 0x000079, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_TracableByAI_bTracable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000080, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000098, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_IsPair_bPairCharacter) == 0x0000B8, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B9, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_MatchesAnyTags_ReturnValue) == 0x0000BA, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000BB, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Not_PreBool_ReturnValue2) == 0x0000BC, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x0000BD, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000BE, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Not_PreBool_ReturnValue3) == 0x0000C8, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_CheckState_bMatch) == 0x0000C9, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_CheckState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanOR_ReturnValue) == 0x0000CA, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Not_PreBool_ReturnValue4) == 0x0000CB, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue) == 0x0000CC, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_IsValid_ReturnValue) == 0x0000CD, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue1) == 0x0000CE, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue2) == 0x0000CF, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue3) == 0x0000D0, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000D4, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x0000E0, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_VSize_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue4) == 0x0000F5, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue5) == 0x0000F6, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue6) == 0x0000F7, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server, CallFunc_BooleanAND_ReturnValue7) == 0x0000F8, "Member 'BP_AJBInGameCharacter_SHA_C_CheckHitTarget_Server::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.TryAddPassive_Server
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue1;        // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item1;                          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server) == 0x000098, "Wrong size on BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, PassiveTag) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_MatchesTag_ReturnValue) == 0x00004D, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_IsValid_ReturnValue) == 0x00004F, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_CheckActive_bActive) == 0x000050, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_BooleanAND_ReturnValue1) == 0x000051, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_BooleanAND_ReturnValue2) == 0x000058, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_GetComponentsByClass_ReturnValue1) == 0x000060, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_GetComponentsByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Array_Length_ReturnValue1) == 0x000070, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, Temp_int_Array_Index_Variable1) == 0x000074, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, Temp_int_Loop_Counter_Variable1) == 0x000078, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Array_Get_Item1) == 0x000080, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_CheckActive_bActive1) == 0x000088, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_CheckActive_bActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_MatchesTag_ReturnValue1) == 0x000089, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Less_IntInt_ReturnValue1) == 0x00008A, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_BooleanAND_ReturnValue3) == 0x00008B, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, CallFunc_Add_IntInt_ReturnValue1) == 0x00008C, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000090, "Member 'BP_AJBInGameCharacter_SHA_C_TryAddPassive_Server::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.TryRemovePassive_Server
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server) == 0x000048, "Wrong size on BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, PassiveTag) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_CheckActive_bActive) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_MatchesTag_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_TryRemovePassive_Server::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ChangeStencil
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ChangeStencil final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ChangeStencil) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ChangeStencil");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ChangeStencil) == 0x000050, "Wrong size on BP_AJBInGameCharacter_SHA_C_ChangeStencil");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_GetObjectClass_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_ClassIsChildOf_ReturnValue) == 0x000049, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00004A, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ChangeStencil, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameCharacter_SHA_C_ChangeStencil::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.TryDestroyImpulseReadyParticle
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_TryDestroyImpulseReadyParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.GetPropertyOwnerCharacterBP
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP) == 0x000020, "Wrong size on BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_GetPropertyOwnerCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.GetPropertyType
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_GetPropertyType final
{
public:
	EAJBCharacterPropertyType                     PropertyType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_GetPropertyType) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_GetPropertyType");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_GetPropertyType) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_GetPropertyType");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetPropertyType, PropertyType) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_GetPropertyType::PropertyType' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.TracableByAI
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_TracableByAI final
{
public:
	bool                                          bTracable;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_TracableByAI) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_TracableByAI");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_TracableByAI) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_TracableByAI");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TracableByAI, bTracable) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_TracableByAI::bTracable' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.DetectableByTrap
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_DetectableByTrap final
{
public:
	bool                                          bDetectable;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_DetectableByTrap) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_DetectableByTrap");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_DetectableByTrap) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_DetectableByTrap");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_DetectableByTrap, bDetectable) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_DetectableByTrap::bDetectable' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.TreatAsCharacterBySpecialProjectile
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile final
{
public:
	bool                                          bTreat;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile, bTreat) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_TreatAsCharacterBySpecialProjectile::bTreat' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsDetectableByDirectAttackGuide
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide final
{
public:
	bool                                          bIsDetectable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide, bIsDetectable) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsDetectableByDirectAttackGuide::bIsDetectable' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsTargetCO2Scan
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsTargetCO2Scan::IsTarget' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsTargetClourBarrier
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsTargetClourBarrier::IsTarget' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsTargetOverGrow
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsTargetOverGrow::IsTarget' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsPlayOwnerVoiceOnGetItem
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnGetItem::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsPlayOwnerVoiceOnJump
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnJump::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.IsPlayOwnerVoiceOnPassThruEnter
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_IsPlayOwnerVoiceOnPassThruEnter::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_SHA_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameCharacter_SHA_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_SHA_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_SHA_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_SHA_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.CheckDisableDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_CheckDisableDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisableDamage_0;                                  // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_CheckDisableDamage");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage) == 0x000030, "Wrong size on BP_AJBInGameCharacter_SHA_C_CheckDisableDamage");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, bIgnoreSelf) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, bDisableDamage_0) == 0x000009, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::bDisableDamage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_CheckDisableDamage_bDisableDamage) == 0x00000A, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_GetOwner_ReturnValue1) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_IsPair_bPairCharacter) == 0x000029, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisableDamage, CallFunc_BooleanOR_ReturnValue1) == 0x00002A, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisableDamage::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.CheckDisablePassive
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_CheckDisablePassive final
{
public:
	class AActor*                                 PassiveCauser;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PassiveTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisablePassive_0;                                 // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue1;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_CheckDisablePassive");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive) == 0x000068, "Wrong size on BP_AJBInGameCharacter_SHA_C_CheckDisablePassive");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, PassiveCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::PassiveCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, PassiveTag) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, bIgnoreSelf) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, bDisablePassive_0) == 0x000011, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::bDisablePassive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_GetTagName_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_IsPair_bPairCharacter) == 0x000028, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_GetTagName_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_GetTagName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_Contains_ReturnValue) == 0x000048, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_Conv_NameToString_ReturnValue1) == 0x000050, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_Conv_NameToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_Contains_ReturnValue1) == 0x000060, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckDisablePassive, CallFunc_BooleanOR_ReturnValue1) == 0x000062, "Member 'BP_AJBInGameCharacter_SHA_C_CheckDisablePassive::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.CheckTargetSelf
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_CheckTargetSelf final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForDamageOverlap;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreMovableStand;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludeSelf;                                      // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAfterReflectShouldHitOwner;                       // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTarget;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESHABehavior                                  Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_CheckTargetSelf");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf) == 0x000018, "Wrong size on BP_AJBInGameCharacter_SHA_C_CheckTargetSelf");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, bForDamageOverlap) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::bForDamageOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, bIgnoreMovableStand) == 0x000009, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::bIgnoreMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, bIncludeSelf) == 0x00000A, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, bAfterReflectShouldHitOwner) == 0x00000B, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::bAfterReflectShouldHitOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, bTarget) == 0x00000C, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_byte_Variable) == 0x00000D, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, CallFunc_CheckTargetSelf_bTarget) == 0x00000E, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_bool_Variable) == 0x00000F, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_bool_Variable1) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_bool_Variable2) == 0x000011, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_bool_Variable3) == 0x000012, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, Temp_bool_Variable4) == 0x000013, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, K2Node_Select_Default) == 0x000014, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_CheckTargetSelf, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_AJBInGameCharacter_SHA_C_CheckTargetSelf::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.GetGionOwner
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_GetGionOwner final
{
public:
	class AActor*                                 GionOwner;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_GetGionOwner) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_GetGionOwner");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_GetGionOwner) == 0x000020, "Wrong size on BP_AJBInGameCharacter_SHA_C_GetGionOwner");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetGionOwner, GionOwner) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_GetGionOwner::GionOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetGionOwner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_SHA_C_GetGionOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetGionOwner, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameCharacter_SHA_C_GetGionOwner::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetGionOwner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_SHA_C_GetGionOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_SHA.BP_AJBInGameCharacter_SHA_C.GetSpawnedSpaceInOwnersEnv
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv final
{
public:
	E_GionSpawnedSpace                            SpawnedSpaceInOwnersEnv;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv");
static_assert(sizeof(BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv) == 0x000001, "Wrong size on BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv");
static_assert(offsetof(BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv, SpawnedSpaceInOwnersEnv) == 0x000000, "Member 'BP_AJBInGameCharacter_SHA_C_GetSpawnedSpaceInOwnersEnv::SpawnedSpaceInOwnersEnv' has a wrong offset!");

}


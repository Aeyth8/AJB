#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPvEGameMode

#include "Basic.hpp"

#include "BP_AJBPvEGameMode_classes.hpp"
#include "BP_AJBPvEGameMode_parameters.hpp"


namespace SDK
{

// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.ExecuteUbergraph_BP_AJBPvEGameMode
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPvEGameMode_C::ExecuteUbergraph_BP_AJBPvEGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "ExecuteUbergraph_BP_AJBPvEGameMode");

	Params::BP_AJBPvEGameMode_C_ExecuteUbergraph_BP_AJBPvEGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.Debug_RefreshMatchingPlayers
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPvEGameMode_C::Debug_RefreshMatchingPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "Debug_RefreshMatchingPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.Debug_SetupCharacters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPvEGameMode_C::Debug_SetupCharacters(const struct FGameplayTag& NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "Debug_SetupCharacters");

	Params::BP_AJBPvEGameMode_C_Debug_SetupCharacters Parms{};

	Parms.NextState = std::move(NextState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.OnCharacterDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DeadActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPvEGameMode_C::OnCharacterDead(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "OnCharacterDead");

	Params::BP_AJBPvEGameMode_C_OnCharacterDead Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DeadActor = DeadActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.SetupForEditor
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPvEGameMode_C::SetupForEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "SetupForEditor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.OnBegin_Gameplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPvEGameMode_C::OnBegin_Gameplay(const struct FGameplayTag& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "OnBegin_Gameplay");

	Params::BP_AJBPvEGameMode_C_OnBegin_Gameplay Parms{};

	Parms.PrevState = std::move(PrevState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBPvEGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPvEGameMode.BP_AJBPvEGameMode_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBPvEGameMode_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPvEGameMode_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


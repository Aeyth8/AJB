#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBEmoteAccompany

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "ST_EmoteAccompanyInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.ExecuteUbergraph_BP_AJBEmoteAccompany
// 0x0530 (0x0530 - 0x0000)
struct BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand1;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand2;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand3;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBStandInterface_C> K2Node_DynamicCast_AsBI_AJBStand_Interface;      // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand4;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand5;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand6;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand7;                    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand8;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand9;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand10;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_TargetCharacter1;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_OldBehavior1;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior1;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpecialBreakDown1;             // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue6;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStandAccompanyTransition                     K2Node_CustomEvent_PrevTransition;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStandAccompanyTransition                     K2Node_CustomEvent_NextTransition;                 // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBySeparate;                    // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown)> K2Node_CreateDelegate_OutputDelegate8; // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0258(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EStandAccompanyTransition PrevTransition, EStandAccompanyTransition NextTransition, bool bBySeparate)> K2Node_CreateDelegate_OutputDelegate10; // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetStandRotation_Rotation;                // 0x028C(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0298(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable1;                               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldRestore;                       // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 K2Node_CustomEvent_Settings;                       // 0x0340(0x0068)(ConstParm, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue1;  // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x03BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x03BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown)> K2Node_CreateDelegate_OutputDelegate11; // 0x03C0(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable1;                             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage1;                // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_TargetCharacter;                // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_OldBehavior;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior;                   // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpecialBreakDown;              // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmoteBehavior_ReturnValue;              // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmoteBehavior_ReturnValue1;             // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindCurrentSetting_Success;               // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E[0x2];                                      // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 CallFunc_FindCurrentSetting_Setting;               // 0x0420(0x0068)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLoopMontageStartingPos_StartingPos;    // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A2[0x6];                                      // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x04B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate13;            // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue2;               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2;         // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x0500(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate15;            // 0x0510(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_Movable;                        // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Rotatable;                      // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_522[0x6];                                      // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany");
static_assert(sizeof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany) == 0x000530, "Wrong size on BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, EntryPoint) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName4) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000028, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000030, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_HasLocalSharedController_ReturnValue) == 0x00003A, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_HasLocalSharedController_ReturnValue1) == 0x00003B, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate1) == 0x000040, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_name_Variable) == 0x000050, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000058, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000060, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue2) == 0x000061, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000062, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName3) == 0x000068, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000070, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x000078, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000080, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000090, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName5) == 0x0000A0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_IsClosed_Variable) == 0x0000A8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Has_Been_Initd_Variable) == 0x0000A9, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate2) == 0x0000B0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x0000C0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand) == 0x0000C8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000D0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess2) == 0x0000D8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue3) == 0x0000D9, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x0000DA, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName6) == 0x0000E0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand1) == 0x0000E8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue4) == 0x0000F0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand2) == 0x000108, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand3) == 0x000110, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue5) == 0x000118, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBI_AJBStand_Interface) == 0x000120, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBI_AJBStand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess3) == 0x000130, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue6) == 0x000131, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName7) == 0x000138, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand4) == 0x000140, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue7) == 0x000148, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand5) == 0x000150, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate4) == 0x000158, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue8) == 0x000168, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand6) == 0x000170, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName8) == 0x000178, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue9) == 0x000180, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue10) == 0x000181, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand7) == 0x000188, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand7' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue11) == 0x000190, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate5) == 0x000198, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand8) == 0x0001A8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand8' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand9) == 0x0001B0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand9' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue12) == 0x0001B8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue13) == 0x0001B9, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName9) == 0x0001C0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetTargetStand_Stand10) == 0x0001C8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetTargetStand_Stand10' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue14) == 0x0001D0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate6) == 0x0001D8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_Event_DeltaSeconds) == 0x0001E8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_TargetCharacter1) == 0x0001F0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_TargetCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_OldBehavior1) == 0x0001F8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_OldBehavior1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NextBehavior1) == 0x0001F9, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NextBehavior1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_bSpecialBreakDown1) == 0x0001FA, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_bSpecialBreakDown1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerCharacter_ReturnValue6) == 0x000200, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000208, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess4) == 0x000210, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_IsEnabled) == 0x000211, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate7) == 0x000218, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue15) == 0x000228, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_IsClosed_Variable1) == 0x000229, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_PrevTransition) == 0x00022A, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_PrevTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NextTransition) == 0x00022B, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NextTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_bBySeparate) == 0x00022C, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_bBySeparate' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_SwitchEnum_CmpSuccess) == 0x00022D, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate8) == 0x000230, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue16) == 0x000240, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000241, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate9) == 0x000248, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000258, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue17) == 0x000260, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_object_Variable) == 0x000268, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate10) == 0x000270, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsAnim_Montage) == 0x000280, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess5) == 0x000288, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable) == 0x000289, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetStandRotation_Rotation) == 0x00028C, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetStandRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000298, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable1) == 0x000320, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable2) == 0x000321, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_Event_bShouldRestore) == 0x000322, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_Event_bShouldRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_Loaded) == 0x000328, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable3) == 0x000330, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000334, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_SwitchInteger_CmpSuccess) == 0x000338, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_Settings) == 0x000340, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_Settings' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerStand_ReturnValue) == 0x0003A8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x0003B0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess6) == 0x0003B8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0003B9, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValidSoftObjectReference_ReturnValue1) == 0x0003BA, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValidSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable4) == 0x0003BB, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable5) == 0x0003BC, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Variable6) == 0x0003BD, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_byte_Variable) == 0x0003BE, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_Select_Default) == 0x0003BF, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate11) == 0x0003C0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerStand_ReturnValue1) == 0x0003D0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_object_Variable1) == 0x0003D8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x0003E0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess7) == 0x0003E8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsAnim_Montage1) == 0x0003F0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsAnim_Montage1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess8) == 0x0003F8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000400, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue18) == 0x000408, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_TargetCharacter) == 0x000410, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_OldBehavior) == 0x000418, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NextBehavior) == 0x000419, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_bSpecialBreakDown) == 0x00041A, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsEmoteBehavior_ReturnValue) == 0x00041B, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsEmoteBehavior_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsEmoteBehavior_ReturnValue1) == 0x00041C, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsEmoteBehavior_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_FindCurrentSetting_Success) == 0x00041D, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_FindCurrentSetting_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_FindCurrentSetting_Setting) == 0x000420, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_FindCurrentSetting_Setting' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_name_Variable1) == 0x000488, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetLoopMontageStartingPos_StartingPos) == 0x000490, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetLoopMontageStartingPos_StartingPos' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x000498, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0004A0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_IsValid_ReturnValue19) == 0x0004A1, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_Loaded1) == 0x0004A8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName) == 0x0004B0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate12) == 0x0004B8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, Temp_bool_Has_Been_Initd_Variable1) == 0x0004C8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName1) == 0x0004D0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate13) == 0x0004D8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, CallFunc_GetOwnerStand_ReturnValue2) == 0x0004E8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::CallFunc_GetOwnerStand_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2) == 0x0004F0, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_DynamicCast_bSuccess9) == 0x0004F8, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate14) == 0x000500, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CreateDelegate_OutputDelegate15) == 0x000510, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_Movable) == 0x000520, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_Movable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_Rotatable) == 0x000521, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_Rotatable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany, K2Node_CustomEvent_NotifyName2) == 0x000528, "Member 'BP_AJBEmoteAccompany_C_ExecuteUbergraph_BP_AJBEmoteAccompany::K2Node_CustomEvent_NotifyName2' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.SetStandTransformSettings
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBEmoteAccompany_C_SetStandTransformSettings final
{
public:
	bool                                          Movable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rotatable;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_SetStandTransformSettings) == 0x000001, "Wrong alignment on BP_AJBEmoteAccompany_C_SetStandTransformSettings");
static_assert(sizeof(BP_AJBEmoteAccompany_C_SetStandTransformSettings) == 0x000002, "Wrong size on BP_AJBEmoteAccompany_C_SetStandTransformSettings");
static_assert(offsetof(BP_AJBEmoteAccompany_C_SetStandTransformSettings, Movable) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_SetStandTransformSettings::Movable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_SetStandTransformSettings, Rotatable) == 0x000001, "Member 'BP_AJBEmoteAccompany_C_SetStandTransformSettings::Rotatable' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnOwnerActiveBehaviorChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      OldBehavior;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialBreakDown;                                 // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged) == 0x000010, "Wrong size on BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged, TargetCharacter) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged, OldBehavior) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged::OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged, NextBehavior) == 0x000009, "Member 'BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged, bSpecialBreakDown) == 0x00000A, "Member 'BP_AJBEmoteAccompany_C_OnOwnerActiveBehaviorChanged::bSpecialBreakDown' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.LoadMontage
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBEmoteAccompany_C_LoadMontage final
{
public:
	struct FST_EmoteAccompanyInfo                 Settings;                                          // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_LoadMontage) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_LoadMontage");
static_assert(sizeof(BP_AJBEmoteAccompany_C_LoadMontage) == 0x000068, "Wrong size on BP_AJBEmoteAccompany_C_LoadMontage");
static_assert(offsetof(BP_AJBEmoteAccompany_C_LoadMontage, Settings) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_LoadMontage::Settings' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnChangedTransition
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBEmoteAccompany_C_OnChangedTransition final
{
public:
	EStandAccompanyTransition                     PrevTransition;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStandAccompanyTransition                     NextTransition;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBySeparate;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnChangedTransition) == 0x000001, "Wrong alignment on BP_AJBEmoteAccompany_C_OnChangedTransition");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnChangedTransition) == 0x000003, "Wrong size on BP_AJBEmoteAccompany_C_OnChangedTransition");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedTransition, PrevTransition) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnChangedTransition::PrevTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedTransition, NextTransition) == 0x000001, "Member 'BP_AJBEmoteAccompany_C_OnChangedTransition::NextTransition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedTransition, bBySeparate) == 0x000002, "Member 'BP_AJBEmoteAccompany_C_OnChangedTransition::bBySeparate' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.SetEnabledStandTransformSettings
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings) == 0x000001, "Wrong alignment on BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings");
static_assert(sizeof(BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings) == 0x000001, "Wrong size on BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings");
static_assert(offsetof(BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings, IsEnabled) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_SetEnabledStandTransformSettings::IsEnabled' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnChangedOwnerBehavior
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      OldBehavior;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialBreakDown;                                 // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior) == 0x000010, "Wrong size on BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior, TargetCharacter) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior, OldBehavior) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior::OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior, NextBehavior) == 0x000009, "Member 'BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior, bSpecialBreakDown) == 0x00000A, "Member 'BP_AJBEmoteAccompany_C_OnChangedOwnerBehavior::bSpecialBreakDown' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnCompleted_7B45FB9D406D5826C78546BCF788FED5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCF788FED5::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnBlendOut_7B45FB9D406D5826C78546BCF788FED5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCF788FED5::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnInterrupted_7B45FB9D406D5826C78546BCF788FED5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCF788FED5::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA, NotifyName) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA::NotifyName' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E, Loaded) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E::Loaded' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.OnLoaded_22DC14A04BFEF00549F0EEA00122AB65
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65");
static_assert(sizeof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65) == 0x000008, "Wrong size on BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65");
static_assert(offsetof(BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65, Loaded) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_OnLoaded_22DC14A04BFEF00549F0EEA00122AB65::Loaded' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.MakeSettingsTableKey
// 0x0140 (0x0140 - 0x0000)
struct BP_AJBEmoteAccompany_C_MakeSettingsTableKey final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   TableKey;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExtractEmoteId_Success;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ExtractEmoteId_CharacterTag;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_ExtractEmoteId_EmoteId;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_MakeSettingsTableKey");
static_assert(sizeof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey) == 0x000140, "Wrong size on BP_AJBEmoteAccompany_C_MakeSettingsTableKey");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, Montage) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, TableKey) == 0x000028, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::TableKey' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_ExtractEmoteId_Success) == 0x000030, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_ExtractEmoteId_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_ExtractEmoteId_CharacterTag) == 0x000038, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_ExtractEmoteId_CharacterTag' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_ExtractEmoteId_EmoteId) == 0x000048, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_ExtractEmoteId_EmoteId' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, K2Node_MakeStruct_FormatArgumentData1) == 0x0000C0, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_Format_ReturnValue) == 0x000110, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_MakeSettingsTableKey, CallFunc_Conv_StringToName_ReturnValue) == 0x000138, "Member 'BP_AJBEmoteAccompany_C_MakeSettingsTableKey::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.FindCurrentSetting
// 0x0130 (0x0130 - 0x0000)
struct BP_AJBEmoteAccompany_C_FindCurrentSetting final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 Setting;                                           // 0x0008(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_FindSetting_IsFound;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 CallFunc_FindSetting_Setting;                      // 0x00C8(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_FindCurrentSetting) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_FindCurrentSetting");
static_assert(sizeof(BP_AJBEmoteAccompany_C_FindCurrentSetting) == 0x000130, "Wrong size on BP_AJBEmoteAccompany_C_FindCurrentSetting");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, Success) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::Success' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, Setting) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::Setting' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, K2Node_DynamicCast_AsCharacter) == 0x000078, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_GetCurrentMontage_ReturnValue) == 0x000088, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000098, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_FindSetting_IsFound) == 0x0000C0, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_FindSetting_IsFound' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindCurrentSetting, CallFunc_FindSetting_Setting) == 0x0000C8, "Member 'BP_AJBEmoteAccompany_C_FindCurrentSetting::CallFunc_FindSetting_Setting' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.FindSetting
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBEmoteAccompany_C_FindSetting final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 Setting;                                           // 0x0030(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeSettingsTableKey_TableKey;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_EmoteAccompanyInfo                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_FindSetting) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_FindSetting");
static_assert(sizeof(BP_AJBEmoteAccompany_C_FindSetting) == 0x000110, "Wrong size on BP_AJBEmoteAccompany_C_FindSetting");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, Montage) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_FindSetting::Montage' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, IsFound) == 0x000028, "Member 'BP_AJBEmoteAccompany_C_FindSetting::IsFound' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, Setting) == 0x000030, "Member 'BP_AJBEmoteAccompany_C_FindSetting::Setting' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, CallFunc_MakeSettingsTableKey_TableKey) == 0x000098, "Member 'BP_AJBEmoteAccompany_C_FindSetting::CallFunc_MakeSettingsTableKey_TableKey' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_AJBEmoteAccompany_C_FindSetting::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FindSetting, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000108, "Member 'BP_AJBEmoteAccompany_C_FindSetting::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.GetOwnerMontagePlayingPosition
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition final
{
public:
	float                                         PlayingPosition;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition");
static_assert(sizeof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition) == 0x000050, "Wrong size on BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, PlayingPosition) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::PlayingPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, K2Node_DynamicCast_AsCharacter1) == 0x000028, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::K2Node_DynamicCast_AsCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, CallFunc_GetCurrentMontage_ReturnValue) == 0x000038, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition, CallFunc_Montage_GetPosition_ReturnValue) == 0x000048, "Member 'BP_AJBEmoteAccompany_C_GetOwnerMontagePlayingPosition::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.GetStandRotation
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBEmoteAccompany_C_GetStandRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0030(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_GetStandRotation) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_GetStandRotation");
static_assert(sizeof(BP_AJBEmoteAccompany_C_GetStandRotation) == 0x000040, "Wrong size on BP_AJBEmoteAccompany_C_GetStandRotation");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, Rotation) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetStandRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000030, "Member 'BP_AJBEmoteAccompany_C_GetStandRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.FixStandMeshLocation
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBEmoteAccompany_C_FixStandMeshLocation final
{
public:
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFixedMeshLocation_Location;            // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_FixStandMeshLocation) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_FixStandMeshLocation");
static_assert(sizeof(BP_AJBEmoteAccompany_C_FixStandMeshLocation) == 0x0000A0, "Wrong size on BP_AJBEmoteAccompany_C_FixStandMeshLocation");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FixStandMeshLocation, CallFunc_GetTargetStand_Stand) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_FixStandMeshLocation::CallFunc_GetTargetStand_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FixStandMeshLocation, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_FixStandMeshLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FixStandMeshLocation, CallFunc_GetFixedMeshLocation_Location) == 0x00000C, "Member 'BP_AJBEmoteAccompany_C_FixStandMeshLocation::CallFunc_GetFixedMeshLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_FixStandMeshLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'BP_AJBEmoteAccompany_C_FixStandMeshLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.GetLoopMontageStartingPos
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos final
{
public:
	struct FST_EmoteAccompanyInfo                 Setting;                                           // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         StartingPos;                                       // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOwnerMontagePlayingPosition_PlayingPosition; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos");
static_assert(sizeof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos) == 0x000080, "Wrong size on BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, Setting) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::Setting' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, StartingPos) == 0x000068, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::StartingPos' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, Temp_bool_Variable) == 0x00006C, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, Temp_float_Variable) == 0x000070, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, CallFunc_GetOwnerMontagePlayingPosition_PlayingPosition) == 0x000074, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::CallFunc_GetOwnerMontagePlayingPosition_PlayingPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos, K2Node_Select_Default) == 0x000078, "Member 'BP_AJBEmoteAccompany_C_GetLoopMontageStartingPos::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.IsEmoteBehavior
// 0x000B (0x000B - 0x0000)
struct BP_AJBEmoteAccompany_C_IsEmoteBehavior final
{
public:
	ECharacterActiveBehavior                      Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	ECharacterActiveBehavior                      Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_IsEmoteBehavior) == 0x000001, "Wrong alignment on BP_AJBEmoteAccompany_C_IsEmoteBehavior");
static_assert(sizeof(BP_AJBEmoteAccompany_C_IsEmoteBehavior) == 0x00000B, "Wrong size on BP_AJBEmoteAccompany_C_IsEmoteBehavior");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Index_0) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, ReturnValue) == 0x000001, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_byte_Variable) == 0x000002, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable) == 0x000003, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable1) == 0x000004, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable2) == 0x000005, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable3) == 0x000006, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable4) == 0x000007, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable5) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, Temp_bool_Variable6) == 0x000009, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_IsEmoteBehavior, K2Node_Select_Default) == 0x00000A, "Member 'BP_AJBEmoteAccompany_C_IsEmoteBehavior::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.GetTargetStand
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBEmoteAccompany_C_GetTargetStand final
{
public:
	class ABP_AJBInGameStand_C*                   Stand;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   CallFunc_GetEmoteAccompanyStand_Stand;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_GetTargetStand) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_GetTargetStand");
static_assert(sizeof(BP_AJBEmoteAccompany_C_GetTargetStand) == 0x000028, "Wrong size on BP_AJBEmoteAccompany_C_GetTargetStand");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetTargetStand, Stand) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_GetTargetStand::Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetTargetStand, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBEmoteAccompany_C_GetTargetStand::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetTargetStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBEmoteAccompany_C_GetTargetStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetTargetStand, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBEmoteAccompany_C_GetTargetStand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_GetTargetStand, CallFunc_GetEmoteAccompanyStand_Stand) == 0x000020, "Member 'BP_AJBEmoteAccompany_C_GetTargetStand::CallFunc_GetEmoteAccompanyStand_Stand' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.StateBeginPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBEmoteAccompany_C_StateBeginPlay final
{
public:
	bool                                          bShouldRestore;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_StateBeginPlay) == 0x000001, "Wrong alignment on BP_AJBEmoteAccompany_C_StateBeginPlay");
static_assert(sizeof(BP_AJBEmoteAccompany_C_StateBeginPlay) == 0x000001, "Wrong size on BP_AJBEmoteAccompany_C_StateBeginPlay");
static_assert(offsetof(BP_AJBEmoteAccompany_C_StateBeginPlay, bShouldRestore) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_StateBeginPlay::bShouldRestore' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBEmoteAccompany_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBEmoteAccompany_C_ReceiveTick");
static_assert(sizeof(BP_AJBEmoteAccompany_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBEmoteAccompany_C_ReceiveTick");
static_assert(offsetof(BP_AJBEmoteAccompany_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C.CanUseSkill
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBEmoteAccompany_C_CanUseSkill final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  FailureReasons;                                    // 0x0028(0x0020)(Edit, BlueprintVisible)
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBStandInterface_C> K2Node_DynamicCast_AsBI_AJBStand_Interface;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContinuousAccompany_IsContinuousAccompany; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   CallFunc_GetTargetStand_Stand1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_CanUseSkill_TagContainer;                 // 0x0080(0x0020)()
	bool                                          CallFunc_CanUseSkill_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBEmoteAccompany_C_CanUseSkill) == 0x000008, "Wrong alignment on BP_AJBEmoteAccompany_C_CanUseSkill");
static_assert(sizeof(BP_AJBEmoteAccompany_C_CanUseSkill) == 0x0000A8, "Wrong size on BP_AJBEmoteAccompany_C_CanUseSkill");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, TagContainer) == 0x000000, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, ReturnValue) == 0x000020, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, FailureReasons) == 0x000028, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::FailureReasons' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_GetTargetStand_Stand) == 0x000048, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_GetTargetStand_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, K2Node_DynamicCast_AsBI_AJBStand_Interface) == 0x000050, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::K2Node_DynamicCast_AsBI_AJBStand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000064, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_IsContinuousAccompany_IsContinuousAccompany) == 0x000068, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_IsContinuousAccompany_IsContinuousAccompany' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_GetTargetStand_Stand1) == 0x000070, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_GetTargetStand_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_IsValid_ReturnValue1) == 0x000078, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_CanUseSkill_TagContainer) == 0x000080, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_CanUseSkill_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBEmoteAccompany_C_CanUseSkill, CallFunc_CanUseSkill_ReturnValue) == 0x0000A0, "Member 'BP_AJBEmoteAccompany_C_CanUseSkill::CallFunc_CanUseSkill_ReturnValue' has a wrong offset!");

}


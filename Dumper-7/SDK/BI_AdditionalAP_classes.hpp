#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AdditionalAP

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BI_AdditionalAP.BI_AdditionalAP_C
// 0x0000 (0x0000 - 0x0000)
class IBI_AdditionalAP_C final
{
public:
	void Initialize();
	void GetValue(int32* AAPValue);
	void Consume(int32 Damage, int32* LeftDamage, int32* BeforeValue, int32* AfterValue);
	void GetValueMax(int32* AAPValueMax);
	void OnConsumed(int32 BeforeValue, int32 AfterValue);
	void GetParticleTagBlocked(struct FGameplayTag* ParticleTag);
	void AddValue(int32 Point, class AActor* Causer);
	void GetSETagBlocked(struct FGameplayTag* SETag);
	void ConsumeSimulated(int32 Damage, int32* LeftDamage, int32* BeforeValue, int32* AfterValue);
	void ChangeParticleVisibility(bool NewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_AdditionalAP_C">();
	}
	static class IBI_AdditionalAP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBI_AdditionalAP_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBI_AdditionalAP_C) == 0x000001, "Wrong alignment on IBI_AdditionalAP_C");
static_assert(sizeof(IBI_AdditionalAP_C) == 0x000001, "Wrong size on IBI_AdditionalAP_C");

}


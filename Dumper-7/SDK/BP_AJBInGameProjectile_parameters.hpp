#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectile

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ExecuteUbergraph_BP_AJBInGameProjectile
// 0x0F30 (0x0F30 - 0x0000)
struct BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementLength_Length;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetCauserOwnerCharacterBP_CharacterBP;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation1;                   // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location6;                      // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DamageDecal_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcHitLocation_HitImpactPoint;           // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitImpactNormal;          // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHitLocation_HitLocation;              // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface1;             // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP;                      // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP;      // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP;            // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlocked;           // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0xC];                                      // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameProjectileObjectiveCollisionDetector_C* CallFunc_FinishSpawningActor_ReturnValue1; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor1;                      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location7;                      // 0x0240(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor2;                      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation2;                   // 0x0258(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface2;             // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleSpawnDecal_bPossible;        // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0294(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_HitSurfaceType;                 // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location5;                      // 0x02B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal4;                        // 0x02C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation3;                      // 0x02D0(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCharacter3;                    // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLeftAP3;                       // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking3;                     // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot3;                     // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType3;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP3;                 // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlockedByAAP3;       // 0x02E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlocked3;            // 0x02F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location4;                      // 0x02FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal3;                        // 0x0308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation2;                      // 0x0314(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCharacter2;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLeftAP2;                       // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking2;                     // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot2;                     // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType2;                   // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP2;                 // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlockedByAAP2;       // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlocked2;            // 0x0330(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location3;                      // 0x0338(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal2;                        // 0x0344(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation1;                      // 0x0350(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCharacter1;                    // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLeftAP1;                       // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking1;                     // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot1;                     // 0x035F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType1;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP1;                 // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlockedByAAP1;       // 0x0368(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlocked1;            // 0x0370(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0378(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal1;                        // 0x0384(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0390(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bCharacter;                     // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLeftAP;                        // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking;                      // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot;                      // 0x039F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP;                  // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlockedByAAP;        // 0x03A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ParticleTagBlocked;             // 0x03B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       CallFunc_GetComponentsByClass_ReturnValue;         // 0x03D0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSuccess;                       // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E6[0x2];                                      // 0x03E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor3;                      // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation3;                   // 0x03F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal1;                     // 0x03FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot4;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrate;                     // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate;                    // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0418(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0428(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor4;                      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation4;                   // 0x0440(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal2;                     // 0x044C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot5;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrate1;                    // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstHit;                      // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45B[0x1];                                      // 0x045B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate1;                   // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType4;                   // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage;                 // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReflect;                       // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_463[0x1];                                      // 0x0463(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_ReflectRotation;                // 0x0464(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking4;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlockedByAAP4;                 // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ReflectSkillTag;                // 0x0478(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAvoidSkill;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor5;                      // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation5;                   // 0x0490(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot6;                     // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType5;                   // 0x049D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage1;                // 0x049E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49F[0x1];                                      // 0x049F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate2;                   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP5;                 // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReflect1;                      // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x04A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_HitActor6;                      // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation6;                   // 0x04B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal3;                     // 0x04BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot7;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrate2;                    // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstHit1;                     // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CB[0x1];                                      // 0x04CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate3;                   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType6;                   // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage2;                // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReflect2;                      // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D3[0x1];                                      // 0x04D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_ReflectRotation1;               // 0x04D4(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking5;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlockedByAAP6;                 // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ReflectSkillTag1;               // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAvoidSkill1;                   // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_SpawnLocation;                  // 0x04F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpawnNormal;                    // 0x0500(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlocking6;                     // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot8;                     // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor7;                      // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType7;                   // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface3;             // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPoliticDamage_Damage;                  // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OwnHitParam_bCharacter1;                  // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP1;                     // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53A[0x6];                                      // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP1;     // 0x0540(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP1;           // 0x0548(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlocked1;          // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcAAPInfo_bDamageCutByAAP;              // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAAPInfo_bDamageBlockByAAP;            // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldRequestHitEffect_bShouldRequest;    // 0x055A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55B[0x1];                                      // 0x055B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x055C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0568(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0574(0x000C)(IsPlainOldData, NoDestructor)
	class UMeshComponent*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSucceed;                       // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor8;                      // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation7;                   // 0x05A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot9;                     // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType8;                   // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage3;                // 0x05AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AF[0x1];                                      // 0x05AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate4;                   // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockedByAAP7;                 // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReflect3;                      // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B6[0x2];                                      // 0x05B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor9;                      // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation8;                   // 0x05C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal4;                     // 0x05CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot10;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrate3;                    // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstHit2;                     // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5DB[0x1];                                      // 0x05DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CuttingRate5;                   // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage4;                // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReflect4;                      // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E2[0x2];                                      // 0x05E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_ReflectRotation2;               // 0x05E4(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBlocking7;                     // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ReflectSkillTag2;               // 0x05F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAvoidSkill2;                   // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602[0x2];                                      // 0x0602(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPoliticDamage_Damage1;                 // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcDamage_DamageForHPAP;                 // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_DamageForAAP;                  // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_CutDamage;                     // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcDamage_bRemainHP;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_bDamageIsCutByAAP;             // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamage_IsEndured;                     // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface4;             // 0x0630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface5;             // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter2;                  // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP2;                     // 0x065A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65B[0x5];                                      // 0x065B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP2;     // 0x0660(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP2;           // 0x0668(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlocked2;          // 0x0670(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface; // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IgnoreGivePassive_bIgnore;                // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIgnoreAddPassive_bIgnore;            // 0x068B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterIsAlive_bIsAlive;           // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandWithIndividualHP_IsStandWithIndividualHP; // 0x068E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x068F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent1;           // 0x0698(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor1;                    // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp1;                     // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex1;                // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromSweep;                      // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult1;                   // 0x06B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bHeadShot11;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPenetrate4;                    // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFirstHit3;                     // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x0743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0745(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0746(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0747(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0750(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x075C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0768(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0774(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0790(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x07A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x07B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldCheckRange_bShouldCheckRange;       // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisablePassive_bDisablePassive;      // 0x07DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DB[0x1];                                      // 0x07DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x07E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x07ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7EE[0x2];                                      // 0x07EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x07F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x07FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBBlockingRushSkill_C*             K2Node_CustomEvent_BlockingSkillComponent;         // 0x0808(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSeparateStandAttack;           // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0812(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0813(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0815(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_816[0x2];                                      // 0x0816(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0828(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcShotTransform_bSuccess;               // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_842[0x6];                                      // 0x0842(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_CalcShotTransform_Transforms;             // 0x0848(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array1;                           // 0x0858(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	uint8                                         Pad_868[0x8];                                      // 0x0868(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0870(0x0030)(IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_OutHits;    // 0x08A0(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_ReturnValue; // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x08B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x08C0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x08CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x08DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x08DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x08DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSeparateStandAttack_bSeparateStandAttack; // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8EA[0x6];                                      // 0x08EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Interface; // 0x08F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable1;                               // 0x0902(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_903[0x1];                                      // 0x0903(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0908(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0918(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_925[0x3];                                      // 0x0925(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0928(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B2[0x2];                                      // 0x09B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x09BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x09C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x09D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x09E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0A18(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0A24(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHeadShot_bHeadShot;                  // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A33[0x5];                                      // 0x0A33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1; // 0x0A38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A49[0x7];                                      // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2; // 0x0A50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingValid_bBlockingValid;        // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingComponent_bBlockingComponent; // 0x0A62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A63[0x5];                                      // 0x0A63(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3; // 0x0A68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4; // 0x0A80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BlockPenetrate_bBlock;                    // 0x0A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBlockingComponent_bBlockingComponent1; // 0x0A92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A93[0x5];                                      // 0x0A93(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface6;             // 0x0A98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPenetrate_bPenetrate;                // 0x0AA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bCharacter3;                  // 0x0AAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OwnHitParam_bLeftAP3;                     // 0x0AAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AAC[0x4];                                      // 0x0AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlockedByAAP3;     // 0x0AB0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_SETagBlockedByAAP3;           // 0x0AB8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_OwnHitParam_ParticleTagBlocked3;          // 0x0AC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfCheckDamageOverlap_ReturnValue;         // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x0AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPenetrate_bPenetrate1;               // 0x0ACA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0ACB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue11;                // 0x0ACC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ACD[0x3];                                      // 0x0ACD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0ADD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0ADE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue12;                // 0x0ADF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0AE8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPenetrating;                         // 0x0AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF5[0x3];                                      // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_FactorTag;                            // 0x0AF8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInvalidDamage;                       // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamagedActor;                         // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForHPAP;                        // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForAAP;                         // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CutDamage;                            // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1C[0x4];                                      // 0x0B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_DamageType;                           // 0x0B20(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_Event_DamagePriority;                       // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2D[0x3];                                      // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AttackDistance;                       // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamageCauser1;                        // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WithSeparatedStandAttack;             // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HitEnemysSeparatedStand;              // 0x0B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrateAP;                         // 0x0B42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNotUseCollision;                     // 0x0B43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEndured;                            // 0x0B44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B45[0x3];                                      // 0x0B45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                K2Node_Event_DamageDisplayParams;                  // 0x0B48(0x0030)(NoDestructor)
	struct FAJBDamageDisplayProperty              K2Node_Event_DamageDisplayProperty;                // 0x0B78(0x0003)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0B7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue2;                    // 0x0B7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0B7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7E[0x2];                                      // 0x0B7E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0B80(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0B8C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA9[0x7];                                      // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue10;                   // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue3;                    // 0x0BCA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BCB[0x1];                                      // 0x0BCB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item1;                          // 0x0BD0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue11;                   // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select1_Default;                            // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF2[0x2];                                      // 0x0BF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue12;                   // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue4;    // 0x0C11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0C12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0C13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C18[0x8];                                      // 0x0C18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0C20(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue13;                   // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue5;    // 0x0C69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0C6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6B[0x5];                                      // 0x0C6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue13;                // 0x0C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue9;                  // 0x0C79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue2;          // 0x0C7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7B[0x1];                                      // 0x0C7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue3;          // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C81[0x7];                                      // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item2;                          // 0x0C88(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit2;             // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap2;          // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D12[0x2];                                      // 0x0D12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time2;                     // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance2;                 // 0x0D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location2;                 // 0x0D1C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint2;              // 0x0D28(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal2;                   // 0x0D34(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal2;             // 0x0D40(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat2;                  // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor2;                 // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent2;             // 0x0D60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName2;              // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem2;                  // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex2;                // 0x0D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart2;               // 0x0D78(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd2;                 // 0x0D84(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue1;             // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D92[0x6];                                      // 0x0D92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface5; // 0x0D98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0DA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAA[0x6];                                      // 0x0DAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_BlockingRushOperatorInterface_C> K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface6; // 0x0DB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC1[0x7];                                      // 0x0DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBBlockingRushSkill_C*             CallFunc_GetComponentByClass_ReturnValue1;         // 0x0DC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD1[0x7];                                      // 0x0DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue14;                   // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue4;          // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character9;     // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess25;                     // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0DF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue6;    // 0x0DF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0DF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0DF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF5[0x3];                                      // 0x0DF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x0DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBlockingValid_bBlockingValid1;       // 0x0DFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFD[0x3];                                      // 0x0DFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AddCondition, class UObject* Causer, const struct FGameplayTag& CauserType)> K2Node_CreateDelegate_OutputDelegate; // 0x0E00(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0E10(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bBitesTheDust)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0E20(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0E30(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate3; // 0x0E38(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E49[0x3];                                      // 0x0E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DelaySec;                       // 0x0E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select3_Default;                            // 0x0E50(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0E58(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DeadActor;                      // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBitesTheDust;                  // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E72[0x6];                                      // 0x0E72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x0E78(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Causer;                         // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x0E88(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E91[0x7];                                      // 0x0E91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0E98(0x0020)()
	bool                                          CallFunc_CheckPassiveTagProhibition_bProhibitionTag; // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB9[0x7];                                      // 0x0EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameProjectileTrailBase_C*     CallFunc_FinishSpawningActor_ReturnValue2;         // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue5;          // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue10;                 // 0x0ED1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget1;                 // 0x0ED2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x0ED3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED4[0x4];                                      // 0x0ED4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select4_Default;                            // 0x0ED8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect1; // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue6;          // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0EE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EEA[0x2];                                      // 0x0EEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x0EEC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect2; // 0x0EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue14;                // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F01[0x3];                                      // 0x0F01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0F04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F09[0x7];                                      // 0x0F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array2;                           // 0x0F10(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CheckSpecifiedPassiveActive_bValid;       // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x0F21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue11;                 // 0x0F22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile) == 0x000010, "Wrong alignment on BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile");
static_assert(sizeof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile) == 0x000F30, "Wrong size on BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, EntryPoint) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetMovementLength_Length) == 0x000010, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetMovementLength_Length' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetCauserOwnerCharacterBP_CharacterBP) == 0x000018, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetCauserOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation1) == 0x000024, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location6) == 0x000038, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue1) == 0x000090, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OverlappedComponent) == 0x000098, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherActor) == 0x0000A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherComp) == 0x0000A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherBodyIndex) == 0x0000B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bFromSweep) == 0x0000B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SweepResult) == 0x0000B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetSurfaceType_ReturnValue) == 0x000140, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcHitLocation_HitImpactPoint) == 0x000144, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcHitLocation_HitImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcHitLocation_HitImpactNormal) == 0x000150, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcHitLocation_HitImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcHitLocation_HitLocation) == 0x00015C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcHitLocation_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000168, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckTargetSelf_bTarget) == 0x000179, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface1) == 0x000180, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess1) == 0x000190, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_DoesImplementInterface_ReturnValue) == 0x000191, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bCharacter) == 0x000192, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bLeftAP) == 0x000193, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlockedByAAP) == 0x000198, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_SETagBlockedByAAP) == 0x0001A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlocked) == 0x0001A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue1) == 0x0001B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable) == 0x0001B1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue) == 0x0001B2, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_EndPlayReason) == 0x0001B3, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetTransform_ReturnValue) == 0x0001C0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x0001F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0001F8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue2) == 0x000200, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000208, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess2) == 0x000210, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue) == 0x000211, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue3) == 0x000218, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000220, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess3) == 0x000228, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable1) == 0x000229, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue1) == 0x00022A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue4) == 0x000230, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor1) == 0x000238, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location7) == 0x000240, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor2) == 0x000250, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation2) == 0x000258, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface2) == 0x000268, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess4) == 0x000278, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckPossibleSpawnDecal_bPossible) == 0x000279, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckPossibleSpawnDecal_bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor) == 0x000280, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation) == 0x000288, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitNormal) == 0x000294, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitSurfaceType) == 0x0002A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_int_Loop_Counter_Variable) == 0x0002A4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Add_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetAJBGameInstance_bSuccess) == 0x0002AC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0002B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location5) == 0x0002B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Normal4) == 0x0002C4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Normal4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Rotation3) == 0x0002D0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Rotation3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bCharacter3) == 0x0002DC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bCharacter3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bLeftAP3) == 0x0002DD, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bLeftAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking3) == 0x0002DE, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot3) == 0x0002DF, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType3) == 0x0002E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP3) == 0x0002E1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlockedByAAP3) == 0x0002E8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlockedByAAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlocked3) == 0x0002F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlocked3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsPlayingReplay_ReturnValue) == 0x0002F8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location4) == 0x0002FC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Normal3) == 0x000308, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Normal3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Rotation2) == 0x000314, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Rotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bCharacter2) == 0x000320, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bCharacter2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bLeftAP2) == 0x000321, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bLeftAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking2) == 0x000322, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot2) == 0x000323, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType2) == 0x000324, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP2) == 0x000325, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlockedByAAP2) == 0x000328, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlocked2) == 0x000330, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlocked2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location3) == 0x000338, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Normal2) == 0x000344, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Normal2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Rotation1) == 0x000350, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Rotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bCharacter1) == 0x00035C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bLeftAP1) == 0x00035D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bLeftAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking1) == 0x00035E, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot1) == 0x00035F, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType1) == 0x000360, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP1) == 0x000361, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlockedByAAP1) == 0x000368, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlocked1) == 0x000370, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlocked1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location2) == 0x000378, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Normal1) == 0x000384, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Rotation) == 0x000390, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bCharacter) == 0x00039C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bLeftAP) == 0x00039D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking) == 0x00039E, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot) == 0x00039F, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType) == 0x0003A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP) == 0x0003A1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlockedByAAP) == 0x0003A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ParticleTagBlocked) == 0x0003B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ParticleTagBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetAJBGameInstance_bSuccess1) == 0x0003B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0003C0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue2) == 0x0003C8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsPlayingReplay_ReturnValue1) == 0x0003C9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetComponentsByClass_ReturnValue) == 0x0003D0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_Length_ReturnValue) == 0x0003E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Less_IntInt_ReturnValue) == 0x0003E4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bSuccess) == 0x0003E5, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor3) == 0x0003E8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation3) == 0x0003F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitNormal1) == 0x0003FC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot4) == 0x000408, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bPenetrate) == 0x000409, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bPenetrate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate) == 0x00040C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000410, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_int_Loop_Counter_Variable1) == 0x000414, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000418, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Add_IntInt_ReturnValue1) == 0x000424, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetActorForwardVector_ReturnValue) == 0x000428, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor4) == 0x000438, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation4) == 0x000440, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitNormal2) == 0x00044C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitNormal2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot5) == 0x000458, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bPenetrate1) == 0x000459, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bPenetrate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bFirstHit) == 0x00045A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate1) == 0x00045C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType4) == 0x000460, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bDisableDamage) == 0x000461, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bReflect) == 0x000462, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectRotation) == 0x000464, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking4) == 0x000470, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP4) == 0x000471, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectSkillTag) == 0x000478, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bAvoidSkill) == 0x000480, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor5) == 0x000488, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation5) == 0x000490, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot6) == 0x00049C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType5) == 0x00049D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bDisableDamage1) == 0x00049E, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bDisableDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate2) == 0x0004A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP5) == 0x0004A4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bReflect1) == 0x0004A5, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bReflect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue3) == 0x0004A6, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue4) == 0x0004A7, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor6) == 0x0004A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation6) == 0x0004B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitNormal3) == 0x0004BC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitNormal3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot7) == 0x0004C8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bPenetrate2) == 0x0004C9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bPenetrate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bFirstHit1) == 0x0004CA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bFirstHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate3) == 0x0004CC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType6) == 0x0004D0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bDisableDamage2) == 0x0004D1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bDisableDamage2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bReflect2) == 0x0004D2, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bReflect2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectRotation1) == 0x0004D4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectRotation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking5) == 0x0004E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP6) == 0x0004E1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectSkillTag1) == 0x0004E8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectSkillTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bAvoidSkill1) == 0x0004F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bAvoidSkill1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SpawnLocation) == 0x0004F4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SpawnNormal) == 0x000500, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SpawnNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking6) == 0x00050C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot8) == 0x00050D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor7) == 0x000510, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType7) == 0x000518, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface3) == 0x000520, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess5) == 0x000530, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetPoliticDamage_Damage) == 0x000534, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetPoliticDamage_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bCharacter1) == 0x000538, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bLeftAP1) == 0x000539, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bLeftAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlockedByAAP1) == 0x000540, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_SETagBlockedByAAP1) == 0x000548, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_SETagBlockedByAAP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlocked1) == 0x000550, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlocked1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcAAPInfo_bDamageCutByAAP) == 0x000558, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcAAPInfo_bDamageCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcAAPInfo_bDamageBlockByAAP) == 0x000559, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcAAPInfo_bDamageBlockByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_ShouldRequestHitEffect_bShouldRequest) == 0x00055A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_ShouldRequestHitEffect_bShouldRequest' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_NegateVector_ReturnValue) == 0x00055C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Add_VectorVector_ReturnValue) == 0x000568, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_FindLookAtRotation_ReturnValue) == 0x000574, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetComponentByClass_ReturnValue) == 0x000580, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsValid_ReturnValue) == 0x000588, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bSucceed) == 0x000589, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bSucceed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue5) == 0x000590, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor8) == 0x000598, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation7) == 0x0005A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot9) == 0x0005AC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SurfaceType8) == 0x0005AD, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SurfaceType8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bDisableDamage3) == 0x0005AE, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bDisableDamage3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate4) == 0x0005B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlockedByAAP7) == 0x0005B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlockedByAAP7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bReflect3) == 0x0005B5, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bReflect3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitActor9) == 0x0005B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitActor9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitLocation8) == 0x0005C0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitLocation8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_HitNormal4) == 0x0005CC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_HitNormal4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot10) == 0x0005D8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bPenetrate3) == 0x0005D9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bPenetrate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bFirstHit2) == 0x0005DA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bFirstHit2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CuttingRate5) == 0x0005DC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CuttingRate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bDisableDamage4) == 0x0005E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bDisableDamage4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bReflect4) == 0x0005E1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bReflect4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectRotation2) == 0x0005E4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectRotation2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBlocking7) == 0x0005F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBlocking7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_ReflectSkillTag2) == 0x0005F8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_ReflectSkillTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bAvoidSkill2) == 0x000600, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bAvoidSkill2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue5) == 0x000601, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetPoliticDamage_Damage1) == 0x000604, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetPoliticDamage_Damage1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000608, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess6) == 0x000618, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_DamageForHPAP) == 0x00061C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_DamageForAAP) == 0x000620, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_CutDamage) == 0x000624, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_bRemainHP) == 0x000628, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_bRemainHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_bDamageIsCutByAAP) == 0x000629, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_bDamageIsCutByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcDamage_IsEndured) == 0x00062A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcDamage_IsEndured' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface4) == 0x000630, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess7) == 0x000640, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface5) == 0x000648, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess8) == 0x000658, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bCharacter2) == 0x000659, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bCharacter2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bLeftAP2) == 0x00065A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bLeftAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlockedByAAP2) == 0x000660, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_SETagBlockedByAAP2) == 0x000668, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_SETagBlockedByAAP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlocked2) == 0x000670, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlocked2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface) == 0x000678, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess9) == 0x000688, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IgnoreGivePassive_bIgnore) == 0x000689, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IgnoreGivePassive_bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue6) == 0x00068A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckIgnoreAddPassive_bIgnore) == 0x00068B, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckIgnoreAddPassive_bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckCharacterIsAlive_bIsAlive) == 0x00068C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckCharacterIsAlive_bIsAlive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue7) == 0x00068D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsStandWithIndividualHP_IsStandWithIndividualHP) == 0x00068E, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsStandWithIndividualHP_IsStandWithIndividualHP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00068F, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue) == 0x000690, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue1) == 0x000691, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OverlappedComponent1) == 0x000698, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherActor1) == 0x0006A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherComp1) == 0x0006A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_OtherBodyIndex1) == 0x0006B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_FromSweep) == 0x0006B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_SweepResult1) == 0x0006B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bHeadShot11) == 0x000740, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bHeadShot11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bPenetrate4) == 0x000741, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bPenetrate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bFirstHit3) == 0x000742, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bFirstHit3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue8) == 0x000743, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue2) == 0x000744, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue9) == 0x000745, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x000746, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000747, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Time) == 0x000748, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Distance) == 0x00074C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Location) == 0x000750, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x00075C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Normal) == 0x000768, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x000774, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_PhysMat) == 0x000780, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitActor) == 0x000788, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitComponent) == 0x000790, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x000798, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitItem) == 0x0007A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x0007A4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceStart) == 0x0007A8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x0007B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue6) == 0x0007C0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_ShouldCheckRange_bShouldCheckRange) == 0x0007C8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_ShouldCheckRange_bShouldCheckRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0007D0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess10) == 0x0007D8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue2) == 0x0007D9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckDisablePassive_bDisablePassive) == 0x0007DA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckDisablePassive_bDisablePassive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x0007DC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0007E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue10) == 0x0007EC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue1) == 0x0007ED, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location1) == 0x0007F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Normal) == 0x0007FC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_BlockingSkillComponent) == 0x000808, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_BlockingSkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bSeparateStandAttack) == 0x000810, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue2) == 0x000811, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue3) == 0x000812, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue4) == 0x000813, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue5) == 0x000814, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue6) == 0x000815, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000818, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue7) == 0x000820, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_MakeArray_Array) == 0x000828, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000838, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess11) == 0x000840, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcShotTransform_bSuccess) == 0x000841, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcShotTransform_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CalcShotTransform_Transforms) == 0x000848, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CalcShotTransform_Transforms' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_MakeArray_Array1) == 0x000858, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_Get_Item) == 0x000870, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_AJBMultiSphereTraceForObjects_OutHits) == 0x0008A0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_AJBMultiSphereTraceForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_AJBMultiSphereTraceForObjects_ReturnValue) == 0x0008B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_AJBMultiSphereTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakTransform_Location) == 0x0008B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakTransform_Rotation) == 0x0008C0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakTransform_Scale) == 0x0008CC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_Length_ReturnValue1) == 0x0008D8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0008DC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Less_IntInt_ReturnValue1) == 0x0008DD, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue7) == 0x0008DE, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_byte_Variable) == 0x0008DF, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue8) == 0x0008E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckSeparateStandAttack_bSeparateStandAttack) == 0x0008E8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckSeparateStandAttack_bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsServer_ReturnValue) == 0x0008E9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Interface) == 0x0008F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess12) == 0x000900, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000901, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_byte_Variable1) == 0x000902, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DeltaSeconds) == 0x000904, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000908, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_OtherActor) == 0x000910, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_OtherComp) == 0x000918, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000920, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_bFromSweep) == 0x000924, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_ComponentBoundEvent_SweepResult) == 0x000928, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bBlockingHit1) == 0x0009B0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bInitialOverlap1) == 0x0009B1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Time1) == 0x0009B4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Distance1) == 0x0009B8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Location1) == 0x0009BC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactPoint1) == 0x0009C8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Normal1) == 0x0009D4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactNormal1) == 0x0009E0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_PhysMat1) == 0x0009F0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitActor1) == 0x0009F8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitComponent1) == 0x000A00, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitBoneName1) == 0x000A08, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitItem1) == 0x000A10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_FaceIndex1) == 0x000A14, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceStart1) == 0x000A18, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceEnd1) == 0x000A24, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000A30, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckHeadShot_bHeadShot) == 0x000A31, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckHeadShot_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000A32, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1) == 0x000A38, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess13) == 0x000A48, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2) == 0x000A50, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess14) == 0x000A60, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckBlockingValid_bBlockingValid) == 0x000A61, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckBlockingValid_bBlockingValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckBlockingComponent_bBlockingComponent) == 0x000A62, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckBlockingComponent_bBlockingComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3) == 0x000A68, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess15) == 0x000A78, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4) == 0x000A80, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess16) == 0x000A90, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BlockPenetrate_bBlock) == 0x000A91, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BlockPenetrate_bBlock' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckBlockingComponent_bBlockingComponent1) == 0x000A92, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckBlockingComponent_bBlockingComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_AJBInterface6) == 0x000A98, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_AJBInterface6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess17) == 0x000AA8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckPenetrate_bPenetrate) == 0x000AA9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckPenetrate_bPenetrate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bCharacter3) == 0x000AAA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bCharacter3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_bLeftAP3) == 0x000AAB, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_bLeftAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlockedByAAP3) == 0x000AB0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlockedByAAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_SETagBlockedByAAP3) == 0x000AB8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_SETagBlockedByAAP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_OwnHitParam_ParticleTagBlocked3) == 0x000AC0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_OwnHitParam_ParticleTagBlocked3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IfCheckDamageOverlap_ReturnValue) == 0x000AC8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IfCheckDamageOverlap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue8) == 0x000AC9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckPenetrate_bPenetrate1) == 0x000ACA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckPenetrate_bPenetrate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Select_Default) == 0x000ACB, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue11) == 0x000ACC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_Operator) == 0x000AD0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_Time) == 0x000AD8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_Timing) == 0x000ADC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bEnable) == 0x000ADD, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bOperatorIsEmpty) == 0x000ADE, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue12) == 0x000ADF, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageCauser) == 0x000AE0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_HitLocation) == 0x000AE8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bPenetrating) == 0x000AF4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bPenetrating' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_FactorTag) == 0x000AF8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bInvalidDamage) == 0x000B00, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bInvalidDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamagedActor) == 0x000B08, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageForHPAP) == 0x000B10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageForAAP) == 0x000B14, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_CutDamage) == 0x000B18, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageType) == 0x000B20, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_SerialNumber) == 0x000B28, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamagePriority) == 0x000B2C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_AttackDistance) == 0x000B30, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageCauser1) == 0x000B38, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_WithSeparatedStandAttack) == 0x000B40, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_HitEnemysSeparatedStand) == 0x000B41, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bPenetrateAP) == 0x000B42, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_bNotUseCollision) == 0x000B43, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_IsEndured) == 0x000B44, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_IsEndured' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageDisplayParams) == 0x000B48, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Event_DamageDisplayProperty) == 0x000B78, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Event_DamageDisplayProperty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsServer_ReturnValue1) == 0x000B7B, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsServer_ReturnValue2) == 0x000B7C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000B7D, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Location) == 0x000B80, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000B8C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue9) == 0x000B98, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000BA0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess18) == 0x000BA8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue10) == 0x000BB0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue3) == 0x000BB8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000BC0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess19) == 0x000BC8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000BC9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsServer_ReturnValue3) == 0x000BCA, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_int_Array_Index_Variable) == 0x000BCC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_Get_Item1) == 0x000BD0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable2) == 0x000BD8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue11) == 0x000BE0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000BE8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess20) == 0x000BF0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Select1_Default) == 0x000BF1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Add_IntInt_ReturnValue2) == 0x000BF4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue12) == 0x000BF8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsDedicatedServer_ReturnValue) == 0x000C00, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000C08, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess21) == 0x000C10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue4) == 0x000C11, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000C12, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000C13, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_float_Variable) == 0x000C14, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_MakeTransform_ReturnValue1) == 0x000C20, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue13) == 0x000C50, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_float_Variable1) == 0x000C58, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000C60, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess22) == 0x000C68, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue5) == 0x000C69, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_True_if_break_was_hit_Variable) == 0x000C6A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000C70, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue13) == 0x000C78, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue9) == 0x000C79, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue2) == 0x000C7A, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_int_Array_Index_Variable1) == 0x000C7C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue3) == 0x000C80, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Array_Get_Item2) == 0x000C88, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bBlockingHit2) == 0x000D10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bBlockingHit2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_bInitialOverlap2) == 0x000D11, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_bInitialOverlap2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Time2) == 0x000D14, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Time2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Distance2) == 0x000D18, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Distance2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Location2) == 0x000D1C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactPoint2) == 0x000D28, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactPoint2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_Normal2) == 0x000D34, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_Normal2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_ImpactNormal2) == 0x000D40, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_ImpactNormal2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_PhysMat2) == 0x000D50, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_PhysMat2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitActor2) == 0x000D58, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitComponent2) == 0x000D60, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitComponent2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitBoneName2) == 0x000D68, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitBoneName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_HitItem2) == 0x000D70, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_HitItem2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_FaceIndex2) == 0x000D74, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_FaceIndex2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceStart2) == 0x000D78, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceStart2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BreakHitResult_TraceEnd2) == 0x000D84, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BreakHitResult_TraceEnd2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_ComponentHasTag_ReturnValue) == 0x000D90, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_ComponentHasTag_ReturnValue1) == 0x000D91, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_ComponentHasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface5) == 0x000D98, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess23) == 0x000DA8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue3) == 0x000DA9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface6) == 0x000DB0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBI_Blocking_Rush_Operator_Interface6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess24) == 0x000DC0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetComponentByClass_ReturnValue1) == 0x000DC8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsPair_bPairCharacter) == 0x000DD0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_GetOwner_ReturnValue14) == 0x000DD8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_GetOwner_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue4) == 0x000DE0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_AsBP_AJBIn_Game_Character9) == 0x000DE8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_AsBP_AJBIn_Game_Character9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_DynamicCast_bSuccess25) == 0x000DF0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_DynamicCast_bSuccess25' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue4) == 0x000DF1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_HasLocalSharedController_ReturnValue6) == 0x000DF2, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_HasLocalSharedController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000DF3, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable3) == 0x000DF4, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Select2_Default) == 0x000DF8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckBlockingValid_bBlockingValid1) == 0x000DFC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckBlockingValid_bBlockingValid1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CreateDelegate_OutputDelegate) == 0x000E00, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CreateDelegate_OutputDelegate1) == 0x000E10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CreateDelegate_OutputDelegate2) == 0x000E20, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_struct_Variable) == 0x000E30, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CreateDelegate_OutputDelegate3) == 0x000E38, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable4) == 0x000E48, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_DelaySec) == 0x000E4C, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_DelaySec' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Select3_Default) == 0x000E50, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_DamageType) == 0x000E58, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_DeadActor) == 0x000E60, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_DamageCauser) == 0x000E68, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsValid_ReturnValue1) == 0x000E70, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_bBitesTheDust) == 0x000E71, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_bBitesTheDust' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_AddCondition) == 0x000E78, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_Causer) == 0x000E80, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_CustomEvent_CauserType) == 0x000E88, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsValidClass_ReturnValue) == 0x000E90, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000E98, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckPassiveTagProhibition_bProhibitionTag) == 0x000EB8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckPassiveTagProhibition_bProhibitionTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x000EC0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_FinishSpawningActor_ReturnValue2) == 0x000EC8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue5) == 0x000ED0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue10) == 0x000ED1, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckTargetSelf_bTarget1) == 0x000ED2, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckTargetSelf_bTarget1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_bool_Variable5) == 0x000ED3, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_Select4_Default) == 0x000ED8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_RequestParticleEffectOnLocal_ParticleEffect1) == 0x000EE0, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_RequestParticleEffectOnLocal_ParticleEffect1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsGameplayTagValid_ReturnValue6) == 0x000EE8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsGameplayTagValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsValid_ReturnValue2) == 0x000EE9, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x000EEC, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_RequestParticleEffectOnLocal_ParticleEffect2) == 0x000EF8, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_RequestParticleEffectOnLocal_ParticleEffect2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_Not_PreBool_ReturnValue14) == 0x000F00, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_Not_PreBool_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, Temp_int_Variable) == 0x000F04, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_IsValid_ReturnValue3) == 0x000F08, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, K2Node_MakeArray_Array2) == 0x000F10, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_CheckSpecifiedPassiveActive_bValid) == 0x000F20, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_CheckSpecifiedPassiveActive_bValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanOR_ReturnValue5) == 0x000F21, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile, CallFunc_BooleanAND_ReturnValue11) == 0x000F22, "Member 'BP_AJBInGameProjectile_C_ExecuteUbergraph_BP_AJBInGameProjectile::CallFunc_BooleanAND_ReturnValue11' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnPassiveAddedAfterSetCauser
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser) == 0x000018, "Wrong size on BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser, AddCondition) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser, Causer) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser, CauserType) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OnPassiveAddedAfterSetCauser::CauserType' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnBecomeLastSurvivor
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_OnBecomeLastSurvivor final
{
public:
	bool                                          bBitesTheDust;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnBecomeLastSurvivor) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_OnBecomeLastSurvivor");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnBecomeLastSurvivor) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_OnBecomeLastSurvivor");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnBecomeLastSurvivor, bBitesTheDust) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnBecomeLastSurvivor::bBitesTheDust' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnCharacterDead
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectile_C_OnCharacterDead final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnCharacterDead) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnCharacterDead");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnCharacterDead) == 0x000018, "Wrong size on BP_AJBInGameProjectile_C_OnCharacterDead");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCharacterDead, DamageType) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnCharacterDead::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCharacterDead, DeadActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnCharacterDead::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCharacterDead, DamageCauser) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OnCharacterDead::DamageCauser' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.DelayedDestroy
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_C_DelayedDestroy final
{
public:
	float                                         DelaySec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_DelayedDestroy) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_DelayedDestroy");
static_assert(sizeof(BP_AJBInGameProjectile_C_DelayedDestroy) == 0x000004, "Wrong size on BP_AJBInGameProjectile_C_DelayedDestroy");
static_assert(offsetof(BP_AJBInGameProjectile_C_DelayedDestroy, DelaySec) == 0x000000, "Member 'BP_AJBInGameProjectile_C_DelayedDestroy::DelaySec' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.MC_DestroySelf
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_MC_DestroySelf final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_MC_DestroySelf) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_MC_DestroySelf");
static_assert(sizeof(BP_AJBInGameProjectile_C_MC_DestroySelf) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_MC_DestroySelf");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_DestroySelf, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_MC_DestroySelf::Location' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ROS_NotifyBlockingOnProjectileOwnerEnv
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBBlockingRushSkill_C*             BlockingSkillComponent;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSeparateStandAttack;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv");
static_assert(sizeof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv) == 0x000028, "Wrong size on BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv, BlockingSkillComponent) == 0x000018, "Member 'BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv::BlockingSkillComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv, bSeparateStandAttack) == 0x000020, "Member 'BP_AJBInGameProjectile_C_ROS_NotifyBlockingOnProjectileOwnerEnv::bSeparateStandAttack' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.RequestHitEffect_Core
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameProjectile_C_RequestHitEffect_Core final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bCharacter;                                        // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBlocked;                                // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_RequestHitEffect_Core) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_RequestHitEffect_Core");
static_assert(sizeof(BP_AJBInGameProjectile_C_RequestHitEffect_Core) == 0x000040, "Wrong size on BP_AJBInGameProjectile_C_RequestHitEffect_Core");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, Rotation) == 0x000018, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, bCharacter) == 0x000024, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, bLeftAP) == 0x000025, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, bBlocking) == 0x000026, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, bHeadShot) == 0x000027, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, bBlockedByAAP) == 0x000029, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, ParticleTagBlockedByAAP) == 0x000030, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect_Core, ParticleTagBlocked) == 0x000038, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect_Core::ParticleTagBlocked' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.MC_RequestHitEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameProjectile_C_MC_RequestHitEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bCharacter;                                        // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBlocked;                                // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_MC_RequestHitEffect) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_MC_RequestHitEffect");
static_assert(sizeof(BP_AJBInGameProjectile_C_MC_RequestHitEffect) == 0x000040, "Wrong size on BP_AJBInGameProjectile_C_MC_RequestHitEffect");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, Rotation) == 0x000018, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, bCharacter) == 0x000024, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, bLeftAP) == 0x000025, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, bBlocking) == 0x000026, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, bHeadShot) == 0x000027, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, bBlockedByAAP) == 0x000029, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, ParticleTagBlockedByAAP) == 0x000030, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_RequestHitEffect, ParticleTagBlocked) == 0x000038, "Member 'BP_AJBInGameProjectile_C_MC_RequestHitEffect::ParticleTagBlocked' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ROS_RequestHitEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameProjectile_C_ROS_RequestHitEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bCharacter;                                        // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBlocked;                                // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_ROS_RequestHitEffect");
static_assert(sizeof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect) == 0x000040, "Wrong size on BP_AJBInGameProjectile_C_ROS_RequestHitEffect");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, Rotation) == 0x000018, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, bCharacter) == 0x000024, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, bLeftAP) == 0x000025, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, bBlocking) == 0x000026, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, bHeadShot) == 0x000027, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, bBlockedByAAP) == 0x000029, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, ParticleTagBlockedByAAP) == 0x000030, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_RequestHitEffect, ParticleTagBlocked) == 0x000038, "Member 'BP_AJBInGameProjectile_C_ROS_RequestHitEffect::ParticleTagBlocked' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.RequestHitEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameProjectile_C_RequestHitEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bCharacter;                                        // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBlocked;                                // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_RequestHitEffect) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_RequestHitEffect");
static_assert(sizeof(BP_AJBInGameProjectile_C_RequestHitEffect) == 0x000040, "Wrong size on BP_AJBInGameProjectile_C_RequestHitEffect");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, Normal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, Rotation) == 0x000018, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, bCharacter) == 0x000024, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, bLeftAP) == 0x000025, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, bBlocking) == 0x000026, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, bHeadShot) == 0x000027, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, bBlockedByAAP) == 0x000029, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, ParticleTagBlockedByAAP) == 0x000030, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_RequestHitEffect, ParticleTagBlocked) == 0x000038, "Member 'BP_AJBInGameProjectile_C_RequestHitEffect::ParticleTagBlocked' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnHitObjectiveCollision_Local
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType_0;                                  // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local) == 0x000028, "Wrong size on BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local, HitSurfaceType_0) == 0x000020, "Member 'BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Local::HitSurfaceType_0' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_ReceiveEndPlay");
static_assert(sizeof(BP_AJBInGameProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_ReceiveEndPlay");
static_assert(offsetof(BP_AJBInGameProjectile_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.BeginObjectiveCollisionOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap");
static_assert(sizeof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap) == 0x0000A8, "Wrong size on BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, bFromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectile_C_BeginObjectiveCollisionOverlap::SweepResult' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnHitObjectiveCollision_Server
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server, Location) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnHitObjectiveCollision_Server::Location' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ROS_HitObjectiveCollision
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision");
static_assert(sizeof(BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision, HitLocation_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ROS_HitObjectiveCollision::HitLocation_0' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ROS_OnDamageOverlap
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectile_C_ROS_OnDamageOverlap final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ROS_OnDamageOverlap) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_ROS_OnDamageOverlap");
static_assert(sizeof(BP_AJBInGameProjectile_C_ROS_OnDamageOverlap) == 0x000018, "Wrong size on BP_AJBInGameProjectile_C_ROS_OnDamageOverlap");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_OnDamageOverlap, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ROS_OnDamageOverlap::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_OnDamageOverlap, Location) == 0x000008, "Member 'BP_AJBInGameProjectile_C_ROS_OnDamageOverlap::Location' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnDamageOverlap
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectile_C_OnDamageOverlap final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnDamageOverlap) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnDamageOverlap");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnDamageOverlap) == 0x000018, "Wrong size on BP_AJBInGameProjectile_C_OnDamageOverlap");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnDamageOverlap, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnDamageOverlap::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnDamageOverlap, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnDamageOverlap::HitLocation_0' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnPassiveSkillAffecting
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameProjectile_C_OnPassiveSkillAffecting final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnPassiveSkillAffecting");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting) == 0x000030, "Wrong size on BP_AJBInGameProjectile_C_OnPassiveSkillAffecting");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, bSuccess) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, HitActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, HitLocation_0) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, HitNormal_0) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, bHeadShot) == 0x000028, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, bPenetrate_0) == 0x000029, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnPassiveSkillAffecting, CuttingRate) == 0x00002C, "Member 'BP_AJBInGameProjectile_C_OnPassiveSkillAffecting::CuttingRate' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ROS_TryServerConsume
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameProjectile_C_ROS_TryServerConsume final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag_0;                                 // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ROS_TryServerConsume) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_ROS_TryServerConsume");
static_assert(sizeof(BP_AJBInGameProjectile_C_ROS_TryServerConsume) == 0x000050, "Wrong size on BP_AJBInGameProjectile_C_ROS_TryServerConsume");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bPenetrate_0) == 0x000021, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bFirstHit) == 0x000022, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, CuttingRate) == 0x000024, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bDisableDamage) == 0x000029, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bReflect) == 0x00002A, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, ReflectRotation) == 0x00002C, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bBlocking) == 0x000038, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bBlockedByAAP) == 0x000039, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, ReflectSkillTag_0) == 0x000040, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::ReflectSkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ROS_TryServerConsume, bAvoidSkill) == 0x000048, "Member 'BP_AJBInGameProjectile_C_ROS_TryServerConsume::bAvoidSkill' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.MC_TryServerConsume
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_MC_TryServerConsume final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_MC_TryServerConsume) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_MC_TryServerConsume");
static_assert(sizeof(BP_AJBInGameProjectile_C_MC_TryServerConsume) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_MC_TryServerConsume");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, bHeadShot) == 0x000014, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, SurfaceType) == 0x000015, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, bDisableDamage) == 0x000016, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, CuttingRate) == 0x000018, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, bBlockedByAAP) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_MC_TryServerConsume, bReflect) == 0x00001D, "Member 'BP_AJBInGameProjectile_C_MC_TryServerConsume::bReflect' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.TryServerConsume
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameProjectile_C_TryServerConsume final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag_0;                                 // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_TryServerConsume) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_TryServerConsume");
static_assert(sizeof(BP_AJBInGameProjectile_C_TryServerConsume) == 0x000050, "Wrong size on BP_AJBInGameProjectile_C_TryServerConsume");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bPenetrate_0) == 0x000021, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bFirstHit) == 0x000022, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, CuttingRate) == 0x000024, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bDisableDamage) == 0x000029, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bReflect) == 0x00002A, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, ReflectRotation) == 0x00002C, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bBlocking) == 0x000038, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bBlockedByAAP) == 0x000039, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, ReflectSkillTag_0) == 0x000040, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::ReflectSkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_TryServerConsume, bAvoidSkill) == 0x000048, "Member 'BP_AJBInGameProjectile_C_TryServerConsume::bAvoidSkill' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.SpawnParticle
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameProjectile_C_SpawnParticle final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnNormal;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlocking;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_SpawnParticle) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_SpawnParticle");
static_assert(sizeof(BP_AJBInGameProjectile_C_SpawnParticle) == 0x000030, "Wrong size on BP_AJBInGameProjectile_C_SpawnParticle");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, SpawnLocation) == 0x000000, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, SpawnNormal) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::SpawnNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, bBlocking) == 0x000018, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, bHeadShot) == 0x000019, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, HitActor) == 0x000020, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SpawnParticle, SurfaceType) == 0x000028, "Member 'BP_AJBInGameProjectile_C_SpawnParticle::SurfaceType' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.LocalConsume
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_LocalConsume final
{
public:
	bool                                          bSucceed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_LocalConsume) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_LocalConsume");
static_assert(sizeof(BP_AJBInGameProjectile_C_LocalConsume) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_LocalConsume");
static_assert(offsetof(BP_AJBInGameProjectile_C_LocalConsume, bSucceed) == 0x000000, "Member 'BP_AJBInGameProjectile_C_LocalConsume::bSucceed' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnMC_ProjectileHit
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_OnMC_ProjectileHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnMC_ProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_OnMC_ProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, bHeadShot) == 0x000014, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, SurfaceType) == 0x000015, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, bDisableDamage) == 0x000016, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, CuttingRate) == 0x000018, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, bBlockedByAAP) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnMC_ProjectileHit, bReflect) == 0x00001D, "Member 'BP_AJBInGameProjectile_C_OnMC_ProjectileHit::bReflect' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnROS_ProjectileHit
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameProjectile_C_OnROS_ProjectileHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag_0;                                 // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnROS_ProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit) == 0x000050, "Wrong size on BP_AJBInGameProjectile_C_OnROS_ProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bPenetrate_0) == 0x000021, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bFirstHit) == 0x000022, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, CuttingRate) == 0x000024, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bDisableDamage) == 0x000028, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bReflect) == 0x000029, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, ReflectRotation) == 0x00002C, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bBlocking) == 0x000038, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, ReflectSkillTag_0) == 0x000040, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::ReflectSkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnROS_ProjectileHit, bAvoidSkill) == 0x000048, "Member 'BP_AJBInGameProjectile_C_OnROS_ProjectileHit::bAvoidSkill' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnProjectileHit
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AJBInGameProjectile_C_OnProjectileHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSweep;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bHeadShot;                                         // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x00AA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnProjectileHit) == 0x0000B0, "Wrong size on BP_AJBInGameProjectile_C_OnProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, FromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, bHeadShot) == 0x0000A8, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, bPenetrate_0) == 0x0000A9, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnProjectileHit, bFirstHit) == 0x0000AA, "Member 'BP_AJBInGameProjectile_C_OnProjectileHit::bFirstHit' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameProjectile_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameProjectile_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectile_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameProjectile_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameProjectile_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameProjectile_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameProjectile_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameProjectile_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameProjectile_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.DamageOverlapped
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameProjectile_C_DamageOverlapped final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrating;                                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FactorTag;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvalidDamage;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_DamageOverlapped) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_DamageOverlapped");
static_assert(sizeof(BP_AJBInGameProjectile_C_DamageOverlapped) == 0x000028, "Wrong size on BP_AJBInGameProjectile_C_DamageOverlapped");
static_assert(offsetof(BP_AJBInGameProjectile_C_DamageOverlapped, DamageCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_DamageOverlapped::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DamageOverlapped, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_DamageOverlapped::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DamageOverlapped, bPenetrating) == 0x000014, "Member 'BP_AJBInGameProjectile_C_DamageOverlapped::bPenetrating' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DamageOverlapped, FactorTag) == 0x000018, "Member 'BP_AJBInGameProjectile_C_DamageOverlapped::FactorTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DamageOverlapped, bInvalidDamage) == 0x000020, "Member 'BP_AJBInGameProjectile_C_DamageOverlapped::bInvalidDamage' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.AJBDamage
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameProjectile_C_AJBDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSeparatedStandAttack;                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x003B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndured;                                         // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                DamageDisplayParams;                               // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FAJBDamageDisplayProperty              DamageDisplayProperty;                             // 0x0070(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_AJBDamage) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_AJBDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_AJBDamage) == 0x000078, "Wrong size on BP_AJBInGameProjectile_C_AJBDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamagedActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageForHPAP) == 0x000008, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageForAAP) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, CutDamage) == 0x000010, "Member 'BP_AJBInGameProjectile_C_AJBDamage::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageType) == 0x000018, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, SerialNumber_0) == 0x000020, "Member 'BP_AJBInGameProjectile_C_AJBDamage::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamagePriority) == 0x000024, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, AttackDistance) == 0x000028, "Member 'BP_AJBInGameProjectile_C_AJBDamage::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageCauser) == 0x000030, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, WithSeparatedStandAttack) == 0x000038, "Member 'BP_AJBInGameProjectile_C_AJBDamage::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, HitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBInGameProjectile_C_AJBDamage::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, bPenetrateAP) == 0x00003A, "Member 'BP_AJBInGameProjectile_C_AJBDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, bNotUseCollision) == 0x00003B, "Member 'BP_AJBInGameProjectile_C_AJBDamage::bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, IsEndured) == 0x00003C, "Member 'BP_AJBInGameProjectile_C_AJBDamage::IsEndured' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageDisplayParams) == 0x000040, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_AJBDamage, DamageDisplayProperty) == 0x000070, "Member 'BP_AJBInGameProjectile_C_AJBDamage::DamageDisplayProperty' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OnCollisionOverlap
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBInGameProjectile_C_OnCollisionOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             SweepResult;                                       // 0x0018(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OnCollisionOverlap) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OnCollisionOverlap");
static_assert(sizeof(BP_AJBInGameProjectile_C_OnCollisionOverlap) == 0x0000A0, "Wrong size on BP_AJBInGameProjectile_C_OnCollisionOverlap");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCollisionOverlap, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OnCollisionOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCollisionOverlap, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OnCollisionOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCollisionOverlap, OtherComponent) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OnCollisionOverlap::OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OnCollisionOverlap, SweepResult) == 0x000018, "Member 'BP_AJBInGameProjectile_C_OnCollisionOverlap::SweepResult' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetPoliticDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_GetPoliticDamage final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Damage_0;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempDamage;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamageOnDefault_Damage;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamageOnSeparate_Damage;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamageOnHeadShot_Damage;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetPoliticDamage) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_GetPoliticDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetPoliticDamage) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_GetPoliticDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, bHeadShot) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, Damage_0) == 0x000004, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, TempDamage) == 0x000008, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::TempDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, CallFunc_CalcDamageOnDefault_Damage) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::CallFunc_CalcDamageOnDefault_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, CallFunc_CalcDamageOnSeparate_Damage) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::CallFunc_CalcDamageOnSeparate_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, CallFunc_CalcDamageOnHeadShot_Damage) == 0x000014, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::CallFunc_CalcDamageOnHeadShot_Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPoliticDamage, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_GetPoliticDamage::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckHeadShot
// 0x01A0 (0x01A0 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckHeadShot final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits; // 0x0070(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckHeadShot) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckHeadShot");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckHeadShot) == 0x0001A0, "Wrong size on BP_AJBInGameProjectile_C_CheckHeadShot");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, Location) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, Direction) == 0x000014, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::Direction' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, K2Node_MakeArray_Array1) == 0x000048, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits) == 0x000070, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__OutHits' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue) == 0x000080, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_AJBMultiSphereTraceForObjects_Deprecated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_bBlockingHit) == 0x000118, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000119, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckHeadShot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000198, "Member 'BP_AJBInGameProjectile_C_CheckHeadShot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.DebugDrawHitLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameProjectile_C_DebugDrawHitLocation final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_DebugDrawHitLocation) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_DebugDrawHitLocation");
static_assert(sizeof(BP_AJBInGameProjectile_C_DebugDrawHitLocation) == 0x000028, "Wrong size on BP_AJBInGameProjectile_C_DebugDrawHitLocation");
static_assert(offsetof(BP_AJBInGameProjectile_C_DebugDrawHitLocation, HitLocation_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_DebugDrawHitLocation::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DebugDrawHitLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_AJBInGameProjectile_C_DebugDrawHitLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DebugDrawHitLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000018, "Member 'BP_AJBInGameProjectile_C_DebugDrawHitLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DebugDrawHitLocation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameProjectile_C_DebugDrawHitLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_DebugDrawHitLocation, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x000024, "Member 'BP_AJBInGameProjectile_C_DebugDrawHitLocation::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.PlayHitSE
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_PlayHitSE final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_PlayHitSE) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_PlayHitSE");
static_assert(sizeof(BP_AJBInGameProjectile_C_PlayHitSE) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_PlayHitSE");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, bHeadShot) == 0x000014, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, SurfaceType) == 0x000015, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, CuttingRate) == 0x000018, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_PlayHitSE, bBlockedByAAP) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_PlayHitSE::bBlockedByAAP' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckCharacterIsAlive
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckCharacterIsAlive final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAlive;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckCharacterIsAlive");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_CheckCharacterIsAlive");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive, Actor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckCharacterIsAlive::Actor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive, bIsAlive) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckCharacterIsAlive::bIsAlive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000010, "Member 'BP_AJBInGameProjectile_C_CheckCharacterIsAlive::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000018, "Member 'BP_AJBInGameProjectile_C_CheckCharacterIsAlive::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckCharacterIsAlive, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000019, "Member 'BP_AJBInGameProjectile_C_CheckCharacterIsAlive::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetMovementLength
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_GetMovementLength final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetMovementLength) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_GetMovementLength");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetMovementLength) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_GetMovementLength");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMovementLength, Length) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetMovementLength::Length' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMovementLength, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_GetMovementLength::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMovementLength, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetMovementLength::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMovementLength, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_GetMovementLength::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.SetLeftPlayHitSETime
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_SetLeftPlayHitSETime final
{
public:
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_SetLeftPlayHitSETime) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_SetLeftPlayHitSETime");
static_assert(sizeof(BP_AJBInGameProjectile_C_SetLeftPlayHitSETime) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_SetLeftPlayHitSETime");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftPlayHitSETime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_AJBInGameProjectile_C_SetLeftPlayHitSETime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckPossiblePlayHitSE
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE) == 0x000003, "Wrong size on BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE, bPossible) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE::bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_AJBInGameProjectile_C_CheckPossiblePlayHitSE::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.UpdateLeftPlayHitSETime
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime");
static_assert(sizeof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime, CallFunc_FMax_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_UpdateLeftPlayHitSETime::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.SetLeftSpawnDecalDistance
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance final
{
public:
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance");
static_assert(sizeof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance) == 0x000080, "Wrong size on BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance, CallFunc_Format_ReturnValue) == 0x000058, "Member 'BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BP_AJBInGameProjectile_C_SetLeftSpawnDecalDistance::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.UpdateLeftSpawnDecalDistance
// 0x00F8 (0x00F8 - 0x0000)
struct BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance final
{
public:
	float                                         TempPreLeftSpawnDecalDistance;                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance");
static_assert(sizeof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance) == 0x0000F8, "Wrong size on BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, TempPreLeftSpawnDecalDistance) == 0x000000, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::TempPreLeftSpawnDecalDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, K2Node_MakeStruct_FormatArgumentData1) == 0x000050, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_VSize_ReturnValue) == 0x0000E4, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance, CallFunc_FMax_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameProjectile_C_UpdateLeftSpawnDecalDistance::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckPossibleSpawnDecal
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal) == 0x000003, "Wrong size on BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal, bPossible) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal::bPossible' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_AJBInGameProjectile_C_CheckPossibleSpawnDecal::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ApplyProjectileParameter
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AJBInGameProjectile_C_ApplyProjectileParameter final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable3;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable5;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBSkillType                                 Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0018)()
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0040)(HasGetValueTypeHash)
	class FName                                   K2Node_Select1_Default;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue1;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue1;             // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ApplyProjectileParameter) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_ApplyProjectileParameter");
static_assert(sizeof(BP_AJBInGameProjectile_C_ApplyProjectileParameter) == 0x0001E0, "Wrong size on BP_AJBInGameProjectile_C_ApplyProjectileParameter");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable1) == 0x000008, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable2) == 0x000010, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable3) == 0x000018, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable4) == 0x000020, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_name_Variable5) == 0x000028, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_byte_Variable) == 0x000030, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, Temp_bool_Variable) == 0x000031, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000048, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_GetTagName_ReturnValue) == 0x000058, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_GetCharacterName_CharacterName) == 0x000060, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Right_ReturnValue) == 0x000090, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_Select_Default) == 0x0000C0, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_Select1_Default) == 0x000118, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_NameToString_ReturnValue1) == 0x000120, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_NameToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x000130, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x000140, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_NameToText_ReturnValue1) == 0x000148, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_NameToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_MakeStruct_FormatArgumentData1) == 0x000160, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_TextToString_ReturnValue) == 0x0001C8, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ApplyProjectileParameter, CallFunc_Conv_StringToName_ReturnValue1) == 0x0001D8, "Member 'BP_AJBInGameProjectile_C_ApplyProjectileParameter::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetAppropriateCharaParam
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameProjectile_C_GetAppropriateCharaParam final
{
public:
	struct FGameplayTag                           CharaParam;                                        // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCharaParam_CharaParam;                 // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_GetAppropriateCharaParam");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam) == 0x000040, "Wrong size on BP_AJBInGameProjectile_C_GetAppropriateCharaParam");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, CharaParam) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::CharaParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, CallFunc_GetCharaParam_CharaParam) == 0x000028, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::CallFunc_GetCharaParam_CharaParam' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetAppropriateCharaParam, K2Node_Select_Default) == 0x000038, "Member 'BP_AJBInGameProjectile_C_GetAppropriateCharaParam::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ShouldCheckRange
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_ShouldCheckRange final
{
public:
	bool                                          bShouldCheckRange;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ShouldCheckRange) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_ShouldCheckRange");
static_assert(sizeof(BP_AJBInGameProjectile_C_ShouldCheckRange) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_ShouldCheckRange");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldCheckRange, bShouldCheckRange) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ShouldCheckRange::bShouldCheckRange' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckSeparateStandAttack
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckSeparateStandAttack final
{
public:
	class AActor*                                 DamageOwner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSeparateStandAttack;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMovableStand_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForwardTransition_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckSeparateStandAttack");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_CheckSeparateStandAttack");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, DamageOwner) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::DamageOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, bSeparateStandAttack) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::bSeparateStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, CallFunc_HasMovableStand_ReturnValue) == 0x000019, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::CallFunc_HasMovableStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, CallFunc_IsForwardTransition_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::CallFunc_IsForwardTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckSeparateStandAttack, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_AJBInGameProjectile_C_CheckSeparateStandAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ShouldRequestHitEffect
// 0x0007 (0x0007 - 0x0000)
struct BP_AJBInGameProjectile_C_ShouldRequestHitEffect final
{
public:
	bool                                          bCharacter;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldRequest;                                    // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_ShouldRequestHitEffect");
static_assert(sizeof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect) == 0x000007, "Wrong size on BP_AJBInGameProjectile_C_ShouldRequestHitEffect");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, bCharacter) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, bBlocking) == 0x000001, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, bShouldRequest) == 0x000002, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::bShouldRequest' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000003, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldRequestHitEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_AJBInGameProjectile_C_ShouldRequestHitEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckPenetrate
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckPenetrate final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPenetrate_0;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_Barrier_C>         K2Node_DynamicCast_AsBI_Barrier;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStopPenetrateProjectile_bStop;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckPenetrate) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckPenetrate");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckPenetrate) == 0x000038, "Wrong size on BP_AJBInGameProjectile_C_CheckPenetrate");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, TargetActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, bPenetrate_0) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, K2Node_DynamicCast_AsBI_Barrier) == 0x000010, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::K2Node_DynamicCast_AsBI_Barrier' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_IsStopPenetrateProjectile_bStop) == 0x000021, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_IsStopPenetrateProjectile_bStop' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_DoesImplementInterface_ReturnValue) == 0x000022, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_ClassIsChildOf_ReturnValue) == 0x000030, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckPenetrate, CallFunc_BooleanAND_ReturnValue1) == 0x000031, "Member 'BP_AJBInGameProjectile_C_CheckPenetrate::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckIgnoreAddPassive
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckIgnoreAddPassive final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnore;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckIgnoreAddPassive");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_CheckIgnoreAddPassive");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, bIgnore) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::bIgnore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_DoesImplementInterface_ReturnValue) == 0x000009, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_ClassIsChildOf_ReturnValue) == 0x000019, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_BooleanAND_ReturnValue1) == 0x00001A, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckIgnoreAddPassive, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_AJBInGameProjectile_C_CheckIgnoreAddPassive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CalcDamageOnSeparate
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_CalcDamageOnSeparate final
{
public:
	int32                                         Damage_0;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAttenuation_bShouldAttenuation;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_CalcDamageOnSeparate");
static_assert(sizeof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_CalcDamageOnSeparate");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate, Damage_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnSeparate::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnSeparate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate, CallFunc_ShouldAttenuation_bShouldAttenuation) == 0x000005, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnSeparate::CallFunc_ShouldAttenuation_bShouldAttenuation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnSeparate, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnSeparate::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CalcDamageOnHeadShot
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_CalcDamageOnHeadShot final
{
public:
	int32                                         Damage_0;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAttenuation_bShouldAttenuation;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_CalcDamageOnHeadShot");
static_assert(sizeof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_CalcDamageOnHeadShot");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot, Damage_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnHeadShot::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnHeadShot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot, CallFunc_ShouldAttenuation_bShouldAttenuation) == 0x000005, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnHeadShot::CallFunc_ShouldAttenuation_bShouldAttenuation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnHeadShot, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnHeadShot::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.ShouldAttenuation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_ShouldAttenuation final
{
public:
	bool                                          bShouldAttenuation;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMoveLengthUsedHitLocation_MoveLength;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_ShouldAttenuation) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_ShouldAttenuation");
static_assert(sizeof(BP_AJBInGameProjectile_C_ShouldAttenuation) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_ShouldAttenuation");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldAttenuation, bShouldAttenuation) == 0x000000, "Member 'BP_AJBInGameProjectile_C_ShouldAttenuation::bShouldAttenuation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldAttenuation, CallFunc_GetMoveLengthUsedHitLocation_MoveLength) == 0x000004, "Member 'BP_AJBInGameProjectile_C_ShouldAttenuation::CallFunc_GetMoveLengthUsedHitLocation_MoveLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldAttenuation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_ShouldAttenuation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_ShouldAttenuation, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_AJBInGameProjectile_C_ShouldAttenuation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CalcDamageOnDefault
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_CalcDamageOnDefault final
{
public:
	int32                                         Damage_0;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAttenuation_bShouldAttenuation;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CalcDamageOnDefault) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_CalcDamageOnDefault");
static_assert(sizeof(BP_AJBInGameProjectile_C_CalcDamageOnDefault) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_CalcDamageOnDefault");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnDefault, Damage_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnDefault::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnDefault, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnDefault::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnDefault, CallFunc_ShouldAttenuation_bShouldAttenuation) == 0x000005, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnDefault::CallFunc_ShouldAttenuation_bShouldAttenuation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CalcDamageOnDefault, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CalcDamageOnDefault::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetMoveLengthUsedHitLocation
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation final
{
public:
	float                                         MoveLength;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation) == 0x000014, "Wrong size on BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation, MoveLength) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation::MoveLength' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation, CallFunc_VSize_ReturnValue) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetMoveLengthUsedHitLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetLengthFromOwner
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameProjectile_C_GetLengthFromOwner final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetLengthFromOwner) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_GetLengthFromOwner");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetLengthFromOwner) == 0x000038, "Wrong size on BP_AJBInGameProjectile_C_GetLengthFromOwner");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, Length) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::Length' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00001C, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetLengthFromOwner, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_AJBInGameProjectile_C_GetLengthFromOwner::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.UpdateStateTime
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_C_UpdateStateTime final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_UpdateStateTime) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_UpdateStateTime");
static_assert(sizeof(BP_AJBInGameProjectile_C_UpdateStateTime) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_C_UpdateStateTime");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000005, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_UpdateStateTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_UpdateStateTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckTargetSelf
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckTargetSelf final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForDamageOverlap;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreMovableStand;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludeSelf;                                      // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAfterReflectShouldHitOwner;                       // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTarget;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckTargetSelf) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckTargetSelf");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckTargetSelf) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_CheckTargetSelf");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, DamageCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, bForDamageOverlap) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::bForDamageOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, bIgnoreMovableStand) == 0x000009, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::bIgnoreMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, bIncludeSelf) == 0x00000A, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, bAfterReflectShouldHitOwner) == 0x00000B, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::bAfterReflectShouldHitOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, bTarget) == 0x00000C, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckTargetSelf, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000D, "Member 'BP_AJBInGameProjectile_C_CheckTargetSelf::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.OwnHitParam
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_OwnHitParam final
{
public:
	bool                                          bCharacter;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeftAP;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagBlockedByAAP;                           // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SETagBlockedByAAP;                                 // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBlocked;                                // 0x0018(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_OwnHitParam) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_OwnHitParam");
static_assert(sizeof(BP_AJBInGameProjectile_C_OwnHitParam) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_OwnHitParam");
static_assert(offsetof(BP_AJBInGameProjectile_C_OwnHitParam, bCharacter) == 0x000000, "Member 'BP_AJBInGameProjectile_C_OwnHitParam::bCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OwnHitParam, bLeftAP) == 0x000001, "Member 'BP_AJBInGameProjectile_C_OwnHitParam::bLeftAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OwnHitParam, ParticleTagBlockedByAAP) == 0x000008, "Member 'BP_AJBInGameProjectile_C_OwnHitParam::ParticleTagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OwnHitParam, SETagBlockedByAAP) == 0x000010, "Member 'BP_AJBInGameProjectile_C_OwnHitParam::SETagBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_OwnHitParam, ParticleTagBlocked) == 0x000018, "Member 'BP_AJBInGameProjectile_C_OwnHitParam::ParticleTagBlocked' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.IfCheckDamageOverlap
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_IfCheckDamageOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_IfCheckDamageOverlap) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_IfCheckDamageOverlap");
static_assert(sizeof(BP_AJBInGameProjectile_C_IfCheckDamageOverlap) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_IfCheckDamageOverlap");
static_assert(offsetof(BP_AJBInGameProjectile_C_IfCheckDamageOverlap, ReturnValue) == 0x000000, "Member 'BP_AJBInGameProjectile_C_IfCheckDamageOverlap::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckDisableDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckDisableDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisableDamage;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckDisableDamage) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckDisableDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckDisableDamage) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_CheckDisableDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckDisableDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableDamage, bIgnoreSelf) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckDisableDamage::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableDamage, bDisableDamage) == 0x000009, "Member 'BP_AJBInGameProjectile_C_CheckDisableDamage::bDisableDamage' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckDisablePassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckDisablePassive final
{
public:
	class AActor*                                 PassiveCauser;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PassiveTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisablePassive;                                   // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckDisablePassive) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckDisablePassive");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckDisablePassive) == 0x000018, "Wrong size on BP_AJBInGameProjectile_C_CheckDisablePassive");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisablePassive, PassiveCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckDisablePassive::PassiveCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisablePassive, PassiveTag) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckDisablePassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisablePassive, bIgnoreSelf) == 0x000010, "Member 'BP_AJBInGameProjectile_C_CheckDisablePassive::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisablePassive, bDisablePassive) == 0x000011, "Member 'BP_AJBInGameProjectile_C_CheckDisablePassive::bDisablePassive' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckDisableAreaDamage
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckDisableAreaDamage final
{
public:
	bool                                          bDisableAreadamage;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckDisableAreaDamage) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_CheckDisableAreaDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckDisableAreaDamage) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_CheckDisableAreaDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableAreaDamage, bDisableAreadamage) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckDisableAreaDamage::bDisableAreadamage' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckNoDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckNoDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNoDamage;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckNoDamage) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckNoDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckNoDamage) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_CheckNoDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckNoDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckNoDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckNoDamage, bNoDamage) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckNoDamage::bNoDamage' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.IsReactedByReticule
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_C_IsReactedByReticule final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_IsReactedByReticule) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_C_IsReactedByReticule");
static_assert(sizeof(BP_AJBInGameProjectile_C_IsReactedByReticule) == 0x000001, "Wrong size on BP_AJBInGameProjectile_C_IsReactedByReticule");
static_assert(offsetof(BP_AJBInGameProjectile_C_IsReactedByReticule, bResult) == 0x000000, "Member 'BP_AJBInGameProjectile_C_IsReactedByReticule::bResult' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.IgnoreTrace
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_IgnoreTrace final
{
public:
	class AActor*                                 Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPairOnly;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnore;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_IgnoreTrace) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_IgnoreTrace");
static_assert(sizeof(BP_AJBInGameProjectile_C_IgnoreTrace) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_IgnoreTrace");
static_assert(offsetof(BP_AJBInGameProjectile_C_IgnoreTrace, Owner_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_IgnoreTrace::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_IgnoreTrace, bPairOnly) == 0x000008, "Member 'BP_AJBInGameProjectile_C_IgnoreTrace::bPairOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_IgnoreTrace, bIgnore) == 0x000009, "Member 'BP_AJBInGameProjectile_C_IgnoreTrace::bIgnore' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.CheckDisableDirectDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_C_CheckDisableDirectDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDirectDamage;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_CheckDisableDirectDamage) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_CheckDisableDirectDamage");
static_assert(sizeof(BP_AJBInGameProjectile_C_CheckDisableDirectDamage) == 0x000010, "Wrong size on BP_AJBInGameProjectile_C_CheckDisableDirectDamage");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableDirectDamage, DamageCauser) == 0x000000, "Member 'BP_AJBInGameProjectile_C_CheckDisableDirectDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_CheckDisableDirectDamage, bDisableDirectDamage) == 0x000008, "Member 'BP_AJBInGameProjectile_C_CheckDisableDirectDamage::bDisableDirectDamage' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_C_GetDuration");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetDuration) == 0x000004, "Wrong size on BP_AJBInGameProjectile_C_GetDuration");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetDuration::Duration' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectile_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag_0;                                 // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBInGameProjectile_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetPassiveSkillTag, PassiveSkillTag_0) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetPassiveSkillTag::PassiveSkillTag_0' has a wrong offset!");

// Function BP_AJBInGameProjectile.BP_AJBInGameProjectile_C.GetCauserOwnerCharacterBP
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP) == 0x000020, "Wrong size on BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameProjectile_C_GetCauserOwnerCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


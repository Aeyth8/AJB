#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBFindNearestWindow

#include "Basic.hpp"

#include "BTT_AJBFindNearestWindow_classes.hpp"
#include "BTT_AJBFindNearestWindow_parameters.hpp"


namespace SDK
{

// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.ExecuteUbergraph_BTT_AJBFindNearestWindow
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_AJBFindNearestWindow_C::ExecuteUbergraph_BTT_AJBFindNearestWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_AJBFindNearestWindow_C", "ExecuteUbergraph_BTT_AJBFindNearestWindow");

	Params::BTT_AJBFindNearestWindow_C_ExecuteUbergraph_BTT_AJBFindNearestWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_AJBFindNearestWindow_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_AJBFindNearestWindow_C", "ReceiveExecuteAI");

	Params::BTT_AJBFindNearestWindow_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_AJBFindNearestWindow.BTT_AJBFindNearestWindow_C.FindNearestWindow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBInGameAIRecognition_C*     Recognition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FBlackboardKeySelector&    WindowObjectToIgnore                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNavigationPath**                 PathToNearestActor1                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* UBTT_AJBFindNearestWindow_C::FindNearestWindow(class UBP_AJBInGameAIRecognition_C* Recognition, const struct FBlackboardKeySelector& WindowObjectToIgnore, class UNavigationPath** PathToNearestActor1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_AJBFindNearestWindow_C", "FindNearestWindow");

	Params::BTT_AJBFindNearestWindow_C_FindNearestWindow Parms{};

	Parms.Recognition = Recognition;
	Parms.WindowObjectToIgnore = std::move(WindowObjectToIgnore);

	UObject::ProcessEvent(Func, &Parms);

	if (PathToNearestActor1 != nullptr)
		*PathToNearestActor1 = Parms.PathToNearestActor1;

	return Parms.ReturnValue;
}

}


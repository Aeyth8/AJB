#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBEmoteAccompany

#include "Basic.hpp"

#include "BP_AJBSkillBase_classes.hpp"
#include "ST_EmoteAccompanyInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBEmoteAccompany.BP_AJBEmoteAccompany_C
// 0x00B0 (0x0298 - 0x01E8)
class UBP_AJBEmoteAccompany_C final : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBEmoteAccompany_C;             // 0x01E8(0x0008)(Transient, DuplicateTransient)
	struct FTimerHandle                           DelayedResetTransformSettingsHandler;              // 0x01F0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	float                                         ResetTransformSettingsDelay;                       // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             SettingsTable;                                     // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          HasLoadedSetting;                                  // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EmoteAccompanyInfo                 CurrentSetting;                                    // 0x0210(0x0068)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash)
	float                                         RestoreMontageBlendTime;                           // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeginMontageLoaded;                             // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           BeginMontageCache;                                 // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          HasLoopMontageLoaded;                              // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LoopMontageCache;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBEmoteAccompany(int32 EntryPoint);
	void ResotreEmoteAccompany();
	void SetStandTransformSettings(bool Movable, bool Rotatable);
	void OnEndOwnersEmote();
	void OnBeginOwnersEmote();
	void OnOwnerActiveBehaviorChanged(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown);
	void LoadMontage(const struct FST_EmoteAccompanyInfo& Settings);
	void PlayMontage();
	void OnInactiveCore();
	void OnActiveCore();
	void RestoreMontage();
	void ApplyMontage();
	void RestoreTransform();
	void ApplyTransform();
	void OnEnd();
	void ClearAllBinding();
	void Clear_OnCharacterActiveBehaviorChangedEvent();
	void Clear_TransitionStateHandler();
	void OnChangedTransition(EStandAccompanyTransition PrevTransition, EStandAccompanyTransition NextTransition, bool bBySeparate);
	void SetEnabledStandTransformSettings(bool IsEnabled);
	void OnChangedOwnerBehavior(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown);
	void OnCompleted_7B45FB9D406D5826C78546BCF788FED5(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCF788FED5(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCF788FED5(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCF788FED5(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCF788FED5(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BCA15D4DAA(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCA15D4DAA(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCA15D4DAA(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCA15D4DAA(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCA15D4DAA(class FName NotifyName);
	void OnLoaded_22DC14A04BFEF00549F0EEA09020FF6E(class UObject* Loaded);
	void OnLoaded_22DC14A04BFEF00549F0EEA00122AB65(class UObject* Loaded);
	void MakeSettingsTableKey(TSoftObjectPtr<class UAnimMontage> Montage, class FName* TableKey);
	void FindCurrentSetting(bool* Success, struct FST_EmoteAccompanyInfo* Setting);
	void FindSetting(TSoftObjectPtr<class UAnimMontage> Montage, bool* IsFound, struct FST_EmoteAccompanyInfo* Setting);
	void GetOwnerMontagePlayingPosition(float* PlayingPosition);
	void GetStandRotation(struct FRotator* Rotation);
	void FixStandMeshLocation();
	void GetLoopMontageStartingPos(const struct FST_EmoteAccompanyInfo& Setting, float* StartingPos);
	bool IsEmoteBehavior(ECharacterActiveBehavior Index_0);
	void GetTargetStand(class ABP_AJBInGameStand_C** Stand);
	void ReceiveBeginPlay();
	void StateBeginPlay(bool bShouldRestore);
	void OnCancel();
	void OnActive();
	void ReceiveTick(float DeltaSeconds);
	void OnInactive();
	bool CanUseSkill(struct FGameplayTagContainer* TagContainer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBEmoteAccompany_C">();
	}
	static class UBP_AJBEmoteAccompany_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBEmoteAccompany_C>();
	}
};
static_assert(alignof(UBP_AJBEmoteAccompany_C) == 0x000008, "Wrong alignment on UBP_AJBEmoteAccompany_C");
static_assert(sizeof(UBP_AJBEmoteAccompany_C) == 0x000298, "Wrong size on UBP_AJBEmoteAccompany_C");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, UberGraphFrame_BP_AJBEmoteAccompany_C) == 0x0001E8, "Member 'UBP_AJBEmoteAccompany_C::UberGraphFrame_BP_AJBEmoteAccompany_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, DelayedResetTransformSettingsHandler) == 0x0001F0, "Member 'UBP_AJBEmoteAccompany_C::DelayedResetTransformSettingsHandler' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, ResetTransformSettingsDelay) == 0x0001F8, "Member 'UBP_AJBEmoteAccompany_C::ResetTransformSettingsDelay' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, SettingsTable) == 0x000200, "Member 'UBP_AJBEmoteAccompany_C::SettingsTable' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, HasLoadedSetting) == 0x000208, "Member 'UBP_AJBEmoteAccompany_C::HasLoadedSetting' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, CurrentSetting) == 0x000210, "Member 'UBP_AJBEmoteAccompany_C::CurrentSetting' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, RestoreMontageBlendTime) == 0x000278, "Member 'UBP_AJBEmoteAccompany_C::RestoreMontageBlendTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, HasBeginMontageLoaded) == 0x00027C, "Member 'UBP_AJBEmoteAccompany_C::HasBeginMontageLoaded' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, BeginMontageCache) == 0x000280, "Member 'UBP_AJBEmoteAccompany_C::BeginMontageCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, HasLoopMontageLoaded) == 0x000288, "Member 'UBP_AJBEmoteAccompany_C::HasLoopMontageLoaded' has a wrong offset!");
static_assert(offsetof(UBP_AJBEmoteAccompany_C, LoopMontageCache) == 0x000290, "Member 'UBP_AJBEmoteAccompany_C::LoopMontageCache' has a wrong offset!");

}


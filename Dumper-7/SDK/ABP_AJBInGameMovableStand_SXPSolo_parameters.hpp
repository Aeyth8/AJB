#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameMovableStand_SXPSolo

#include "Basic.hpp"


namespace SDK::Params
{

// Function ABP_AJBInGameMovableStand_SXPSolo.ABP_AJBInGameMovableStand_SXPSolo_C.ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo
// 0x0020 (0x0020 - 0x0000)
struct ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_SXP_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand_SXP; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo) == 0x000008, "Wrong alignment on ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo");
static_assert(sizeof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo) == 0x000020, "Wrong size on ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, EntryPoint) == 0x000000, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand_SXP) == 0x000010, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand_SXP' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo, K2Node_Event_DeltaTimeX) == 0x00001C, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_ExecuteUbergraph_ABP_AJBInGameMovableStand_SXPSolo::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function ABP_AJBInGameMovableStand_SXPSolo.ABP_AJBInGameMovableStand_SXPSolo_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AJBInGameMovableStand_SXPSolo_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}


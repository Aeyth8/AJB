#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Reward

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "AJB_classes.hpp"
#include "Engine_structs.hpp"
#include "ERewardDisplayType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Reward.WB_Reward_C
// 0x01F8 (0x04B8 - 0x02C0)
class UWB_Reward_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              AJBImage_1;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_5;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_7;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_AchievementIcon;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_AchievementIconBG;                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_CharName;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_Description;                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_IconText;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_IconType;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_KindDescription;                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_RewardNumMax;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CoinLayoutRoot;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          CoinNumberText;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horiz_GetReward;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horiz_MssionClear;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horiz_RewardDetail;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_BGItemEffect;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_CoinConvertArrow;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Result_CommonProfileCard;                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               KindDescriptionRoot;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Over_RewardCountIcon;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ItemIcon;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Overlay_ItemLabel;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_MissionContent;                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Rarity;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Text_IconName;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_RewardNum;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_TicketNum;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Vertic_ItemLayout;                                 // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BG_Animation_C*                     WB_BG_Animation;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonButton_C*                     WB_CommonButton_NO;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonButton_C*                     WB_CommonButton_YES;                               // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerIcon_C*                       WB_PlayerIcon;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Rarity_C*                           WB_Rarity;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_RewardEffect_C*                     WB_RewardEffect;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CountDownTimeMax;                                  // 0x03E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsPlayCloseSE;                                    // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bIsUpdateTimeCountdown;                            // 0x03E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E6[0x2];                                      // 0x03E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CountDownElapsedTime;                              // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnRecievedAllReward;                               // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWB_EmoteChange_Window_C*               CachedEmotionChangeConfirm;                        // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBHUDBase*                            CachedAJBHUD;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAJBGameRewardInfo>             CurrentRewardInfos;                                // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CurrentIndexRewardInfo;                            // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoadedRewardIcon;                                 // 0x0424(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLockCloseForTestEmotionConfirm;                   // 0x0425(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             EmoteIconBG;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconBG;                                            // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardDisplayType                            RewardDisplayType;                                 // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_SelectCardWindow_C*         CachedSelectCardWindow;                            // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBProfileCardDetail                  CardDetail;                                        // 0x0448(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bTimeOut;                                          // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBPairProfileCardDetail              PairCardDetail;                                    // 0x0480(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bEnableApplyReward;                                // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_Reward(int32 EntryPoint);
	void SetupPairRewardInfo_CharaCard(const struct FAJBPairProfileCardDetail& PairProfileCardDetail);
	void SetupRewardInfo_CharaCard(const struct FAJBProfileCardDetail& ProfileCardDetail);
	void OnClosedSelectCardWindow(class UAJBWindowWidget* TargetWidget);
	void ChangeDisplayMode();
	void OnClosedSetRewardErrorConfirm(class UAJBWindowWidget* TargetWidget);
	void OnClosedSetRewardConfirm(class UAJBWindowWidget* TargetWidget);
	void LoadAndSetRewardIcon(int32 CharaIndex, ERewardItemType RewardType, int32 RewardNo);
	void ShowEmoteSelectUI();
	void CloseWindowDoNotSound();
	void Connect_SetReward();
	void OnClosedEmotionConfirm(class UAJBWindowWidget* TargetWidget);
	void StopTimeCountdown();
	void StartTimeCountdown();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Timeout();
	void OnClosedSelfWindow(class UAJBWindowWidget* TargetWidget);
	void BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnClosingWindow();
	void OnOpeningWindow();
	void OnFinishedCurveAnim();
	void Construct();
	void SetupRewardInfos(const TArray<struct FAJBGameRewardInfo>& RewardInfos, ERewardDisplayType RewardDisplayType_0);
	void OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781(class UObject* Loaded);
	void OnLoaded_D06591D84DE59F90B2031BB9DCE793EE(class UObject* Loaded);
	void OnSuccess_29B54CC84A5E31F039E7F69F055B81A0(EAJBNetAPIResult Result);
	void OnFailed_29B54CC84A5E31F039E7F69F055B81A0(EAJBNetAPIResult Result);
	void GetCurrentRewardInfo(struct FAJBGameRewardInfo* Return);
	void UpdateRewardDisplay();
	void IsDuplicateCurrentReward(bool* bDuplicate);
	class FText GetAppropriateRewardString();
	void GetSelectCardWindow(class UWB_Lottery_SelectCardWindow_C** OutWidget);
	int32 GetCurrentDisplayTicketNum();
	void GetRewardRarity(int32* Return);
	void TryGetCharacterName(class FText* CharacterName);
	void IsCardDetail(bool* bReturn);
	void GetCardDetailName(class FString* Name_0);
	void SetEnableApplyReward(bool Enable);
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedLeft();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedLeft();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputReleasedL3();
	bool OnInputPressedL3();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Reward_C">();
	}
	static class UWB_Reward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Reward_C>();
	}
};
static_assert(alignof(UWB_Reward_C) == 0x000008, "Wrong alignment on UWB_Reward_C");
static_assert(sizeof(UWB_Reward_C) == 0x0004B8, "Wrong size on UWB_Reward_C");
static_assert(offsetof(UWB_Reward_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Reward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBImage_1) == 0x0002C8, "Member 'UWB_Reward_C::AJBImage_1' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBImage_5) == 0x0002D0, "Member 'UWB_Reward_C::AJBImage_5' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBImage_7) == 0x0002D8, "Member 'UWB_Reward_C::AJBImage_7' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBImage_AchievementIcon) == 0x0002E0, "Member 'UWB_Reward_C::AJBImage_AchievementIcon' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBImage_AchievementIconBG) == 0x0002E8, "Member 'UWB_Reward_C::AJBImage_AchievementIconBG' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_CharName) == 0x0002F0, "Member 'UWB_Reward_C::AJBTextBlock_CharName' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_Description) == 0x0002F8, "Member 'UWB_Reward_C::AJBTextBlock_Description' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_IconText) == 0x000300, "Member 'UWB_Reward_C::AJBTextBlock_IconText' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_IconType) == 0x000308, "Member 'UWB_Reward_C::AJBTextBlock_IconType' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_KindDescription) == 0x000310, "Member 'UWB_Reward_C::AJBTextBlock_KindDescription' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, AJBTextBlock_RewardNumMax) == 0x000318, "Member 'UWB_Reward_C::AJBTextBlock_RewardNumMax' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CoinLayoutRoot) == 0x000320, "Member 'UWB_Reward_C::CoinLayoutRoot' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CoinNumberText) == 0x000328, "Member 'UWB_Reward_C::CoinNumberText' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Horiz_GetReward) == 0x000330, "Member 'UWB_Reward_C::Horiz_GetReward' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Horiz_MssionClear) == 0x000338, "Member 'UWB_Reward_C::Horiz_MssionClear' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Horiz_RewardDetail) == 0x000340, "Member 'UWB_Reward_C::Horiz_RewardDetail' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Img_BGItemEffect) == 0x000348, "Member 'UWB_Reward_C::Img_BGItemEffect' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Img_CoinConvertArrow) == 0x000350, "Member 'UWB_Reward_C::Img_CoinConvertArrow' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Img_Result_CommonProfileCard) == 0x000358, "Member 'UWB_Reward_C::Img_Result_CommonProfileCard' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, KindDescriptionRoot) == 0x000360, "Member 'UWB_Reward_C::KindDescriptionRoot' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Over_RewardCountIcon) == 0x000368, "Member 'UWB_Reward_C::Over_RewardCountIcon' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Overlay_ItemIcon) == 0x000370, "Member 'UWB_Reward_C::Overlay_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Overlay_ItemLabel) == 0x000378, "Member 'UWB_Reward_C::Overlay_ItemLabel' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Overlay_MissionContent) == 0x000380, "Member 'UWB_Reward_C::Overlay_MissionContent' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Overlay_Rarity) == 0x000388, "Member 'UWB_Reward_C::Overlay_Rarity' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Text_IconName) == 0x000390, "Member 'UWB_Reward_C::Text_IconName' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Txt_RewardNum) == 0x000398, "Member 'UWB_Reward_C::Txt_RewardNum' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Txt_TicketNum) == 0x0003A0, "Member 'UWB_Reward_C::Txt_TicketNum' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, Vertic_ItemLayout) == 0x0003A8, "Member 'UWB_Reward_C::Vertic_ItemLayout' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_BG_Animation) == 0x0003B0, "Member 'UWB_Reward_C::WB_BG_Animation' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_CommonButton_NO) == 0x0003B8, "Member 'UWB_Reward_C::WB_CommonButton_NO' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_CommonButton_YES) == 0x0003C0, "Member 'UWB_Reward_C::WB_CommonButton_YES' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_PlayerIcon) == 0x0003C8, "Member 'UWB_Reward_C::WB_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_Rarity) == 0x0003D0, "Member 'UWB_Reward_C::WB_Rarity' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, WB_RewardEffect) == 0x0003D8, "Member 'UWB_Reward_C::WB_RewardEffect' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CountDownTimeMax) == 0x0003E0, "Member 'UWB_Reward_C::CountDownTimeMax' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bIsPlayCloseSE) == 0x0003E4, "Member 'UWB_Reward_C::bIsPlayCloseSE' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bIsUpdateTimeCountdown) == 0x0003E5, "Member 'UWB_Reward_C::bIsUpdateTimeCountdown' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CountDownElapsedTime) == 0x0003E8, "Member 'UWB_Reward_C::CountDownElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, OnRecievedAllReward) == 0x0003F0, "Member 'UWB_Reward_C::OnRecievedAllReward' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CachedEmotionChangeConfirm) == 0x000400, "Member 'UWB_Reward_C::CachedEmotionChangeConfirm' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CachedAJBHUD) == 0x000408, "Member 'UWB_Reward_C::CachedAJBHUD' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CurrentRewardInfos) == 0x000410, "Member 'UWB_Reward_C::CurrentRewardInfos' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CurrentIndexRewardInfo) == 0x000420, "Member 'UWB_Reward_C::CurrentIndexRewardInfo' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bLoadedRewardIcon) == 0x000424, "Member 'UWB_Reward_C::bLoadedRewardIcon' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bLockCloseForTestEmotionConfirm) == 0x000425, "Member 'UWB_Reward_C::bLockCloseForTestEmotionConfirm' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, EmoteIconBG) == 0x000428, "Member 'UWB_Reward_C::EmoteIconBG' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, IconBG) == 0x000430, "Member 'UWB_Reward_C::IconBG' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, RewardDisplayType) == 0x000438, "Member 'UWB_Reward_C::RewardDisplayType' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CachedSelectCardWindow) == 0x000440, "Member 'UWB_Reward_C::CachedSelectCardWindow' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, CardDetail) == 0x000448, "Member 'UWB_Reward_C::CardDetail' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bTimeOut) == 0x000478, "Member 'UWB_Reward_C::bTimeOut' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, PairCardDetail) == 0x000480, "Member 'UWB_Reward_C::PairCardDetail' has a wrong offset!");
static_assert(offsetof(UWB_Reward_C, bEnableApplyReward) == 0x0004B0, "Member 'UWB_Reward_C::bEnableApplyReward' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameLifeTimeComponentBase

#include "Basic.hpp"

#include "BP_AJBInGameLifeTimeComponentBase_classes.hpp"
#include "BP_AJBInGameLifeTimeComponentBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase");

	Params::BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.OnDeactivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::OnDeactivated(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "OnDeactivated");

	Params::BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.OnLifeTimeExpired
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBInGameLifeTimeComponentBase_C::OnLifeTimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "OnLifeTimeExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "ReceiveTick");

	Params::BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.OnActivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBInGameLifeTimeComponentBase_C::OnActivated(class UActorComponent* Component, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "OnActivated");

	Params::BP_AJBInGameLifeTimeComponentBase_C_OnActivated Parms{};

	Parms.Component = Component;
	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBInGameLifeTimeComponentBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.GetElapsedTimeInGame
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  ElapsedTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::GetElapsedTimeInGame(float* ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "GetElapsedTimeInGame");

	Params::BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.SetLifeTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LifeTime_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::SetLifeTime(float LifeTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "SetLifeTime");

	Params::BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime Parms{};

	Parms.LifeTime_0 = LifeTime_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.UpdateRemainingTime
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_AJBInGameLifeTimeComponentBase_C::UpdateRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "UpdateRemainingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ResetRemainingLifeTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBInGameLifeTimeComponentBase_C::ResetRemainingLifeTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "ResetRemainingLifeTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.GetRemainingLifeTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  RemainingLifeTime_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBInGameLifeTimeComponentBase_C::GetRemainingLifeTime(float* RemainingLifeTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "GetRemainingLifeTime");

	Params::BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingLifeTime_0 != nullptr)
		*RemainingLifeTime_0 = Parms.RemainingLifeTime_0;
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.HasLifeTimeExpired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasExpired                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBInGameLifeTimeComponentBase_C::HasLifeTimeExpired(bool* HasExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "HasLifeTimeExpired");

	Params::BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasExpired != nullptr)
		*HasExpired = Parms.HasExpired;
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.IsBlockedToExpiredEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsBlocked                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBInGameLifeTimeComponentBase_C::IsBlockedToExpiredEvent(bool* IsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "IsBlockedToExpiredEvent");

	Params::BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBlocked != nullptr)
		*IsBlocked = Parms.IsBlocked;
}


// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.IsTimerPaused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsPaused                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBInGameLifeTimeComponentBase_C::IsTimerPaused(bool* IsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameLifeTimeComponentBase_C", "IsTimerPaused");

	Params::BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPaused != nullptr)
		*IsPaused = Parms.IsPaused;
}

}


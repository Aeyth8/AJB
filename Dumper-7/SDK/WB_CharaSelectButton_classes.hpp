#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharaSelectButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"
#include "ECharacterSelectInscrollInnerState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharaSelectButton.WB_CharaSelectButton_C
// 0x01F8 (0x0498 - 0x02A0)
class UWB_CharaSelectButton_C final : public UAJBButtonWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Selected;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_PlessedLoop;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Pressed;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Diamond_1;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Diamond_2;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Diamond_3;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Diamond_4;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Diamond_5;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_Flash;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBRetainerBox*                        AJBRetainerBox_Main;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBButton*                             Button;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              CharaIcon;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              CharaIcon_Flame;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              CharaIcon_Flame_Pressed;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          InValidButtonText;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Aura_C*                             WB_Aura;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FAJBCharacterInfo                      CharacterInfo;                                     // 0x0328(0x00E8)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UMaterialInstanceDynamic*               DMI_Aura;                                          // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Grayouter;                                     // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AuraValue;                                         // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetAuraValue;                                   // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CharactersLength;                                  // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AuraInterpSpeed;                                   // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonScaleInterpSpeed;                            // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonScale;                                       // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetButtonScale;                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReleaseDecisionableCharacter;                     // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnMouseButtonDownOnChracterButton;                 // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bRequestResetAnimation;                            // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetRenderOpacity;                               // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InscrollOpacityInterpSpeed;                        // 0x0458(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InscrollHalfOpacity;                               // 0x045C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              IconFrameMaretirlas;                               // 0x0460(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstance*>              IconFramePressedMaretirlas;                        // 0x0470(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int32                                         GreenColorFrameKillCount;                          // 0x0480(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RedColorFrameKillCount;                            // 0x0484(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         YellowColorFrameKillCount;                         // 0x0488(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RainbowColorFrameKillCount;                        // 0x048C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DT_CharaIconFrame;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_CharaSelectButton(int32 EntryPoint);
	void SetInscrollInnerState(ECharacterSelectInscrollInnerState NewState);
	void OnButtonRelease();
	void UpdateGrayout();
	void OnResetButtonDisplay();
	void OnFinishedAnim();
	void RequestCharaIcon();
	void SetDefaultDisplay();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnSelectedButton(bool PlaySE);
	void OnLoaded_F29C97A74F29593B313480BDAF17DBC3(class UObject* Loaded);
	class UAJBButton* GetButton();
	void IsMatchCharaInfo(const struct FAJBCharacterInfo& AJBCharacterInfo, bool* bMatch);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetupIconFrame(const int32 KillCount);

	bool IsSelectableInTutorial() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharaSelectButton_C">();
	}
	static class UWB_CharaSelectButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharaSelectButton_C>();
	}
};
static_assert(alignof(UWB_CharaSelectButton_C) == 0x000008, "Wrong alignment on UWB_CharaSelectButton_C");
static_assert(sizeof(UWB_CharaSelectButton_C) == 0x000498, "Wrong size on UWB_CharaSelectButton_C");
static_assert(offsetof(UWB_CharaSelectButton_C, UberGraphFrame) == 0x0002A0, "Member 'UWB_CharaSelectButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, Anim_Selected) == 0x0002A8, "Member 'UWB_CharaSelectButton_C::Anim_Selected' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, Anim_PlessedLoop) == 0x0002B0, "Member 'UWB_CharaSelectButton_C::Anim_PlessedLoop' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, Anim_Pressed) == 0x0002B8, "Member 'UWB_CharaSelectButton_C::Anim_Pressed' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Diamond_1) == 0x0002C0, "Member 'UWB_CharaSelectButton_C::AJBImage_Diamond_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Diamond_2) == 0x0002C8, "Member 'UWB_CharaSelectButton_C::AJBImage_Diamond_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Diamond_3) == 0x0002D0, "Member 'UWB_CharaSelectButton_C::AJBImage_Diamond_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Diamond_4) == 0x0002D8, "Member 'UWB_CharaSelectButton_C::AJBImage_Diamond_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Diamond_5) == 0x0002E0, "Member 'UWB_CharaSelectButton_C::AJBImage_Diamond_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBImage_Flash) == 0x0002E8, "Member 'UWB_CharaSelectButton_C::AJBImage_Flash' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AJBRetainerBox_Main) == 0x0002F0, "Member 'UWB_CharaSelectButton_C::AJBRetainerBox_Main' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, Button) == 0x0002F8, "Member 'UWB_CharaSelectButton_C::Button' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, CharaIcon) == 0x000300, "Member 'UWB_CharaSelectButton_C::CharaIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, CharaIcon_Flame) == 0x000308, "Member 'UWB_CharaSelectButton_C::CharaIcon_Flame' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, CharaIcon_Flame_Pressed) == 0x000310, "Member 'UWB_CharaSelectButton_C::CharaIcon_Flame_Pressed' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, InValidButtonText) == 0x000318, "Member 'UWB_CharaSelectButton_C::InValidButtonText' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, WB_Aura) == 0x000320, "Member 'UWB_CharaSelectButton_C::WB_Aura' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, CharacterInfo) == 0x000328, "Member 'UWB_CharaSelectButton_C::CharacterInfo' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, DMI_Aura) == 0x000410, "Member 'UWB_CharaSelectButton_C::DMI_Aura' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, DMI_Grayouter) == 0x000418, "Member 'UWB_CharaSelectButton_C::DMI_Grayouter' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AuraValue) == 0x000420, "Member 'UWB_CharaSelectButton_C::AuraValue' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, TargetAuraValue) == 0x000424, "Member 'UWB_CharaSelectButton_C::TargetAuraValue' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, CharactersLength) == 0x000428, "Member 'UWB_CharaSelectButton_C::CharactersLength' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, AuraInterpSpeed) == 0x00042C, "Member 'UWB_CharaSelectButton_C::AuraInterpSpeed' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, ButtonScaleInterpSpeed) == 0x000430, "Member 'UWB_CharaSelectButton_C::ButtonScaleInterpSpeed' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, ButtonScale) == 0x000434, "Member 'UWB_CharaSelectButton_C::ButtonScale' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, TargetButtonScale) == 0x000438, "Member 'UWB_CharaSelectButton_C::TargetButtonScale' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, bReleaseDecisionableCharacter) == 0x00043C, "Member 'UWB_CharaSelectButton_C::bReleaseDecisionableCharacter' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, OnMouseButtonDownOnChracterButton) == 0x000440, "Member 'UWB_CharaSelectButton_C::OnMouseButtonDownOnChracterButton' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, bRequestResetAnimation) == 0x000450, "Member 'UWB_CharaSelectButton_C::bRequestResetAnimation' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, TargetRenderOpacity) == 0x000454, "Member 'UWB_CharaSelectButton_C::TargetRenderOpacity' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, InscrollOpacityInterpSpeed) == 0x000458, "Member 'UWB_CharaSelectButton_C::InscrollOpacityInterpSpeed' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, InscrollHalfOpacity) == 0x00045C, "Member 'UWB_CharaSelectButton_C::InscrollHalfOpacity' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, IconFrameMaretirlas) == 0x000460, "Member 'UWB_CharaSelectButton_C::IconFrameMaretirlas' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, IconFramePressedMaretirlas) == 0x000470, "Member 'UWB_CharaSelectButton_C::IconFramePressedMaretirlas' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, GreenColorFrameKillCount) == 0x000480, "Member 'UWB_CharaSelectButton_C::GreenColorFrameKillCount' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, RedColorFrameKillCount) == 0x000484, "Member 'UWB_CharaSelectButton_C::RedColorFrameKillCount' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, YellowColorFrameKillCount) == 0x000488, "Member 'UWB_CharaSelectButton_C::YellowColorFrameKillCount' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, RainbowColorFrameKillCount) == 0x00048C, "Member 'UWB_CharaSelectButton_C::RainbowColorFrameKillCount' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectButton_C, DT_CharaIconFrame) == 0x000490, "Member 'UWB_CharaSelectButton_C::DT_CharaIconFrame' has a wrong offset!");

}


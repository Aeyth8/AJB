#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_DDW

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ST_CharaSkin_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.ExecuteUbergraph_BP_AJBInGameStand_DDW
// 0x0240 (0x0240 - 0x0000)
struct BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ANS_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable1;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldDestroy;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_DDWLeg_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_StandName;                            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_SkinId;                               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharaSkin                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x01D8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate4;             // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate5;             // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x0228(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW) == 0x000010, "Wrong alignment on BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW) == 0x000240, "Wrong size on BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS) == 0x000020, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ANS' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, Temp_object_Variable) == 0x000030, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_Loaded) == 0x000038, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000040, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, Temp_object_Variable1) == 0x000050, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_Loaded1) == 0x000058, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_AsMaterial_Interface) == 0x000060, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue1) == 0x000069, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue2) == 0x00006A, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue3) == 0x00006B, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_NotifyName4) == 0x000070, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsDedicatedServer_ReturnValue) == 0x000078, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, Temp_int_Variable) == 0x00007C, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, Temp_name_Variable) == 0x000098, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_Event_bShouldDestroy) == 0x0000A0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_Event_bShouldDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000A8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue4) == 0x0000B0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_IsValid_ReturnValue5) == 0x0000B1, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_NotifyName) == 0x0000B8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate1) == 0x0000C0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_NotifyName1) == 0x0000D0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate2) == 0x0000D8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_NotifyName2) == 0x0000E8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_Event_StandName) == 0x000140, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_Event_StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_Event_SkinId) == 0x000150, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_Event_SkinId' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Conv_ByteToString_ReturnValue) == 0x000158, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Concat_StrStr_ReturnValue1) == 0x000178, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Conv_StringToName_ReturnValue) == 0x000188, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CustomEvent_NotifyName3) == 0x0001D0, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000204, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate4) == 0x000208, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate5) == 0x000218, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW, K2Node_CreateDelegate_OutputDelegate6) == 0x000228, "Member 'BP_AJBInGameStand_DDW_C_ExecuteUbergraph_BP_AJBInGameStand_DDW::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1, Loaded) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1::Loaded' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F, Loaded) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F::Loaded' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnCompleted_221A419D45A2C2C1678C24BB158A3849
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnCompleted_221A419D45A2C2C1678C24BB158A3849::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnBlendOut_221A419D45A2C2C1678C24BB158A3849
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnBlendOut_221A419D45A2C2C1678C24BB158A3849::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnInterrupted_221A419D45A2C2C1678C24BB158A3849
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnInterrupted_221A419D45A2C2C1678C24BB158A3849::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849) == 0x000008, "Wrong size on BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.CreateDMIFlow
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameStand_DDW_C_CreateDMIFlow final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_CreateDMIFlow) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_CreateDMIFlow");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_CreateDMIFlow) == 0x000020, "Wrong size on BP_AJBInGameStand_DDW_C_CreateDMIFlow");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, Temp_int_Variable) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_GetNumMaterials_ReturnValue) == 0x000004, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CreateDMIFlow, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameStand_DDW_C_CreateDMIFlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.ChangeSkin
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStand_DDW_C_ChangeSkin final
{
public:
	class FString                                 StandName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         skinID;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_ChangeSkin) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_ChangeSkin");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_ChangeSkin) == 0x000018, "Wrong size on BP_AJBInGameStand_DDW_C_ChangeSkin");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ChangeSkin, StandName) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_ChangeSkin::StandName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_ChangeSkin, skinID) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_ChangeSkin::skinID' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.CleanUp
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_DDW_C_CleanUp final
{
public:
	bool                                          bShouldDestroy;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_CleanUp) == 0x000001, "Wrong alignment on BP_AJBInGameStand_DDW_C_CleanUp");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_CleanUp) == 0x000001, "Wrong size on BP_AJBInGameStand_DDW_C_CleanUp");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_CleanUp, bShouldDestroy) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_CleanUp::bShouldDestroy' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetStandAttackOffset
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset) == 0x000038, "Wrong size on BP_AJBInGameStand_DDW_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetStandAttackOffset, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_DDW_C_GetStandAttackOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetAttackRange
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetAttackRange) == 0x000040, "Wrong size on BP_AJBInGameStand_DDW_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetAttackCollisionRadius
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius) == 0x000030, "Wrong size on BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_DDW_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetAttackLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetAttackLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetAttackLocation) == 0x000068, "Wrong size on BP_AJBInGameStand_DDW_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_GetFixedLocation_Location) == 0x00002C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetAttackLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameStand_DDW_C_GetAttackLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetCloseRangeLaunchedActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor) == 0x000010, "Wrong size on BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameStand_DDW_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetDamageActorTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation) == 0x00000C, "Wrong size on BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetDamageActorTargetLocation::Location' has a wrong offset!");

// Function BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C.GetLaunchedActorHomeLocation
// 0x001C (0x001C - 0x0000)
struct BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation) == 0x00001C, "Wrong size on BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation, CallFunc_GetFixedLocation_Location) == 0x000010, "Member 'BP_AJBInGameStand_DDW_C_GetLaunchedActorHomeLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");

}


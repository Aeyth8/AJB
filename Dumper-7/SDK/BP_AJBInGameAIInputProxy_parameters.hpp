#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIInputProxy

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.ExecuteUbergraph_BP_AJBInGameAIInputProxy
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_ValidCharacter;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameAIController*                 K2Node_DynamicCast_AsAJBIn_Game_AIController;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy) == 0x000008, "Wrong alignment on BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy) == 0x000028, "Wrong size on BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, EntryPoint) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, K2Node_CustomEvent_ValidCharacter) == 0x000010, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::K2Node_CustomEvent_ValidCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, K2Node_DynamicCast_AsAJBIn_Game_AIController) == 0x000018, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::K2Node_DynamicCast_AsAJBIn_Game_AIController' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_AJBInGameAIInputProxy_C_ExecuteUbergraph_BP_AJBInGameAIInputProxy::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameAIInputProxy_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameAIInputProxy_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.SetupInput
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_SetupInput final
{
public:
	class ABP_AJBInGameCharacter_C*               ValidCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_SetupInput) == 0x000008, "Wrong alignment on BP_AJBInGameAIInputProxy_C_SetupInput");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_SetupInput) == 0x000008, "Wrong size on BP_AJBInGameAIInputProxy_C_SetupInput");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_SetupInput, ValidCharacter) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_SetupInput::ValidCharacter' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.IsPressingL2
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_IsPressingL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_IsPressingL2) == 0x000001, "Wrong alignment on BP_AJBInGameAIInputProxy_C_IsPressingL2");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_IsPressingL2) == 0x000001, "Wrong size on BP_AJBInGameAIInputProxy_C_IsPressingL2");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsPressingL2, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_IsPressingL2::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.IsPressingR2
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_IsPressingR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_IsPressingR2) == 0x000001, "Wrong alignment on BP_AJBInGameAIInputProxy_C_IsPressingR2");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_IsPressingR2) == 0x000001, "Wrong size on BP_AJBInGameAIInputProxy_C_IsPressingR2");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsPressingR2, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_IsPressingR2::ReturnValue' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.DebugGetInputStatusString
// 0x0270 (0x0270 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable1;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable2;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable3;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable4;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable5;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable6;                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable7;                             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable8;                             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable9;                             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable7;                               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable10;                            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable8;                               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable11;                            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable12;                            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable9;                               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable13;                            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select1_Default;                            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select2_Default;                            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select3_Default;                            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select4_Default;                            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select5_Default;                            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue3;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue4;             // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select6_Default;                            // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select7_Default;                            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select8_Default;                            // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue5;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select9_Default;                            // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString) == 0x000008, "Wrong alignment on BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString) == 0x000270, "Wrong size on BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable) == 0x000018, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable1) == 0x000028, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable1) == 0x000030, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable2) == 0x000040, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable2) == 0x000050, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable3) == 0x000058, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable3) == 0x000068, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable4) == 0x000070, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable4) == 0x000080, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable5) == 0x000088, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable6) == 0x000098, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable5) == 0x0000A8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable7) == 0x0000B0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable6) == 0x0000C0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable8) == 0x0000C8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable9) == 0x0000D8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable7) == 0x0000E8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable10) == 0x0000F0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable8) == 0x000100, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable11) == 0x000108, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable12) == 0x000118, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_bool_Variable9) == 0x000128, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_bool_Variable9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, Temp_string_Variable13) == 0x000130, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::Temp_string_Variable13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select_Default) == 0x000140, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select1_Default) == 0x000150, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select2_Default) == 0x000168, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select3_Default) == 0x000178, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000188, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue2) == 0x000189, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select4_Default) == 0x000190, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select5_Default) == 0x0001A0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue3) == 0x0001B0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue4) == 0x0001B1, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select6_Default) == 0x0001B8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select7_Default) == 0x0001C8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select8_Default) == 0x0001D8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Less_FloatFloat_ReturnValue5) == 0x0001E8, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Less_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, K2Node_Select9_Default) == 0x0001F0, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue) == 0x000200, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue1) == 0x000210, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue2) == 0x000220, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue3) == 0x000230, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue4) == 0x000240, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue5) == 0x000250, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString, CallFunc_Concat_StrStr_ReturnValue6) == 0x000260, "Member 'BP_AJBInGameAIInputProxy_C_DebugGetInputStatusString::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");

// Function BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C.IsInputMoveClear
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBInGameAIInputProxy_C_IsInputMoveClear final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue2;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear) == 0x000001, "Wrong alignment on BP_AJBInGameAIInputProxy_C_IsInputMoveClear");
static_assert(sizeof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear) == 0x000006, "Wrong size on BP_AJBInGameAIInputProxy_C_IsInputMoveClear");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, ReturnValue) == 0x000000, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x000002, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, CallFunc_EqualEqual_FloatFloat_ReturnValue2) == 0x000003, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::CallFunc_EqualEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameAIInputProxy_C_IsInputMoveClear, CallFunc_BooleanAND_ReturnValue1) == 0x000005, "Member 'BP_AJBInGameAIInputProxy_C_IsInputMoveClear::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Aura_Card

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Aura_Card.WB_Aura_Card_C.ExecuteUbergraph_WB_Aura_Card
// 0x0048 (0x0048 - 0x0000)
struct WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AuraOffset;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
};
static_assert(alignof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card) == 0x000008, "Wrong alignment on WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card");
static_assert(sizeof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card) == 0x000048, "Wrong size on WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, EntryPoint) == 0x000000, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, K2Node_CustomEvent_AuraOffset) == 0x000004, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::K2Node_CustomEvent_AuraOffset' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, K2Node_Event_IsDesignTime) == 0x000009, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, K2Node_MakeStruct_LinearColor) == 0x00000C, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WB_Aura_Card_C_ExecuteUbergraph_WB_Aura_Card::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WB_Aura_Card.WB_Aura_Card_C.SetAuraOffset
// 0x0004 (0x0004 - 0x0000)
struct WB_Aura_Card_C_SetAuraOffset final
{
public:
	float                                         AuraOffset_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Aura_Card_C_SetAuraOffset) == 0x000004, "Wrong alignment on WB_Aura_Card_C_SetAuraOffset");
static_assert(sizeof(WB_Aura_Card_C_SetAuraOffset) == 0x000004, "Wrong size on WB_Aura_Card_C_SetAuraOffset");
static_assert(offsetof(WB_Aura_Card_C_SetAuraOffset, AuraOffset_0) == 0x000000, "Member 'WB_Aura_Card_C_SetAuraOffset::AuraOffset_0' has a wrong offset!");

// Function WB_Aura_Card.WB_Aura_Card_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Aura_Card_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Aura_Card_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Aura_Card_C_PreConstruct");
static_assert(sizeof(WB_Aura_Card_C_PreConstruct) == 0x000001, "Wrong size on WB_Aura_Card_C_PreConstruct");
static_assert(offsetof(WB_Aura_Card_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Aura_Card_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_Aura_Card.WB_Aura_Card_C.GetDynamicMaterialInstance
// 0x0010 (0x0010 - 0x0000)
struct WB_Aura_Card_C_GetDynamicMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Aura_Card_C_GetDynamicMaterialInstance) == 0x000008, "Wrong alignment on WB_Aura_Card_C_GetDynamicMaterialInstance");
static_assert(sizeof(WB_Aura_Card_C_GetDynamicMaterialInstance) == 0x000010, "Wrong size on WB_Aura_Card_C_GetDynamicMaterialInstance");
static_assert(offsetof(WB_Aura_Card_C_GetDynamicMaterialInstance, ReturnValue) == 0x000000, "Member 'WB_Aura_Card_C_GetDynamicMaterialInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Aura_Card_C_GetDynamicMaterialInstance, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WB_Aura_Card_C_GetDynamicMaterialInstance::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}


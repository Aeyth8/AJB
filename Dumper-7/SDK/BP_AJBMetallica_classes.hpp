#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBMetallica

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBMetallica.BP_AJBMetallica_C
// 0x0060 (0x0270 - 0x0210)
class UBP_AJBMetallica_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBMetallica_C;                  // 0x0210(0x0008)(Transient, DuplicateTransient)
	float                                         CharacterMoveSpeedScale;                           // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterJumpSpeedScale;                           // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageInterval_s_;                                 // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentIntervalTime;                               // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SkillTag;                                          // 0x0230(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDamage;                                       // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowDebugPrint;                                   // 0x023C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalTime;                                         // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InvasionParticleTime;                              // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MetallicaParticleTime;                             // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequestedInvasionParticleServer;                  // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRequestedMetallicaParticle;                       // 0x024D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageGionTag;                                     // 0x0250(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         GionStartDelay_Sec_;                               // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GionDelayInterval;                                 // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldRequestEffect;                              // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DamageOnCritical;                                  // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistanceScale;                             // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBMetallica(int32 EntryPoint);
	void ChangeVisual(bool bNewVisibility);
	void StopContinuousGion();
	void BeginContinuousGion();
	void MC_SetShouldUpdateLectActiveTime(bool bShouldUpdateLeftActiveTime);
	void MC_Invasion();
	void MC_ApplyDamage();
	void UpdateIntervalTimeServer(float DeltaSeconds, int32* DamageCount);
	void TryApplyDamage(int32 DamageCount);
	void PrintStringMetallica(const class FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration);
	void GetPoliticDamage(int32* Damage_0);
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void ReceiveBeginPlay();
	void ChangeParticleVisibility(bool bNewVisibility);
	void ReceiveTick(float DeltaSeconds);
	void TryChangeParticleVisibility(bool bNewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBMetallica_C">();
	}
	static class UBP_AJBMetallica_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBMetallica_C>();
	}
};
static_assert(alignof(UBP_AJBMetallica_C) == 0x000008, "Wrong alignment on UBP_AJBMetallica_C");
static_assert(sizeof(UBP_AJBMetallica_C) == 0x000270, "Wrong size on UBP_AJBMetallica_C");
static_assert(offsetof(UBP_AJBMetallica_C, UberGraphFrame_BP_AJBMetallica_C) == 0x000210, "Member 'UBP_AJBMetallica_C::UberGraphFrame_BP_AJBMetallica_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, CharacterMoveSpeedScale) == 0x000218, "Member 'UBP_AJBMetallica_C::CharacterMoveSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, CharacterJumpSpeedScale) == 0x00021C, "Member 'UBP_AJBMetallica_C::CharacterJumpSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, DamageInterval_s_) == 0x000220, "Member 'UBP_AJBMetallica_C::DamageInterval_s_' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, Damage) == 0x000224, "Member 'UBP_AJBMetallica_C::Damage' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, CurrentIntervalTime) == 0x000228, "Member 'UBP_AJBMetallica_C::CurrentIntervalTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, SkillTag) == 0x000230, "Member 'UBP_AJBMetallica_C::SkillTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, TotalDamage) == 0x000238, "Member 'UBP_AJBMetallica_C::TotalDamage' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, bShowDebugPrint) == 0x00023C, "Member 'UBP_AJBMetallica_C::bShowDebugPrint' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, TotalTime) == 0x000240, "Member 'UBP_AJBMetallica_C::TotalTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, InvasionParticleTime) == 0x000244, "Member 'UBP_AJBMetallica_C::InvasionParticleTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, MetallicaParticleTime) == 0x000248, "Member 'UBP_AJBMetallica_C::MetallicaParticleTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, bRequestedInvasionParticleServer) == 0x00024C, "Member 'UBP_AJBMetallica_C::bRequestedInvasionParticleServer' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, bRequestedMetallicaParticle) == 0x00024D, "Member 'UBP_AJBMetallica_C::bRequestedMetallicaParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, DamageGionTag) == 0x000250, "Member 'UBP_AJBMetallica_C::DamageGionTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, GionStartDelay_Sec_) == 0x000258, "Member 'UBP_AJBMetallica_C::GionStartDelay_Sec_' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, GionDelayInterval) == 0x00025C, "Member 'UBP_AJBMetallica_C::GionDelayInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, bShouldRequestEffect) == 0x000260, "Member 'UBP_AJBMetallica_C::bShouldRequestEffect' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, DamageOnCritical) == 0x000264, "Member 'UBP_AJBMetallica_C::DamageOnCritical' has a wrong offset!");
static_assert(offsetof(UBP_AJBMetallica_C, MovementDistanceScale) == 0x000268, "Member 'UBP_AJBMetallica_C::MovementDistanceScale' has a wrong offset!");

}


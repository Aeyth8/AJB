#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBTriggerUltimateSkill

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_AJBTriggerUltimateSkill.BTT_AJBTriggerUltimateSkill_C
// 0x0068 (0x0108 - 0x00A0)
class UBTT_AJBTriggerUltimateSkill_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 RO_TargetEnemyKey;                                 // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 AttackRangeKey;                                    // 0x00D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                          bDebugForceFire;                                   // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventTagLocker*                        InActionLocker;                                    // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_AJBTriggerUltimateSkill(int32 EntryPoint);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_AJBTriggerUltimateSkill_C">();
	}
	static class UBTT_AJBTriggerUltimateSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_AJBTriggerUltimateSkill_C>();
	}
};
static_assert(alignof(UBTT_AJBTriggerUltimateSkill_C) == 0x000008, "Wrong alignment on UBTT_AJBTriggerUltimateSkill_C");
static_assert(sizeof(UBTT_AJBTriggerUltimateSkill_C) == 0x000108, "Wrong size on UBTT_AJBTriggerUltimateSkill_C");
static_assert(offsetof(UBTT_AJBTriggerUltimateSkill_C, UberGraphFrame) == 0x0000A0, "Member 'UBTT_AJBTriggerUltimateSkill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTriggerUltimateSkill_C, RO_TargetEnemyKey) == 0x0000A8, "Member 'UBTT_AJBTriggerUltimateSkill_C::RO_TargetEnemyKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTriggerUltimateSkill_C, AttackRangeKey) == 0x0000D0, "Member 'UBTT_AJBTriggerUltimateSkill_C::AttackRangeKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTriggerUltimateSkill_C, bDebugForceFire) == 0x0000F8, "Member 'UBTT_AJBTriggerUltimateSkill_C::bDebugForceFire' has a wrong offset!");
static_assert(offsetof(UBTT_AJBTriggerUltimateSkill_C, InActionLocker) == 0x000100, "Member 'UBTT_AJBTriggerUltimateSkill_C::InActionLocker' has a wrong offset!");

}


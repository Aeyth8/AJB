#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBDebugDrawBasics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBDebugDrawBasics.BTS_AJBDebugDrawBasics_C.ExecuteUbergraph_BTS_AJBDebugDrawBasics
// 0x00D8 (0x00D8 - 0x0000)
struct BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue;               // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBreastLocation_ReturnValue;            // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue1;              // 0x007C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue1; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x00C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics) == 0x000008, "Wrong alignment on BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics");
static_assert(sizeof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics) == 0x0000D8, "Wrong size on BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, EntryPoint) == 0x000000, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_AI_GetLogColor_ReturnValue) == 0x000004, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_AI_GetLogColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_Event_OwnerController1) == 0x000018, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_Event_ControlledPawn1) == 0x000020, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_Event_OwnerController) == 0x000030, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_Event_ControlledPawn) == 0x000038, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetRecognition_ReturnValue) == 0x000040, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_IfDebugDrawOnTask_ReturnValue) == 0x000048, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_IfDebugDrawOnTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, Temp_bool_IsClosed_Variable) == 0x000049, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000050, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetBreastLocation_ReturnValue) == 0x000058, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetBreastLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetForwardVector_ReturnValue) == 0x000064, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_AI_GetLogColor_ReturnValue1) == 0x00007C, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_AI_GetLogColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetBlackboardKeyName_ReturnValue) == 0x000098, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetBlackboardKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetValueAsObject_ReturnValue) == 0x0000A0, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character) == 0x0000A8, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, Temp_bool_Has_Been_Initd_Variable) == 0x0000B1, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetLocation_ReturnValue) == 0x0000B4, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetControllingImaginaryCharacter_ReturnValue1) == 0x0000C0, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetControllingImaginaryCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics, CallFunc_GetLocation_ReturnValue1) == 0x0000C8, "Member 'BTS_AJBDebugDrawBasics_C_ExecuteUbergraph_BTS_AJBDebugDrawBasics::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");

// Function BTS_AJBDebugDrawBasics.BTS_AJBDebugDrawBasics_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBDebugDrawBasics_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBDebugDrawBasics_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_AJBDebugDrawBasics_C_ReceiveActivationAI");
static_assert(sizeof(BTS_AJBDebugDrawBasics_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_AJBDebugDrawBasics_C_ReceiveActivationAI");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBDebugDrawBasics_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBDebugDrawBasics_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_AJBDebugDrawBasics.BTS_AJBDebugDrawBasics_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBDebugDrawBasics_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBDebugDrawBasics_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBDebugDrawBasics_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBDebugDrawBasics_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBDebugDrawBasics_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBDebugDrawBasics_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBDebugDrawBasics_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBDebugDrawBasics_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBDebugDrawBasics_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}


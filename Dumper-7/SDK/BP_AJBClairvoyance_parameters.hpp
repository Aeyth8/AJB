#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBClairvoyance

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.ExecuteUbergraph_BP_AJBClairvoyance
// 0x0140 (0x0140 - 0x0000)
struct BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterPropertyOwner_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyStand_PropertyStandBP;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBInGameCharacterPropertyOwner_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistPropertyStand_bExist;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0088(0x0008)(NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_CurrentTime_Variable;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_bReverse_Variable;                       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_bShouldUpdate_Variable;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand1;                   // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Distance;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base2;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue1;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable3;                              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Causer;                               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base3;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance) == 0x000008, "Wrong alignment on BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance");
static_assert(sizeof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance) == 0x000140, "Wrong size on BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, EntryPoint) == 0x000000, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000018, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_HasLocalSharedController_ReturnValue) == 0x000031, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsValidClass_ReturnValue) == 0x000033, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner) == 0x000038, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetPropertyStand_PropertyStandBP) == 0x000050, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetPropertyStand_PropertyStandBP' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner1) == 0x000058, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property_Owner1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_CheckExistPropertyStand_bExist) == 0x000069, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_CheckExistPropertyStand_bExist' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsValid_ReturnValue1) == 0x00006A, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsValid_ReturnValue2) == 0x00006B, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_float_Variable) == 0x00006C, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_float_Variable1) == 0x000070, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000088, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue2) == 0x000098, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0000A0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess4) == 0x0000A8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_bool_Variable) == 0x0000A9, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsPlayerController_ReturnValue) == 0x0000AA, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0000AB, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_float_CurrentTime_Variable) == 0x0000AC, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_float_CurrentTime_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_float_Variable2) == 0x0000B0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetFloatValue_ReturnValue) == 0x0000C0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_bool_bReverse_Variable) == 0x0000C4, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_bool_bReverse_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_bool_bShouldUpdate_Variable) == 0x0000C5, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_bool_bShouldUpdate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_Select_Default) == 0x0000C8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_Not_PreBool_ReturnValue) == 0x0000CC, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_Event_bTriggeredByStand1) == 0x0000CD, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_Event_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_Event_bTriggeredByStand) == 0x0000CE, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_CustomEvent_Time) == 0x0000D0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_CustomEvent_Distance) == 0x0000D4, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_CustomEvent_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue3) == 0x0000D8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsAJBIn_Game_Character_Base2) == 0x0000E0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsAJBIn_Game_Character_Base2' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess5) == 0x0000E8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_IsPlayerController_ReturnValue1) == 0x0000E9, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_IsPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_CustomEvent_bEnable) == 0x0000EA, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_float_Variable3) == 0x0000EC, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F0, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue4) == 0x0000F8, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_Event_Causer) == 0x000100, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_GetOwner_ReturnValue5) == 0x000110, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, Temp_bool_Variable1) == 0x000118, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_AsAJBIn_Game_Character_Base3) == 0x000120, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_AsAJBIn_Game_Character_Base3' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_DynamicCast_bSuccess6) == 0x000128, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000129, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, K2Node_Select1_Default) == 0x00012C, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000130, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance, CallFunc_FClamp_ReturnValue) == 0x000138, "Member 'BP_AJBClairvoyance_C_ExecuteUbergraph_BP_AJBClairvoyance::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.ChangeEnablePPMaterials
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBClairvoyance_C_ChangeEnablePPMaterials final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBClairvoyance_C_ChangeEnablePPMaterials) == 0x000001, "Wrong alignment on BP_AJBClairvoyance_C_ChangeEnablePPMaterials");
static_assert(sizeof(BP_AJBClairvoyance_C_ChangeEnablePPMaterials) == 0x000001, "Wrong size on BP_AJBClairvoyance_C_ChangeEnablePPMaterials");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterials, bEnable) == 0x000000, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterials::bEnable' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.SetParameter_Server
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBClairvoyance_C_SetParameter_Server final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_0;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBClairvoyance_C_SetParameter_Server) == 0x000004, "Wrong alignment on BP_AJBClairvoyance_C_SetParameter_Server");
static_assert(sizeof(BP_AJBClairvoyance_C_SetParameter_Server) == 0x000008, "Wrong size on BP_AJBClairvoyance_C_SetParameter_Server");
static_assert(offsetof(BP_AJBClairvoyance_C_SetParameter_Server, Time_0) == 0x000000, "Member 'BP_AJBClairvoyance_C_SetParameter_Server::Time_0' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_SetParameter_Server, Distance_0) == 0x000004, "Member 'BP_AJBClairvoyance_C_SetParameter_Server::Distance_0' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.ChangeEnablePPMaterial
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBClairvoyance_C_ChangeEnablePPMaterial final
{
public:
	class AAJBInGameCharacterBase*                CharacterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaterialIndexRef;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       TempCameraComponent;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial) == 0x000008, "Wrong alignment on BP_AJBClairvoyance_C_ChangeEnablePPMaterial");
static_assert(sizeof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial) == 0x000030, "Wrong size on BP_AJBClairvoyance_C_ChangeEnablePPMaterial");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, CharacterBase) == 0x000000, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::CharacterBase' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, bEnable) == 0x000008, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, MaterialIndexRef) == 0x00000C, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::MaterialIndexRef' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, TempCameraComponent) == 0x000010, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::TempCameraComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, CallFunc_IsValid_ReturnValue1) == 0x000028, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_ChangeEnablePPMaterial, CallFunc_IsValid_ReturnValue2) == 0x000029, "Member 'BP_AJBClairvoyance_C_ChangeEnablePPMaterial::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.PlaySE
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBClairvoyance_C_PlaySE final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBClairvoyance_C_PlaySE) == 0x000008, "Wrong alignment on BP_AJBClairvoyance_C_PlaySE");
static_assert(sizeof(BP_AJBClairvoyance_C_PlaySE) == 0x000008, "Wrong size on BP_AJBClairvoyance_C_PlaySE");
static_assert(offsetof(BP_AJBClairvoyance_C_PlaySE, Causer) == 0x000000, "Member 'BP_AJBClairvoyance_C_PlaySE::Causer' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBClairvoyance_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBClairvoyance_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBClairvoyance_C_OnActionInactivate");
static_assert(sizeof(BP_AJBClairvoyance_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBClairvoyance_C_OnActionInactivate");
static_assert(offsetof(BP_AJBClairvoyance_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBClairvoyance_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBClairvoyance_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBClairvoyance_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBClairvoyance_C_OnActionActivate");
static_assert(sizeof(BP_AJBClairvoyance_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBClairvoyance_C_OnActionActivate");
static_assert(offsetof(BP_AJBClairvoyance_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBClairvoyance_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.OnRep_Distance
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBClairvoyance_C_OnRep_Distance final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBClairvoyance_C_OnRep_Distance) == 0x000001, "Wrong alignment on BP_AJBClairvoyance_C_OnRep_Distance");
static_assert(sizeof(BP_AJBClairvoyance_C_OnRep_Distance) == 0x000001, "Wrong size on BP_AJBClairvoyance_C_OnRep_Distance");
static_assert(offsetof(BP_AJBClairvoyance_C_OnRep_Distance, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_AJBClairvoyance_C_OnRep_Distance::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_AJBClairvoyance.BP_AJBClairvoyance_C.TryCreateDMI
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBClairvoyance_C_TryCreateDMI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetExistsUnderwater_Is_Exists_Underwater; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBClairvoyance_C_TryCreateDMI) == 0x000008, "Wrong alignment on BP_AJBClairvoyance_C_TryCreateDMI");
static_assert(sizeof(BP_AJBClairvoyance_C_TryCreateDMI) == 0x000018, "Wrong size on BP_AJBClairvoyance_C_TryCreateDMI");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, CallFunc_GetExistsUnderwater_Is_Exists_Underwater) == 0x000001, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::CallFunc_GetExistsUnderwater_Is_Exists_Underwater' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, CallFunc_IsDedicatedServer_ReturnValue) == 0x000003, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBClairvoyance_C_TryCreateDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_AJBClairvoyance_C_TryCreateDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}


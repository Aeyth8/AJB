#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectileAirBomb

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.ExecuteUbergraph_BP_AJBInGameProjectileAirBomb
// 0x0320 (0x0320 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation1;                         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeadShot2;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrate1;                          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFirstHit1;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CuttingRate1;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableDamage;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bReflect;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Event_ReflectRotation;                      // 0x004C(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBlocking;                            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_ReflectSkillTag;                      // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAvoidSkill;                          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeadShot1;                           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CuttingRate;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBlockedByAAP;                        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_OverlappedComponent;                  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OtherBodyIndex;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FromSweep;                            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_SweepResult;                          // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bHeadShot;                            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrate;                           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFirstHit;                            // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcReflectionVector_Vector;              // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_Barrier_C>         K2Node_DynamicCast_AsBI_Barrier;                   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIgnitionBySpecialProjectile_bIgnition;  // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TreatAsCharacterBySpecialProjectile_bTreat; // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0240(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBAirBombImpulse_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02E8(0x0008)(NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSeparating_ReturnValue;                 // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb) == 0x000010, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb) == 0x000320, "Wrong size on BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, EntryPoint) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_HitActor1) == 0x000020, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_HitLocation1) == 0x000028, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_HitNormal) == 0x000034, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bHeadShot2) == 0x000040, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bHeadShot2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bPenetrate1) == 0x000041, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bPenetrate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bFirstHit1) == 0x000042, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bFirstHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_CuttingRate1) == 0x000044, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_CuttingRate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bDisableDamage) == 0x000048, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bReflect) == 0x000049, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_ReflectRotation) == 0x00004C, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bBlocking) == 0x000058, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_ReflectSkillTag) == 0x000060, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_ReflectSkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bAvoidSkill) == 0x000068, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetOwner_ReturnValue1) == 0x0000A8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_DeltaSeconds) == 0x0000B0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000B8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess1) == 0x0000C0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C1, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_HitActor) == 0x0000C8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_HitLocation) == 0x0000D0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bHeadShot1) == 0x0000DC, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bHeadShot1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_SurfaceType) == 0x0000DD, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_CuttingRate) == 0x0000E0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bBlockedByAAP) == 0x0000E4, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BooleanAND_ReturnValue) == 0x0000E5, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_OverlappedComponent) == 0x0000E8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_OtherActor) == 0x0000F0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_OtherComp) == 0x0000F8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_OtherBodyIndex) == 0x000100, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_FromSweep) == 0x000104, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_SweepResult) == 0x000108, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bHeadShot) == 0x000190, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bPenetrate) == 0x000191, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bPenetrate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_Event_bFirstHit) == 0x000192, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_Event_bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_CalcReflectionVector_Vector) == 0x000194, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_CalcReflectionVector_Vector' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBI_Barrier) == 0x0001A8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBI_Barrier' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess2) == 0x0001B8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsValid_ReturnValue1) == 0x0001B9, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsIgnitionBySpecialProjectile_bIgnition) == 0x0001BA, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsIgnitionBySpecialProjectile_bIgnition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BooleanOR_ReturnValue1) == 0x0001BB, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_Not_PreBool_ReturnValue1) == 0x0001BC, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0001C0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess3) == 0x0001C8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001C9, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x0001D0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess4) == 0x0001E0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetPropertyType_PropertyType) == 0x0001E1, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x0001E8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess5) == 0x0001F8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_TreatAsCharacterBySpecialProjectile_bTreat) == 0x0001F9, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_TreatAsCharacterBySpecialProjectile_bTreat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001FA, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsPair_bPairCharacter) == 0x0001FB, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_Not_PreBool_ReturnValue2) == 0x0001FC, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_Add_FloatFloat_ReturnValue) == 0x000200, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000204, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000208, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000210, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000218, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000219, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00021A, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BooleanOR_ReturnValue2) == 0x00021B, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetOwner_ReturnValue2) == 0x000220, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000228, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess6) == 0x000230, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000238, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000240, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002C8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002D0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_CreateDelegate_OutputDelegate) == 0x0002D8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002E8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GetOwner_ReturnValue3) == 0x0002F0, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0002F8, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess7) == 0x000300, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000301, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000308, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, K2Node_DynamicCast_bSuccess8) == 0x000310, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_IsSeparating_ReturnValue) == 0x000311, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_IsSeparating_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000312, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb, CallFunc_BooleanAND_ReturnValue1) == 0x000313, "Member 'BP_AJBInGameProjectileAirBomb_C_ExecuteUbergraph_BP_AJBInGameProjectileAirBomb::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.CalcReflectionVector
// 0x01B8 (0x01B8 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Vector;                                            // 0x0088(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempOutVector;                                     // 0x0094(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempHitNormal;                                     // 0x00A0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempHitLocation;                                   // 0x00AC(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempInVector;                                      // 0x00B8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector) == 0x0001B8, "Wrong size on BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, HitResult) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, Vector) == 0x000088, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::Vector' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, TempOutVector) == 0x000094, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::TempOutVector' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, TempHitNormal) == 0x0000A0, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::TempHitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, TempHitLocation) == 0x0000AC, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::TempHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, TempInVector) == 0x0000B8, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::TempInVector' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C4, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C5, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_Time) == 0x0000C8, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_Distance) == 0x0000CC, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_Location) == 0x0000D0, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_ImpactPoint) == 0x0000DC, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_Normal) == 0x0000E8, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F4, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Add_VectorVector_ReturnValue) == 0x00014C, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_GetReflectionVector_ReturnValue) == 0x000158, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000164, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Add_VectorVector_ReturnValue1) == 0x000170, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_NegateVector_ReturnValue) == 0x00017C, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000188, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Add_VectorVector_ReturnValue2) == 0x0001A0, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector, CallFunc_Normal_ReturnValue) == 0x0001AC, "Member 'BP_AJBInGameProjectileAirBomb_C_CalcReflectionVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.GetReflectionVelocity
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity) == 0x000004, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity) == 0x000018, "Wrong size on BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity, Velocity) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameProjectileAirBomb_C_GetReflectionVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.GetReflectionTimeRate
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate) == 0x000004, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate) == 0x000008, "Wrong size on BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate, Rate) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectileAirBomb_C_GetReflectionTimeRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.UpdateVisual
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_UpdateVisual final
{
public:
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_UpdateVisual");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual) == 0x000030, "Wrong size on BP_AJBInGameProjectileAirBomb_C_UpdateVisual");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000008, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000010, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00002A, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_UpdateVisual, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'BP_AJBInGameProjectileAirBomb_C_UpdateVisual::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.GetScaledSpeed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed final
{
public:
	float                                         Speed_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSpecifiedSpeed_OutSpeed;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed) == 0x000008, "Wrong size on BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed, Speed_0) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed::Speed_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed, CallFunc_GetScaledSpecifiedSpeed_OutSpeed) == 0x000004, "Member 'BP_AJBInGameProjectileAirBomb_C_GetScaledSpeed::CallFunc_GetScaledSpecifiedSpeed_OutSpeed' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.OnProjectileHit
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_OnProjectileHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSweep;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bHeadShot;                                         // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x00AA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_OnProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit) == 0x0000B0, "Wrong size on BP_AJBInGameProjectileAirBomb_C_OnProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, FromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::FromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, bHeadShot) == 0x0000A8, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, bPenetrate_0) == 0x0000A9, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnProjectileHit, bFirstHit) == 0x0000AA, "Member 'BP_AJBInGameProjectileAirBomb_C_OnProjectileHit::bFirstHit' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameProjectileAirBomb_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.OnROS_ProjectileHit
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal_0;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrate_0;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstHit;                                         // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReflect;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReflectRotation;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bBlocking;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ReflectSkillTag_0;                                 // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAvoidSkill;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit) == 0x000050, "Wrong size on BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, HitNormal_0) == 0x000014, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::HitNormal_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bHeadShot) == 0x000020, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bPenetrate_0) == 0x000021, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bPenetrate_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bFirstHit) == 0x000022, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bFirstHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, CuttingRate) == 0x000024, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bDisableDamage) == 0x000028, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bReflect) == 0x000029, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bReflect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, ReflectRotation) == 0x00002C, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::ReflectRotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bBlocking) == 0x000038, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bBlocking' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, ReflectSkillTag_0) == 0x000040, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::ReflectSkillTag_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit, bAvoidSkill) == 0x000048, "Member 'BP_AJBInGameProjectileAirBomb_C_OnROS_ProjectileHit::bAvoidSkill' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.PlayHitSE
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_PlayHitSE final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_0;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadShot;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CuttingRate;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockedByAAP;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE) == 0x000008, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_PlayHitSE");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE) == 0x000020, "Wrong size on BP_AJBInGameProjectileAirBomb_C_PlayHitSE");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, HitActor) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, HitLocation_0) == 0x000008, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::HitLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, bHeadShot) == 0x000014, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, SurfaceType) == 0x000015, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, CuttingRate) == 0x000018, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_PlayHitSE, bBlockedByAAP) == 0x00001C, "Member 'BP_AJBInGameProjectileAirBomb_C_PlayHitSE::bBlockedByAAP' has a wrong offset!");

// Function BP_AJBInGameProjectileAirBomb.BP_AJBInGameProjectileAirBomb_C.ShouldCheckRange
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange final
{
public:
	bool                                          bShouldCheckRange;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange) == 0x000001, "Wrong alignment on BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange");
static_assert(sizeof(BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange) == 0x000001, "Wrong size on BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange");
static_assert(offsetof(BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange, bShouldCheckRange) == 0x000000, "Member 'BP_AJBInGameProjectileAirBomb_C_ShouldCheckRange::bShouldCheckRange' has a wrong offset!");

}


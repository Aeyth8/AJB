#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LandmarkableMap

#include "Basic.hpp"

#include "WB_LandmarkableMap_classes.hpp"
#include "WB_LandmarkableMap_parameters.hpp"


namespace SDK
{

// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ExecuteUbergraph_WB_LandmarkableMap
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::ExecuteUbergraph_WB_LandmarkableMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ExecuteUbergraph_WB_LandmarkableMap");

	Params::WB_LandmarkableMap_C_ExecuteUbergraph_WB_LandmarkableMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetAdvancedSafeAreaVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::SetAdvancedSafeAreaVisibility(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetAdvancedSafeAreaVisibility");

	Params::WB_LandmarkableMap_C_SetAdvancedSafeAreaVisibility Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.PlayFocusAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::PlayFocusAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "PlayFocusAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnHighlightPlayBegin
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::OnHighlightPlayBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnHighlightPlayBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetIconBink
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableBlink                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::SetIconBink(bool bEnableBlink)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetIconBink");

	Params::WB_LandmarkableMap_C_SetIconBink Parms{};

	Parms.bEnableBlink = bEnableBlink;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ResetTouchFlag
// (BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::ResetTouchFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ResetTouchFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnPermissionRemoveMarker
// (BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::OnPermissionRemoveMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnPermissionRemoveMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.BanRemoveMarker
// (BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::BanRemoveMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "BanRemoveMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnStickedPairMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::OnStickedPairMarker(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalPinType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnStickedPairMarker");

	Params::WB_LandmarkableMap_C_OnStickedPairMarker Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.SignalPinType = std::move(SignalPinType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnStickedPlayerMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SignalPinType                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    FromMap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::OnStickedPlayerMarker(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalPinType, bool FromMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnStickedPlayerMarker");

	Params::WB_LandmarkableMap_C_OnStickedPlayerMarker Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.MapWidget = MapWidget;
	Parms.SignalPinType = std::move(SignalPinType);
	Parms.FromMap = FromMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnChangedPairIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IconAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bVisibleIcon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PairHP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::OnChangedPairIcon(const struct FVector2D& NormalizedPosition, float IconAngle, class UWB_LandmarkableMap_C* MapWidget, bool bVisibleIcon, int32 PairHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnChangedPairIcon");

	Params::WB_LandmarkableMap_C_OnChangedPairIcon Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.IconAngle = IconAngle;
	Parms.MapWidget = MapWidget;
	Parms.bVisibleIcon = bVisibleIcon;
	Parms.PairHP = PairHP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnChangedPlayerIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IconAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_LandmarkableMap_C*            MapWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::OnChangedPlayerIcon(const struct FVector2D& NormalizedPosition, float IconAngle, class UWB_LandmarkableMap_C* MapWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnChangedPlayerIcon");

	Params::WB_LandmarkableMap_C_OnChangedPlayerIcon Parms{};

	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.IconAngle = IconAngle;
	Parms.MapWidget = MapWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ForceFocusPlayer
// (BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::ForceFocusPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ForceFocusPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "PreConstruct");

	Params::WB_LandmarkableMap_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetTargetScale
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScrollScaleTarget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::SetTargetScale(float ScrollScaleTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetTargetScale");

	Params::WB_LandmarkableMap_C_SetTargetScale Parms{};

	Parms.ScrollScaleTarget = ScrollScaleTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetTargetPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 TargetPosition_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::SetTargetPosition(const struct FVector2D& TargetPosition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetTargetPosition");

	Params::WB_LandmarkableMap_C_SetTargetPosition Parms{};

	Parms.TargetPosition_0 = std::move(TargetPosition_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_LandmarkableMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetScale
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InScale                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::SetScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetScale");

	Params::WB_LandmarkableMap_C_SetScale Parms{};

	Parms.InScale = InScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InPosition                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::SetPosition(const struct FVector2D& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetPosition");

	Params::WB_LandmarkableMap_C_SetPosition Parms{};

	Parms.InPosition = std::move(InPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "Tick");

	Params::WB_LandmarkableMap_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.StickCautionPin
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_LandmarkableMap_C::StickCautionPin(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "StickCautionPin");

	Params::WB_LandmarkableMap_C_StickCautionPin Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ReserveInstructionPin
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_LandmarkableMap_C::ReserveInstructionPin(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ReserveInstructionPin");

	Params::WB_LandmarkableMap_C_ReserveInstructionPin Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.UpdateLimiter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_LandmarkableMap_C::UpdateLimiter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "UpdateLimiter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.On_Border_Inputer_MouseButtonDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_LandmarkableMap_C::On_Border_Inputer_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "On_Border_Inputer_MouseButtonDown");

	Params::WB_LandmarkableMap_C_On_Border_Inputer_MouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.On_Border_Inputer_MouseMove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_LandmarkableMap_C::On_Border_Inputer_MouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "On_Border_Inputer_MouseMove");

	Params::WB_LandmarkableMap_C_On_Border_Inputer_MouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.SetupLandmarkMapMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               OverrideMaterial                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::SetupLandmarkMapMaterial(class UMaterialInterface* OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "SetupLandmarkMapMaterial");

	Params::WB_LandmarkableMap_C_SetupLandmarkMapMaterial Parms{};

	Parms.OverrideMaterial = OverrideMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.CalcMapScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Scale_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_LandmarkableMap_C::CalcMapScale(float Scale_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "CalcMapScale");

	Params::WB_LandmarkableMap_C_CalcMapScale Parms{};

	Parms.Scale_0 = Scale_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.GetPositionFromNormalizePosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 Position_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWB_LandmarkableMap_C::GetPositionFromNormalizePosition(const struct FVector2D& Position_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "GetPositionFromNormalizePosition");

	Params::WB_LandmarkableMap_C_GetPositionFromNormalizePosition Parms{};

	Parms.Position_0 = std::move(Position_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.On_Border_Inputer_MouseDoubleClick
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_LandmarkableMap_C::On_Border_Inputer_MouseDoubleClick(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "On_Border_Inputer_MouseDoubleClick");

	Params::WB_LandmarkableMap_C_On_Border_Inputer_MouseDoubleClick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.CalcStickPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector2D*                       StickPosition                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       NormalizedStickPosition                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::CalcStickPosition(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, struct FVector2D* StickPosition, struct FVector2D* NormalizedStickPosition, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "CalcStickPosition");

	Params::WB_LandmarkableMap_C_CalcStickPosition Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (StickPosition != nullptr)
		*StickPosition = std::move(Parms.StickPosition);

	if (NormalizedStickPosition != nullptr)
		*NormalizedStickPosition = std::move(Parms.NormalizedStickPosition);

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.StickNewPin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 StickPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 NormalizedPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWB_LandmarkableMap_C::StickNewPin(const struct FVector2D& StickPosition, const struct FVector2D& NormalizedPosition, const struct FGameplayTag& SignalTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "StickNewPin");

	Params::WB_LandmarkableMap_C_StickNewPin Parms{};

	Parms.StickPosition = std::move(StickPosition);
	Parms.NormalizedPosition = std::move(NormalizedPosition);
	Parms.SignalTypeTag = std::move(SignalTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.TryRemoveLandmark
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 TouchPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Removed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_LandmarkableMap_C::TryRemoveLandmark(const struct FVector2D& TouchPosition, bool* Removed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "TryRemoveLandmark");

	Params::WB_LandmarkableMap_C_TryRemoveLandmark Parms{};

	Parms.TouchPosition = std::move(TouchPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Removed != nullptr)
		*Removed = Parms.Removed;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputTurnRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputTurnRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputTurnRate");

	Params::WB_LandmarkableMap_C_OnInputTurnRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedUp");

	Params::WB_LandmarkableMap_C_OnInputReleasedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedTouch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedTouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedTouch");

	Params::WB_LandmarkableMap_C_OnInputReleasedTouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedRight");

	Params::WB_LandmarkableMap_C_OnInputReleasedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedLeft
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedLeft");

	Params::WB_LandmarkableMap_C_OnInputReleasedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedDown");

	Params::WB_LandmarkableMap_C_OnInputReleasedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedDecide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedDecide");

	Params::WB_LandmarkableMap_C_OnInputReleasedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedCancel");

	Params::WB_LandmarkableMap_C_OnInputReleasedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedUp");

	Params::WB_LandmarkableMap_C_OnInputPressedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedTouch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float                             LocationX                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             LocationY                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedTouch(const float LocationX, const float LocationY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedTouch");

	Params::WB_LandmarkableMap_C_OnInputPressedTouch Parms{};

	Parms.LocationX = LocationX;
	Parms.LocationY = LocationY;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedRight");

	Params::WB_LandmarkableMap_C_OnInputPressedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedLeft
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedLeft");

	Params::WB_LandmarkableMap_C_OnInputPressedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedDown");

	Params::WB_LandmarkableMap_C_OnInputPressedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedDecide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedDecide");

	Params::WB_LandmarkableMap_C_OnInputPressedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedCancel");

	Params::WB_LandmarkableMap_C_OnInputPressedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputMoveRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputMoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputMoveRight");

	Params::WB_LandmarkableMap_C_OnInputMoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputMoveForward
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputMoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputMoveForward");

	Params::WB_LandmarkableMap_C_OnInputMoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputLookupRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputLookupRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputLookupRate");

	Params::WB_LandmarkableMap_C_OnInputLookupRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.IsModeless
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::IsModeless()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "IsModeless");

	Params::WB_LandmarkableMap_C_IsModeless Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedR2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedR2");

	Params::WB_LandmarkableMap_C_OnInputReleasedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedR1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedR1");

	Params::WB_LandmarkableMap_C_OnInputReleasedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedL2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedL2");

	Params::WB_LandmarkableMap_C_OnInputReleasedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedL1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedL1");

	Params::WB_LandmarkableMap_C_OnInputReleasedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedR2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedR2");

	Params::WB_LandmarkableMap_C_OnInputPressedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedR1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedR1");

	Params::WB_LandmarkableMap_C_OnInputPressedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedL2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedL2");

	Params::WB_LandmarkableMap_C_OnInputPressedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedL1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedL1");

	Params::WB_LandmarkableMap_C_OnInputPressedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputReleasedL3
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputReleasedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputReleasedL3");

	Params::WB_LandmarkableMap_C_OnInputReleasedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.OnInputPressedL3
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_LandmarkableMap_C::OnInputPressedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "OnInputPressedL3");

	Params::WB_LandmarkableMap_C_OnInputPressedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ClampPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FVector2D&                 InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWB_LandmarkableMap_C::ClampPosition(const struct FVector2D& InVec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ClampPosition");

	Params::WB_LandmarkableMap_C_ClampPosition Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.ClampScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_LandmarkableMap_C::ClampScale(float Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "ClampScale");

	Params::WB_LandmarkableMap_C_ClampScale Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_LandmarkableMap.WB_LandmarkableMap_C.GetCompassWaypoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FVector2D&                 TargetNormalizedInnerPosition                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_LandmarkableMap_C::GetCompassWaypoint(const struct FVector2D& TargetNormalizedInnerPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LandmarkableMap_C", "GetCompassWaypoint");

	Params::WB_LandmarkableMap_C_GetCompassWaypoint Parms{};

	Parms.TargetNormalizedInnerPosition = std::move(TargetNormalizedInnerPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


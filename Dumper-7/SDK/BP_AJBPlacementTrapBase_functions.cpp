#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPlacementTrapBase

#include "Basic.hpp"

#include "BP_AJBPlacementTrapBase_classes.hpp"
#include "BP_AJBPlacementTrapBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ExecuteUbergraph_BP_AJBPlacementTrapBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::ExecuteUbergraph_BP_AJBPlacementTrapBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ExecuteUbergraph_BP_AJBPlacementTrapBase");

	Params::BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.PreInitializeComponentsBP
// (Event, Public, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::PreInitializeComponentsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "PreInitializeComponentsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.MC_AttackHit
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::MC_AttackHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "MC_AttackHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnComponentBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_AJBPlacementTrapBase_C::OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnComponentBeginOverlap");

	Params::BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BindOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBoxComponent*                    BoxCollision                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::BindOverlap(class UBoxComponent* BoxCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "BindOverlap");

	Params::BP_AJBPlacementTrapBase_C_BindOverlap Parms{};

	Parms.BoxCollision = BoxCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          HitCharacter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::OnHit(class AAJBInGameCharacterBase* HitCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnHit");

	Params::BP_AJBPlacementTrapBase_C_OnHit Parms{};

	Parms.HitCharacter_0 = HitCharacter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_AJBPlacementTrapBase_C::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginOverlap");

	Params::BP_AJBPlacementTrapBase_C_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyHitEvent_Client
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          HitCharacter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::NotifyHitEvent_Client(class AAJBInGameCharacterBase* HitCharacter_0, class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "NotifyHitEvent_Client");

	Params::BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client Parms{};

	Parms.HitCharacter_0 = HitCharacter_0;
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyHitEvent_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          HitCharacter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::NotifyHitEvent_Server(class AAJBInGameCharacterBase* HitCharacter_0, class AActor* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "NotifyHitEvent_Server");

	Params::BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server Parms{};

	Parms.HitCharacter_0 = HitCharacter_0;
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ChangeCollisionEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::ChangeCollisionEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ChangeCollisionEnable");

	Params::BP_AJBPlacementTrapBase_C_ChangeCollisionEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.AdditionalHitJudgment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::AdditionalHitJudgment(class AActor* HitActor, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "AdditionalHitJudgment");

	Params::BP_AJBPlacementTrapBase_C_AdditionalHitJudgment Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.DamageProcess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::DamageProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "DamageProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.CheckCollisionEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::CheckCollisionEnable(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "CheckCollisionEnable");

	Params::BP_AJBPlacementTrapBase_C_CheckCollisionEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.AddMultipleBoxCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::AddMultipleBoxCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "AddMultipleBoxCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ReceiveTick");

	Params::BP_AJBPlacementTrapBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BoxCollisionProcessOnSpawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FVector&                   DividedCollisionSize                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bShouldSpawn                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::BoxCollisionProcessOnSpawn(const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& DividedCollisionSize, bool* bShouldSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "BoxCollisionProcessOnSpawn");

	Params::BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.DividedCollisionSize = std::move(DividedCollisionSize);

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSpawn != nullptr)
		*bShouldSpawn = Parms.bShouldSpawn;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ChangeCollisionEnableSpecified
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBoxComponent*                    BoxCollision                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::ChangeCollisionEnableSpecified(class UBoxComponent* BoxCollision, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ChangeCollisionEnableSpecified");

	Params::BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified Parms{};

	Parms.BoxCollision = BoxCollision;
	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.DestroySpecifiedBoxCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBoxComponent*                    BoxCollision                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::DestroySpecifiedBoxCollision(class UBoxComponent* BoxCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "DestroySpecifiedBoxCollision");

	Params::BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision Parms{};

	Parms.BoxCollision = BoxCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BoxCollisionProcessOnOverlap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bDestroyed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::BoxCollisionProcessOnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, bool* bDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "BoxCollisionProcessOnOverlap");

	Params::BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;

	UObject::ProcessEvent(Func, &Parms);

	if (bDestroyed != nullptr)
		*bDestroyed = Parms.bDestroyed;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.TrySpawnEmphasisParticleBase
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::TrySpawnEmphasisParticleBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "TrySpawnEmphasisParticleBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.TryDestroyEmphasisParticleBase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLeftVariable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bVisibilityOFF                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::TryDestroyEmphasisParticleBase(bool bLeftVariable, bool bVisibilityOFF)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "TryDestroyEmphasisParticleBase");

	Params::BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase Parms{};

	Parms.bLeftVariable = bLeftVariable;
	Parms.bVisibilityOFF = bVisibilityOFF;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.UpdateEmphasisParticleEnablesBase
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::UpdateEmphasisParticleEnablesBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "UpdateEmphasisParticleEnablesBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ShouldEnableEmphasisParticleBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bShouldEnable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::ShouldEnableEmphasisParticleBase(bool* bShouldEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "ShouldEnableEmphasisParticleBase");

	Params::BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldEnable != nullptr)
		*bShouldEnable = Parms.bShouldEnable;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetEmphasisParticleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::GetEmphasisParticleLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "GetEmphasisParticleLocation");

	Params::BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetCauserOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "GetCauserOwnerCharacterBP");

	Params::BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetPassiveSkillTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    PassiveSkillTag                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "GetPassiveSkillTag");

	Params::BP_AJBPlacementTrapBase_C_GetPassiveSkillTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveSkillTag != nullptr)
		*PassiveSkillTag = std::move(Parms.PassiveSkillTag);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBPlacementTrapBase_C::GetDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "GetDuration");

	Params::BP_AJBPlacementTrapBase_C_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginState_Prepare
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::OnBeginState_Prepare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginState_Prepare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginState_Triggering_OneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::OnBeginState_Triggering_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginState_Triggering_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginState_Standby_OneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::OnBeginState_Standby_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginState_Standby_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginState_Clearing
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::OnBeginState_Clearing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginState_Clearing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginState_Standby
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::OnBeginState_Standby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "OnBeginState_Standby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBPlacementTrapBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "NotifyTheWorld");

	Params::BP_AJBPlacementTrapBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBPlacementTrapBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPlacementTrapBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBZipper_Base.BP_AJBZipper_Base_C
// 0x0060 (0x0388 - 0x0328)
class ABP_AJBZipper_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshOrigin;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ZipperOpenClose_Scale_50C1C8044FD634C7C618A5A264D70899; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ZipperOpenClose__Direction_50C1C8044FD634C7C618A5A264D70899; // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ZipperOpenClose;                                   // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClosingForDestroy;                                // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnOpenCloseAnimationFinished;                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bOpenCloseAnimating;                               // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       ZipperDMIs;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBZipper_Base(int32 EntryPoint);
	void StateBeginPlay();
	void CloseAndDestroy();
	void ReceiveBeginPlay();
	void Close();
	void Open();
	void OnAreaDamageDisabled();
	void OnPassiveDisabled();
	void OnDamageDisabled();
	void DamageOverlapped(class AActor* DamageCauser, const struct FVector& HitLocation, bool bPenetrating, const struct FGameplayTag& FactorTag, bool bInvalidDamage);
	void AJBDamage(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool WithSeparatedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP, bool bNotUseCollision, bool IsEndured, const struct FAJBDamageDisplayParams& DamageDisplayParams, const struct FAJBDamageDisplayProperty& DamageDisplayProperty);
	void ZipperOpenClose__UpdateFunc();
	void ZipperOpenClose__FinishedFunc();
	void UserConstructionScript();
	void CrateDecalDMI();
	void OwnHitParam(bool* bCharacter, bool* bLeftAP, struct FGameplayTag* ParticleTagBlockedByAAP, struct FGameplayTag* SETagBlockedByAAP, struct FGameplayTag* ParticleTagBlocked);
	void CheckTargetSelf(class AActor* DamageCauser, bool bForDamageOverlap, bool bIgnoreMovableStand, bool bIncludeSelf, bool bAfterReflectShouldHitOwner, bool* bTarget);
	bool IfCheckDamageOverlap();
	void CheckDisableDamage(class AActor* DamageCauser, bool bIgnoreSelf, bool* bDisableDamage);
	void CheckDisablePassive(class AActor* PassiveCauser, const struct FGameplayTag& PassiveTag, bool bIgnoreSelf, bool* bDisablePassive);
	void CheckDisableAreaDamage(bool* bDisableAreadamage);
	void CheckNoDamage(class AActor* DamageCauser, bool* bNoDamage);
	void IsReactedByReticule(bool* bResult);
	void IgnoreTrace(class AActor* Owner_0, bool bPairOnly, bool* bIgnore);
	void CheckDisableDirectDamage(class AActor* DamageCauser, bool* bDisableDirectDamage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBZipper_Base_C">();
	}
	static class ABP_AJBZipper_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBZipper_Base_C>();
	}
};
static_assert(alignof(ABP_AJBZipper_Base_C) == 0x000008, "Wrong alignment on ABP_AJBZipper_Base_C");
static_assert(sizeof(ABP_AJBZipper_Base_C) == 0x000388, "Wrong size on ABP_AJBZipper_Base_C");
static_assert(offsetof(ABP_AJBZipper_Base_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBZipper_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, Decal) == 0x000330, "Member 'ABP_AJBZipper_Base_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, StaticMeshOrigin) == 0x000338, "Member 'ABP_AJBZipper_Base_C::StaticMeshOrigin' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_AJBZipper_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, ZipperOpenClose_Scale_50C1C8044FD634C7C618A5A264D70899) == 0x000348, "Member 'ABP_AJBZipper_Base_C::ZipperOpenClose_Scale_50C1C8044FD634C7C618A5A264D70899' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, ZipperOpenClose__Direction_50C1C8044FD634C7C618A5A264D70899) == 0x00034C, "Member 'ABP_AJBZipper_Base_C::ZipperOpenClose__Direction_50C1C8044FD634C7C618A5A264D70899' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, ZipperOpenClose) == 0x000350, "Member 'ABP_AJBZipper_Base_C::ZipperOpenClose' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, bClosingForDestroy) == 0x000358, "Member 'ABP_AJBZipper_Base_C::bClosingForDestroy' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, OnOpenCloseAnimationFinished) == 0x000360, "Member 'ABP_AJBZipper_Base_C::OnOpenCloseAnimationFinished' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, bOpenCloseAnimating) == 0x000370, "Member 'ABP_AJBZipper_Base_C::bOpenCloseAnimating' has a wrong offset!");
static_assert(offsetof(ABP_AJBZipper_Base_C, ZipperDMIs) == 0x000378, "Member 'ABP_AJBZipper_Base_C::ZipperDMIs' has a wrong offset!");

}


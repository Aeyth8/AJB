#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVolumeDetectionManageComponentBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBVolumeDetectionManageComponentBase.BP_AJBVolumeDetectionManageComponentBase_C.ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Volume1;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_Volume;                               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase) == 0x000008, "Wrong alignment on BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase");
static_assert(sizeof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase) == 0x000020, "Wrong size on BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase, EntryPoint) == 0x000000, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase, K2Node_Event_Volume1) == 0x000008, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase::K2Node_Event_Volume1' has a wrong offset!");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase, K2Node_Event_Volume) == 0x000010, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase::K2Node_Event_Volume' has a wrong offset!");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_ExecuteUbergraph_BP_AJBVolumeDetectionManageComponentBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_AJBVolumeDetectionManageComponentBase.BP_AJBVolumeDetectionManageComponentBase_C.OnVolumeEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap final
{
public:
	class UPrimitiveComponent*                    Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap) == 0x000008, "Wrong alignment on BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap");
static_assert(sizeof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap) == 0x000008, "Wrong size on BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap, Volume) == 0x000000, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeEndOverlap::Volume' has a wrong offset!");

// Function BP_AJBVolumeDetectionManageComponentBase.BP_AJBVolumeDetectionManageComponentBase_C.OnVolumeBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap final
{
public:
	class UPrimitiveComponent*                    Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap) == 0x000008, "Wrong alignment on BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap");
static_assert(sizeof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap) == 0x000008, "Wrong size on BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap, Volume) == 0x000000, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_OnVolumeBeginOverlap::Volume' has a wrong offset!");

// Function BP_AJBVolumeDetectionManageComponentBase.BP_AJBVolumeDetectionManageComponentBase_C.CheckOverlappedSomething
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething) == 0x000001, "Wrong alignment on BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething");
static_assert(sizeof(BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething) == 0x000002, "Wrong size on BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething, Result) == 0x000000, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething::Result' has a wrong offset!");
static_assert(offsetof(BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000001, "Member 'BP_AJBVolumeDetectionManageComponentBase_C_CheckOverlappedSomething::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}


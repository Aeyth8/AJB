#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBActionBase

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBActionBase.BP_AJBActionBase_C.ExecuteUbergraph_BP_AJBActionBase
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsActive1;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand1;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAJBActionInfo                         K2Node_MakeStruct_AJBActionInfo;                   // 0x0007(0x0002)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsActive2;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand2;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAJBActionInfo                         K2Node_MakeStruct_AJBActionInfo1;                  // 0x000B(0x0002)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsActive;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDeltaSeconds_OutSeconds;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bShouldRestore;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bUseNextState;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_NextState;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand3;             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand4;             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTriggeredByStand5;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base2;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase) == 0x000008, "Wrong alignment on BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase");
static_assert(sizeof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase) == 0x0000C8, "Wrong size on BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, EntryPoint) == 0x000000, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bIsActive1) == 0x000005, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bIsActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand1) == 0x000006, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_MakeStruct_AJBActionInfo) == 0x000007, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_MakeStruct_AJBActionInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bIsActive2) == 0x000009, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bIsActive2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand2) == 0x00000A, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_MakeStruct_AJBActionInfo1) == 0x00000B, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_MakeStruct_AJBActionInfo1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bIsActive) == 0x000020, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand) == 0x000021, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_CalcDeltaSeconds_OutSeconds) == 0x000028, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_CalcDeltaSeconds_OutSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000038, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bShouldRestore) == 0x000041, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bShouldRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bUseNextState) == 0x000042, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bUseNextState' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_NextState) == 0x000043, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000050, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_IsLocalController_ReturnValue) == 0x000059, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand3) == 0x00005A, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand3' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand4) == 0x00005B, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand4' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_CustomEvent_bTriggeredByStand5) == 0x00005C, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_CustomEvent_bTriggeredByStand5' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000068, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_bSuccess2) == 0x000070, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x000071, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_CheckActive_bActive) == 0x000072, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_Conv_BoolToString_ReturnValue) == 0x000078, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_Operator) == 0x000088, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_Time) == 0x000090, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_Timing) == 0x000094, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_bEnable) == 0x000095, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_Event_bOperatorIsEmpty) == 0x000096, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_GetOwner_ReturnValue1) == 0x000098, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_GetOwner_ReturnValue2) == 0x0000A0, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0000A8, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_bSuccess3) == 0x0000B0, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base2) == 0x0000B8, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, K2Node_DynamicCast_bSuccess4) == 0x0000C0, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000C1, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_HasLocalSharedController_ReturnValue2) == 0x0000C2, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C3, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase, CallFunc_IsServer_ReturnValue1) == 0x0000C4, "Member 'BP_AJBActionBase_C_ExecuteUbergraph_BP_AJBActionBase::CallFunc_IsServer_ReturnValue1' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.StateBeginPlay
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBActionBase_C_StateBeginPlay final
{
public:
	bool                                          bShouldRestore;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseNextState;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         NextState;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBActionBase_C_StateBeginPlay) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_StateBeginPlay");
static_assert(sizeof(BP_AJBActionBase_C_StateBeginPlay) == 0x000003, "Wrong size on BP_AJBActionBase_C_StateBeginPlay");
static_assert(offsetof(BP_AJBActionBase_C_StateBeginPlay, bShouldRestore) == 0x000000, "Member 'BP_AJBActionBase_C_StateBeginPlay::bShouldRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_StateBeginPlay, bUseNextState) == 0x000001, "Member 'BP_AJBActionBase_C_StateBeginPlay::bUseNextState' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_StateBeginPlay, NextState) == 0x000002, "Member 'BP_AJBActionBase_C_StateBeginPlay::NextState' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.ChangeActionActivity
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBActionBase_C_ChangeActionActivity final
{
public:
	bool                                          bIsActive_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTriggeredByStand;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_ChangeActionActivity) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_ChangeActionActivity");
static_assert(sizeof(BP_AJBActionBase_C_ChangeActionActivity) == 0x000002, "Wrong size on BP_AJBActionBase_C_ChangeActionActivity");
static_assert(offsetof(BP_AJBActionBase_C_ChangeActionActivity, bIsActive_0) == 0x000000, "Member 'BP_AJBActionBase_C_ChangeActionActivity::bIsActive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ChangeActionActivity, bTriggeredByStand) == 0x000001, "Member 'BP_AJBActionBase_C_ChangeActionActivity::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.MC_ChangeActionActivity
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBActionBase_C_MC_ChangeActionActivity final
{
public:
	bool                                          bIsActive_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTriggeredByStand;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_MC_ChangeActionActivity) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_MC_ChangeActionActivity");
static_assert(sizeof(BP_AJBActionBase_C_MC_ChangeActionActivity) == 0x000002, "Wrong size on BP_AJBActionBase_C_MC_ChangeActionActivity");
static_assert(offsetof(BP_AJBActionBase_C_MC_ChangeActionActivity, bIsActive_0) == 0x000000, "Member 'BP_AJBActionBase_C_MC_ChangeActionActivity::bIsActive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_MC_ChangeActionActivity, bTriggeredByStand) == 0x000001, "Member 'BP_AJBActionBase_C_MC_ChangeActionActivity::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.Blanked_ChangeActionActivity
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBActionBase_C_Blanked_ChangeActionActivity final
{
public:
	bool                                          bIsActive_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTriggeredByStand;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_Blanked_ChangeActionActivity) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_Blanked_ChangeActionActivity");
static_assert(sizeof(BP_AJBActionBase_C_Blanked_ChangeActionActivity) == 0x000002, "Wrong size on BP_AJBActionBase_C_Blanked_ChangeActionActivity");
static_assert(offsetof(BP_AJBActionBase_C_Blanked_ChangeActionActivity, bIsActive_0) == 0x000000, "Member 'BP_AJBActionBase_C_Blanked_ChangeActionActivity::bIsActive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_Blanked_ChangeActionActivity, bTriggeredByStand) == 0x000001, "Member 'BP_AJBActionBase_C_Blanked_ChangeActionActivity::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBActionBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBActionBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBActionBase_C_ReceiveTick");
static_assert(sizeof(BP_AJBActionBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBActionBase_C_ReceiveTick");
static_assert(offsetof(BP_AJBActionBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBActionBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.ActiveAction
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBActionBase_C_ActiveAction final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_ActiveAction) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_ActiveAction");
static_assert(sizeof(BP_AJBActionBase_C_ActiveAction) == 0x000001, "Wrong size on BP_AJBActionBase_C_ActiveAction");
static_assert(offsetof(BP_AJBActionBase_C_ActiveAction, bTriggeredByStand) == 0x000000, "Member 'BP_AJBActionBase_C_ActiveAction::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBActionBase_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_OnActionInactivate");
static_assert(sizeof(BP_AJBActionBase_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBActionBase_C_OnActionInactivate");
static_assert(offsetof(BP_AJBActionBase_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBActionBase_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBActionBase_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_OnActionActivate");
static_assert(sizeof(BP_AJBActionBase_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBActionBase_C_OnActionActivate");
static_assert(offsetof(BP_AJBActionBase_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBActionBase_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBActionBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBActionBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBActionBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBActionBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBActionBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBActionBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBActionBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBActionBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBActionBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBActionBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.ChangeState
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBActionBase_C_ChangeState final
{
public:
	uint8                                         NextState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResetStateTime;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_ChangeState) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_ChangeState");
static_assert(sizeof(BP_AJBActionBase_C_ChangeState) == 0x000003, "Wrong size on BP_AJBActionBase_C_ChangeState");
static_assert(offsetof(BP_AJBActionBase_C_ChangeState, NextState) == 0x000000, "Member 'BP_AJBActionBase_C_ChangeState::NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ChangeState, bResetStateTime) == 0x000001, "Member 'BP_AJBActionBase_C_ChangeState::bResetStateTime' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_ChangeState, CallFunc_IsServer_ReturnValue) == 0x000002, "Member 'BP_AJBActionBase_C_ChangeState::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.CheckState
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBActionBase_C_CheckState final
{
public:
	uint8                                         State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatch;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_CheckState) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_CheckState");
static_assert(sizeof(BP_AJBActionBase_C_CheckState) == 0x000003, "Wrong size on BP_AJBActionBase_C_CheckState");
static_assert(offsetof(BP_AJBActionBase_C_CheckState, State) == 0x000000, "Member 'BP_AJBActionBase_C_CheckState::State' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_CheckState, bMatch) == 0x000001, "Member 'BP_AJBActionBase_C_CheckState::bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_CheckState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBActionBase_C_CheckState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.CheckActive
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBActionBase_C_CheckActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_CheckActive) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_CheckActive");
static_assert(sizeof(BP_AJBActionBase_C_CheckActive) == 0x000001, "Wrong size on BP_AJBActionBase_C_CheckActive");
static_assert(offsetof(BP_AJBActionBase_C_CheckActive, bActive) == 0x000000, "Member 'BP_AJBActionBase_C_CheckActive::bActive' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.OnRep_Rep_CurrentState
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBActionBase_C_OnRep_Rep_CurrentState final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_OnRep_Rep_CurrentState) == 0x000008, "Wrong alignment on BP_AJBActionBase_C_OnRep_Rep_CurrentState");
static_assert(sizeof(BP_AJBActionBase_C_OnRep_Rep_CurrentState) == 0x000018, "Wrong size on BP_AJBActionBase_C_OnRep_Rep_CurrentState");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000008, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_IsServer_ReturnValue) == 0x000011, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_HasLocalSharedController_ReturnValue) == 0x000012, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_Rep_CurrentState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000015, "Member 'BP_AJBActionBase_C_OnRep_Rep_CurrentState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.OnRep_ActionInfo
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBActionBase_C_OnRep_ActionInfo final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBActionBase_C_OnRep_ActionInfo) == 0x000001, "Wrong alignment on BP_AJBActionBase_C_OnRep_ActionInfo");
static_assert(sizeof(BP_AJBActionBase_C_OnRep_ActionInfo) == 0x000001, "Wrong size on BP_AJBActionBase_C_OnRep_ActionInfo");
static_assert(offsetof(BP_AJBActionBase_C_OnRep_ActionInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_AJBActionBase_C_OnRep_ActionInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBActionBase.BP_AJBActionBase_C.CalcDeltaSeconds
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBActionBase_C_CalcDeltaSeconds final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutSeconds;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBActionBase_C_CalcDeltaSeconds) == 0x000004, "Wrong alignment on BP_AJBActionBase_C_CalcDeltaSeconds");
static_assert(sizeof(BP_AJBActionBase_C_CalcDeltaSeconds) == 0x000008, "Wrong size on BP_AJBActionBase_C_CalcDeltaSeconds");
static_assert(offsetof(BP_AJBActionBase_C_CalcDeltaSeconds, InSeconds) == 0x000000, "Member 'BP_AJBActionBase_C_CalcDeltaSeconds::InSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBActionBase_C_CalcDeltaSeconds, OutSeconds) == 0x000004, "Member 'BP_AJBActionBase_C_CalcDeltaSeconds::OutSeconds' has a wrong offset!");

}


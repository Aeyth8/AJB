#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LimitedAchievement_ProgressBar

#include "Basic.hpp"

#include "WB_LimitedAchievement_ProgressBar_classes.hpp"
#include "WB_LimitedAchievement_ProgressBar_parameters.hpp"


namespace SDK
{

// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.ExecuteUbergraph_WB_LimitedAchievement_ProgressBar
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LimitedAchievement_ProgressBar_C::ExecuteUbergraph_WB_LimitedAchievement_ProgressBar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "ExecuteUbergraph_WB_LimitedAchievement_ProgressBar");

	Params::WB_LimitedAchievement_ProgressBar_C_ExecuteUbergraph_WB_LimitedAchievement_ProgressBar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.UpdateStopCountupSE
// (BlueprintCallable, BlueprintEvent)

void UWB_LimitedAchievement_ProgressBar_C::UpdateStopCountupSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "UpdateStopCountupSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LimitedAchievement_ProgressBar_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "Tick");

	Params::WB_LimitedAchievement_ProgressBar_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.UpdatePlayCountupSE
// (BlueprintCallable, BlueprintEvent)

void UWB_LimitedAchievement_ProgressBar_C::UpdatePlayCountupSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "UpdatePlayCountupSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.OnForceFinishAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_LimitedAchievement_ProgressBar_C::OnForceFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "OnForceFinishAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.SetupDisplay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAJBAchievementInfo&       TargetInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_LimitedAchievement_ProgressBar_C::SetupDisplay(const struct FAJBAchievementInfo& TargetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "SetupDisplay");

	Params::WB_LimitedAchievement_ProgressBar_C_SetupDisplay Parms{};

	Parms.TargetInfo = std::move(TargetInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.UpdateCurrentValue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LimitedAchievement_ProgressBar_C::UpdateCurrentValue(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "UpdateCurrentValue");

	Params::WB_LimitedAchievement_ProgressBar_C_UpdateCurrentValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.UpdateBar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_LimitedAchievement_ProgressBar_C::UpdateBar(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "UpdateBar");

	Params::WB_LimitedAchievement_ProgressBar_C_UpdateBar Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.PlayCompAnim
// (BlueprintCallable, BlueprintEvent)

void UWB_LimitedAchievement_ProgressBar_C::PlayCompAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "PlayCompAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_LimitedAchievement_ProgressBar.WB_LimitedAchievement_ProgressBar_C.StartPlayBarAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_LimitedAchievement_ProgressBar_C::StartPlayBarAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_LimitedAchievement_ProgressBar_C", "StartPlayBarAnimation");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSprintSkill

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_SidlingFinishTiming_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ExecuteUbergraph_BP_AJBSprintSkill
// 0x0610 (0x0610 - 0x0000)
struct BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Hit_Location;                   // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal;                      // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_DeltaSeconds4;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds3;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadySprint_IsReady;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldRestore;                       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue1;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue6;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadySprint_IsReady1;                   // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue7;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_GetDamageActorCache_DamageActorCache;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue8;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue9;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue10;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess2;             // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance2;    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess3;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance3;    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue2;             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue3;             // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess4;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance4;    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue11;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue4;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue4;    // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess5;             // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance5;    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue5;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess6;             // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance6;    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue6;             // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess7;             // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance7;    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue7;             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0288(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue12;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue5;    // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue13;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue6;    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_GetOrCreateDamageActorCache_DamageActorCache; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue14;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue7;    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetLaunchedActorTarget_LaunchedActorTarget; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor5;                      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent5;                  // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation5;                   // 0x0300(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal6;                     // 0x030C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDisableDamage;                 // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration1;                // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x5];                                      // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0334(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_GetDamageActorCache_DamageActorCache1;    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue15;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue8;    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue16;          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor4;                      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent4;                  // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Hit_Location2;                  // 0x0378(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal5;                     // 0x0384(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate5;                   // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue9;    // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor3;                      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent3;                  // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation4;                   // 0x03A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal4;                     // 0x03B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber3;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate4;                   // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor2;                      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent2;                  // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Hit_Location1;                  // 0x03D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal3;                     // 0x03E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber2;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate3;                   // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBaseDamage_BaseDamage;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                K2Node_MakeStruct_AJBDamageDisplayParams;          // 0x0400(0x0030)(NoDestructor)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue17;          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue10;   // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue2;             // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue18;          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue11;   // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue3;             // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_453[0x5];                                      // 0x0453(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue19;          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue12;   // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter1;      // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBDamageDisplayProperty              K2Node_MakeStruct_AJBDamageDisplayProperty;        // 0x0470(0x0003)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0473(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SidlingFinishTiming                         Temp_byte_Variable;                                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_BlockedActor;                   // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation3;                   // 0x0488(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal2;                     // 0x0494(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate2;                   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInvincible;                    // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPenetration;                 // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAvoidSkill;                    // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A7[0x1];                                      // 0x04A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue20;          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue15;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue13;   // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target1;                        // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser1;                  // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation2;                   // 0x04C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation1;                   // 0x04F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue16;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512[0x2];                                      // 0x0512(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBaseDamage_BaseDamage1;                // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bIsPenetration)> K2Node_CreateDelegate_OutputDelegate4; // 0x0518(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter2;      // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue17;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0540(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x054C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue21;          // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue18;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue14;   // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWalkingState                                 Temp_byte_Variable1;                               // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_573[0x5];                                      // 0x0573(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue22;          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue19;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue15;   // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Target, class AActor* DamageCauser, const struct FVector& HitLocation)> K2Node_CreateDelegate_OutputDelegate5; // 0x0588(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* BlockedActor, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, bool bInvincible, bool bIsPenetration, bool bAvoidSkill)> K2Node_CreateDelegate_OutputDelegate6; // 0x0598(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess8;             // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance8;    // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingState                                 Temp_byte_Variable2;                               // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue8;             // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWalkingState                                 K2Node_Select3_Default;                            // 0x05BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess9;             // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BD[0x3];                                      // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance9;    // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue9;             // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x05D0(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_HitActor1;                      // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_HitComponent1;                  // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x05F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitNormal1;                     // 0x05FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SerialNumber1;                  // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CuttingRate1;                   // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill");
static_assert(sizeof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill) == 0x000610, "Wrong size on BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, EntryPoint) == 0x000000, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor) == 0x000008, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent) == 0x000010, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_Hit_Location) == 0x000018, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal) == 0x000024, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_SerialNumber) == 0x000030, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate) == 0x000034, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_name_Variable) == 0x000038, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000040, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000048, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue1) == 0x000051, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000052, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000053, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DeltaSeconds4) == 0x000054, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DeltaSeconds4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_NotifyName) == 0x000058, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000060, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue2) == 0x000068, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000069, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x000070, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000078, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000088, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess1) == 0x000098, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DeltaSeconds3) == 0x00009C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DeltaSeconds3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsReadySprint_IsReady) == 0x0000A0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsReadySprint_IsReady' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A1, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x0000A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x0000B0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000B8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess2) == 0x0000C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess3) == 0x0000D0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DeltaSeconds2) == 0x0000D4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x0000D8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess4) == 0x0000E8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Event_bShouldRestore) == 0x0000E9, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Event_bShouldRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetValidValue_ReturnValue) == 0x0000EA, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DeltaSeconds1) == 0x0000EC, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetValidValue_ReturnValue1) == 0x0000F1, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetValidValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_SwitchEnum1_CmpSuccess) == 0x0000F2, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x0000F3, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DeltaSeconds) == 0x0000F4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000108, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue6) == 0x000110, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000118, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess5) == 0x000120, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x000128, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess6) == 0x000138, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetSprintCharacter_SprintCharacter) == 0x000140, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetSprintCharacter_SprintCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue3) == 0x000148, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsReadySprint_IsReady1) == 0x000149, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsReadySprint_IsReady1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue7) == 0x000150, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000158, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess7) == 0x000160, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetDamageActorCache_DamageActorCache) == 0x000168, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetDamageActorCache_DamageActorCache' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_NotifyName1) == 0x000170, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue8) == 0x000178, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000180, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess8) == 0x000188, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue9) == 0x000190, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue4) == 0x000198, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue3) == 0x000199, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess) == 0x00019A, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0001A0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess1) == 0x0001A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0001B0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue) == 0x0001B8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue1) == 0x0001B9, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Not_PreBool_ReturnValue) == 0x0001BA, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue10) == 0x0001C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x0001C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess9) == 0x0001D0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0001D8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate1) == 0x0001E0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue5) == 0x0001F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess2) == 0x0001F1, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance2) == 0x0001F8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess3) == 0x000200, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance3) == 0x000208, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue2) == 0x000210, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue3) == 0x000211, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Not_PreBool_ReturnValue1) == 0x000212, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_NotifyName2) == 0x000218, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate2) == 0x000220, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess4) == 0x000230, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance4) == 0x000238, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue11) == 0x000240, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue4) == 0x000248, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue6) == 0x000249, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Not_PreBool_ReturnValue2) == 0x00024A, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue4) == 0x00024B, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess5) == 0x00024C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance5) == 0x000250, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue5) == 0x000258, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess6) == 0x000259, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance6) == 0x000260, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_MakeLiteralByte_ReturnValue) == 0x000268, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue6) == 0x000269, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Not_PreBool_ReturnValue3) == 0x00026A, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess7) == 0x00026B, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance7) == 0x000270, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_NotifyName3) == 0x000278, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue7) == 0x000280, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate3) == 0x000288, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Event_DeltaSeconds) == 0x000298, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue12) == 0x0002A0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_IsEnabled) == 0x0002A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue7) == 0x0002A9, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue5) == 0x0002AA, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_MakeLiteralByte_ReturnValue1) == 0x0002AB, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue13) == 0x0002B0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue8) == 0x0002B8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue6) == 0x0002B9, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0002BC, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOrCreateDamageActorCache_DamageActorCache) == 0x0002C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOrCreateDamageActorCache_DamageActorCache' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue14) == 0x0002D8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue9) == 0x0002E0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue7) == 0x0002E1, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetLaunchedActorTarget_LaunchedActorTarget) == 0x0002E8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetLaunchedActorTarget_LaunchedActorTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor5) == 0x0002F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent5) == 0x0002F8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation5) == 0x000300, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal6) == 0x00030C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_SurfaceType) == 0x000318, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_bDisableDamage) == 0x000319, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_bIsPenetration1) == 0x00031A, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_bIsPenetration1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000320, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess10) == 0x000330, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000334, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetDamageActorCache_DamageActorCache1) == 0x000340, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetDamageActorCache_DamageActorCache1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_CheckCollisionEnable_bEnable) == 0x000348, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue15) == 0x000350, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue10) == 0x000358, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue8) == 0x000359, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue16) == 0x000360, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor4) == 0x000368, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent4) == 0x000370, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_Hit_Location2) == 0x000378, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_Hit_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal5) == 0x000384, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate5) == 0x000390, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue11) == 0x000394, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue9) == 0x000395, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor3) == 0x000398, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent3) == 0x0003A0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation4) == 0x0003A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal4) == 0x0003B4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_SerialNumber3) == 0x0003C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_SerialNumber3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate4) == 0x0003C4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor2) == 0x0003C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent2) == 0x0003D0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_Hit_Location1) == 0x0003D8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_Hit_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal3) == 0x0003E4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_SerialNumber2) == 0x0003F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate3) == 0x0003F4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetBaseDamage_BaseDamage) == 0x0003F8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetBaseDamage_BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_MakeStruct_AJBDamageDisplayParams) == 0x000400, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_MakeStruct_AJBDamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue17) == 0x000430, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwner_ReturnValue) == 0x000438, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue12) == 0x000440, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue10) == 0x000441, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_MakeLiteralByte_ReturnValue2) == 0x000442, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_MakeLiteralByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue18) == 0x000448, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue13) == 0x000450, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue11) == 0x000451, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_MakeLiteralByte_ReturnValue3) == 0x000452, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_MakeLiteralByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue19) == 0x000458, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue14) == 0x000460, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue12) == 0x000461, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetSprintCharacter_SprintCharacter1) == 0x000468, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetSprintCharacter_SprintCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_MakeStruct_AJBDamageDisplayProperty) == 0x000470, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_MakeStruct_AJBDamageDisplayProperty' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000473, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_byte_Variable) == 0x000474, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Select_Default) == 0x000478, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_BlockedActor) == 0x000480, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation3) == 0x000488, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal2) == 0x000494, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate2) == 0x0004A0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_bInvincible) == 0x0004A4, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_bIsPenetration) == 0x0004A5, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_bAvoidSkill) == 0x0004A6, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue20) == 0x0004A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue15) == 0x0004B0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue13) == 0x0004B1, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_Target1) == 0x0004B8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_Target1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DamageCauser1) == 0x0004C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DamageCauser1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation2) == 0x0004C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_NotifyName4) == 0x0004D8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_Target) == 0x0004E0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_DamageCauser) == 0x0004E8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation1) == 0x0004F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000500, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_DynamicCast_bSuccess11) == 0x000510, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue16) == 0x000511, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetBaseDamage_BaseDamage1) == 0x000514, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetBaseDamage_BaseDamage1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate4) == 0x000518, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_bool_Variable) == 0x000528, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_float_Variable) == 0x00052C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetSprintCharacter_SprintCharacter2) == 0x000530, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetSprintCharacter_SprintCharacter2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue17) == 0x000538, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Select1_Default) == 0x00053C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000540, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00054C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_bool_Variable1) == 0x000558, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_float_Variable1) == 0x00055C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_bool_Variable2) == 0x000560, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Select2_Default) == 0x000564, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue21) == 0x000568, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue18) == 0x000570, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue14) == 0x000571, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_byte_Variable1) == 0x000572, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetOwnerCharacter_ReturnValue22) == 0x000578, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetOwnerCharacter_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsValid_ReturnValue19) == 0x000580, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsValid_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_HasLocalSharedController_ReturnValue15) == 0x000581, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_HasLocalSharedController_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate5) == 0x000588, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate6) == 0x000598, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess8) == 0x0005A8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance8) == 0x0005B0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, Temp_byte_Variable2) == 0x0005B8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue8) == 0x0005B9, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_Not_PreBool_ReturnValue4) == 0x0005BA, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_Select3_Default) == 0x0005BB, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_bSuccess9) == 0x0005BC, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_GetAJBGameInstance_AJB_Game_Instance9) == 0x0005C0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_GetAJBGameInstance_AJB_Game_Instance9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, CallFunc_IsPlayingReplay_ReturnValue9) == 0x0005C8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::CallFunc_IsPlayingReplay_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CreateDelegate_OutputDelegate7) == 0x0005D0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitActor1) == 0x0005E0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitComponent1) == 0x0005E8, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitLocation) == 0x0005F0, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_HitNormal1) == 0x0005FC, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_HitNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_SerialNumber1) == 0x000608, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill, K2Node_CustomEvent_CuttingRate1) == 0x00060C, "Member 'BP_AJBSprintSkill_C_ExecuteUbergraph_BP_AJBSprintSkill::K2Node_CustomEvent_CuttingRate1' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ROS_ApplySprintDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_ROS_ApplySprintDamage final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ROS_ApplySprintDamage");
static_assert(sizeof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_ROS_ApplySprintDamage");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, Hit_Location) == 0x000010, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, SerialNumber_0) == 0x000028, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_ApplySprintDamage, CuttingRate) == 0x00002C, "Member 'BP_AJBSprintSkill_C_ROS_ApplySprintDamage::CuttingRate' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.MC_ApplySprintDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_MC_ApplySprintDamage final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_MC_ApplySprintDamage) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_MC_ApplySprintDamage");
static_assert(sizeof(BP_AJBSprintSkill_C_MC_ApplySprintDamage) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_MC_ApplySprintDamage");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, HitLocation) == 0x000010, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, SerialNumber_0) == 0x000028, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_MC_ApplySprintDamage, CuttingRate) == 0x00002C, "Member 'BP_AJBSprintSkill_C_MC_ApplySprintDamage::CuttingRate' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ROS_OnOverlappedDamgeDetector
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector");
static_assert(sizeof(BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector) == 0x000020, "Wrong size on BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector, Target) == 0x000000, "Member 'BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector, DamageCauser) == 0x000008, "Member 'BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector, HitLocation) == 0x000010, "Member 'BP_AJBSprintSkill_C_ROS_OnOverlappedDamgeDetector::HitLocation' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnOverlappedDamgeDetector
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBSprintSkill_C_OnOverlappedDamgeDetector final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnOverlappedDamgeDetector) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnOverlappedDamgeDetector");
static_assert(sizeof(BP_AJBSprintSkill_C_OnOverlappedDamgeDetector) == 0x000020, "Wrong size on BP_AJBSprintSkill_C_OnOverlappedDamgeDetector");
static_assert(offsetof(BP_AJBSprintSkill_C_OnOverlappedDamgeDetector, Target) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnOverlappedDamgeDetector::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnOverlappedDamgeDetector, DamageCauser) == 0x000008, "Member 'BP_AJBSprintSkill_C_OnOverlappedDamgeDetector::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnOverlappedDamgeDetector, HitLocation) == 0x000010, "Member 'BP_AJBSprintSkill_C_OnOverlappedDamgeDetector::HitLocation' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnBlockedDamageActor
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBSprintSkill_C_OnBlockedDamageActor final
{
public:
	class AActor*                                 BlockedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvincible;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAvoidSkill;                                       // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnBlockedDamageActor) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnBlockedDamageActor");
static_assert(sizeof(BP_AJBSprintSkill_C_OnBlockedDamageActor) == 0x000028, "Wrong size on BP_AJBSprintSkill_C_OnBlockedDamageActor");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, BlockedActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::BlockedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, HitLocation) == 0x000008, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, HitNormal) == 0x000014, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, CuttingRate) == 0x000020, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, bInvincible) == 0x000024, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, bIsPenetration) == 0x000025, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlockedDamageActor, bAvoidSkill) == 0x000026, "Member 'BP_AJBSprintSkill_C_OnBlockedDamageActor::bAvoidSkill' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ApplySprintDamage_Server
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_ApplySprintDamage_Server final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ApplySprintDamage_Server) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ApplySprintDamage_Server");
static_assert(sizeof(BP_AJBSprintSkill_C_ApplySprintDamage_Server) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_ApplySprintDamage_Server");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, Hit_Location) == 0x000010, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, SerialNumber_0) == 0x000028, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Server, CuttingRate) == 0x00002C, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Server::CuttingRate' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ApplySprintDamage_Local
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_ApplySprintDamage_Local final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ApplySprintDamage_Local) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ApplySprintDamage_Local");
static_assert(sizeof(BP_AJBSprintSkill_C_ApplySprintDamage_Local) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_ApplySprintDamage_Local");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, HitLocation) == 0x000010, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, SerialNumber_0) == 0x000028, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage_Local, CuttingRate) == 0x00002C, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage_Local::CuttingRate' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ApplySprintDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_ApplySprintDamage final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ApplySprintDamage) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_ApplySprintDamage");
static_assert(sizeof(BP_AJBSprintSkill_C_ApplySprintDamage) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_ApplySprintDamage");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage, Hit_Location) == 0x000010, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage::Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ApplySprintDamage, CuttingRate) == 0x000028, "Member 'BP_AJBSprintSkill_C_ApplySprintDamage::CuttingRate' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnHitDamageActor
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBSprintSkill_C_OnHitDamageActor final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnHitDamageActor) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnHitDamageActor");
static_assert(sizeof(BP_AJBSprintSkill_C_OnHitDamageActor) == 0x000030, "Wrong size on BP_AJBSprintSkill_C_OnHitDamageActor");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, HitActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, HitComponent) == 0x000008, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, HitLocation) == 0x000010, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, HitNormal) == 0x00001C, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, SurfaceType) == 0x000028, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, bDisableDamage) == 0x000029, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_OnHitDamageActor, bIsPenetration) == 0x00002A, "Member 'BP_AJBSprintSkill_C_OnHitDamageActor::bIsPenetration' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.SetSkillMovementMode
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBSprintSkill_C_SetSkillMovementMode final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_SetSkillMovementMode) == 0x000001, "Wrong alignment on BP_AJBSprintSkill_C_SetSkillMovementMode");
static_assert(sizeof(BP_AJBSprintSkill_C_SetSkillMovementMode) == 0x000001, "Wrong size on BP_AJBSprintSkill_C_SetSkillMovementMode");
static_assert(offsetof(BP_AJBSprintSkill_C_SetSkillMovementMode, IsEnabled) == 0x000000, "Member 'BP_AJBSprintSkill_C_SetSkillMovementMode::IsEnabled' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.TickState_Clearing
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_TickState_Clearing final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_TickState_Clearing) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_TickState_Clearing");
static_assert(sizeof(BP_AJBSprintSkill_C_TickState_Clearing) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_TickState_Clearing");
static_assert(offsetof(BP_AJBSprintSkill_C_TickState_Clearing, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_TickState_Clearing::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.TickState
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_TickState final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_TickState) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_TickState");
static_assert(sizeof(BP_AJBSprintSkill_C_TickState) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_TickState");
static_assert(offsetof(BP_AJBSprintSkill_C_TickState, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_TickState::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.TickState_Action
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_TickState_Action final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_TickState_Action) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_TickState_Action");
static_assert(sizeof(BP_AJBSprintSkill_C_TickState_Action) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_TickState_Action");
static_assert(offsetof(BP_AJBSprintSkill_C_TickState_Action, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_TickState_Action::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.TickState_Ready
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_TickState_Ready final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_TickState_Ready) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_TickState_Ready");
static_assert(sizeof(BP_AJBSprintSkill_C_TickState_Ready) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_TickState_Ready");
static_assert(offsetof(BP_AJBSprintSkill_C_TickState_Ready, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_TickState_Ready::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.DebugTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_DebugTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_DebugTick) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_DebugTick");
static_assert(sizeof(BP_AJBSprintSkill_C_DebugTick) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_DebugTick");
static_assert(offsetof(BP_AJBSprintSkill_C_DebugTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_DebugTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(sizeof(BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(offsetof(BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C, NotifyName) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnCompleted_7DDD297442D7CC4375E0C99B1D1DE40C::NotifyName' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(sizeof(BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(offsetof(BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C, NotifyName) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnBlendOut_7DDD297442D7CC4375E0C99B1D1DE40C::NotifyName' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(sizeof(BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(offsetof(BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C, NotifyName) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnInterrupted_7DDD297442D7CC4375E0C99B1D1DE40C::NotifyName' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(sizeof(BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(offsetof(BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C, NotifyName) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnNotifyBegin_7DDD297442D7CC4375E0C99B1D1DE40C::NotifyName' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(sizeof(BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C");
static_assert(offsetof(BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C, NotifyName) == 0x000000, "Member 'BP_AJBSprintSkill_C_OnNotifyEnd_7DDD297442D7CC4375E0C99B1D1DE40C::NotifyName' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.IsReadySprint
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBSprintSkill_C_IsReadySprint final
{
public:
	bool                                          IsReady;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue1;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_IsReadySprint) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_IsReadySprint");
static_assert(sizeof(BP_AJBSprintSkill_C_IsReadySprint) == 0x000028, "Wrong size on BP_AJBSprintSkill_C_IsReadySprint");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, IsReady) == 0x000000, "Member 'BP_AJBSprintSkill_C_IsReadySprint::IsReady' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_GetSprintCharacter_SprintCharacter) == 0x000008, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_GetSprintCharacter_SprintCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_GetSprintCharacter_SprintCharacter1) == 0x000010, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_GetSprintCharacter_SprintCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x000019, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckActiveBehavior_bRetValue) == 0x00001B, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_Not_PreBool_ReturnValue1) == 0x00001C, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckActiveBehavior_bRetValue1) == 0x00001D, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckActiveBehavior_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_Not_PreBool_ReturnValue2) == 0x00001E, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x00001F, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_Not_PreBool_ReturnValue3) == 0x000020, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x000021, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000022, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_IsValid_ReturnValue1) == 0x000023, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_CheckEnableInput_InputEnable) == 0x000025, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_CheckEnableInput_InputEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_IsFalling_ReturnValue) == 0x000026, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsReadySprint, CallFunc_Not_PreBool_ReturnValue4) == 0x000027, "Member 'BP_AJBSprintSkill_C_IsReadySprint::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.IsCancelable
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSprintSkill_C_IsCancelable final
{
public:
	bool                                          IsCancelable_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkillState_Sprint                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_IsCancelable) == 0x000001, "Wrong alignment on BP_AJBSprintSkill_C_IsCancelable");
static_assert(sizeof(BP_AJBSprintSkill_C_IsCancelable) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_IsCancelable");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, IsCancelable_0) == 0x000000, "Member 'BP_AJBSprintSkill_C_IsCancelable::IsCancelable_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBSprintSkill_C_IsCancelable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBSprintSkill_C_IsCancelable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBSprintSkill_C_IsCancelable::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBSprintSkill_C_IsCancelable::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBSprintSkill_C_IsCancelable::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, CallFunc_GetValidValue_ReturnValue) == 0x000006, "Member 'BP_AJBSprintSkill_C_IsCancelable::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_IsCancelable, K2Node_Select_Default) == 0x000007, "Member 'BP_AJBSprintSkill_C_IsCancelable::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.CreateDamageActor
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AJBSprintSkill_C_CreateDamageActor final
{
public:
	class ABP_AJBDamageActor_C*                   DamageActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBaseDamage_BaseDamage;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetLaunchedActorTarget_LaunchedActorTarget; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_CloseRangeLauncherStandInterface_C> K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCloseRangeLaunchedActor_LaunchedActor; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0068(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_CreateDamageActor) == 0x000010, "Wrong alignment on BP_AJBSprintSkill_C_CreateDamageActor");
static_assert(sizeof(BP_AJBSprintSkill_C_CreateDamageActor) == 0x0000C0, "Wrong size on BP_AJBSprintSkill_C_CreateDamageActor");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, DamageActor) == 0x000000, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::DamageActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetBaseDamage_BaseDamage) == 0x000008, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetBaseDamage_BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetLaunchedActorTarget_LaunchedActorTarget) == 0x000018, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetLaunchedActorTarget_LaunchedActorTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface) == 0x000028, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1) == 0x000040, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::K2Node_DynamicCast_AsBI_Close_Range_Launcher_Stand_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000054, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_GetCloseRangeLaunchedActor_LaunchedActor) == 0x000060, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_GetCloseRangeLaunchedActor_LaunchedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000068, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_CreateDamageActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BP_AJBSprintSkill_C_CreateDamageActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.GetLaunchedActorTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBSprintSkill_C_GetLaunchedActorTarget final
{
public:
	class AActor*                                 LaunchedActorTarget;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetSprintCharacter_SprintCharacter;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_GetLaunchedActorTarget) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_GetLaunchedActorTarget");
static_assert(sizeof(BP_AJBSprintSkill_C_GetLaunchedActorTarget) == 0x000010, "Wrong size on BP_AJBSprintSkill_C_GetLaunchedActorTarget");
static_assert(offsetof(BP_AJBSprintSkill_C_GetLaunchedActorTarget, LaunchedActorTarget) == 0x000000, "Member 'BP_AJBSprintSkill_C_GetLaunchedActorTarget::LaunchedActorTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetLaunchedActorTarget, CallFunc_GetSprintCharacter_SprintCharacter) == 0x000008, "Member 'BP_AJBSprintSkill_C_GetLaunchedActorTarget::CallFunc_GetSprintCharacter_SprintCharacter' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.GetBaseDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_GetBaseDamage final
{
public:
	int32                                         BaseDamage;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_GetBaseDamage) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_GetBaseDamage");
static_assert(sizeof(BP_AJBSprintSkill_C_GetBaseDamage) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_GetBaseDamage");
static_assert(offsetof(BP_AJBSprintSkill_C_GetBaseDamage, BaseDamage) == 0x000000, "Member 'BP_AJBSprintSkill_C_GetBaseDamage::BaseDamage' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.GetOrCreateDamageActorCache
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBSprintSkill_C_GetOrCreateDamageActorCache final
{
public:
	class ABP_AJBDamageActor_C*                   DamageActorCache_0;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageActor_C*                   CallFunc_CreateDamageActor_DamageActor;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_GetOrCreateDamageActorCache) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_GetOrCreateDamageActorCache");
static_assert(sizeof(BP_AJBSprintSkill_C_GetOrCreateDamageActorCache) == 0x000018, "Wrong size on BP_AJBSprintSkill_C_GetOrCreateDamageActorCache");
static_assert(offsetof(BP_AJBSprintSkill_C_GetOrCreateDamageActorCache, DamageActorCache_0) == 0x000000, "Member 'BP_AJBSprintSkill_C_GetOrCreateDamageActorCache::DamageActorCache_0' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetOrCreateDamageActorCache, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBSprintSkill_C_GetOrCreateDamageActorCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetOrCreateDamageActorCache, CallFunc_CreateDamageActor_DamageActor) == 0x000010, "Member 'BP_AJBSprintSkill_C_GetOrCreateDamageActorCache::CallFunc_CreateDamageActor_DamageActor' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.GetDamageActorCache
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSprintSkill_C_GetDamageActorCache final
{
public:
	class ABP_AJBDamageActor_C*                   DamageActorCache_0;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_GetDamageActorCache) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_GetDamageActorCache");
static_assert(sizeof(BP_AJBSprintSkill_C_GetDamageActorCache) == 0x000008, "Wrong size on BP_AJBSprintSkill_C_GetDamageActorCache");
static_assert(offsetof(BP_AJBSprintSkill_C_GetDamageActorCache, DamageActorCache_0) == 0x000000, "Member 'BP_AJBSprintSkill_C_GetDamageActorCache::DamageActorCache_0' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.GetSprintCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBSprintSkill_C_GetSprintCharacter final
{
public:
	class ABP_AJBInGameCharacter_C*               SprintCharacter;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_GetSprintCharacter) == 0x000008, "Wrong alignment on BP_AJBSprintSkill_C_GetSprintCharacter");
static_assert(sizeof(BP_AJBSprintSkill_C_GetSprintCharacter) == 0x000020, "Wrong size on BP_AJBSprintSkill_C_GetSprintCharacter");
static_assert(offsetof(BP_AJBSprintSkill_C_GetSprintCharacter, SprintCharacter) == 0x000000, "Member 'BP_AJBSprintSkill_C_GetSprintCharacter::SprintCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetSprintCharacter, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBSprintSkill_C_GetSprintCharacter::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetSprintCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBSprintSkill_C_GetSprintCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_GetSprintCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBSprintSkill_C_GetSprintCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.StateBeginPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBSprintSkill_C_StateBeginPlay final
{
public:
	bool                                          bShouldRestore;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_StateBeginPlay) == 0x000001, "Wrong alignment on BP_AJBSprintSkill_C_StateBeginPlay");
static_assert(sizeof(BP_AJBSprintSkill_C_StateBeginPlay) == 0x000001, "Wrong size on BP_AJBSprintSkill_C_StateBeginPlay");
static_assert(offsetof(BP_AJBSprintSkill_C_StateBeginPlay, bShouldRestore) == 0x000000, "Member 'BP_AJBSprintSkill_C_StateBeginPlay::bShouldRestore' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBSprintSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSprintSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBSprintSkill_C_ReceiveTick");
static_assert(sizeof(BP_AJBSprintSkill_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBSprintSkill_C_ReceiveTick");
static_assert(offsetof(BP_AJBSprintSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBSprintSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBSprintSkill.BP_AJBSprintSkill_C.ShouldCancelOnLandingStop
// 0x000A (0x000A - 0x0000)
struct BP_AJBSprintSkill_C_ShouldCancelOnLandingStop final
{
public:
	bool                                          bShouldCancel;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkillState_Sprint                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop) == 0x000001, "Wrong alignment on BP_AJBSprintSkill_C_ShouldCancelOnLandingStop");
static_assert(sizeof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop) == 0x00000A, "Wrong size on BP_AJBSprintSkill_C_ShouldCancelOnLandingStop");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, bShouldCancel) == 0x000000, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::bShouldCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, Temp_byte_Variable) == 0x000001, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, Temp_bool_Variable) == 0x000002, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, Temp_bool_Variable1) == 0x000003, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, Temp_bool_Variable2) == 0x000004, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, Temp_bool_Variable3) == 0x000005, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, CallFunc_IsSkillActive_ReturnValue) == 0x000006, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, CallFunc_GetValidValue_ReturnValue) == 0x000007, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, K2Node_Select_Default) == 0x000008, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBSprintSkill_C_ShouldCancelOnLandingStop, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_AJBSprintSkill_C_ShouldCancelOnLandingStop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


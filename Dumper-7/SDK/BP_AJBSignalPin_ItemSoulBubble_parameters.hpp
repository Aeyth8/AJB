#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSignalPin_ItemSoulBubble

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AJBSignalPin_ItemSoulBubble.BP_AJBSignalPin_ItemSoulBubble_C.ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTimeUp;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble) == 0x000008, "Wrong alignment on BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble");
static_assert(sizeof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble) == 0x000028, "Wrong size on BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble, EntryPoint) == 0x000000, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble, K2Node_CustomEvent_DestroyedActor) == 0x000018, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble, K2Node_Event_bIsTimeUp) == 0x000020, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble::K2Node_Event_bIsTimeUp' has a wrong offset!");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ExecuteUbergraph_BP_AJBSignalPin_ItemSoulBubble::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBSignalPin_ItemSoulBubble.BP_AJBSignalPin_ItemSoulBubble_C.OnRuptured
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured) == 0x000008, "Wrong alignment on BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured");
static_assert(sizeof(BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured) == 0x000008, "Wrong size on BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured, DestroyedActor) == 0x000000, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_OnRuptured::DestroyedActor' has a wrong offset!");

// Function BP_AJBSignalPin_ItemSoulBubble.BP_AJBSignalPin_ItemSoulBubble_C.RemoveWithFade
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade final
{
public:
	bool                                          bIsTimeUp;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade) == 0x000001, "Wrong alignment on BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade");
static_assert(sizeof(BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade) == 0x000001, "Wrong size on BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade, bIsTimeUp) == 0x000000, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_RemoveWithFade::bIsTimeUp' has a wrong offset!");

// Function BP_AJBSignalPin_ItemSoulBubble.BP_AJBSignalPin_ItemSoulBubble_C.ShouldRestoreOnSwitchingViewer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer final
{
public:
	bool                                          ShouldRestored;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer) == 0x000001, "Wrong alignment on BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer");
static_assert(sizeof(BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer) == 0x000001, "Wrong size on BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer");
static_assert(offsetof(BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer, ShouldRestored) == 0x000000, "Member 'BP_AJBSignalPin_ItemSoulBubble_C_ShouldRestoreOnSwitchingViewer::ShouldRestored' has a wrong offset!");

}


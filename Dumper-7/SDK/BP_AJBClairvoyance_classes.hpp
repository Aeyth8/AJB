#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBClairvoyance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBClairvoyance.BP_AJBClairvoyance_C
// 0x0040 (0x0250 - 0x0210)
class UBP_AJBClairvoyance_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBClairvoyance_C;               // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UMaterialInterface*                     MT_UnderWaterClairvoyance;                         // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              MT_Clairvoyance;                                   // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex_Character;                           // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex_MovableStand;                        // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0234(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Clairvoyance;                                  // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CV_Opacity;                                        // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateParametersTimerHandle;                       // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBClairvoyance(int32 EntryPoint);
	void PlayInactiveSE();
	void ChangeEnablePPMaterials(bool bEnable);
	void OnParametersUpdated();
	void OnTimelineFinished();
	void SetParameter_Server(float Time_0, float Distance_0);
	void ReverseTimelines();
	void PlayTimelines();
	void ReverseOpacityTimeline();
	void PlayOpacityTimeline();
	void UpdateParameters();
	void ChangeEnablePPMaterial(class AAJBInGameCharacterBase* CharacterBase, bool bEnable, int32& MaterialIndexRef);
	void PlaySE(class UObject* Causer);
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void OnRep_Distance();
	void TryCreateDMI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBClairvoyance_C">();
	}
	static class UBP_AJBClairvoyance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBClairvoyance_C>();
	}
};
static_assert(alignof(UBP_AJBClairvoyance_C) == 0x000008, "Wrong alignment on UBP_AJBClairvoyance_C");
static_assert(sizeof(UBP_AJBClairvoyance_C) == 0x000250, "Wrong size on UBP_AJBClairvoyance_C");
static_assert(offsetof(UBP_AJBClairvoyance_C, UberGraphFrame_BP_AJBClairvoyance_C) == 0x000210, "Member 'UBP_AJBClairvoyance_C::UberGraphFrame_BP_AJBClairvoyance_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, MT_UnderWaterClairvoyance) == 0x000218, "Member 'UBP_AJBClairvoyance_C::MT_UnderWaterClairvoyance' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, MT_Clairvoyance) == 0x000220, "Member 'UBP_AJBClairvoyance_C::MT_Clairvoyance' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, MaterialIndex_Character) == 0x000228, "Member 'UBP_AJBClairvoyance_C::MaterialIndex_Character' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, MaterialIndex_MovableStand) == 0x00022C, "Member 'UBP_AJBClairvoyance_C::MaterialIndex_MovableStand' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, Time) == 0x000230, "Member 'UBP_AJBClairvoyance_C::Time' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, Distance) == 0x000234, "Member 'UBP_AJBClairvoyance_C::Distance' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, DMI_Clairvoyance) == 0x000238, "Member 'UBP_AJBClairvoyance_C::DMI_Clairvoyance' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, CV_Opacity) == 0x000240, "Member 'UBP_AJBClairvoyance_C::CV_Opacity' has a wrong offset!");
static_assert(offsetof(UBP_AJBClairvoyance_C, UpdateParametersTimerHandle) == 0x000248, "Member 'UBP_AJBClairvoyance_C::UpdateParametersTimerHandle' has a wrong offset!");

}


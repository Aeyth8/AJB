#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPlacementTrapBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ExecuteUbergraph_BP_AJBPlacementTrapBase
// 0x0350 (0x0350 - 0x0000)
struct BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_CustomEvent_HitCharacter;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComponent;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult1;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetSelf_bTarget;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AdditionalHitJudgment_bResult;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckState_bMatch;                        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCollisionEnable_bEnable;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_CustomEvent_BoxCollision;                   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0180(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoxCollisionProcessOnOverlap_bDestroyed;  // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_Event_HitCharacter;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Causer;                               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_Event_HitCharacter1;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Causer1;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0254(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0264(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBInGameAIEnvironmentComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate; // 0x02D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue2;                    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E3[0x5];                                      // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_1;     // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_1; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue3;                    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue5;           // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue4;                    // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E[0x2];                                      // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckState_bMatch1;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue1;          // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase) == 0x000350, "Wrong size on BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, EntryPoint) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_HitCharacter) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_HitCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OverlappedComponent1) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherActor1) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherComponent) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherBodyIndex1) == 0x000030, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_bFromSweep1) == 0x000034, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_bFromSweep1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_SweepResult1) == 0x000038, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsBI_AJBInterface) == 0x0000C0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x0000D8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess1) == 0x0000E0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_CheckTargetSelf_bTarget) == 0x0000E1, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_CheckTargetSelf_bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetObjectClass_ReturnValue) == 0x0000E8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed) == 0x0000F0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_TryGetPropertyOwnerCharacterFromActor_bSucceed' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor) == 0x0000F8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_TryGetPropertyOwnerCharacterFromActor_OutActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_ClassIsChildOf_ReturnValue) == 0x000100, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_AdditionalHitJudgment_bResult) == 0x000101, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_AdditionalHitJudgment_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_Not_PreBool_ReturnValue) == 0x000102, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_BooleanAND_ReturnValue) == 0x000103, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x000108, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess2) == 0x000110, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x000111, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsValid_ReturnValue) == 0x000112, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBGameInstance_bSuccess) == 0x000113, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000118, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_CheckState_bMatch) == 0x000120, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_CheckState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsPlayingReplay_ReturnValue) == 0x000121, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000122, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000123, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000128, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsPlayingReplay_ReturnValue1) == 0x000138, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000140, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess3) == 0x000148, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_float_Variable) == 0x00014C, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_CheckCollisionEnable_bEnable) == 0x000150, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_CheckCollisionEnable_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_BoxCollision) == 0x000158, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_BoxCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OverlappedComponent) == 0x000160, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherActor) == 0x000168, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherComp) == 0x000170, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_OtherBodyIndex) == 0x000178, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_bFromSweep) == 0x00017C, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CustomEvent_SweepResult) == 0x000180, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_Operator) == 0x000208, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_Time) == 0x000210, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_Timing) == 0x000214, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_bEnable) == 0x000215, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_bOperatorIsEmpty) == 0x000216, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_BoxCollisionProcessOnOverlap_bDestroyed) == 0x000217, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_BoxCollisionProcessOnOverlap_bDestroyed' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsServer_ReturnValue) == 0x000218, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_Not_PreBool_ReturnValue1) == 0x000219, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_HitCharacter) == 0x000220, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_HitCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_Causer) == 0x000228, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_HitCharacter1) == 0x000230, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_HitCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_Causer1) == 0x000238, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_Causer1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000240, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000241, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000242, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000248, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000250, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000251, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000254, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_bool_IsClosed_Variable) == 0x000260, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000264, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetOwner_ReturnValue1) == 0x000270, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetGameMode_ReturnValue) == 0x000278, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000280, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000288, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsValid_ReturnValue1) == 0x000290, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsServer_ReturnValue1) == 0x000291, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000298, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x0002A0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_float_Variable1) == 0x0002A4, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetOwner_ReturnValue2) == 0x0002A8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0002B0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess4) == 0x0002B8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetOwner_ReturnValue3) == 0x0002C0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue4) == 0x0002C8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_CreateDelegate_OutputDelegate) == 0x0002D0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_bool_Has_Been_Initd_Variable) == 0x0002E0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsServer_ReturnValue2) == 0x0002E1, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_bool_Variable) == 0x0002E2, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Select_Default) == 0x0002E8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetOwner_ReturnValue4) == 0x0002F0, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0002F8, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_DynamicCast_bSuccess5) == 0x000300, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_RequestGion_AkComponent__LocalOnly_1) == 0x000308, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_RequestGion_AkComponent__LocalOnly_1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_1) == 0x000310, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsPair_bPairCharacter) == 0x000311, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetPlayerController_ReturnValue1) == 0x000318, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_Not_PreBool_ReturnValue2) == 0x000320, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetViewTarget_ReturnValue) == 0x000328, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000330, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000338, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsServer_ReturnValue3) == 0x000339, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00033A, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsDedicatedServer_ReturnValue5) == 0x00033B, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsDedicatedServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsServer_ReturnValue4) == 0x00033C, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, Temp_bool_Variable1) == 0x00033D, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Event_DeltaSeconds) == 0x000340, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, K2Node_Select1_Default) == 0x000344, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_CheckState_bMatch1) == 0x000348, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_CheckState_bMatch1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_IsGameplayTagValid_ReturnValue1) == 0x000349, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_IsGameplayTagValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase, CallFunc_BooleanAND_ReturnValue1) == 0x00034A, "Member 'BP_AJBPlacementTrapBase_C_ExecuteUbergraph_BP_AJBPlacementTrapBase::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnComponentBeginOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap) == 0x0000A8, "Wrong size on BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, OtherActor) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, OtherComp) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap, SweepResult) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_OnComponentBeginOverlap::SweepResult' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BindOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPlacementTrapBase_C_BindOverlap final
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_BindOverlap) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_BindOverlap");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_BindOverlap) == 0x000008, "Wrong size on BP_AJBPlacementTrapBase_C_BindOverlap");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BindOverlap, BoxCollision) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_BindOverlap::BoxCollision' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnHit
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPlacementTrapBase_C_OnHit final
{
public:
	class AAJBInGameCharacterBase*                HitCharacter_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_OnHit) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_OnHit");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_OnHit) == 0x000008, "Wrong size on BP_AJBPlacementTrapBase_C_OnHit");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnHit, HitCharacter_0) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_OnHit::HitCharacter_0' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.OnBeginOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBPlacementTrapBase_C_OnBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_OnBeginOverlap) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_OnBeginOverlap");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_OnBeginOverlap) == 0x0000A8, "Wrong size on BP_AJBPlacementTrapBase_C_OnBeginOverlap");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, OtherActor) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, OtherComponent) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_OnBeginOverlap, SweepResult) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_OnBeginOverlap::SweepResult' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyHitEvent_Client
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client final
{
public:
	class AAJBInGameCharacterBase*                HitCharacter_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client) == 0x000010, "Wrong size on BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client, HitCharacter_0) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client::HitCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client, Causer) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_NotifyHitEvent_Client::Causer' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyHitEvent_Server
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server final
{
public:
	class AAJBInGameCharacterBase*                HitCharacter_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server) == 0x000010, "Wrong size on BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server, HitCharacter_0) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server::HitCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server, Causer) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_NotifyHitEvent_Server::Causer' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ChangeCollisionEnable
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBPlacementTrapBase_C_ChangeCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayMode                                     Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select1_Default;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select2_Default;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_ChangeCollisionEnable");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable) == 0x000068, "Wrong size on BP_AJBPlacementTrapBase_C_ChangeCollisionEnable");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, bEnable) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_byte_Variable) == 0x000009, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_name_Variable) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_name_Variable1) == 0x000030, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, Temp_bool_Variable1) == 0x000038, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_GetAJBGameInstance_bSuccess) == 0x000048, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000050, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, K2Node_Select1_Default) == 0x000058, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnable, K2Node_Select2_Default) == 0x000060, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnable::K2Node_Select2_Default' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.AdditionalHitJudgment
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBPlacementTrapBase_C_AdditionalHitJudgment final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DetectableByTrap_bDetectable;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_AdditionalHitJudgment");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment) == 0x000068, "Wrong size on BP_AJBPlacementTrapBase_C_AdditionalHitJudgment");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, HitActor) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, bResult) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, CallFunc_DetectableByTrap_bDetectable) == 0x000039, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::CallFunc_DetectableByTrap_bDetectable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000058, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AdditionalHitJudgment, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBPlacementTrapBase_C_AdditionalHitJudgment::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.DamageProcess
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AJBPlacementTrapBase_C_DamageProcess final
{
public:
	bool                                          bTempNoDamage;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempDisableDamage;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBDamageDisplayParams                K2Node_MakeStruct_AJBDamageDisplayParams;          // 0x0010(0x0030)(NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNoDamage_bNoDamage;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface1;             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_DamageProcess) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_DamageProcess");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_DamageProcess) == 0x0000D8, "Wrong size on BP_AJBPlacementTrapBase_C_DamageProcess");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, bTempNoDamage) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::bTempNoDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, bTempDisableDamage) == 0x000001, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::bTempDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_IsServer_ReturnValue) == 0x000002, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_MakeStruct_AJBDamageDisplayParams) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_MakeStruct_AJBDamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_Greater_IntInt_ReturnValue1) == 0x00004D, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_BooleanAND_ReturnValue) == 0x00004F, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_Not_PreBool_ReturnValue1) == 0x000051, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, Temp_float_Variable) == 0x000054, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_BooleanAND_ReturnValue1) == 0x000058, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000060, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000080, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_bSuccess1) == 0x000088, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_CheckNoDamage_bNoDamage) == 0x000089, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_CheckNoDamage_bNoDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00008C, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_VSize_ReturnValue) == 0x0000A4, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, Temp_float_Variable1) == 0x0000A8, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000B0, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_bSuccess2) == 0x0000B8, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, Temp_bool_Variable) == 0x0000B9, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_AsBI_AJBInterface1) == 0x0000C0, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_AsBI_AJBInterface1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_DynamicCast_bSuccess3) == 0x0000D0, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, CallFunc_CheckDisableDamage_bDisableDamage) == 0x0000D1, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DamageProcess, K2Node_Select_Default) == 0x0000D4, "Member 'BP_AJBPlacementTrapBase_C_DamageProcess::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.CheckCollisionEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPlacementTrapBase_C_CheckCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_CheckCollisionEnable) == 0x000001, "Wrong alignment on BP_AJBPlacementTrapBase_C_CheckCollisionEnable");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_CheckCollisionEnable) == 0x000001, "Wrong size on BP_AJBPlacementTrapBase_C_CheckCollisionEnable");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_CheckCollisionEnable, bEnable) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_CheckCollisionEnable::bEnable' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.AddMultipleBoxCollision
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision final
{
public:
	struct FVector                                TempCollisionOffset;                               // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempCollisionSize;                                 // 0x000C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempTraceRadius;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue1;              // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPlacementSkill_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue1;                // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue4;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue5;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0128(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue4;            // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoxCollisionProcessOnSpawn_bShouldSpawn;  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision) == 0x000010, "Wrong alignment on BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision) == 0x0001E0, "Wrong size on BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, TempCollisionOffset) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::TempCollisionOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, TempCollisionSize) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::TempCollisionSize' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, TempTraceRadius) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::TempTraceRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetVectorValue_ReturnValue) == 0x000030, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetVectorValue_ReturnValue1) == 0x00003C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetVectorValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000058, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_NegateVector_ReturnValue) == 0x000070, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Not_PreBool_ReturnValue) == 0x00007C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_Y) == 0x000084, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_Z) == 0x000088, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetParamDefaultContent_ReturnValue1) == 0x000098, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetParamDefaultContent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, Temp_int_Variable1) == 0x0000A0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_IsValid_ReturnValue1) == 0x0000A4, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x0000A8, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_IntInt_ReturnValue1) == 0x0000AC, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_GetFloatValue_ReturnValue) == 0x0000B0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B4, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_MakeVector_ReturnValue1) == 0x0000C0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, Temp_int_Variable2) == 0x0000CC, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_NegateVector_ReturnValue1) == 0x0000D0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_NegateVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x0000DC, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_VectorVector_ReturnValue1) == 0x0000EC, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_IntInt_ReturnValue2) == 0x0000F8, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x0000FC, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue4) == 0x000100, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Conv_IntToFloat_ReturnValue5) == 0x000104, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Conv_IntToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000108, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_MakeVector_ReturnValue2) == 0x00010C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Divide_VectorVector_ReturnValue) == 0x00011C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_VectorVector_ReturnValue2) == 0x000128, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000134, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000140, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_X1) == 0x00014C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_Y1) == 0x000150, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BreakVector_Z1) == 0x000154, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000158, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000160, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000164, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000168, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_MakeVector_ReturnValue3) == 0x00016C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000178, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_VectorVector_ReturnValue3) == 0x00017C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000188, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Add_VectorVector_ReturnValue4) == 0x00018C, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Add_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_BoxCollisionProcessOnSpawn_bShouldSpawn) == 0x000198, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_BoxCollisionProcessOnSpawn_bShouldSpawn' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_AddComponent_ReturnValue) == 0x0001D0, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BP_AJBPlacementTrapBase_C_AddMultipleBoxCollision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementTrapBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBPlacementTrapBase_C_ReceiveTick");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBPlacementTrapBase_C_ReceiveTick");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BoxCollisionProcessOnSpawn
// 0x01C0 (0x01C0 - 0x0000)
struct BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                DividedCollisionSize;                              // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldSpawn;                                      // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TempTraceEnd;                                      // 0x0028(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTraceStart;                                    // 0x0034(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        TraceVectorList;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue1;       // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array1;                           // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array2;                           // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit;            // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue;       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn) == 0x0001C0, "Wrong size on BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, Location) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, Rotation) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, DividedCollisionSize) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::DividedCollisionSize' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, bShouldSpawn) == 0x000024, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::bShouldSpawn' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, TempTraceEnd) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::TempTraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, TempTraceStart) == 0x000034, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::TempTraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, TraceVectorList) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::TraceVectorList' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_GetActorForwardVector_ReturnValue) == 0x000054, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_GetActorForwardVector_ReturnValue1) == 0x000060, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_GetActorForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00006C, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000078, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, K2Node_MakeArray_Array1) == 0x0000A8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, K2Node_MakeArray_Array2) == 0x0000C8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_AJBLineTraceForObjects_OutHit) == 0x0000E8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_AJBLineTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_AJBLineTraceForObjects_ReturnValue) == 0x000170, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_AJBLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000174, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Add_VectorVector_ReturnValue1) == 0x000180, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Array_Length_ReturnValue) == 0x00018C, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000190, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, Temp_int_Loop_Counter_Variable) == 0x00019C, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Add_VectorVector_ReturnValue2) == 0x0001AC, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ChangeCollisionEnableSpecified
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified final
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified) == 0x000048, "Wrong size on BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, BoxCollision) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::BoxCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, bEnable) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, Temp_name_Variable) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, Temp_name_Variable1) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, Temp_bool_Variable) == 0x000034, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, K2Node_Select_Default) == 0x000038, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_ChangeCollisionEnableSpecified::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.DestroySpecifiedBoxCollision
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision final
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision) == 0x000008, "Wrong size on BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision, BoxCollision) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_DestroySpecifiedBoxCollision::BoxCollision' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.BoxCollisionProcessOnOverlap
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDestroyed;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap) == 0x000030, "Wrong size on BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, OverlappedComponent) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, OtherActor) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, OtherComp) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, bDestroyed) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::bDestroyed' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, K2Node_DynamicCast_AsBox_Collision) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000029, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00002B, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00002C, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_BooleanOR_ReturnValue) == 0x00002D, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap, CallFunc_BooleanOR_ReturnValue1) == 0x00002E, "Member 'BP_AJBPlacementTrapBase_C_BoxCollisionProcessOnOverlap::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.TrySpawnEmphasisParticleBase
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase final
{
public:
	struct FVector                                CallFunc_GetEmphasisParticleLocation_Location;     // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase) == 0x000018, "Wrong size on BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase, CallFunc_GetEmphasisParticleLocation_Location) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase::CallFunc_GetEmphasisParticleLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00000D, "Member 'BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_TrySpawnEmphasisParticleBase::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.TryDestroyEmphasisParticleBase
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase final
{
public:
	bool                                          bLeftVariable;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisibilityOFF;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase) == 0x000001, "Wrong alignment on BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase) == 0x000004, "Wrong size on BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase, bLeftVariable) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase::bLeftVariable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase, bVisibilityOFF) == 0x000001, "Member 'BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase::bVisibilityOFF' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBPlacementTrapBase_C_TryDestroyEmphasisParticleBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.UpdateEmphasisParticleEnablesBase
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase final
{
public:
	bool                                          CallFunc_ShouldEnableEmphasisParticleBase_bShouldEnable; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase) == 0x000001, "Wrong alignment on BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase) == 0x000001, "Wrong size on BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase, CallFunc_ShouldEnableEmphasisParticleBase_bShouldEnable) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_UpdateEmphasisParticleEnablesBase::CallFunc_ShouldEnableEmphasisParticleBase_bShouldEnable' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.ShouldEnableEmphasisParticleBase
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase final
{
public:
	bool                                          bShouldEnable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase) == 0x000050, "Wrong size on BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, bShouldEnable) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::bShouldEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000018, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000038, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000040, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000048, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000049, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00004A, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase, CallFunc_BooleanOR_ReturnValue) == 0x00004B, "Member 'BP_AJBPlacementTrapBase_C_ShouldEnableEmphasisParticleBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetEmphasisParticleLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation) == 0x000004, "Wrong alignment on BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation) == 0x000018, "Wrong size on BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation, Location) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_GetEmphasisParticleLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetCauserOwnerCharacterBP
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong size on BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPlacementTrapBase_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBPlacementTrapBase_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_GetPassiveSkillTag, PassiveSkillTag) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_GetPassiveSkillTag::PassiveSkillTag' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementTrapBase_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBPlacementTrapBase_C_GetDuration");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_GetDuration) == 0x000004, "Wrong size on BP_AJBPlacementTrapBase_C_GetDuration");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_GetDuration::Duration' has a wrong offset!");

// Function BP_AJBPlacementTrapBase.BP_AJBPlacementTrapBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPlacementTrapBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementTrapBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBPlacementTrapBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBPlacementTrapBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBPlacementTrapBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBPlacementTrapBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBPlacementTrapBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBPlacementTrapBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBPlacementTrapBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementTrapBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBPlacementTrapBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


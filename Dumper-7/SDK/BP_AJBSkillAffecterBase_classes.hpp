#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSkillAffecterBase

#include "Basic.hpp"

#include "BP_AJBActorBase_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBSkillAffecterBase.BP_AJBSkillAffecterBase_C
// 0x0058 (0x0388 - 0x0330)
class ABP_AJBSkillAffecterBase_C : public ABP_AJBActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(Transient, DuplicateTransient)
	uint8                                         State;                                             // 0x0338(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateTimeReady;                                    // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeActive;                                   // 0x0340(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeClearing;                                 // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentStateTime;                                  // 0x0348(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SkillClassServer;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGameplayTag                           GionTagReady;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseStandLocationReadyGion;                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SETagReady;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AffecterStartVoiceTag;                             // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AffecterEndVoiceTag;                               // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDuringTheWorld;                                   // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBSkillAffecterBase(int32 EntryPoint);
	void CancelLocal();
	void ROS_Cancel();
	void ReceiveTick(float DeltaSeconds);
	void StateEndServer();
	void BeginStateClearingServer();
	void BeginStateActiveServer();
	void BeginStateReadyServer();
	void MC_StateEnd();
	void MC_BeginStateClearing();
	void MC_BeginStateActive();
	void MC_BeginStateReady(class AActor* Owner_0, const struct FVector& OwnerLocation);
	void OnStateEndOneShot();
	void OnBeginStateClearingOneShot();
	void OnBeginStateActiveOneShot();
	void OnBeginStateReadyOneShot(class AActor* Owner_0, const struct FVector& OwnerLocation);
	void StateTick();
	void TickStateClearing();
	void TickStateActive();
	void TickStateReady();
	void OnStateEnd();
	void OnBeginStateClearing();
	void OnBeginStateActive();
	void OnBeginStateReady();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void UserConstructionScript();
	void OnRep_State();
	void ChangeState(uint8 NewState);
	void CheckValidState(bool* bValidState);
	void ShouldCancelOnReady(bool* bShouldCancel);
	void GetLeftActiveTime(float* Time);
	void ShouldCancelOnActive(bool* bShouldCancel);
	void CheckActiveState(bool* bActiveState);
	void ChangeStateCore(uint8 NewState);
	void OnRep_StateCore();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBSkillAffecterBase_C">();
	}
	static class ABP_AJBSkillAffecterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBSkillAffecterBase_C>();
	}
};
static_assert(alignof(ABP_AJBSkillAffecterBase_C) == 0x000008, "Wrong alignment on ABP_AJBSkillAffecterBase_C");
static_assert(sizeof(ABP_AJBSkillAffecterBase_C) == 0x000388, "Wrong size on ABP_AJBSkillAffecterBase_C");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, UberGraphFrame) == 0x000330, "Member 'ABP_AJBSkillAffecterBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, State) == 0x000338, "Member 'ABP_AJBSkillAffecterBase_C::State' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, StateTimeReady) == 0x00033C, "Member 'ABP_AJBSkillAffecterBase_C::StateTimeReady' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, StateTimeActive) == 0x000340, "Member 'ABP_AJBSkillAffecterBase_C::StateTimeActive' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, StateTimeClearing) == 0x000344, "Member 'ABP_AJBSkillAffecterBase_C::StateTimeClearing' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, CurrentStateTime) == 0x000348, "Member 'ABP_AJBSkillAffecterBase_C::CurrentStateTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, SkillClassServer) == 0x000350, "Member 'ABP_AJBSkillAffecterBase_C::SkillClassServer' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, GionTagReady) == 0x000358, "Member 'ABP_AJBSkillAffecterBase_C::GionTagReady' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, bUseStandLocationReadyGion) == 0x000360, "Member 'ABP_AJBSkillAffecterBase_C::bUseStandLocationReadyGion' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, SETagReady) == 0x000368, "Member 'ABP_AJBSkillAffecterBase_C::SETagReady' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, AffecterStartVoiceTag) == 0x000370, "Member 'ABP_AJBSkillAffecterBase_C::AffecterStartVoiceTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, AffecterEndVoiceTag) == 0x000378, "Member 'ABP_AJBSkillAffecterBase_C::AffecterEndVoiceTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBSkillAffecterBase_C, bDuringTheWorld) == 0x000380, "Member 'ABP_AJBSkillAffecterBase_C::bDuringTheWorld' has a wrong offset!");

}


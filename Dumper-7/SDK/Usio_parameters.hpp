#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Usio

#include "Basic.hpp"

#include "Usio_structs.hpp"


namespace SDK::Params
{

// Function Usio.UsioFunctionLibrary.CloseUsio
// 0x0001 (0x0001 - 0x0000)
struct UsioFunctionLibrary_CloseUsio final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_CloseUsio) == 0x000001, "Wrong alignment on UsioFunctionLibrary_CloseUsio");
static_assert(sizeof(UsioFunctionLibrary_CloseUsio) == 0x000001, "Wrong size on UsioFunctionLibrary_CloseUsio");
static_assert(offsetof(UsioFunctionLibrary_CloseUsio, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_CloseUsio::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.DecCoin
// 0x000C (0x000C - 0x0000)
struct UsioFunctionLibrary_DecCoin final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_DecCoin) == 0x000004, "Wrong alignment on UsioFunctionLibrary_DecCoin");
static_assert(sizeof(UsioFunctionLibrary_DecCoin) == 0x00000C, "Wrong size on UsioFunctionLibrary_DecCoin");
static_assert(offsetof(UsioFunctionLibrary_DecCoin, Slot) == 0x000000, "Member 'UsioFunctionLibrary_DecCoin::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_DecCoin, Count) == 0x000004, "Member 'UsioFunctionLibrary_DecCoin::Count' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_DecCoin, ReturnValue) == 0x000008, "Member 'UsioFunctionLibrary_DecCoin::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.DecService
// 0x000C (0x000C - 0x0000)
struct UsioFunctionLibrary_DecService final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_DecService) == 0x000004, "Wrong alignment on UsioFunctionLibrary_DecService");
static_assert(sizeof(UsioFunctionLibrary_DecService) == 0x00000C, "Wrong size on UsioFunctionLibrary_DecService");
static_assert(offsetof(UsioFunctionLibrary_DecService, Slot) == 0x000000, "Member 'UsioFunctionLibrary_DecService::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_DecService, Count) == 0x000004, "Member 'UsioFunctionLibrary_DecService::Count' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_DecService, ReturnValue) == 0x000008, "Member 'UsioFunctionLibrary_DecService::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetCoin
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_GetCoin final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetCoin) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetCoin");
static_assert(sizeof(UsioFunctionLibrary_GetCoin) == 0x000008, "Wrong size on UsioFunctionLibrary_GetCoin");
static_assert(offsetof(UsioFunctionLibrary_GetCoin, Slot) == 0x000000, "Member 'UsioFunctionLibrary_GetCoin::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetCoin, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_GetCoin::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetCoinError
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_GetCoinError final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoinError                                    ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsioFunctionLibrary_GetCoinError) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetCoinError");
static_assert(sizeof(UsioFunctionLibrary_GetCoinError) == 0x000008, "Wrong size on UsioFunctionLibrary_GetCoinError");
static_assert(offsetof(UsioFunctionLibrary_GetCoinError, Slot) == 0x000000, "Member 'UsioFunctionLibrary_GetCoinError::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetCoinError, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_GetCoinError::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetCoinLock
// 0x0002 (0x0002 - 0x0000)
struct UsioFunctionLibrary_GetCoinLock final
{
public:
	uint8                                         Channel;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetCoinLock) == 0x000001, "Wrong alignment on UsioFunctionLibrary_GetCoinLock");
static_assert(sizeof(UsioFunctionLibrary_GetCoinLock) == 0x000002, "Wrong size on UsioFunctionLibrary_GetCoinLock");
static_assert(offsetof(UsioFunctionLibrary_GetCoinLock, Channel) == 0x000000, "Member 'UsioFunctionLibrary_GetCoinLock::Channel' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetCoinLock, ReturnValue) == 0x000001, "Member 'UsioFunctionLibrary_GetCoinLock::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetConnectCount
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_GetConnectCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetConnectCount) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetConnectCount");
static_assert(sizeof(UsioFunctionLibrary_GetConnectCount) == 0x000004, "Wrong size on UsioFunctionLibrary_GetConnectCount");
static_assert(offsetof(UsioFunctionLibrary_GetConnectCount, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_GetConnectCount::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetErrorCount
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_GetErrorCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetErrorCount) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetErrorCount");
static_assert(sizeof(UsioFunctionLibrary_GetErrorCount) == 0x000004, "Wrong size on UsioFunctionLibrary_GetErrorCount");
static_assert(offsetof(UsioFunctionLibrary_GetErrorCount, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_GetErrorCount::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetIoBoardName
// 0x0010 (0x0010 - 0x0000)
struct UsioFunctionLibrary_GetIoBoardName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetIoBoardName) == 0x000008, "Wrong alignment on UsioFunctionLibrary_GetIoBoardName");
static_assert(sizeof(UsioFunctionLibrary_GetIoBoardName) == 0x000010, "Wrong size on UsioFunctionLibrary_GetIoBoardName");
static_assert(offsetof(UsioFunctionLibrary_GetIoBoardName, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_GetIoBoardName::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetService
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_GetService final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetService) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetService");
static_assert(sizeof(UsioFunctionLibrary_GetService) == 0x000008, "Wrong size on UsioFunctionLibrary_GetService");
static_assert(offsetof(UsioFunctionLibrary_GetService, Slot) == 0x000000, "Member 'UsioFunctionLibrary_GetService::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetService, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_GetService::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetServiceError
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_GetServiceError final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoinError                                    ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsioFunctionLibrary_GetServiceError) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetServiceError");
static_assert(sizeof(UsioFunctionLibrary_GetServiceError) == 0x000008, "Wrong size on UsioFunctionLibrary_GetServiceError");
static_assert(offsetof(UsioFunctionLibrary_GetServiceError, Slot) == 0x000000, "Member 'UsioFunctionLibrary_GetServiceError::Slot' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetServiceError, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_GetServiceError::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetUsioAnalogIn
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_GetUsioAnalogIn final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetUsioAnalogIn) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetUsioAnalogIn");
static_assert(sizeof(UsioFunctionLibrary_GetUsioAnalogIn) == 0x000008, "Wrong size on UsioFunctionLibrary_GetUsioAnalogIn");
static_assert(offsetof(UsioFunctionLibrary_GetUsioAnalogIn, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_GetUsioAnalogIn::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetUsioAnalogIn, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_GetUsioAnalogIn::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetUsioEncoder
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_GetUsioEncoder final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetUsioEncoder) == 0x000004, "Wrong alignment on UsioFunctionLibrary_GetUsioEncoder");
static_assert(sizeof(UsioFunctionLibrary_GetUsioEncoder) == 0x000004, "Wrong size on UsioFunctionLibrary_GetUsioEncoder");
static_assert(offsetof(UsioFunctionLibrary_GetUsioEncoder, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_GetUsioEncoder::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetUsioSwitchIn
// 0x0002 (0x0002 - 0x0000)
struct UsioFunctionLibrary_GetUsioSwitchIn final
{
public:
	EUsioInputKeyNames                            UsioInputKey;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetUsioSwitchIn) == 0x000001, "Wrong alignment on UsioFunctionLibrary_GetUsioSwitchIn");
static_assert(sizeof(UsioFunctionLibrary_GetUsioSwitchIn) == 0x000002, "Wrong size on UsioFunctionLibrary_GetUsioSwitchIn");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSwitchIn, UsioInputKey) == 0x000000, "Member 'UsioFunctionLibrary_GetUsioSwitchIn::UsioInputKey' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSwitchIn, ReturnValue) == 0x000001, "Member 'UsioFunctionLibrary_GetUsioSwitchIn::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.GetUsioSystemError
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_GetUsioSystemError final
{
public:
	bool                                          bBackupError;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFirmwareError;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMemoryError;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOtherError;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_GetUsioSystemError) == 0x000001, "Wrong alignment on UsioFunctionLibrary_GetUsioSystemError");
static_assert(sizeof(UsioFunctionLibrary_GetUsioSystemError) == 0x000004, "Wrong size on UsioFunctionLibrary_GetUsioSystemError");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSystemError, bBackupError) == 0x000000, "Member 'UsioFunctionLibrary_GetUsioSystemError::bBackupError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSystemError, bFirmwareError) == 0x000001, "Member 'UsioFunctionLibrary_GetUsioSystemError::bFirmwareError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSystemError, bMemoryError) == 0x000002, "Member 'UsioFunctionLibrary_GetUsioSystemError::bMemoryError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_GetUsioSystemError, bOtherError) == 0x000003, "Member 'UsioFunctionLibrary_GetUsioSystemError::bOtherError' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.IsUsioConnected
// 0x0001 (0x0001 - 0x0000)
struct UsioFunctionLibrary_IsUsioConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_IsUsioConnected) == 0x000001, "Wrong alignment on UsioFunctionLibrary_IsUsioConnected");
static_assert(sizeof(UsioFunctionLibrary_IsUsioConnected) == 0x000001, "Wrong size on UsioFunctionLibrary_IsUsioConnected");
static_assert(offsetof(UsioFunctionLibrary_IsUsioConnected, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_IsUsioConnected::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.OpenUsio
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_OpenUsio final
{
public:
	int32                                         ThreadPriority;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsioFunctionLibrary_OpenUsio) == 0x000004, "Wrong alignment on UsioFunctionLibrary_OpenUsio");
static_assert(sizeof(UsioFunctionLibrary_OpenUsio) == 0x000008, "Wrong size on UsioFunctionLibrary_OpenUsio");
static_assert(offsetof(UsioFunctionLibrary_OpenUsio, ThreadPriority) == 0x000000, "Member 'UsioFunctionLibrary_OpenUsio::ThreadPriority' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_OpenUsio, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_OpenUsio::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.ResetCoin
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_ResetCoin final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_ResetCoin) == 0x000004, "Wrong alignment on UsioFunctionLibrary_ResetCoin");
static_assert(sizeof(UsioFunctionLibrary_ResetCoin) == 0x000004, "Wrong size on UsioFunctionLibrary_ResetCoin");
static_assert(offsetof(UsioFunctionLibrary_ResetCoin, ReturnValue) == 0x000000, "Member 'UsioFunctionLibrary_ResetCoin::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetAnalogCenter
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_SetAnalogCenter final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Center;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetAnalogCenter) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetAnalogCenter");
static_assert(sizeof(UsioFunctionLibrary_SetAnalogCenter) == 0x000008, "Wrong size on UsioFunctionLibrary_SetAnalogCenter");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogCenter, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_SetAnalogCenter::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogCenter, Center) == 0x000004, "Member 'UsioFunctionLibrary_SetAnalogCenter::Center' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetAnalogPlayHigh
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_SetAnalogPlayHigh final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         High;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetAnalogPlayHigh) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetAnalogPlayHigh");
static_assert(sizeof(UsioFunctionLibrary_SetAnalogPlayHigh) == 0x000008, "Wrong size on UsioFunctionLibrary_SetAnalogPlayHigh");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogPlayHigh, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_SetAnalogPlayHigh::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogPlayHigh, High) == 0x000004, "Member 'UsioFunctionLibrary_SetAnalogPlayHigh::High' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetAnalogPlayLow
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_SetAnalogPlayLow final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Low;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetAnalogPlayLow) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetAnalogPlayLow");
static_assert(sizeof(UsioFunctionLibrary_SetAnalogPlayLow) == 0x000008, "Wrong size on UsioFunctionLibrary_SetAnalogPlayLow");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogPlayLow, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_SetAnalogPlayLow::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogPlayLow, Low) == 0x000004, "Member 'UsioFunctionLibrary_SetAnalogPlayLow::Low' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetAnalogRange
// 0x000C (0x000C - 0x0000)
struct UsioFunctionLibrary_SetAnalogRange final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Min;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Max;                                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetAnalogRange) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetAnalogRange");
static_assert(sizeof(UsioFunctionLibrary_SetAnalogRange) == 0x00000C, "Wrong size on UsioFunctionLibrary_SetAnalogRange");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogRange, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_SetAnalogRange::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogRange, Min) == 0x000004, "Member 'UsioFunctionLibrary_SetAnalogRange::Min' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetAnalogRange, Max) == 0x000008, "Member 'UsioFunctionLibrary_SetAnalogRange::Max' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetCoinLock
// 0x0003 (0x0003 - 0x0000)
struct UsioFunctionLibrary_SetCoinLock final
{
public:
	uint8                                         Channel;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetCoinLock) == 0x000001, "Wrong alignment on UsioFunctionLibrary_SetCoinLock");
static_assert(sizeof(UsioFunctionLibrary_SetCoinLock) == 0x000003, "Wrong size on UsioFunctionLibrary_SetCoinLock");
static_assert(offsetof(UsioFunctionLibrary_SetCoinLock, Channel) == 0x000000, "Member 'UsioFunctionLibrary_SetCoinLock::Channel' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetCoinLock, Value) == 0x000001, "Member 'UsioFunctionLibrary_SetCoinLock::Value' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetCoinLock, ReturnValue) == 0x000002, "Member 'UsioFunctionLibrary_SetCoinLock::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetUsioGout
// 0x000C (0x000C - 0x0000)
struct UsioFunctionLibrary_SetUsioGout final
{
public:
	int32                                         ChannelNo;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetUsioGout) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetUsioGout");
static_assert(sizeof(UsioFunctionLibrary_SetUsioGout) == 0x00000C, "Wrong size on UsioFunctionLibrary_SetUsioGout");
static_assert(offsetof(UsioFunctionLibrary_SetUsioGout, ChannelNo) == 0x000000, "Member 'UsioFunctionLibrary_SetUsioGout::ChannelNo' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioGout, OutValue) == 0x000004, "Member 'UsioFunctionLibrary_SetUsioGout::OutValue' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioGout, ReturnValue) == 0x000008, "Member 'UsioFunctionLibrary_SetUsioGout::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetUsioPLCounter
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_SetUsioPLCounter final
{
public:
	int32                                         TimeoutMilliseconds;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetUsioPLCounter) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetUsioPLCounter");
static_assert(sizeof(UsioFunctionLibrary_SetUsioPLCounter) == 0x000004, "Wrong size on UsioFunctionLibrary_SetUsioPLCounter");
static_assert(offsetof(UsioFunctionLibrary_SetUsioPLCounter, TimeoutMilliseconds) == 0x000000, "Member 'UsioFunctionLibrary_SetUsioPLCounter::TimeoutMilliseconds' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetUsioSystemError
// 0x0008 (0x0008 - 0x0000)
struct UsioFunctionLibrary_SetUsioSystemError final
{
public:
	int32                                         ErrorBit;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsioFunctionLibrary_SetUsioSystemError) == 0x000004, "Wrong alignment on UsioFunctionLibrary_SetUsioSystemError");
static_assert(sizeof(UsioFunctionLibrary_SetUsioSystemError) == 0x000008, "Wrong size on UsioFunctionLibrary_SetUsioSystemError");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemError, ErrorBit) == 0x000000, "Member 'UsioFunctionLibrary_SetUsioSystemError::ErrorBit' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemError, ReturnValue) == 0x000004, "Member 'UsioFunctionLibrary_SetUsioSystemError::ReturnValue' has a wrong offset!");

// Function Usio.UsioFunctionLibrary.SetUsioSystemErrorByBool
// 0x0004 (0x0004 - 0x0000)
struct UsioFunctionLibrary_SetUsioSystemErrorByBool final
{
public:
	bool                                          bBackupError;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFirmwareError;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMemoryError;                                      // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsioFunctionLibrary_SetUsioSystemErrorByBool) == 0x000001, "Wrong alignment on UsioFunctionLibrary_SetUsioSystemErrorByBool");
static_assert(sizeof(UsioFunctionLibrary_SetUsioSystemErrorByBool) == 0x000004, "Wrong size on UsioFunctionLibrary_SetUsioSystemErrorByBool");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemErrorByBool, bBackupError) == 0x000000, "Member 'UsioFunctionLibrary_SetUsioSystemErrorByBool::bBackupError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemErrorByBool, bFirmwareError) == 0x000001, "Member 'UsioFunctionLibrary_SetUsioSystemErrorByBool::bFirmwareError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemErrorByBool, bMemoryError) == 0x000002, "Member 'UsioFunctionLibrary_SetUsioSystemErrorByBool::bMemoryError' has a wrong offset!");
static_assert(offsetof(UsioFunctionLibrary_SetUsioSystemErrorByBool, ReturnValue) == 0x000003, "Member 'UsioFunctionLibrary_SetUsioSystemErrorByBool::ReturnValue' has a wrong offset!");

}


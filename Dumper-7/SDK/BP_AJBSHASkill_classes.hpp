#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSHASkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBSnipeSkill_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBSHASkill.BP_AJBSHASkill_C
// 0x00D8 (0x0360 - 0x0288)
class UBP_AJBSHASkill_C final : public UBP_AJBSnipeSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBSHASkill_C;                   // 0x0288(0x0008)(Transient, DuplicateTransient)
	bool                                          bReserveAction;                                    // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReservedShot;                                     // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0xE];                                      // 0x0292(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ShotTransform;                                     // 0x02A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             PlacementTransform;                                // 0x02D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        PathPositions;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class AActor*                                 PreviewObject;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnPreviewClass;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSHA3DGuide_C*                    ThreeDGuideObject;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GuideSimFrequency;                                 // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GuideMaxSimTime_s_;                                // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameProjectile_C*              SpawnedBullet;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugChangeLoiteringTime_Server_;                 // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugLoiteringTime_s_;                             // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPossibleShot;                                     // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ElementName_UltimateSkill_Projectile;              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes_ProjectileHit;                         // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBSHASkill(int32 EntryPoint);
	void OnPassiveRemoved_SHA(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnPassiveAddedAfterSetCauser_SHA(const struct FGameplayTag& AddCondition, class UObject* Causer, const struct FGameplayTag& CauserType);
	void OnSHARegistered(class ABP_AJBInGameCharacter_SHA_C* SHA);
	void OnPassiveAddedAfterSetCauser(const struct FGameplayTag& AddCondition, class UObject* Causer, const struct FGameplayTag& CauserType);
	void OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void ROS_DebugChangeLoiteringTime(int32 NewTime);
	void OnCritical();
	void OnBecomeLastSurvivor(bool bBitesTheDust);
	void OnCharacterDead(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser);
	void MC_ConfigureBullet();
	void DestroyPreviewObject_Local();
	void SpawnPreviewObject_Local();
	void TickState_Ready();
	void MC_BeginState_Action();
	void ROS_BeginState_Action();
	void BeginStateAction();
	void ConfigureBullet(class ABP_AJBInGameProjectile_C* Bullet);
	void OnStateAction();
	void OnStateReady();
	void OnCompleted_821E4A124DAD86922FF9ECB404191777(class FName NotifyName);
	void OnBlendOut_821E4A124DAD86922FF9ECB404191777(class FName NotifyName);
	void OnInterrupted_821E4A124DAD86922FF9ECB404191777(class FName NotifyName);
	void OnNotifyBegin_821E4A124DAD86922FF9ECB404191777(class FName NotifyName);
	void OnNotifyEnd_821E4A124DAD86922FF9ECB404191777(class FName NotifyName);
	void TryDestroyPreviewObject();
	void TrySpawnPreviewObject();
	void ApplyTraceInfo();
	void UpdateTraceInfo();
	void UpdateShotInfo();
	void TryChangeSHAClearing();
	void TryAddPassiveSHA(const struct FGameplayTag& PassiveTag);
	void TryRemovePassiveSHA(const struct FGameplayTag& PassiveTag);
	void TryAddPassiveKIR(const struct FGameplayTag& PassiveTag, const struct FGameplayTag& CauserType);
	void TryRemovePassiveKIR(const struct FGameplayTag& PassiveTag);
	void ReceiveBeginPlay();
	void OnActive();
	void OnInactive();
	void ReceiveTick(float DeltaSeconds);
	void OnReady();
	void InitializeVariables();

	bool IsInPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBSHASkill_C">();
	}
	static class UBP_AJBSHASkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBSHASkill_C>();
	}
};
static_assert(alignof(UBP_AJBSHASkill_C) == 0x000010, "Wrong alignment on UBP_AJBSHASkill_C");
static_assert(sizeof(UBP_AJBSHASkill_C) == 0x000360, "Wrong size on UBP_AJBSHASkill_C");
static_assert(offsetof(UBP_AJBSHASkill_C, UberGraphFrame_BP_AJBSHASkill_C) == 0x000288, "Member 'UBP_AJBSHASkill_C::UberGraphFrame_BP_AJBSHASkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, bReserveAction) == 0x000290, "Member 'UBP_AJBSHASkill_C::bReserveAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, bReservedShot) == 0x000291, "Member 'UBP_AJBSHASkill_C::bReservedShot' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, ShotTransform) == 0x0002A0, "Member 'UBP_AJBSHASkill_C::ShotTransform' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, PlacementTransform) == 0x0002D0, "Member 'UBP_AJBSHASkill_C::PlacementTransform' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, PathPositions) == 0x000300, "Member 'UBP_AJBSHASkill_C::PathPositions' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, PreviewObject) == 0x000310, "Member 'UBP_AJBSHASkill_C::PreviewObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, SpawnPreviewClass) == 0x000318, "Member 'UBP_AJBSHASkill_C::SpawnPreviewClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, ThreeDGuideObject) == 0x000320, "Member 'UBP_AJBSHASkill_C::ThreeDGuideObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, GuideSimFrequency) == 0x000328, "Member 'UBP_AJBSHASkill_C::GuideSimFrequency' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, GuideMaxSimTime_s_) == 0x00032C, "Member 'UBP_AJBSHASkill_C::GuideMaxSimTime_s_' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, SpawnedBullet) == 0x000330, "Member 'UBP_AJBSHASkill_C::SpawnedBullet' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, bDebugChangeLoiteringTime_Server_) == 0x000338, "Member 'UBP_AJBSHASkill_C::bDebugChangeLoiteringTime_Server_' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, DebugLoiteringTime_s_) == 0x00033C, "Member 'UBP_AJBSHASkill_C::DebugLoiteringTime_s_' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, bPossibleShot) == 0x000340, "Member 'UBP_AJBSHASkill_C::bPossibleShot' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, ElementName_UltimateSkill_Projectile) == 0x000348, "Member 'UBP_AJBSHASkill_C::ElementName_UltimateSkill_Projectile' has a wrong offset!");
static_assert(offsetof(UBP_AJBSHASkill_C, ObjectTypes_ProjectileHit) == 0x000350, "Member 'UBP_AJBSHASkill_C::ObjectTypes_ProjectileHit' has a wrong offset!");

}


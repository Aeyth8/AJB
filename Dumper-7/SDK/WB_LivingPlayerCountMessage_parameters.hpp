#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LivingPlayerCountMessage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_LivingPlayerCountMessage.WB_LivingPlayerCountMessage_C.ExecuteUbergraph_WB_LivingPlayerCountMessage
// 0x00F0 (0x00F0 - 0x0000)
struct WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerCount;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LivingPlayerRate;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PairCount;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShowMessage_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetBrushResourceAsMaterial_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetBrushResourceAsMaterial_ReturnValue1;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePvE_EnemySpawnManager_C*   CallFunc_GetPvESpawnManager_SpawnManager;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0080(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00D0(0x0018)()
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage) == 0x000008, "Wrong alignment on WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage");
static_assert(sizeof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage) == 0x0000F0, "Wrong size on WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, EntryPoint) == 0x000000, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, K2Node_CustomEvent_PlayerCount) == 0x000004, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::K2Node_CustomEvent_PlayerCount' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, K2Node_CustomEvent_LivingPlayerRate) == 0x000008, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::K2Node_CustomEvent_LivingPlayerRate' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, K2Node_CustomEvent_PairCount) == 0x00000C, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::K2Node_CustomEvent_PairCount' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_CanShowMessage_bSuccess) == 0x000010, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_CanShowMessage_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000030, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_GetBrushResourceAsMaterial_ReturnValue) == 0x000038, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_GetBrushResourceAsMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_GetBrushResourceAsMaterial_ReturnValue1) == 0x000048, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_GetBrushResourceAsMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000050, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000058, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_GetPvESpawnManager_SpawnManager) == 0x000060, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_GetPvESpawnManager_SpawnManager' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x000069, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, K2Node_MakeStruct_SlateFontInfo) == 0x000080, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_MakeLiteralText_ReturnValue) == 0x0000D0, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x0000E8, "Member 'WB_LivingPlayerCountMessage_C_ExecuteUbergraph_WB_LivingPlayerCountMessage::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");

// Function WB_LivingPlayerCountMessage.WB_LivingPlayerCountMessage_C.ShowMessageText
// 0x000C (0x000C - 0x0000)
struct WB_LivingPlayerCountMessage_C_ShowMessageText final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LivingPlayerRate;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairCount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LivingPlayerCountMessage_C_ShowMessageText) == 0x000004, "Wrong alignment on WB_LivingPlayerCountMessage_C_ShowMessageText");
static_assert(sizeof(WB_LivingPlayerCountMessage_C_ShowMessageText) == 0x00000C, "Wrong size on WB_LivingPlayerCountMessage_C_ShowMessageText");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ShowMessageText, PlayerCount) == 0x000000, "Member 'WB_LivingPlayerCountMessage_C_ShowMessageText::PlayerCount' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ShowMessageText, LivingPlayerRate) == 0x000004, "Member 'WB_LivingPlayerCountMessage_C_ShowMessageText::LivingPlayerRate' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_ShowMessageText, PairCount) == 0x000008, "Member 'WB_LivingPlayerCountMessage_C_ShowMessageText::PairCount' has a wrong offset!");

// Function WB_LivingPlayerCountMessage.WB_LivingPlayerCountMessage_C.CanShowMessage
// 0x0038 (0x0038 - 0x0000)
struct WB_LivingPlayerCountMessage_C_CanShowMessage final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PairCount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue1;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishedBattleGame_bFinished;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartBattleGame_bStart;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_LivingPlayerCountMessage_C_CanShowMessage) == 0x000008, "Wrong alignment on WB_LivingPlayerCountMessage_C_CanShowMessage");
static_assert(sizeof(WB_LivingPlayerCountMessage_C_CanShowMessage) == 0x000038, "Wrong size on WB_LivingPlayerCountMessage_C_CanShowMessage");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, PlayerCount) == 0x000000, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::PlayerCount' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, Rate) == 0x000004, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::Rate' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, PairCount) == 0x000008, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::PairCount' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, bSuccess) == 0x00000C, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::bSuccess' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000E, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x00000F, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_PlayModeIsPair_ReturnValue) == 0x000010, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_PlayModeIsPair_ReturnValue1) == 0x000011, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_PlayModeIsPair_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000013, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000018, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000020, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_IsFinishedBattleGame_bFinished) == 0x000029, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_IsFinishedBattleGame_bFinished' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_IsStartBattleGame_bStart) == 0x00002A, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_IsStartBattleGame_bStart' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_Not_PreBool_ReturnValue1) == 0x00002B, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x00002D, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002E, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x00002F, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LivingPlayerCountMessage_C_CanShowMessage, CallFunc_BooleanAND_ReturnValue1) == 0x000031, "Member 'WB_LivingPlayerCountMessage_C_CanShowMessage::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDebugScreenDrawHelper

#include "Basic.hpp"

#include "BP_AJBDebugScreenDrawHelper_classes.hpp"
#include "BP_AJBDebugScreenDrawHelper_parameters.hpp"


namespace SDK
{

// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ExecuteUbergraph_BP_AJBDebugScreenDrawHelper
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::ExecuteUbergraph_BP_AJBDebugScreenDrawHelper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ExecuteUbergraph_BP_AJBDebugScreenDrawHelper");

	Params::BP_AJBDebugScreenDrawHelper_C_ExecuteUbergraph_BP_AJBDebugScreenDrawHelper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawBoxGaugeDefaultColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   GaugeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GaugeValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawBoxGaugeDefaultColor(const struct FBox2D& Box, float GaugeMax, float GaugeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawBoxGaugeDefaultColor");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawBoxGaugeDefaultColor Parms{};

	Parms.Box = std::move(Box);
	Parms.GaugeMax = GaugeMax;
	Parms.GaugeValue = GaugeValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ClearBoxGauge
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ClearBoxGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ClearBoxGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawBoxGauge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   GaugeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GaugeValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              OutlineColor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              FilledColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawBoxGauge(const struct FBox2D& Box, float GaugeMax, float GaugeValue, const struct FLinearColor& OutlineColor, const struct FLinearColor& FilledColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawBoxGauge");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawBoxGauge Parms{};

	Parms.Box = std::move(Box);
	Parms.GaugeMax = GaugeMax;
	Parms.GaugeValue = GaugeValue;
	Parms.OutlineColor = std::move(OutlineColor);
	Parms.FilledColor = std::move(FilledColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawCrossWithColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawCrossWithColor(const struct FVector2D& Location, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawCrossWithColor");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawCrossWithColor Parms{};

	Parms.Location = std::move(Location);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ClearAllText
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ClearAllText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ClearAllText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawText
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawText(const class FString& Text, const struct FVector2D& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawText");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawText Parms{};

	Parms.Text = std::move(Text);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ClearAllOutlineRect
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ClearAllOutlineRect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ClearAllOutlineRect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawOutlineRect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_AJBDebugScreenDrawHelper_C::DrawOutlineRect(const struct FBox2D& Box)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawOutlineRect");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawOutlineRect Parms{};

	Parms.Box = std::move(Box);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ClearAllItem
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ClearAllItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ClearAllItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ClearAllCross
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ClearAllCross()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ClearAllCross");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawCross
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawCross(const struct FVector2D& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawCross");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawCross Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.ReceiveDebugDrawHUD
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDebugScreenDrawHelper_C::ReceiveDebugDrawHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "ReceiveDebugDrawHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.GetOwnerHUD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHUD**                            HUD                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::GetOwnerHUD(bool* Success, class AHUD** HUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "GetOwnerHUD");

	Params::BP_AJBDebugScreenDrawHelper_C_GetOwnerHUD Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (HUD != nullptr)
		*HUD = Parms.HUD;
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.GetCrossLine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineStartV                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineEndV                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineStartH                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineEndH                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::GetCrossLine(const struct FVector2D& Location, struct FVector2D* LineStartV, struct FVector2D* LineEndV, struct FVector2D* LineStartH, struct FVector2D* LineEndH)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "GetCrossLine");

	Params::BP_AJBDebugScreenDrawHelper_C_GetCrossLine Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (LineStartV != nullptr)
		*LineStartV = std::move(Parms.LineStartV);

	if (LineEndV != nullptr)
		*LineEndV = std::move(Parms.LineEndV);

	if (LineStartH != nullptr)
		*LineStartH = std::move(Parms.LineStartH);

	if (LineEndH != nullptr)
		*LineEndH = std::move(Parms.LineEndH);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawCross_Internal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUD*                             HUD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LineColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LineThickness_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawCross_Internal(class AHUD* HUD, const struct FVector2D& Location, const struct FLinearColor& LineColor_0, float LineThickness_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawCross_Internal");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawCross_Internal Parms{};

	Parms.HUD = HUD;
	Parms.Location = std::move(Location);
	Parms.LineColor_0 = std::move(LineColor_0);
	Parms.LineThickness_0 = LineThickness_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C.DrawOutlineRect_Internal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUD*                             HUD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FBox2D&                    RectPositions                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FLinearColor&              LineColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LineThickness_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDebugScreenDrawHelper_C::DrawOutlineRect_Internal(class AHUD* HUD, const struct FBox2D& RectPositions, const struct FLinearColor& LineColor_0, float LineThickness_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDebugScreenDrawHelper_C", "DrawOutlineRect_Internal");

	Params::BP_AJBDebugScreenDrawHelper_C_DrawOutlineRect_Internal Parms{};

	Parms.HUD = HUD;
	Parms.RectPositions = std::move(RectPositions);
	Parms.LineColor_0 = std::move(LineColor_0);
	Parms.LineThickness_0 = LineThickness_0;

	UObject::ProcessEvent(Func, &Parms);
}

}


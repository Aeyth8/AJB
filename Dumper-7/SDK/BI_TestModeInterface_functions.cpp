#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_TestModeInterface

#include "Basic.hpp"

#include "BI_TestModeInterface_classes.hpp"
#include "BI_TestModeInterface_parameters.hpp"


namespace SDK
{

// Function BI_TestModeInterface.BI_TestModeInterface_C.SetFocusMenuItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectItemMenu                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_TestModeInterface_C::SetFocusMenuItem(class FName SelectItemMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "SetFocusMenuItem");

	Params::BI_TestModeInterface_C_SetFocusMenuItem Parms{};

	Parms.SelectItemMenu = SelectItemMenu;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_TestModeInterface.BI_TestModeInterface_C.OnNext
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_TestModeInterface_C::OnNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "OnNext");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BI_TestModeInterface.BI_TestModeInterface_C.OnPrev
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_TestModeInterface_C::OnPrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "OnPrev");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BI_TestModeInterface.BI_TestModeInterface_C.OnDecide
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_TestModeInterface_C::OnDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "OnDecide");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BI_TestModeInterface.BI_TestModeInterface_C.IsLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_TestModeInterface_C::IsLock(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "IsLock");

	Params::BI_TestModeInterface_C_IsLock Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BI_TestModeInterface.BI_TestModeInterface_C.OnCancel
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_TestModeInterface_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_TestModeInterface_C", "OnCancel");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectile_CrossfireHurricane

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBInGameProjectile_Straight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameProjectile_CrossfireHurricane.BP_AJBInGameProjectile_CrossfireHurricane_C
// 0x0040 (0x0518 - 0x04D8)
class ABP_AJBInGameProjectile_CrossfireHurricane_C : public ABP_AJBInGameProjectile_Straight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameProjectile_CrossfireHurricane_C; // 0x04D8(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_HEG_ProjectileES_Start;                         // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ImpulseClass;                                      // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HopUpScale;                                        // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HopUpTime;                                         // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnTime;                                         // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileGravityScale;                            // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HopUpEasingExp;                                    // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapedTimeSinseSpawn;                              // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameProjectile_CrossfireHurricane(int32 EntryPoint);
	void SpawnImpulse(const struct FTransform& SpawnTransform, class AActor* Owner_0);
	void AddGravityScale(bool bResetGravityScale);
	void ReceiveBeginPlay();
	void OnProjectileHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult, bool bHeadShot, bool bPenetrate_0, bool bFirstHit);
	void OnROS_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, bool bHeadShot, bool bPenetrate_0, bool bFirstHit, float CuttingRate, bool bDisableDamage, bool bReflect, const struct FRotator& ReflectRotation, bool bBlocking, const struct FGameplayTag& ReflectSkillTag_0, bool bAvoidSkill);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameProjectile_CrossfireHurricane_C">();
	}
	static class ABP_AJBInGameProjectile_CrossfireHurricane_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameProjectile_CrossfireHurricane_C>();
	}
};
static_assert(alignof(ABP_AJBInGameProjectile_CrossfireHurricane_C) == 0x000008, "Wrong alignment on ABP_AJBInGameProjectile_CrossfireHurricane_C");
static_assert(sizeof(ABP_AJBInGameProjectile_CrossfireHurricane_C) == 0x000518, "Wrong size on ABP_AJBInGameProjectile_CrossfireHurricane_C");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, UberGraphFrame_BP_AJBInGameProjectile_CrossfireHurricane_C) == 0x0004D8, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::UberGraphFrame_BP_AJBInGameProjectile_CrossfireHurricane_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, PS_HEG_ProjectileES_Start) == 0x0004E0, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::PS_HEG_ProjectileES_Start' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, ParticleSystem) == 0x0004E8, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, GravityScale) == 0x0004F0, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::GravityScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, ImpulseClass) == 0x0004F8, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::ImpulseClass' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, HopUpScale) == 0x000500, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::HopUpScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, HopUpTime) == 0x000504, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::HopUpTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, SpawnTime) == 0x000508, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::SpawnTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, ProjectileGravityScale) == 0x00050C, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, HopUpEasingExp) == 0x000510, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::HopUpEasingExp' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectile_CrossfireHurricane_C, ElapedTimeSinseSpawn) == 0x000514, "Member 'ABP_AJBInGameProjectile_CrossfireHurricane_C::ElapedTimeSinseSpawn' has a wrong offset!");

}


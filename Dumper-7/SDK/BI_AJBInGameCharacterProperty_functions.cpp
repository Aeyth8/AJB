#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBInGameCharacterProperty

#include "Basic.hpp"

#include "BI_AJBInGameCharacterProperty_classes.hpp"
#include "BI_AJBInGameCharacterProperty_parameters.hpp"


namespace SDK
{

// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.SetSerialNumber
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBInGameCharacterProperty_C::SetSerialNumber(int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "SetSerialNumber");

	Params::BI_AJBInGameCharacterProperty_C_SetSerialNumber Parms{};

	Parms.SerialNumber = SerialNumber;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.GetPropertyOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBInGameCharacterProperty_C::GetPropertyOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "GetPropertyOwnerCharacterBP");

	Params::BI_AJBInGameCharacterProperty_C_GetPropertyOwnerCharacterBP Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.GetPropertyType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBCharacterPropertyType*              PropertyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBInGameCharacterProperty_C::GetPropertyType(EAJBCharacterPropertyType* PropertyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "GetPropertyType");

	Params::BI_AJBInGameCharacterProperty_C_GetPropertyType Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (PropertyType != nullptr)
		*PropertyType = Parms.PropertyType;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.ChangeEnableServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::ChangeEnableServer(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "ChangeEnableServer");

	Params::BI_AJBInGameCharacterProperty_C_ChangeEnableServer Parms{};

	Parms.bEnable = bEnable;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.ChangeEnableCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::ChangeEnableCore(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "ChangeEnableCore");

	Params::BI_AJBInGameCharacterProperty_C_ChangeEnableCore Parms{};

	Parms.bEnable = bEnable;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.SetupPropertyStandInteract
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_AJBInGameCharacterProperty_C::SetupPropertyStandInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "SetupPropertyStandInteract");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.ChangeMeshVisibleServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::ChangeMeshVisibleServer(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "ChangeMeshVisibleServer");

	Params::BI_AJBInGameCharacterProperty_C_ChangeMeshVisibleServer Parms{};

	Parms.bNewVisibility = bNewVisibility;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.ChangeMeshVisibleCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::ChangeMeshVisibleCore(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "ChangeMeshVisibleCore");

	Params::BI_AJBInGameCharacterProperty_C_ChangeMeshVisibleCore Parms{};

	Parms.bNewVisibility = bNewVisibility;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.TracableByAI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTracable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::TracableByAI(bool* bTracable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "TracableByAI");

	Params::BI_AJBInGameCharacterProperty_C_TracableByAI Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bTracable != nullptr)
		*bTracable = Parms.bTracable;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.DetectableByTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bDetectable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::DetectableByTrap(bool* bDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "DetectableByTrap");

	Params::BI_AJBInGameCharacterProperty_C_DetectableByTrap Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bDetectable != nullptr)
		*bDetectable = Parms.bDetectable;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsDetectableByDirectAttackGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsDetectable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsDetectableByDirectAttackGuide(bool* bIsDetectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsDetectableByDirectAttackGuide");

	Params::BI_AJBInGameCharacterProperty_C_IsDetectableByDirectAttackGuide Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bIsDetectable != nullptr)
		*bIsDetectable = Parms.bIsDetectable;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.TreatAsCharacterBySpecialProjectile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTreat                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::TreatAsCharacterBySpecialProjectile(bool* bTreat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "TreatAsCharacterBySpecialProjectile");

	Params::BI_AJBInGameCharacterProperty_C_TreatAsCharacterBySpecialProjectile Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bTreat != nullptr)
		*bTreat = Parms.bTreat;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsTargetCO2Scan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsTargetCO2Scan(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsTargetCO2Scan");

	Params::BI_AJBInGameCharacterProperty_C_IsTargetCO2Scan Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsTargetClourBarrier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsTargetClourBarrier(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsTargetClourBarrier");

	Params::BI_AJBInGameCharacterProperty_C_IsTargetClourBarrier Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsTargetOverGrow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsTargetOverGrow(bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsTargetOverGrow");

	Params::BI_AJBInGameCharacterProperty_C_IsTargetOverGrow Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsPlayOwnerVoiceOnGetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsPlayOwnerVoiceOnGetItem(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsPlayOwnerVoiceOnGetItem");

	Params::BI_AJBInGameCharacterProperty_C_IsPlayOwnerVoiceOnGetItem Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsPlayOwnerVoiceOnJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsPlayOwnerVoiceOnJump(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsPlayOwnerVoiceOnJump");

	Params::BI_AJBInGameCharacterProperty_C_IsPlayOwnerVoiceOnJump Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}


// Function BI_AJBInGameCharacterProperty.BI_AJBInGameCharacterProperty_C.IsPlayOwnerVoiceOnPassThruEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bIsPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterProperty_C::IsPlayOwnerVoiceOnPassThruEnter(bool* bIsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterProperty_C", "IsPlayOwnerVoiceOnPassThruEnter");

	Params::BI_AJBInGameCharacterProperty_C_IsPlayOwnerVoiceOnPassThruEnter Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bIsPlay != nullptr)
		*bIsPlay = Parms.bIsPlay;
}

}


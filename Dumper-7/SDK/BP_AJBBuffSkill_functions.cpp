#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBuffSkill

#include "Basic.hpp"

#include "BP_AJBBuffSkill_classes.hpp"
#include "BP_AJBBuffSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ExecuteUbergraph_BP_AJBBuffSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::ExecuteUbergraph_BP_AJBBuffSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ExecuteUbergraph_BP_AJBBuffSkill");

	Params::BP_AJBBuffSkill_C_ExecuteUbergraph_BP_AJBBuffSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnBeginPassive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnBeginPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnBeginPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnSkillProhibitionAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SecondTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::OnSkillProhibitionAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnSkillProhibitionAdded");

	Params::BP_AJBBuffSkill_C_OnSkillProhibitionAdded Parms{};

	Parms.AddCondition = std::move(AddCondition);
	Parms.SecondTag = std::move(SecondTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnAddPassive_Server
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnAddPassive_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnAddPassive_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.BeginPassive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::BeginPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "BeginPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnPassiveRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              RemoveCondition                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SecondTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnPassiveRemoved");

	Params::BP_AJBBuffSkill_C_OnPassiveRemoved Parms{};

	Parms.RemoveCondition = std::move(RemoveCondition);
	Parms.SecondTag = std::move(SecondTag);
	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnPassiveAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SecondTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnPassiveAdded");

	Params::BP_AJBBuffSkill_C_OnPassiveAdded Parms{};

	Parms.AddCondition = std::move(AddCondition);
	Parms.SecondTag = std::move(SecondTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ROS_AddPassive
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShoudUpdateLeftActiveTime                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::ROS_AddPassive(bool bShoudUpdateLeftActiveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ROS_AddPassive");

	Params::BP_AJBBuffSkill_C_ROS_AddPassive Parms{};

	Parms.bShoudUpdateLeftActiveTime = bShoudUpdateLeftActiveTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.DestroyStartParticle
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::DestroyStartParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "DestroyStartParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.AddPassive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::AddPassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "AddPassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.SpawnStartParticle
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::SpawnStartParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "SpawnStartParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.PlayMontage
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::PlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "PlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.MC_StateEnd
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::MC_StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "MC_StateEnd");

	Params::BP_AJBBuffSkill_C_MC_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ROS_StateEnd
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::ROS_StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ROS_StateEnd");

	Params::BP_AJBBuffSkill_C_ROS_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.TickState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::TickState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "TickState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::OnStateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnStateEnd");

	Params::BP_AJBBuffSkill_C_OnStateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.StateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::StateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "StateEnd");

	Params::BP_AJBBuffSkill_C_StateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.BeginState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.StateTick
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::StateTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "StateTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ExtendActiveTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::ExtendActiveTime(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ExtendActiveTime");

	Params::BP_AJBBuffSkill_C_ExtendActiveTime Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBBuffSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "ReceiveTick");

	Params::BP_AJBBuffSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBBuffSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "NotifyTheWorld");

	Params::BP_AJBBuffSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.OnRelatedCharacterBecomeLastSurvivor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBBuffSkill_C::OnRelatedCharacterBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "OnRelatedCharacterBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.TimeExtension_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::TimeExtension_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "TimeExtension_Server");

	Params::BP_AJBBuffSkill_C_TimeExtension_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.GetCauserOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "GetCauserOwnerCharacterBP");

	Params::BP_AJBBuffSkill_C_GetCauserOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.GetPassiveSkillTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    PassiveSkillTag_0                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "GetPassiveSkillTag");

	Params::BP_AJBBuffSkill_C_GetPassiveSkillTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveSkillTag_0 != nullptr)
		*PassiveSkillTag_0 = std::move(Parms.PassiveSkillTag_0);
}


// Function BP_AJBBuffSkill.BP_AJBBuffSkill_C.GetDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBBuffSkill_C::GetDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBBuffSkill_C", "GetDuration");

	Params::BP_AJBBuffSkill_C_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}

}


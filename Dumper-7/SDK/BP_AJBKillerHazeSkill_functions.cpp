#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKillerHazeSkill

#include "Basic.hpp"

#include "BP_AJBKillerHazeSkill_classes.hpp"
#include "BP_AJBKillerHazeSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.ExecuteUbergraph_BP_AJBKillerHazeSkill
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBKillerHazeSkill_C::ExecuteUbergraph_BP_AJBKillerHazeSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "ExecuteUbergraph_BP_AJBKillerHazeSkill");

	Params::BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.TrySpawnKillerHazeAffecter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PassiveSkillTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverridedScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ActiveTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBKillerHazeSkill_C::TrySpawnKillerHazeAffecter(const struct FTransform& SpawnTransform, class AActor* Owner, float PassiveSkillTime, float OverridedScale, int32 SerialNumber_0, float ActiveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "TrySpawnKillerHazeAffecter");

	Params::BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Owner = Owner;
	Parms.PassiveSkillTime = PassiveSkillTime;
	Parms.OverridedScale = OverridedScale;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.ActiveTime = ActiveTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.AddToMultipleLocations
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSerialNumber                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBKillerHazeSkill_C::AddToMultipleLocations(const struct FVector& Location, float Scale, int32 InSerialNumber, float DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "AddToMultipleLocations");

	Params::BP_AJBKillerHazeSkill_C_AddToMultipleLocations Parms{};

	Parms.Location = std::move(Location);
	Parms.Scale = Scale;
	Parms.InSerialNumber = InSerialNumber;
	Parms.DelayTime = DelayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.GetPoliticActionTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  ActionTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBKillerHazeSkill_C::GetPoliticActionTime(float* ActionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "GetPoliticActionTime");

	Params::BP_AJBKillerHazeSkill_C_GetPoliticActionTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionTime != nullptr)
		*ActionTime = Parms.ActionTime;
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.OnStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBKillerHazeSkill_C::OnStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "OnStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.CanUseSkill
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer*           TagContainer                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBKillerHazeSkill_C::CanUseSkill(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "CanUseSkill");

	Params::BP_AJBKillerHazeSkill_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);

	return Parms.ReturnValue;
}


// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.IsInPreview
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBKillerHazeSkill_C::IsInPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBKillerHazeSkill_C", "IsInPreview");

	Params::BP_AJBKillerHazeSkill_C_IsInPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBCrossFireHurricane

#include "Basic.hpp"

#include "BI_AJBCrossFireHurricane_classes.hpp"
#include "BI_AJBCrossFireHurricane_parameters.hpp"


namespace SDK
{

// Function BI_AJBCrossFireHurricane.BI_AJBCrossFireHurricane_C.TrySpawnAffecterClass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ActiveTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBCrossFireHurricane_C::TrySpawnAffecterClass(const struct FTransform& SpawnTransform, class AActor* Owner, int32 SerialNumber, float ActiveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBCrossFireHurricane_C", "TrySpawnAffecterClass");

	Params::BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Owner = Owner;
	Parms.SerialNumber = SerialNumber;
	Parms.ActiveTime = ActiveTime;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BI_AJBCrossFireHurricane.BI_AJBCrossFireHurricane_C.AddToMultipleLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InScale                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSerialNumber                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDelayTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBCrossFireHurricane_C::AddToMultipleLocation(const struct FVector& NewLocation, float InScale, int32 InSerialNumber, float InDelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBCrossFireHurricane_C", "AddToMultipleLocation");

	Params::BI_AJBCrossFireHurricane_C_AddToMultipleLocation Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.InScale = InScale;
	Parms.InSerialNumber = InSerialNumber;
	Parms.InDelayTime = InDelayTime;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}


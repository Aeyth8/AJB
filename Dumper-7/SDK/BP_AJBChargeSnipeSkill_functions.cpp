#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBChargeSnipeSkill

#include "Basic.hpp"

#include "BP_AJBChargeSnipeSkill_classes.hpp"
#include "BP_AJBChargeSnipeSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ExecuteUbergraph_BP_AJBChargeSnipeSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ExecuteUbergraph_BP_AJBChargeSnipeSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ExecuteUbergraph_BP_AJBChargeSnipeSkill");

	Params::BP_AJBChargeSnipeSkill_C_ExecuteUbergraph_BP_AJBChargeSnipeSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_CancelProjectile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LeftProjectileCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ROS_CancelProjectile(int32 ShootProjectileIndex, int32 LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_CancelProjectile");

	Params::BP_AJBChargeSnipeSkill_C_ROS_CancelProjectile Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;
	Parms.LeftProjectileCount = LeftProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.MC_CancelProjectile
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::MC_CancelProjectile(int32 ShootProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "MC_CancelProjectile");

	Params::BP_AJBChargeSnipeSkill_C_MC_CancelProjectile Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_ShootProjectile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LeftProjectileCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ROS_ShootProjectile(int32 ShootProjectileIndex, int32 LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_ShootProjectile");

	Params::BP_AJBChargeSnipeSkill_C_ROS_ShootProjectile Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;
	Parms.LeftProjectileCount = LeftProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.MC_ShootProjectile
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::MC_ShootProjectile(int32 ShootProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "MC_ShootProjectile");

	Params::BP_AJBChargeSnipeSkill_C_MC_ShootProjectile Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.BindEvents
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnOwnerDead_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DeadActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::OnOwnerDead_Server(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnOwnerDead_Server");

	Params::BP_AJBChargeSnipeSkill_C_OnOwnerDead_Server Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.DeadActor = DeadActor;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.CancelProjectile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShotProjectileIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LeftProjectileCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::CancelProjectile(int32 ShotProjectileIndex, int32 LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "CancelProjectile");

	Params::BP_AJBChargeSnipeSkill_C_CancelProjectile Parms{};

	Parms.ShotProjectileIndex = ShotProjectileIndex;
	Parms.LeftProjectileCount = LeftProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ChangeProjectilePreviewVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::ChangeProjectilePreviewVisibility(class USceneComponent* ChargingPoint, int32 Index_0, bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ChangeProjectilePreviewVisibility");

	Params::BP_AJBChargeSnipeSkill_C_ChangeProjectilePreviewVisibility Parms{};

	Parms.ChargingPoint = ChargingPoint;
	Parms.Index_0 = Index_0;
	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ShootProjectile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShotProjectileIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LeftProjectileCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ShootProjectile(int32 ShotProjectileIndex, int32 LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ShootProjectile");

	Params::BP_AJBChargeSnipeSkill_C_ShootProjectile Parms{};

	Parms.ShotProjectileIndex = ShotProjectileIndex;
	Parms.LeftProjectileCount = LeftProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_SpawnProjectile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   ProjectileIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ROS_SpawnProjectile(const struct FVector& Location, const struct FRotator& Rotation, int32 ProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_SpawnProjectile");

	Params::BP_AJBChargeSnipeSkill_C_ROS_SpawnProjectile Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.ProjectileIndex = ProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.SpawnProjectile_All
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   ProjectileIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::SpawnProjectile_All(const struct FVector& Location, const struct FRotator& Rotation, int32 ProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "SpawnProjectile_All");

	Params::BP_AJBChargeSnipeSkill_C_SpawnProjectile_All Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.ProjectileIndex = ProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_CompleteCharge
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargingPointCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossibleChargeNext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::ROS_CompleteCharge(int32 ChargingPointCount, bool bPossibleChargeNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_CompleteCharge");

	Params::BP_AJBChargeSnipeSkill_C_ROS_CompleteCharge Parms{};

	Parms.ChargingPointCount = ChargingPointCount;
	Parms.bPossibleChargeNext = bPossibleChargeNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.MC_CompleteCharge
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargingPointCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossibleChargeNext                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::MC_CompleteCharge(int32 ChargingPointCount, bool bPossibleChargeNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "MC_CompleteCharge");

	Params::BP_AJBChargeSnipeSkill_C_MC_CompleteCharge Parms{};

	Parms.ChargingPointCount = ChargingPointCount;
	Parms.bPossibleChargeNext = bPossibleChargeNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.MC_EndState
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::MC_EndState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "MC_EndState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_EndState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::ROS_EndState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_EndState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.EndState_All
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::EndState_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "EndState_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.MC_BeginState_Action
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::MC_BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "MC_BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ROS_BeginState_Action
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::ROS_BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ROS_BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.BeginState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::BeginState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "BeginState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_CancelChargeVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Play_CancelChargeVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_CancelChargeVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_CancelChargeSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Play_CancelChargeSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_CancelChargeSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Run_CancelChargeSound
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Run_CancelChargeSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Run_CancelChargeSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Run_CancelProjectileEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Run_CancelProjectileEffect(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Run_CancelProjectileEffect");

	Params::BP_AJBChargeSnipeSkill_C_Run_CancelProjectileEffect Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_CancelProjectileParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_CancelProjectileParticle(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_CancelProjectileParticle");

	Params::BP_AJBChargeSnipeSkill_C_Play_CancelProjectileParticle Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Run_ShootProjectileEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Run_ShootProjectileEffect(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Run_ShootProjectileEffect");

	Params::BP_AJBChargeSnipeSkill_C_Run_ShootProjectileEffect Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ShootProjectileVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Play_ShootProjectileVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ShootProjectileVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ShootProjectileParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ShootProjectileParticle(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ShootProjectileParticle");

	Params::BP_AJBChargeSnipeSkill_C_Play_ShootProjectileParticle Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ShootProjectileGion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ShootProjectileGion(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ShootProjectileGion");

	Params::BP_AJBChargeSnipeSkill_C_Play_ShootProjectileGion Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ChargingCompletedSE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ChargingCompletedSE(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ChargingCompletedSE");

	Params::BP_AJBChargeSnipeSkill_C_Play_ChargingCompletedSE Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.End_ChargingProjectileEffect
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::End_ChargingProjectileEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "End_ChargingProjectileEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ChargingCompletedParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ChargingCompletedParticle(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ChargingCompletedParticle");

	Params::BP_AJBChargeSnipeSkill_C_Play_ChargingCompletedParticle Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Run_ChargingCompletedEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Run_ChargingCompletedEffect(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Run_ChargingCompletedEffect");

	Params::BP_AJBChargeSnipeSkill_C_Run_ChargingCompletedEffect Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Stop_ChargingProjectileSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Stop_ChargingProjectileSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Stop_ChargingProjectileSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Stop_ChargingProjectileParticle
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Stop_ChargingProjectileParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Stop_ChargingProjectileParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ChargingProjectileParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ChargingProjectileParticle(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ChargingProjectileParticle");

	Params::BP_AJBChargeSnipeSkill_C_Play_ChargingProjectileParticle Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_ChargingProjectileSE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Play_ChargingProjectileSE(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_ChargingProjectileSE");

	Params::BP_AJBChargeSnipeSkill_C_Play_ChargingProjectileSE Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Run_ChargingProjectileEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  ChargingPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::Run_ChargingProjectileEffect(class USceneComponent* ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Run_ChargingProjectileEffect");

	Params::BP_AJBChargeSnipeSkill_C_Run_ChargingProjectileEffect Parms{};

	Parms.ChargingPoint = ChargingPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Play_BeginChargingVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Play_BeginChargingVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Play_BeginChargingVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnChargeCompleted_Client
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargingPointCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldShowNextEffect                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::OnChargeCompleted_Client(int32 ChargingPointCount, bool ShouldShowNextEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnChargeCompleted_Client");

	Params::BP_AJBChargeSnipeSkill_C_OnChargeCompleted_Client Parms{};

	Parms.ChargingPointCount = ChargingPointCount;
	Parms.ShouldShowNextEffect = ShouldShowNextEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnChargeCompleted_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargingPointCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::OnChargeCompleted_Server(int32 ChargingPointCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnChargeCompleted_Server");

	Params::BP_AJBChargeSnipeSkill_C_OnChargeCompleted_Server Parms{};

	Parms.ChargingPointCount = ChargingPointCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnActionProjectile_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LeftProjectileCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::OnActionProjectile_Server(int32 LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnActionProjectile_Server");

	Params::BP_AJBChargeSnipeSkill_C_OnActionProjectile_Server Parms{};

	Parms.LeftProjectileCount = LeftProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.UpdateProjectileVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargedProjectileCount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::UpdateProjectileVisibility(int32 ChargedProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "UpdateProjectileVisibility");

	Params::BP_AJBChargeSnipeSkill_C_UpdateProjectileVisibility Parms{};

	Parms.ChargedProjectileCount = ChargedProjectileCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.InitChargeProperty
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::InitChargeProperty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "InitChargeProperty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnRep_RepVisibleProjectileCount
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::OnRep_RepVisibleProjectileCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnRep_RepVisibleProjectileCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetChargePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent**                 ChargingPoint                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetChargePoint(int32 Index_0, class USceneComponent** ChargingPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetChargePoint");

	Params::BP_AJBChargeSnipeSkill_C_GetChargePoint Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ChargingPoint != nullptr)
		*ChargingPoint = Parms.ChargingPoint;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetChargePoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>*         ChargingPoints                                         (Parm, OutParm, ZeroConstructor)

void UBP_AJBChargeSnipeSkill_C::GetChargePoints(TArray<class USceneComponent*>* ChargingPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetChargePoints");

	Params::BP_AJBChargeSnipeSkill_C_GetChargePoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChargingPoints != nullptr)
		*ChargingPoints = std::move(Parms.ChargingPoints);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetChargePointCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ChargingPointCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetChargePointCount(int32* ChargingPointCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetChargePointCount");

	Params::BP_AJBChargeSnipeSkill_C_GetChargePointCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChargingPointCount != nullptr)
		*ChargingPointCount = Parms.ChargingPointCount;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetChargeTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ChargedProjectileCount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  ChargingTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetChargeTime(int32 ChargedProjectileCount, float* ChargingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetChargeTime");

	Params::BP_AJBChargeSnipeSkill_C_GetChargeTime Parms{};

	Parms.ChargedProjectileCount = ChargedProjectileCount;

	UObject::ProcessEvent(Func, &Parms);

	if (ChargingTime != nullptr)
		*ChargingTime = Parms.ChargingTime;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.CanChargeNextProjectile_Local
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanCharge                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::CanChargeNextProjectile_Local(bool* CanCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "CanChargeNextProjectile_Local");

	Params::BP_AJBChargeSnipeSkill_C_CanChargeNextProjectile_Local Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanCharge != nullptr)
		*CanCharge = Parms.CanCharge;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ShootProjectile_Local
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::ShootProjectile_Local(bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ShootProjectile_Local");

	Params::BP_AJBChargeSnipeSkill_C_ShootProjectile_Local Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ShootProjectileEffect_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::ShootProjectileEffect_Local(int32 ShootProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ShootProjectileEffect_Local");

	Params::BP_AJBChargeSnipeSkill_C_ShootProjectileEffect_Local Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.CancelProjectileEffect_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShootProjectileIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::CancelProjectileEffect_Local(int32 ShootProjectileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "CancelProjectileEffect_Local");

	Params::BP_AJBChargeSnipeSkill_C_CancelProjectileEffect_Local Parms{};

	Parms.ShootProjectileIndex = ShootProjectileIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.AddChargedProjectileCount_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::AddChargedProjectileCount_Local(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "AddChargedProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_AddChargedProjectileCount_Local Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.AddShotProjectileCount_Local
// (Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::AddShotProjectileCount_Local(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "AddShotProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_AddShotProjectileCount_Local Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetChargedProjectileCount_Local
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ChargedProjectileCount                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetChargedProjectileCount_Local(int32* ChargedProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetChargedProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_GetChargedProjectileCount_Local Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChargedProjectileCount != nullptr)
		*ChargedProjectileCount = Parms.ChargedProjectileCount;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetLeftProjectileCount_Local
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  LeftProjectileCount                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetLeftProjectileCount_Local(int32* LeftProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetLeftProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_GetLeftProjectileCount_Local Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeftProjectileCount != nullptr)
		*LeftProjectileCount = Parms.LeftProjectileCount;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.GetShotProjectileCount_Local
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ShotProjectileCount                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::GetShotProjectileCount_Local(int32* ShotProjectileCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "GetShotProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_GetShotProjectileCount_Local Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShotProjectileCount != nullptr)
		*ShotProjectileCount = Parms.ShotProjectileCount;
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Hide_ChargeSnipeSkillGuideUI
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Hide_ChargeSnipeSkillGuideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Hide_ChargeSnipeSkillGuideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.SetChargedProjectileCount_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::SetChargedProjectileCount_Local(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "SetChargedProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_SetChargedProjectileCount_Local Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.SetShotProjectileCount_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::SetShotProjectileCount_Local(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "SetShotProjectileCount_Local");

	Params::BP_AJBChargeSnipeSkill_C_SetShotProjectileCount_Local Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.Show_ChargeSnipeSkillGuideUI
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::Show_ChargeSnipeSkillGuideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "Show_ChargeSnipeSkillGuideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnGiveDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageReceiverIsPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnemysSeparateStand                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelfDamage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEndured                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::OnGiveDamage(int32 Damage_0, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber_0, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand, bool bSelfDamage, bool IsEndured)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnGiveDamage");

	Params::BP_AJBChargeSnipeSkill_C_OnGiveDamage Parms{};

	Parms.Damage_0 = Damage_0;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageReceiver = DamageReceiver;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.DamageReceiverIsPlayer = DamageReceiverIsPlayer;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bEnemysSeparateStand = bEnemysSeparateStand;
	Parms.bSelfDamage = bSelfDamage;
	Parms.IsEndured = IsEndured;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.EndState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::EndState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "EndState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnStateChargeUp
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::OnStateChargeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnStateChargeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::OnStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.TickStateChargeUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBChargeSnipeSkill_C::TickStateChargeUp(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "TickStateChargeUp");

	Params::BP_AJBChargeSnipeSkill_C_TickStateChargeUp Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.TickStateAction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::TickStateAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "TickStateAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "StateBeginPlay");

	Params::BP_AJBChargeSnipeSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBChargeSnipeSkill_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBChargeSnipeSkill.BP_AJBChargeSnipeSkill_C.CheckStateCanAccompany
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCanAccompany                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBChargeSnipeSkill_C::CheckStateCanAccompany(bool* bCanAccompany)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBChargeSnipeSkill_C", "CheckStateCanAccompany");

	Params::BP_AJBChargeSnipeSkill_C_CheckStateCanAccompany Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanAccompany != nullptr)
		*bCanAccompany = Parms.bCanAccompany;
}

}


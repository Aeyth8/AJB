#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PvE_ScoreWindow

#include "Basic.hpp"

#include "WB_PvE_ScoreWindow_classes.hpp"
#include "WB_PvE_ScoreWindow_parameters.hpp"


namespace SDK
{

// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.ExecuteUbergraph_WB_PvE_ScoreWindow
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::ExecuteUbergraph_WB_PvE_ScoreWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "ExecuteUbergraph_WB_PvE_ScoreWindow");

	Params::WB_PvE_ScoreWindow_C_ExecuteUbergraph_WB_PvE_ScoreWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_PvE_ScoreWindow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "PreConstruct");

	Params::WB_PvE_ScoreWindow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnAutoCloseTimerExpired
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_ScoreWindow_C::OnAutoCloseTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnAutoCloseTimerExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "Tick");

	Params::WB_PvE_ScoreWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.PlayDBIVoiceByRank
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_ScoreWindow_C::PlayDBIVoiceByRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "PlayDBIVoiceByRank");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OpenWindowWithResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPvEGameDifficulty                      Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FST_AJBPvEScoreResult&     ScoreResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::OpenWindowWithResult(EPvEGameDifficulty Difficulty, const struct FST_AJBPvEScoreResult& ScoreResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OpenWindowWithResult");

	Params::WB_PvE_ScoreWindow_C_OpenWindowWithResult Parms{};

	Parms.Difficulty = Difficulty;
	Parms.ScoreResult = std::move(ScoreResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnFinishedOpeningWindowAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_ScoreWindow_C::OnFinishedOpeningWindowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnFinishedOpeningWindowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnClosingWindow
// (Event, Public, BlueprintEvent)

void UWB_PvE_ScoreWindow_C::OnClosingWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnClosingWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.BndEvt__WB_CommonButton_Close_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UAJBButtonWidget*                 OwnerWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAJBButton*                       TargetButton                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::BndEvt__WB_CommonButton_Close_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "BndEvt__WB_CommonButton_Close_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");

	Params::WB_PvE_ScoreWindow_C_BndEvt__WB_CommonButton_Close_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature Parms{};

	Parms.OwnerWidget = OwnerWidget;
	Parms.TargetButton = TargetButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnOpeningWindow
// (Event, Public, BlueprintEvent)

void UWB_PvE_ScoreWindow_C::OnOpeningWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnOpeningWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.SetScoreRankText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScoreRank                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::SetScoreRankText(int32 ScoreRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "SetScoreRankText");

	Params::WB_PvE_ScoreWindow_C_SetScoreRankText Parms{};

	Parms.ScoreRank = ScoreRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.UpdateResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPvEGameDifficulty                      Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FST_AJBPvEScoreResult&     Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWB_PvE_ScoreWindow_C::UpdateResult(EPvEGameDifficulty Difficulty, const struct FST_AJBPvEScoreResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "UpdateResult");

	Params::WB_PvE_ScoreWindow_C_UpdateResult Parms{};

	Parms.Difficulty = Difficulty;
	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputTurnRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputTurnRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputTurnRate");

	Params::WB_PvE_ScoreWindow_C_OnInputTurnRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedUp");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedTouch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedTouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedTouch");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedTouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedRight");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedR2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedR2");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedR1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedR1");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedLeft
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedLeft");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedL3
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedL3");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedL2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedL2");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedL1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedL1");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedDown");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedDecide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedDecide");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputReleasedCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputReleasedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputReleasedCancel");

	Params::WB_PvE_ScoreWindow_C_OnInputReleasedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedUp");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedTouch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float                             LocationX                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             LocationY                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedTouch(const float LocationX, const float LocationY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedTouch");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedTouch Parms{};

	Parms.LocationX = LocationX;
	Parms.LocationY = LocationY;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedRight");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedR2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedR2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedR2");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedR2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedR1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedR1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedR1");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedR1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedLeft
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedLeft");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedL3
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedL3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedL3");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedL3 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedL2
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedL2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedL2");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedL2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedL1
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedL1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedL1");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedL1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedDown");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedDecide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedDecide");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedDecide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputPressedCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputPressedCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputPressedCancel");

	Params::WB_PvE_ScoreWindow_C_OnInputPressedCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputMoveRight
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputMoveRight(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputMoveRight");

	Params::WB_PvE_ScoreWindow_C_OnInputMoveRight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputMoveForward
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputMoveForward(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputMoveForward");

	Params::WB_PvE_ScoreWindow_C_OnInputMoveForward Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.OnInputLookupRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::OnInputLookupRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "OnInputLookupRate");

	Params::WB_PvE_ScoreWindow_C_OnInputLookupRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PvE_ScoreWindow.WB_PvE_ScoreWindow_C.IsModeless
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_PvE_ScoreWindow_C::IsModeless()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_ScoreWindow_C", "IsModeless");

	Params::WB_PvE_ScoreWindow_C_IsModeless Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


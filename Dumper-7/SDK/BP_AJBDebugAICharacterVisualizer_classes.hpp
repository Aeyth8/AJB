#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDebugAICharacterVisualizer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDebugAICharacterVisualizer.BP_AJBDebugAICharacterVisualizer_C
// 0x00B8 (0x03E0 - 0x0328)
class ABP_AJBDebugAICharacterVisualizer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowDebugStatus;                                  // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStoppingOrNotMoving;                              // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInSaferArea;                                      // 0x0342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsOutOfNavMesh;                                   // 0x0343(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ControllerName;                                    // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 LastError;                                         // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 StatusLabel;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 DebugString;                                       // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FVector>                        LastLocations;                                     // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         LastLocationsCountMax;                             // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InputDestination;                                  // 0x039C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FinalDestination;                                  // 0x03A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlive;                                            // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  LockedTags;                                        // 0x03B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_AJBInGameCharacter_C*               InGameCharacter;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBDebugAICharacterVisualizer(int32 EntryPoint);
	void UpdateLocation(const struct FVector& Location, const struct FVector& InputDestination_0, const struct FVector& FinalDestination_0);
	void NotifyDead(const struct FGameplayTag& DamageType);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void UpdateDebugString();
	void SetShowDebugStatus(bool bShow);
	void UpdatePawn(class APawn* Pawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDebugAICharacterVisualizer_C">();
	}
	static class ABP_AJBDebugAICharacterVisualizer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBDebugAICharacterVisualizer_C>();
	}
};
static_assert(alignof(ABP_AJBDebugAICharacterVisualizer_C) == 0x000008, "Wrong alignment on ABP_AJBDebugAICharacterVisualizer_C");
static_assert(sizeof(ABP_AJBDebugAICharacterVisualizer_C) == 0x0003E0, "Wrong size on ABP_AJBDebugAICharacterVisualizer_C");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBDebugAICharacterVisualizer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, Arrow) == 0x000330, "Member 'ABP_AJBDebugAICharacterVisualizer_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_AJBDebugAICharacterVisualizer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, bShowDebugStatus) == 0x000340, "Member 'ABP_AJBDebugAICharacterVisualizer_C::bShowDebugStatus' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, bStoppingOrNotMoving) == 0x000341, "Member 'ABP_AJBDebugAICharacterVisualizer_C::bStoppingOrNotMoving' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, bInSaferArea) == 0x000342, "Member 'ABP_AJBDebugAICharacterVisualizer_C::bInSaferArea' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, bIsOutOfNavMesh) == 0x000343, "Member 'ABP_AJBDebugAICharacterVisualizer_C::bIsOutOfNavMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, ControllerName) == 0x000348, "Member 'ABP_AJBDebugAICharacterVisualizer_C::ControllerName' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, LastError) == 0x000358, "Member 'ABP_AJBDebugAICharacterVisualizer_C::LastError' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, StatusLabel) == 0x000368, "Member 'ABP_AJBDebugAICharacterVisualizer_C::StatusLabel' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, DebugString) == 0x000378, "Member 'ABP_AJBDebugAICharacterVisualizer_C::DebugString' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, LastLocations) == 0x000388, "Member 'ABP_AJBDebugAICharacterVisualizer_C::LastLocations' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, LastLocationsCountMax) == 0x000398, "Member 'ABP_AJBDebugAICharacterVisualizer_C::LastLocationsCountMax' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, InputDestination) == 0x00039C, "Member 'ABP_AJBDebugAICharacterVisualizer_C::InputDestination' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, FinalDestination) == 0x0003A8, "Member 'ABP_AJBDebugAICharacterVisualizer_C::FinalDestination' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, bAlive) == 0x0003B4, "Member 'ABP_AJBDebugAICharacterVisualizer_C::bAlive' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, LockedTags) == 0x0003B8, "Member 'ABP_AJBDebugAICharacterVisualizer_C::LockedTags' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAICharacterVisualizer_C, InGameCharacter) == 0x0003D8, "Member 'ABP_AJBDebugAICharacterVisualizer_C::InGameCharacter' has a wrong offset!");

}


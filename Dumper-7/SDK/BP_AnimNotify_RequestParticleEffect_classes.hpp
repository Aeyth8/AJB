#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimNotify_RequestParticleEffect

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AnimNotify_RequestParticleEffect.BP_AnimNotify_RequestParticleEffect_C
// 0x0030 (0x0068 - 0x0038)
class UBP_AnimNotify_RequestParticleEffect_C final : public UAnimNotify
{
public:
	struct FGameplayTag                           ParticleType;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Attach;                                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0044(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0050(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	void GetParticleSystemFromTag(const struct FGameplayTag& ParticleType_0, class UParticleSystem** NewParam) const;
	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AnimNotify_RequestParticleEffect_C">();
	}
	static class UBP_AnimNotify_RequestParticleEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AnimNotify_RequestParticleEffect_C>();
	}
};
static_assert(alignof(UBP_AnimNotify_RequestParticleEffect_C) == 0x000008, "Wrong alignment on UBP_AnimNotify_RequestParticleEffect_C");
static_assert(sizeof(UBP_AnimNotify_RequestParticleEffect_C) == 0x000068, "Wrong size on UBP_AnimNotify_RequestParticleEffect_C");
static_assert(offsetof(UBP_AnimNotify_RequestParticleEffect_C, ParticleType) == 0x000038, "Member 'UBP_AnimNotify_RequestParticleEffect_C::ParticleType' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotify_RequestParticleEffect_C, Attach) == 0x000040, "Member 'UBP_AnimNotify_RequestParticleEffect_C::Attach' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotify_RequestParticleEffect_C, Location) == 0x000044, "Member 'UBP_AnimNotify_RequestParticleEffect_C::Location' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotify_RequestParticleEffect_C, Rotation) == 0x000050, "Member 'UBP_AnimNotify_RequestParticleEffect_C::Rotation' has a wrong offset!");
static_assert(offsetof(UBP_AnimNotify_RequestParticleEffect_C, SocketName) == 0x000060, "Member 'UBP_AnimNotify_RequestParticleEffect_C::SocketName' has a wrong offset!");

}


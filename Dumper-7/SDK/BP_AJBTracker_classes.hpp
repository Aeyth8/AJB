#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTracker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBInteractableHistoryActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTracker.BP_AJBTracker_C
// 0x0050 (0x0448 - 0x03F8)
class ABP_AJBTracker_C final : public ABP_AJBInteractableHistoryActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBTracker_C;                    // 0x03F8(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   PlaneMesh;                                         // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FocusParticle;                                     // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               NotFocusParticle;                                  // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_5E22116546CB23DF321E549E507909B6; // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_5E22116546CB23DF321E549E507909B6; // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableFocus;                                      // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMI_Decal;                                         // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Plane;                                         // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBTracker(int32 EntryPoint);
	void ChangeEnableTimeStop(bool bEnable);
	void DelayedDestroy(float DelayTime);
	void ReceiveBeginPlay();
	void TryChangeEnableFocusPaticle(bool bEnable);
	void ReceiveTick(float DeltaSeconds);
	void EndDecalAnimation();
	void BeginDecalAnimation();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void UpdateParticle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTracker_C">();
	}
	static class ABP_AJBTracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBTracker_C>();
	}
};
static_assert(alignof(ABP_AJBTracker_C) == 0x000008, "Wrong alignment on ABP_AJBTracker_C");
static_assert(sizeof(ABP_AJBTracker_C) == 0x000448, "Wrong size on ABP_AJBTracker_C");
static_assert(offsetof(ABP_AJBTracker_C, UberGraphFrame_BP_AJBTracker_C) == 0x0003F8, "Member 'ABP_AJBTracker_C::UberGraphFrame_BP_AJBTracker_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, PlaneMesh) == 0x000400, "Member 'ABP_AJBTracker_C::PlaneMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, FocusParticle) == 0x000408, "Member 'ABP_AJBTracker_C::FocusParticle' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, Decal) == 0x000410, "Member 'ABP_AJBTracker_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, NotFocusParticle) == 0x000418, "Member 'ABP_AJBTracker_C::NotFocusParticle' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, Timeline_0_NewTrack_0_5E22116546CB23DF321E549E507909B6) == 0x000420, "Member 'ABP_AJBTracker_C::Timeline_0_NewTrack_0_5E22116546CB23DF321E549E507909B6' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, Timeline_0__Direction_5E22116546CB23DF321E549E507909B6) == 0x000424, "Member 'ABP_AJBTracker_C::Timeline_0__Direction_5E22116546CB23DF321E549E507909B6' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, Timeline_0) == 0x000428, "Member 'ABP_AJBTracker_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, bEnableFocus) == 0x000430, "Member 'ABP_AJBTracker_C::bEnableFocus' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, DMI_Decal) == 0x000438, "Member 'ABP_AJBTracker_C::DMI_Decal' has a wrong offset!");
static_assert(offsetof(ABP_AJBTracker_C, DMI_Plane) == 0x000440, "Member 'ABP_AJBTracker_C::DMI_Plane' has a wrong offset!");

}


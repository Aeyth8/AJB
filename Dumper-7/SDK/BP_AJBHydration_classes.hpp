#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHydration

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBSupportSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBHydration.BP_AJBHydration_C
// 0x0098 (0x01F0 - 0x0158)
class UBP_AJBHydration_C final : public UBP_AJBSupportSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBHydration_C;                  // 0x0158(0x0008)(Transient, DuplicateTransient)
	struct FHitResult                             FloorInfoCache;                                    // 0x0160(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         ActiveTime;                                        // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBHydration(int32 EntryPoint);
	void IsOnWaterSurface(bool* IsOnWaterFloor);
	void GetFloorInfoCache(struct FHitResult* FloorInfoCache_0);
	void IsInWater(bool* IsInWater_0);
	void IsTouchedWater(bool* IsTouchedWater_0);
	void IsHeavyRain(bool* IsHeavyRain_0);
	void ReceiveTick(float DeltaSeconds);
	void GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP);
	void GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag);
	void GetDuration(float* Duration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBHydration_C">();
	}
	static class UBP_AJBHydration_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBHydration_C>();
	}
};
static_assert(alignof(UBP_AJBHydration_C) == 0x000008, "Wrong alignment on UBP_AJBHydration_C");
static_assert(sizeof(UBP_AJBHydration_C) == 0x0001F0, "Wrong size on UBP_AJBHydration_C");
static_assert(offsetof(UBP_AJBHydration_C, UberGraphFrame_BP_AJBHydration_C) == 0x000158, "Member 'UBP_AJBHydration_C::UberGraphFrame_BP_AJBHydration_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBHydration_C, FloorInfoCache) == 0x000160, "Member 'UBP_AJBHydration_C::FloorInfoCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBHydration_C, ActiveTime) == 0x0001E8, "Member 'UBP_AJBHydration_C::ActiveTime' has a wrong offset!");

}


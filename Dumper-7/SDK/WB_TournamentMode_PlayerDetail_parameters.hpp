#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentMode_PlayerDetail

#include "Basic.hpp"

#include "ST_ShopCompetitionUITeamInfo_structs.hpp"
#include "ST_ShopCompetitionUICharaParam_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.ExecuteUbergraph_WB_TournamentMode_PlayerDetail
// 0x0498 (0x0498 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCharacterFloatParameterFromDefaultContent_Value; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HP;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxHP;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AP;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxAP;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            K2Node_CustomEvent_CharacterBehavior;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CriticalTimeRate;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CP;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxCP;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_ShopCompetitionUICharaParam        K2Node_MakeStruct_ST_ShopCompetitionUICharaParam;  // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ShopCompetitionUICharaParam        K2Node_MakeStruct_ST_ShopCompetitionUICharaParam1; // 0x0074(0x0020)(HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00A0(0x0050)(HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    K2Node_CustomEvent_SelfInfo;                       // 0x00F0(0x0088)(ConstParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_GetCharacterInfoByCharaIndex_Out;         // 0x0180(0x00E8)()
	bool                                          CallFunc_GetCharacterInfoByCharaIndex_ReturnValue; // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0270(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue1;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo1;                  // 0x0290(0x0050)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo2;                  // 0x02E0(0x0050)(HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0330(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x036F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue3;           // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue4;           // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo3;                  // 0x0398(0x0050)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo4;                  // 0x03E8(0x0050)(HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0438(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo5;                  // 0x0448(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail) == 0x000498, "Wrong size on WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, EntryPoint) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess) == 0x000004, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetCharacterFloatParameterFromDefaultContent_Value) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetCharacterFloatParameterFromDefaultContent_Value' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_RandomFloat_ReturnValue) == 0x000018, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000020, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_ComponentBoundEvent_TargetButton) == 0x000028, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_HP) == 0x000030, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_HP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_MaxHP) == 0x000034, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_MaxHP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_AP) == 0x000038, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_AP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_MaxAP) == 0x00003C, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_MaxAP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_CharacterBehavior) == 0x000040, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_CharacterBehavior' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_CriticalTimeRate) == 0x000044, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_CriticalTimeRate' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_CP) == 0x000048, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_CP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_MaxCP) == 0x00004C, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_MaxCP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_ST_ShopCompetitionUICharaParam) == 0x000050, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_ST_ShopCompetitionUICharaParam' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_ST_ShopCompetitionUICharaParam1) == 0x000074, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_ST_ShopCompetitionUICharaParam1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetDynamicMaterial_ReturnValue1) == 0x000098, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetDynamicMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo) == 0x0000A0, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_SelfInfo) == 0x0000F0, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_SelfInfo' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000178, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetCharacterInfoByCharaIndex_Out) == 0x000180, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetCharacterInfoByCharaIndex_Out' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_GetCharacterInfoByCharaIndex_ReturnValue) == 0x000268, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_GetCharacterInfoByCharaIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_Conv_StringToText_ReturnValue) == 0x000270, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_Conv_ByteToInt_ReturnValue1) == 0x000288, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_Conv_ByteToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo1) == 0x000290, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo2) == 0x0002E0, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_Event_MyGeometry) == 0x000330, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_Event_InDeltaTime) == 0x000368, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00036C, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x00036D, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_SwitchEnum1_CmpSuccess) == 0x00036E, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x00036F, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_NotEqual_ByteByte_ReturnValue3) == 0x000370, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_NotEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, CallFunc_NotEqual_ByteByte_ReturnValue4) == 0x000371, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::CallFunc_NotEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, Temp_object_Variable) == 0x000378, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_DynamicCast_AsTexture_2D) == 0x000380, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_DynamicCast_bSuccess) == 0x000388, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CustomEvent_Loaded) == 0x000390, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo3) == 0x000398, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo4) == 0x0003E8, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_CreateDelegate_OutputDelegate) == 0x000438, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail, K2Node_MakeStruct_SlateFontInfo5) == 0x000448, "Member 'WB_TournamentMode_PlayerDetail_C_ExecuteUbergraph_WB_TournamentMode_PlayerDetail::K2Node_MakeStruct_SlateFontInfo5' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_Tick) == 0x000004, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_Tick");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_Tick) == 0x00003C, "Wrong size on WB_TournamentMode_PlayerDetail_C_Tick");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TournamentMode_PlayerDetail_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.SetupDisplayActive
// 0x0088 (0x0088 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_SetupDisplayActive final
{
public:
	struct FMatchingPlayerInfo                    SelfInfo;                                          // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_SetupDisplayActive) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_SetupDisplayActive");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_SetupDisplayActive) == 0x000088, "Wrong size on WB_TournamentMode_PlayerDetail_C_SetupDisplayActive");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupDisplayActive, SelfInfo) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_SetupDisplayActive::SelfInfo' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.UpdateCharaParam
// 0x0020 (0x0020 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_UpdateCharaParam final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHP;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AP;                                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAP;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterBehavior                            CharacterBehavior;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CriticalTimeRate;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CP;                                                // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCP;                                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam) == 0x000004, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_UpdateCharaParam");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam) == 0x000020, "Wrong size on WB_TournamentMode_PlayerDetail_C_UpdateCharaParam");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, HP) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::HP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, MaxHP) == 0x000004, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::MaxHP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, AP) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::AP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, MaxAP) == 0x00000C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::MaxAP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, CharacterBehavior) == 0x000010, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::CharacterBehavior' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, CriticalTimeRate) == 0x000014, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::CriticalTimeRate' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, CP) == 0x000018, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::CP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCharaParam, MaxCP) == 0x00001C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCharaParam::MaxCP' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_BndEvt__WB_TournamentMode_PlayerSelectButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1
// 0x0008 (0x0008 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1) == 0x000008, "Wrong size on WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1, Loaded) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_OnLoaded_DCCD85A64EBFCC13A43657B76FADF0A1::Loaded' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.UpdateHPAndAPBar
// 0x0168 (0x0168 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar final
{
public:
	float                                         LRateCP;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRateAP;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRateHP;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable1;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue4;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue5;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue6;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue5;           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue6;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue7;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0140(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0148(0x001C)(NoDestructor)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar) == 0x000168, "Wrong size on WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, LRateCP) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::LRateCP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, LRateAP) == 0x000004, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::LRateAP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, LRateHP) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::LRateHP' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, Temp_string_Variable) == 0x000028, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, Temp_string_Variable1) == 0x000040, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000050, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_MakeLiteralInt_ReturnValue) == 0x000054, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00005C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000074, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000078, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00007C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToString_ReturnValue1) == 0x000080, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x000090, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue4) == 0x000094, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000098, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00009C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x0000A0, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue5) == 0x0000A4, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x0000A8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0000AC, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Conv_IntToFloat_ReturnValue6) == 0x0000B0, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Conv_IntToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0000B4, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, Temp_bool_Variable) == 0x0000B8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Divide_FloatFloat_ReturnValue5) == 0x0000BC, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Divide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, K2Node_Select_Default) == 0x0000C8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000D8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000E8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000F8, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000108, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue4) == 0x000110, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue6) == 0x000120, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Concat_StrStr_ReturnValue5) == 0x000128, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_MapRangeClamped_ReturnValue) == 0x000138, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_Add_FloatFloat_ReturnValue7) == 0x00013C, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_Add_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, CallFunc_MakeVector2D_ReturnValue1) == 0x000140, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar, K2Node_MakeStruct_WidgetTransform) == 0x000148, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateHPAndAPBar::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.UpdateCriticalTime
// 0x000C (0x000C - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime) == 0x000004, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime) == 0x00000C, "Wrong size on WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime, DeltaTime) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_UpdateCriticalTime::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function WB_TournamentMode_PlayerDetail.WB_TournamentMode_PlayerDetail_C.SetupShopCompetitionPairInfo
// 0x0078 (0x0078 - 0x0000)
struct WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ShopCompetitionUITeamInfo          CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue; // 0x0020(0x0028)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo) == 0x000008, "Wrong alignment on WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo");
static_assert(sizeof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo) == 0x000078, "Wrong size on WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000008, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000010, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess) == 0x000018, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_GetShopCompetitionUITeamInfoByPlayerID_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue) == 0x000020, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_GetShopCompetitionUITeamInfoByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo, CallFunc_PlayModeIsPair_ReturnValue) == 0x000070, "Member 'WB_TournamentMode_PlayerDetail_C_SetupShopCompetitionPairInfo::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTrackerManager

#include "Basic.hpp"

#include "BP_AJBTrackerManager_classes.hpp"
#include "BP_AJBTrackerManager_parameters.hpp"


namespace SDK
{

// Function BP_AJBTrackerManager.BP_AJBTrackerManager_C.ExecuteUbergraph_BP_AJBTrackerManager
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBTrackerManager_C::ExecuteUbergraph_BP_AJBTrackerManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBTrackerManager_C", "ExecuteUbergraph_BP_AJBTrackerManager");

	Params::BP_AJBTrackerManager_C_ExecuteUbergraph_BP_AJBTrackerManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBTrackerManager.BP_AJBTrackerManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBTrackerManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBTrackerManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBTrackerManager.BP_AJBTrackerManager_C.ShouldFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HistoryTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bShouldFocus                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBTrackerManager_C::ShouldFocus(float HistoryTime, bool* bShouldFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBTrackerManager_C", "ShouldFocus");

	Params::BP_AJBTrackerManager_C_ShouldFocus Parms{};

	Parms.HistoryTime = HistoryTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldFocus != nullptr)
		*bShouldFocus = Parms.bShouldFocus;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBReticle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBReticle.BP_AJBReticle_C.ExecuteUbergraph_BP_AJBReticle
// 0x001C (0x001C - 0x0000)
struct BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOutOfScreen;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bHeadShot;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFinishBlow;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisibleProgressBarWidget_bVisibleWidget; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle) == 0x000004, "Wrong alignment on BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle");
static_assert(sizeof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle) == 0x00001C, "Wrong size on BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, EntryPoint) == 0x000000, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_CustomEvent_NextBehavior) == 0x000004, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_CustomEvent_NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_CustomEvent_Position) == 0x000008, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_CustomEvent_bOutOfScreen) == 0x000010, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_CustomEvent_bOutOfScreen' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_CustomEvent_bHeadShot) == 0x000011, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_CustomEvent_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_CustomEvent_bFinishBlow) == 0x000012, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_CustomEvent_bFinishBlow' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, CallFunc_IsValid_ReturnValue1) == 0x000018, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, CallFunc_IsValid_ReturnValue2) == 0x000019, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, CallFunc_IsVisibleProgressBarWidget_bVisibleWidget) == 0x00001A, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::CallFunc_IsVisibleProgressBarWidget_bVisibleWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001B, "Member 'BP_AJBReticle_C_ExecuteUbergraph_BP_AJBReticle::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBReticle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBReticle_C_ReceiveTick");
static_assert(sizeof(BP_AJBReticle_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBReticle_C_ReceiveTick");
static_assert(offsetof(BP_AJBReticle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBReticle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.UpdateReticlePosition
// 0x000C (0x000C - 0x0000)
struct BP_AJBReticle_C_UpdateReticlePosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutOfScreen;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBReticle_C_UpdateReticlePosition) == 0x000004, "Wrong alignment on BP_AJBReticle_C_UpdateReticlePosition");
static_assert(sizeof(BP_AJBReticle_C_UpdateReticlePosition) == 0x00000C, "Wrong size on BP_AJBReticle_C_UpdateReticlePosition");
static_assert(offsetof(BP_AJBReticle_C_UpdateReticlePosition, Position) == 0x000000, "Member 'BP_AJBReticle_C_UpdateReticlePosition::Position' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_UpdateReticlePosition, bOutOfScreen) == 0x000008, "Member 'BP_AJBReticle_C_UpdateReticlePosition::bOutOfScreen' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.OnCharacterActiveBehaviorChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBReticle_C_OnCharacterActiveBehaviorChanged final
{
public:
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_OnCharacterActiveBehaviorChanged) == 0x000001, "Wrong alignment on BP_AJBReticle_C_OnCharacterActiveBehaviorChanged");
static_assert(sizeof(BP_AJBReticle_C_OnCharacterActiveBehaviorChanged) == 0x000001, "Wrong size on BP_AJBReticle_C_OnCharacterActiveBehaviorChanged");
static_assert(offsetof(BP_AJBReticle_C_OnCharacterActiveBehaviorChanged, NextBehavior) == 0x000000, "Member 'BP_AJBReticle_C_OnCharacterActiveBehaviorChanged::NextBehavior' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.OnHit
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBReticle_C_OnHit final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFInishBlow;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBReticle_C_OnHit) == 0x000001, "Wrong alignment on BP_AJBReticle_C_OnHit");
static_assert(sizeof(BP_AJBReticle_C_OnHit) == 0x000002, "Wrong size on BP_AJBReticle_C_OnHit");
static_assert(offsetof(BP_AJBReticle_C_OnHit, bHeadShot) == 0x000000, "Member 'BP_AJBReticle_C_OnHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_OnHit, bFInishBlow) == 0x000001, "Member 'BP_AJBReticle_C_OnHit::bFInishBlow' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.SetupReticleTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBReticle_C_SetupReticleTargetCharacter final
{
public:
	class AAJBInGameCharacter*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_SetupReticleTargetCharacter) == 0x000008, "Wrong alignment on BP_AJBReticle_C_SetupReticleTargetCharacter");
static_assert(sizeof(BP_AJBReticle_C_SetupReticleTargetCharacter) == 0x000008, "Wrong size on BP_AJBReticle_C_SetupReticleTargetCharacter");
static_assert(offsetof(BP_AJBReticle_C_SetupReticleTargetCharacter, Character) == 0x000000, "Member 'BP_AJBReticle_C_SetupReticleTargetCharacter::Character' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.Initialize
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBReticle_C_Initialize final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ReticleFighter_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ReticleGunner_C*                    CallFunc_Create_ReturnValue1;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_Initialize) == 0x000008, "Wrong alignment on BP_AJBReticle_C_Initialize");
static_assert(sizeof(BP_AJBReticle_C_Initialize) == 0x000030, "Wrong size on BP_AJBReticle_C_Initialize");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AJBReticle_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_IsValid_ReturnValue1) == 0x000001, "Member 'BP_AJBReticle_C_Initialize::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBReticle_C_Initialize::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBReticle_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_AJBReticle_C_Initialize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_IsValid_ReturnValue2) == 0x000012, "Member 'BP_AJBReticle_C_Initialize::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_IsValid_ReturnValue3) == 0x000013, "Member 'BP_AJBReticle_C_Initialize::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_IsValid_ReturnValue4) == 0x000014, "Member 'BP_AJBReticle_C_Initialize::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_AddChildToOverlay_ReturnValue) == 0x000018, "Member 'BP_AJBReticle_C_Initialize::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_AJBReticle_C_Initialize::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_Initialize, CallFunc_Create_ReturnValue1) == 0x000028, "Member 'BP_AJBReticle_C_Initialize::CallFunc_Create_ReturnValue1' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.SetupWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBReticle_C_SetupWidget final
{
public:
	class UOverlay*                               ReticleRootWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_SetupWidget) == 0x000008, "Wrong alignment on BP_AJBReticle_C_SetupWidget");
static_assert(sizeof(BP_AJBReticle_C_SetupWidget) == 0x000008, "Wrong size on BP_AJBReticle_C_SetupWidget");
static_assert(offsetof(BP_AJBReticle_C_SetupWidget, ReticleRootWidget) == 0x000000, "Member 'BP_AJBReticle_C_SetupWidget::ReticleRootWidget' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.ClearReticleWidget
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBReticle_C_ClearReticleWidget final
{
public:
	TArray<class UWB_ReticleBase_C*>              LReticleWidgets;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LLen;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ReticleBase_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ReticleBase_C*                      K2Node_DynamicCast_AsWB_Reticle_Base;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_ClearReticleWidget) == 0x000008, "Wrong alignment on BP_AJBReticle_C_ClearReticleWidget");
static_assert(sizeof(BP_AJBReticle_C_ClearReticleWidget) == 0x000068, "Wrong size on BP_AJBReticle_C_ClearReticleWidget");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, LReticleWidgets) == 0x000000, "Member 'BP_AJBReticle_C_ClearReticleWidget::LReticleWidgets' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, LLen) == 0x000010, "Member 'BP_AJBReticle_C_ClearReticleWidget::LLen' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_AJBReticle_C_ClearReticleWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, Temp_int_Variable) == 0x000018, "Member 'BP_AJBReticle_C_ClearReticleWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AJBReticle_C_ClearReticleWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_RemoveChild_ReturnValue) == 0x000034, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Add_IntInt_ReturnValue1) == 0x000038, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_GetChildAt_ReturnValue) == 0x000040, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000048, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, K2Node_DynamicCast_AsWB_Reticle_Base) == 0x000050, "Member 'BP_AJBReticle_C_ClearReticleWidget::K2Node_DynamicCast_AsWB_Reticle_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AJBReticle_C_ClearReticleWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_ClearReticleWidget, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BP_AJBReticle_C_ClearReticleWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.UpdateVisibleReticleWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBReticle_C_UpdateVisibleReticleWidget final
{
public:
	TArray<class UWB_ReticleBase_C*>              LReticleWidgets;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         LLen;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBReticle_C_UpdateVisibleReticleWidget) == 0x000008, "Wrong alignment on BP_AJBReticle_C_UpdateVisibleReticleWidget");
static_assert(sizeof(BP_AJBReticle_C_UpdateVisibleReticleWidget) == 0x000018, "Wrong size on BP_AJBReticle_C_UpdateVisibleReticleWidget");
static_assert(offsetof(BP_AJBReticle_C_UpdateVisibleReticleWidget, LReticleWidgets) == 0x000000, "Member 'BP_AJBReticle_C_UpdateVisibleReticleWidget::LReticleWidgets' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_UpdateVisibleReticleWidget, LLen) == 0x000010, "Member 'BP_AJBReticle_C_UpdateVisibleReticleWidget::LLen' has a wrong offset!");
static_assert(offsetof(BP_AJBReticle_C_UpdateVisibleReticleWidget, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_AJBReticle_C_UpdateVisibleReticleWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBReticle.BP_AJBReticle_C.SetupInteractProgressBarComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBReticle_C_SetupInteractProgressBarComponent final
{
public:
	class UBP_AJBInteractActionProgressBar_C*     InteractProgressBarComponent;                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBReticle_C_SetupInteractProgressBarComponent) == 0x000008, "Wrong alignment on BP_AJBReticle_C_SetupInteractProgressBarComponent");
static_assert(sizeof(BP_AJBReticle_C_SetupInteractProgressBarComponent) == 0x000008, "Wrong size on BP_AJBReticle_C_SetupInteractProgressBarComponent");
static_assert(offsetof(BP_AJBReticle_C_SetupInteractProgressBarComponent, InteractProgressBarComponent) == 0x000000, "Member 'BP_AJBReticle_C_SetupInteractProgressBarComponent::InteractProgressBarComponent' has a wrong offset!");

}


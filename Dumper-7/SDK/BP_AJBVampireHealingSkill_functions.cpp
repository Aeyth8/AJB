#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVampireHealingSkill

#include "Basic.hpp"

#include "BP_AJBVampireHealingSkill_classes.hpp"
#include "BP_AJBVampireHealingSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ExecuteUbergraph_BP_AJBVampireHealingSkill
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBVampireHealingSkill_C::ExecuteUbergraph_BP_AJBVampireHealingSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "ExecuteUbergraph_BP_AJBVampireHealingSkill");

	Params::BP_AJBVampireHealingSkill_C_ExecuteUbergraph_BP_AJBVampireHealingSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ROC_NotifyHealValue
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EffectiveValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBVampireHealingSkill_C::ROC_NotifyHealValue(int32 EffectiveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "ROC_NotifyHealValue");

	Params::BP_AJBVampireHealingSkill_C_ROC_NotifyHealValue Parms{};

	Parms.EffectiveValue = EffectiveValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.CheckNecessaryHealing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bNecessary                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBVampireHealingSkill_C::CheckNecessaryHealing(bool* bNecessary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "CheckNecessaryHealing");

	Params::BP_AJBVampireHealingSkill_C_CheckNecessaryHealing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNecessary != nullptr)
		*bNecessary = Parms.bNecessary;
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBVampireHealingSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBVampireHealingSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "ReceiveTick");

	Params::BP_AJBVampireHealingSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBVampireHealingSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBVampireHealingSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "NotifyTheWorld");

	Params::BP_AJBVampireHealingSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.CanUseSkill
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer*           TagContainer                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBVampireHealingSkill_C::CanUseSkill(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "CanUseSkill");

	Params::BP_AJBVampireHealingSkill_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);

	return Parms.ReturnValue;
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.Increase_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBVampireHealingSkill_C::Increase_Local(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "Increase_Local");

	Params::BP_AJBVampireHealingSkill_C_Increase_Local Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBVampireHealingSkill.BP_AJBVampireHealingSkill_C.Increase_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBVampireHealingSkill_C::Increase_Server(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBVampireHealingSkill_C", "Increase_Server");

	Params::BP_AJBVampireHealingSkill_C_Increase_Server Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SPgauge

#include "Basic.hpp"

#include "ST_GrowupInfo_Processed_structs.hpp"


namespace SDK::Params
{

// Function WB_SPgauge.WB_SPgauge_C.ExecuteUbergraph_WB_SPgauge
// 0x00E0 (0x00E0 - 0x0000)
struct WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_SPframe_C*>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class AAJBInGameCharacter*                    K2Node_CustomEvent_TargetCharacter1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_TargetCharacter;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_GrowupInfo_Processed               CallFunc_GetGrowupParam_GrowupParam;               // 0x0050(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SPframe_C*                          CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0098(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SPframe_C*                          CallFunc_Array_Get_Item1;                          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge) == 0x000008, "Wrong alignment on WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge");
static_assert(sizeof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge) == 0x0000E0, "Wrong size on WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, EntryPoint) == 0x000000, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, Temp_int_Variable) == 0x000004, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000009, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000A, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_MakeArray_Array) == 0x000010, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_CustomEvent_TargetCharacter1) == 0x000020, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_CustomEvent_TargetCharacter1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_CustomEvent_TargetCharacter) == 0x000038, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_CustomEvent_TargetCharacter' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000040, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_GetGrowupParam_GrowupParam) == 0x000050, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_GetGrowupParam_GrowupParam' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, Temp_int_Array_Index_Variable) == 0x000078, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00007C, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, Temp_int_Array_Index_Variable1) == 0x000080, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Add_IntInt_ReturnValue1) == 0x000088, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Array_Get_Item) == 0x000090, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Conv_IntToText_ReturnValue) == 0x000098, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Less_IntInt_ReturnValue1) == 0x0000B4, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Array_Get_Item1) == 0x0000B8, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Array_Length_ReturnValue1) == 0x0000C0, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Less_IntInt_ReturnValue2) == 0x0000C8, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Add_IntInt_ReturnValue2) == 0x0000CC, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, Temp_int_Loop_Counter_Variable1) == 0x0000D0, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Less_IntInt_ReturnValue3) == 0x0000D4, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge, CallFunc_Add_IntInt_ReturnValue3) == 0x0000D8, "Member 'WB_SPgauge_C_ExecuteUbergraph_WB_SPgauge::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function WB_SPgauge.WB_SPgauge_C.SetupDisplay
// 0x0008 (0x0008 - 0x0000)
struct WB_SPgauge_C_SetupDisplay final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SPgauge_C_SetupDisplay) == 0x000008, "Wrong alignment on WB_SPgauge_C_SetupDisplay");
static_assert(sizeof(WB_SPgauge_C_SetupDisplay) == 0x000008, "Wrong size on WB_SPgauge_C_SetupDisplay");
static_assert(offsetof(WB_SPgauge_C_SetupDisplay, TargetCharacter) == 0x000000, "Member 'WB_SPgauge_C_SetupDisplay::TargetCharacter' has a wrong offset!");

// Function WB_SPgauge.WB_SPgauge_C.UpdateDisplay
// 0x0008 (0x0008 - 0x0000)
struct WB_SPgauge_C_UpdateDisplay final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SPgauge_C_UpdateDisplay) == 0x000008, "Wrong alignment on WB_SPgauge_C_UpdateDisplay");
static_assert(sizeof(WB_SPgauge_C_UpdateDisplay) == 0x000008, "Wrong size on WB_SPgauge_C_UpdateDisplay");
static_assert(offsetof(WB_SPgauge_C_UpdateDisplay, TargetCharacter) == 0x000000, "Member 'WB_SPgauge_C_UpdateDisplay::TargetCharacter' has a wrong offset!");

// Function WB_SPgauge.WB_SPgauge_C.SetAwakingAbilityFrame
// 0x0010 (0x0010 - 0x0000)
struct WB_SPgauge_C_SetAwakingAbilityFrame final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwakingAbilityIcon;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SPframe_C*                          CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SPgauge_C_SetAwakingAbilityFrame) == 0x000008, "Wrong alignment on WB_SPgauge_C_SetAwakingAbilityFrame");
static_assert(sizeof(WB_SPgauge_C_SetAwakingAbilityFrame) == 0x000010, "Wrong size on WB_SPgauge_C_SetAwakingAbilityFrame");
static_assert(offsetof(WB_SPgauge_C_SetAwakingAbilityFrame, TargetIndex) == 0x000000, "Member 'WB_SPgauge_C_SetAwakingAbilityFrame::TargetIndex' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_SetAwakingAbilityFrame, bAwakingAbilityIcon) == 0x000004, "Member 'WB_SPgauge_C_SetAwakingAbilityFrame::bAwakingAbilityIcon' has a wrong offset!");
static_assert(offsetof(WB_SPgauge_C_SetAwakingAbilityFrame, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_SPgauge_C_SetAwakingAbilityFrame::CallFunc_Array_Get_Item' has a wrong offset!");

}


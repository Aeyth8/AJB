#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRedBindSkill

#include "Basic.hpp"

#include "BP_AJBRedBindSkill_classes.hpp"
#include "BP_AJBRedBindSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.ExecuteUbergraph_BP_AJBRedBindSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRedBindSkill_C::ExecuteUbergraph_BP_AJBRedBindSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "ExecuteUbergraph_BP_AJBRedBindSkill");

	Params::BP_AJBRedBindSkill_C_ExecuteUbergraph_BP_AJBRedBindSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.OnSpawnObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlacement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRedBindSkill_C::OnSpawnObject(bool bPlacement, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "OnSpawnObject");

	Params::BP_AJBRedBindSkill_C_OnSpawnObject Parms{};

	Parms.bPlacement = bPlacement;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.SpawnNewObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRedBindSkill_C::SpawnNewObject(const struct FTransform& Transform, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "SpawnNewObject");

	Params::BP_AJBRedBindSkill_C_SpawnNewObject Parms{};

	Parms.Transform = std::move(Transform);
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.ShouldAddPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          DamagedCharacterBase                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bShouldAddPassive                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRedBindSkill_C::ShouldAddPassive(class AAJBInGameCharacterBase* DamagedCharacterBase, class AActor* DamageCauser, bool* bShouldAddPassive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "ShouldAddPassive");

	Params::BP_AJBRedBindSkill_C_ShouldAddPassive Parms{};

	Parms.DamagedCharacterBase = DamagedCharacterBase;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldAddPassive != nullptr)
		*bShouldAddPassive = Parms.bShouldAddPassive;
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.CheckAnyExclusionPassiveActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRedBindSkill_C::CheckAnyExclusionPassiveActive(class AActor* Target, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "CheckAnyExclusionPassiveActive");

	Params::BP_AJBRedBindSkill_C_CheckAnyExclusionPassiveActive Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.TraceObjectTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bPossiblePlacement_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform*                      Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)
// class AActor**                          TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRedBindSkill_C::TraceObjectTransform(bool* bPossiblePlacement_0, struct FTransform* Transform, class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "TraceObjectTransform");

	Params::BP_AJBRedBindSkill_C_TraceObjectTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossiblePlacement_0 != nullptr)
		*bPossiblePlacement_0 = Parms.bPossiblePlacement_0;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.ChangePreviewUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPossiblePlacement_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRedBindSkill_C::ChangePreviewUI(bool bPossiblePlacement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "ChangePreviewUI");

	Params::BP_AJBRedBindSkill_C_ChangePreviewUI Parms{};

	Parms.bPossiblePlacement_0 = bPossiblePlacement_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRedBindSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "NotifyTheWorld");

	Params::BP_AJBRedBindSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRedBindSkill.BP_AJBRedBindSkill_C.ConsumeSkill
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBRedBindSkill_C::ConsumeSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRedBindSkill_C", "ConsumeSkill");

	UObject::ProcessEvent(Func, nullptr);
}

}


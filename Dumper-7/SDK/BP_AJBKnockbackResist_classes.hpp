#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKnockbackResist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBKnockbackResist.BP_AJBKnockbackResist_C
// 0x0010 (0x0220 - 0x0210)
class UBP_AJBKnockbackResist_C : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBKnockbackResist_C;            // 0x0210(0x0008)(Transient, DuplicateTransient)
	int32                                         MaxPhase;                                          // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPhase;                                      // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBKnockbackResist(int32 EntryPoint);
	void InactiveAction();
	void ActivePassive(class UObject* Causer, bool bTriggeredByStand, const struct FGameplayTag& CauserType, int32 SerialNumber, class UObject* PropagationSource_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBKnockbackResist_C">();
	}
	static class UBP_AJBKnockbackResist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBKnockbackResist_C>();
	}
};
static_assert(alignof(UBP_AJBKnockbackResist_C) == 0x000008, "Wrong alignment on UBP_AJBKnockbackResist_C");
static_assert(sizeof(UBP_AJBKnockbackResist_C) == 0x000220, "Wrong size on UBP_AJBKnockbackResist_C");
static_assert(offsetof(UBP_AJBKnockbackResist_C, UberGraphFrame_BP_AJBKnockbackResist_C) == 0x000210, "Member 'UBP_AJBKnockbackResist_C::UberGraphFrame_BP_AJBKnockbackResist_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBKnockbackResist_C, MaxPhase) == 0x000218, "Member 'UBP_AJBKnockbackResist_C::MaxPhase' has a wrong offset!");
static_assert(offsetof(UBP_AJBKnockbackResist_C, CurrentPhase) == 0x00021C, "Member 'UBP_AJBKnockbackResist_C::CurrentPhase' has a wrong offset!");

}


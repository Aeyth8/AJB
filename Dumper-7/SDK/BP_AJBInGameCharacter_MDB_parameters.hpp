#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_MDB

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_CharaSkin_structs.hpp"
#include "E_StencilDigit_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ExecuteUbergraph_BP_AJBInGameCharacter_MDB
// 0x0960 (0x0960 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded2;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SerialNumber2;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class UObject*                                Temp_object_Variable;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamagedActor;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForHPAP;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageForAAP;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CutDamage;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_DamageType;                           // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber1;                        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               K2Node_Event_DamagePriority;                       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AttackDistance;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WithSeparatedStandAttack;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HitEnemysSeparatedStand;              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPenetrateAP;                         // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNotUseCollision;                     // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEndured;                            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                K2Node_Event_DamageDisplayParams;                  // 0x0170(0x0030)(NoDestructor)
	struct FAJBDamageDisplayProperty              K2Node_Event_DamageDisplayProperty;                // 0x01A0(0x0003)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP2;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess2;       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP3;    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess3;       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveState_IsActiveState;              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Tag;                                  // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Operator1;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Target;                               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CauserType;                           // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_PassiveSkillAffecterInterface_C> K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate; // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetCauserOwnerCharacterBP_CharacterBP;    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIgnoredPassive_IsIgnored;               // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord; // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable1;                             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool________Variable;                         // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool________Variable1;                        // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B[0x5];                                      // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP4;    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess4;       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x027C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBTrackerManager_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0294(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Temp_wildcard_Variable;                            // 0x02A0(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x02C0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable4;                             // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty1;                    // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive1;                       // 0x02EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                K2Node_CustomEvent_DisplayParams;                  // 0x02F0(0x0030)(NoDestructor)
	struct FAJBDamageDisplayProperty              K2Node_CustomEvent_DisplayProperty;                // 0x0320(0x0003)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x034C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EB[0x1];                                      // 0x03EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3; // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP5;    // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess5;       // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC1; // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP6;    // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess6;       // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A2[0x6];                                      // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable3;                             // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x04C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x04D8(0x0008)(NoDestructor)
	bool                                          Temp_bool_IsWaitingExec_Variable;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsOpened_Variable;                       // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCollision2;                          // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGravity2;                            // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSpringArm2;                          // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMovement2;                           // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore2;                            // 0x04E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x04E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x04E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue1;           // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCollision1;                          // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGravity1;                            // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSpringArm1;                          // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMovement1;                           // 0x053B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestore1;                            // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E[0x2];                                      // 0x053E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue2;           // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue3;           // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRestore;                             // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable2;                             // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnable1;                             // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewVisibility1;                      // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewVisibility;                       // 0x05B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NewVisibility;                  // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNewVisibility;                 // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B6[0x2];                                      // 0x05B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate2;             // 0x05B8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate3;             // 0x05D0(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP7;    // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess7;       // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_AddGameplayTag_self_CastInput; // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP8;    // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess8;       // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC2; // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0630(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP9;    // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess9;       // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldForceSkipDubbingAction_ShouldForceSkip; // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x064A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShoudRecording_bShouldRecording;          // 0x064B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShoudRecording_bShouldRecording1;         // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue; // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Critical_bReturnValue1; // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterBehavior_Active_bReturnValue; // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehaviorIsEmote_bRetValue;     // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x0653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue;            // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBehavior_bRetValue1;           // 0x0655(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue8;                 // 0x0656(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue9;                 // 0x0657(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue1;                // 0x0658(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array1;                           // 0x0668(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_FindOwnerMatchingPlayerInfo_Success;      // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FindOwnerMatchingPlayerInfo_PlayerName;   // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo; // 0x0690(0x0088)()
	bool                                          CallFunc_FindOwnerMatchingPlayerInfo_Success1;     // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FindOwnerMatchingPlayerInfo_PlayerName1;  // 0x0720(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo1; // 0x0730(0x0088)()
	struct FST_CharaSkin                          CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_SkinData; // 0x07B8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_Success; // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_CharaSkin                          CallFunc_FindStandSkinDataFromMatchingPlayerInfo_SkinData; // 0x07F8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindStandSkinDataFromMatchingPlayerInfo_Success; // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item1;                          // 0x0838(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item2;                          // 0x0860(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x088C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88D[0x3];                                      // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInputCameraOnly_bReturnValue;  // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue10;                // 0x0896(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool________Variable2;                        // 0x0897(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableInput_InputEnable;             // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool________Variable3;                        // 0x0899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A[0x6];                                      // 0x089A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_CalcIgnoreDistanceDateTime_DateTime;      // 0x08A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP10;   // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess10;      // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C2[0x6];                                      // 0x08C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDubbingSkill_C*                  CallFunc_GetComponentByClass_ReturnValue1;         // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveState_IsActiveState1;             // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_HighlightManager;     // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable2;                             // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface1;          // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_IsActive2;                       // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCollision;                           // 0x0925(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGravity;                             // 0x0926(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSpringArm;                           // 0x0927(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMovement;                            // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item3;                          // 0x0930(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               Temp_object_Variable3;                             // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_Select1_Default;                            // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB) == 0x000010, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB) == 0x000960, "Wrong size on BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, EntryPoint) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Array_Index_Variable1) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Loop_Counter_Variable1) == 0x000014, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_Loaded2) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_Loaded2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Add_IntInt_ReturnValue1) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000040, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x000048, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000050, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue1) == 0x000052, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue2) == 0x000053, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue3) == 0x000054, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_SerialNumber2) == 0x000058, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_SerialNumber2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetRelativeTransform_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Variable) == 0x0000A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Add_IntInt_ReturnValue2) == 0x0000E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_object_Variable) == 0x000118, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000120, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Has_Been_Initd_Variable) == 0x000129, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsClosed_Variable) == 0x00012A, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamagedActor) == 0x000130, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageForHPAP) == 0x000138, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageForAAP) == 0x00013C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_CutDamage) == 0x000140, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageType) == 0x000148, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_SerialNumber1) == 0x000150, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_SerialNumber1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamagePriority) == 0x000154, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_AttackDistance) == 0x000158, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageCauser) == 0x000160, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_WithSeparatedStandAttack) == 0x000168, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_HitEnemysSeparatedStand) == 0x000169, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bPenetrateAP) == 0x00016A, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bNotUseCollision) == 0x00016B, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_IsEndured) == 0x00016C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_IsEndured' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageDisplayParams) == 0x000170, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DamageDisplayProperty) == 0x0001A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DamageDisplayProperty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP2) == 0x0001A8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess2) == 0x0001B0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_Loaded1) == 0x0001B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Has_Been_Initd_Variable1) == 0x0001C0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsActive_IsActive) == 0x0001C1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue2) == 0x0001C8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsClosed_Variable1) == 0x0001D0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP3) == 0x0001D8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess3) == 0x0001E0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x0001E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess1) == 0x0001F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsActiveState_IsActiveState) == 0x0001F1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsActiveState_IsActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue4) == 0x0001F2, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsClosed_Variable2) == 0x0001F3, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Tag) == 0x0001F8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Operator1) == 0x000200, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Operator1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Target) == 0x000208, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_CauserType) == 0x000210, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_SerialNumber) == 0x000218, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Has_Been_Initd_Variable2) == 0x00021C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00021D, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface) == 0x000220, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBI_Passive_Skill_Affecter_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess2) == 0x000230, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate) == 0x000231, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetCauserOwnerCharacterBP_CharacterBP) == 0x000238, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetCauserOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue) == 0x000240, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsIgnoredPassive_IsIgnored) == 0x000241, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsIgnoredPassive_IsIgnored' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord) == 0x000242, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue) == 0x000243, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_object_Variable1) == 0x000248, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsMaterial_Interface) == 0x000250, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess3) == 0x000258, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool________Variable) == 0x000259, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool________Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool________Variable1) == 0x00025A, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool________Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue3) == 0x000260, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Lerp_ReturnValue) == 0x000268, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP4) == 0x000270, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess4) == 0x000278, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_MakeVector_ReturnValue) == 0x00027C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetComponentByClass_ReturnValue) == 0x000288, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue5) == 0x000290, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_MakeVector_ReturnValue1) == 0x000294, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_wildcard_Variable) == 0x0002A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_MakeLiteralByte_ReturnValue) == 0x0002B0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Get_Item) == 0x0002B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetMaterials_ReturnValue) == 0x0002C0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Length_ReturnValue) == 0x0002D0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Length_ReturnValue1) == 0x0002D4, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Operator) == 0x0002D8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Time) == 0x0002E0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_Timing) == 0x0002E4, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bEnable4) == 0x0002E5, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bEnable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bOperatorIsEmpty1) == 0x0002E6, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bOperatorIsEmpty1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Less_IntInt_ReturnValue) == 0x0002E7, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue1) == 0x0002E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E9, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x0002EA, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsActive_IsActive1) == 0x0002EB, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsActive_IsActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue1) == 0x0002EC, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue2) == 0x0002ED, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_DisplayParams) == 0x0002F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_DisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_DisplayProperty) == 0x000320, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_DisplayProperty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CreateDelegate_OutputDelegate) == 0x000328, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetController_ReturnValue) == 0x000338, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue4) == 0x000340, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue6) == 0x000348, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00034C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue2) == 0x000358, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000360, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0003E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue7) == 0x0003E9, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue3) == 0x0003EA, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Loop_Counter_Variable2) == 0x0003EC, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Add_IntInt_ReturnValue3) == 0x0003F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Variable) == 0x0003F4, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x0003F8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess4) == 0x000408, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000410, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess5) == 0x000420, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x000428, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess6) == 0x000438, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3) == 0x000440, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess7) == 0x000450, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_name_Variable) == 0x000458, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue5) == 0x000460, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP5) == 0x000468, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess5) == 0x000470, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue8) == 0x000471, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC1) == 0x000478, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess8) == 0x000480, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DeltaSeconds) == 0x000484, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckSkillState_bMatch) == 0x000488, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue4) == 0x000489, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue6) == 0x000490, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP6) == 0x000498, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess6) == 0x0004A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue9) == 0x0004A1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetController_ReturnValue1) == 0x0004A8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bEnable3) == 0x0004B0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bEnable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bOperatorIsEmpty) == 0x0004B1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_name_Variable1) == 0x0004B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsServer_ReturnValue) == 0x0004C0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CreateDelegate_OutputDelegate1) == 0x0004C8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0004D8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsWaitingExec_Variable) == 0x0004E0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsWaitingExec_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsOpened_Variable) == 0x0004E1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsOpened_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bCollision2) == 0x0004E2, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bCollision2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bGravity2) == 0x0004E3, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bGravity2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bSpringArm2) == 0x0004E4, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bSpringArm2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bMovement2) == 0x0004E5, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bMovement2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bRestore2) == 0x0004E6, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bRestore2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue3) == 0x0004E7, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Conv_BoolToString_ReturnValue) == 0x0004E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Conv_BoolToString_ReturnValue1) == 0x0004F8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Conv_BoolToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue) == 0x000508, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue1) == 0x000518, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue2) == 0x000528, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bCollision1) == 0x000538, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bCollision1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bGravity1) == 0x000539, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bGravity1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bSpringArm1) == 0x00053A, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bSpringArm1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bMovement1) == 0x00053B, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bMovement1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bRestore1) == 0x00053C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bRestore1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue4) == 0x00053D, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Conv_BoolToString_ReturnValue2) == 0x000540, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Conv_BoolToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Conv_BoolToString_ReturnValue3) == 0x000550, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Conv_BoolToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bRestore) == 0x000560, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bRestore' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue3) == 0x000568, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue4) == 0x000578, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue5) == 0x000588, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Concat_StrStr_ReturnValue5) == 0x000590, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bEnable2) == 0x0005A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bEnable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bEnable1) == 0x0005A1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bEnable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Select_Default) == 0x0005A8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005B0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bNewVisibility1) == 0x0005B1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bNewVisibility1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue5) == 0x0005B2, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bNewVisibility) == 0x0005B3, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_NewVisibility) == 0x0005B4, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_NewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_bNewVisibility) == 0x0005B5, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CreateDelegate_OutputDelegate2) == 0x0005B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue7) == 0x0005C8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CreateDelegate_OutputDelegate3) == 0x0005D0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP7) == 0x0005E0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess7) == 0x0005E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue10) == 0x0005E9, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_AddGameplayTag_self_CastInput) == 0x0005F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_AddGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_IsClosed_Variable3) == 0x000600, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_IsClosed_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue8) == 0x000608, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP8) == 0x000610, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess8) == 0x000618, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue11) == 0x000619, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC2) == 0x000620, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess9) == 0x000628, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Has_Been_Initd_Variable3) == 0x000629, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Array_Index_Variable2) == 0x00062C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_DamageType) == 0x000630, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_DamageCauser) == 0x000638, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP9) == 0x000640, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess9) == 0x000648, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_ShouldForceSkipDubbingAction_ShouldForceSkip) == 0x000649, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_ShouldForceSkipDubbingAction_ShouldForceSkip' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanAND_ReturnValue6) == 0x00064A, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_ShoudRecording_bShouldRecording) == 0x00064B, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_ShoudRecording_bShouldRecording' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_ShoudRecording_bShouldRecording1) == 0x00064C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_ShoudRecording_bShouldRecording1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckCharacterBehavior_Critical_bReturnValue) == 0x00064D, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckCharacterBehavior_Critical_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckCharacterBehavior_Critical_bReturnValue1) == 0x00064E, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckCharacterBehavior_Critical_bReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue6) == 0x00064F, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckCharacterBehavior_Active_bReturnValue) == 0x000650, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckCharacterBehavior_Active_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_BooleanOR_ReturnValue) == 0x000651, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckActiveBehaviorIsEmote_bRetValue) == 0x000652, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckActiveBehaviorIsEmote_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue7) == 0x000653, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckActiveBehavior_bRetValue) == 0x000654, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckActiveBehavior_bRetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckActiveBehavior_bRetValue1) == 0x000655, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckActiveBehavior_bRetValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue8) == 0x000656, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue9) == 0x000657, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetMaterials_ReturnValue1) == 0x000658, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetMaterials_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_MakeArray_Array1) == 0x000668, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_Success) == 0x000678, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_PlayerName) == 0x000680, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo) == 0x000690, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_Success1) == 0x000718, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_Success1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_PlayerName1) == 0x000720, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_PlayerName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo1) == 0x000730, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindOwnerMatchingPlayerInfo_MatchingPlayerInfo1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_SkinData) == 0x0007B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_SkinData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_Success) == 0x0007F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindCharacterSkinDataFromMatchingPlayerInfo_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindStandSkinDataFromMatchingPlayerInfo_SkinData) == 0x0007F8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindStandSkinDataFromMatchingPlayerInfo_SkinData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_FindStandSkinDataFromMatchingPlayerInfo_Success) == 0x000830, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_FindStandSkinDataFromMatchingPlayerInfo_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Get_Item1) == 0x000838, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Get_Item2) == 0x000860, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Length_ReturnValue2) == 0x000888, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Less_IntInt_ReturnValue1) == 0x00088C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Length_ReturnValue3) == 0x000890, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Less_IntInt_ReturnValue2) == 0x000894, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckEnableInputCameraOnly_bReturnValue) == 0x000895, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckEnableInputCameraOnly_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Not_PreBool_ReturnValue10) == 0x000896, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Not_PreBool_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool________Variable2) == 0x000897, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool________Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CheckEnableInput_InputEnable) == 0x000898, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CheckEnableInput_InputEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool________Variable3) == 0x000899, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool________Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CalcIgnoreDistanceDateTime_DateTime) == 0x0008A0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CalcIgnoreDistanceDateTime_DateTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_DeltaTime) == 0x0008A8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetOwner_ReturnValue9) == 0x0008B0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_CharacterBP10) == 0x0008B8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_CharacterBP10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetAJBCharacterFromActor_bSuccess10) == 0x0008C0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetAJBCharacterFromActor_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsValid_ReturnValue12) == 0x0008C1, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetComponentByClass_ReturnValue1) == 0x0008C8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsActiveState_IsActiveState1) == 0x0008D0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsActiveState_IsActiveState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_GetHighlightManager_HighlightManager) == 0x0008D8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_GetHighlightManager_HighlightManager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsPlayingReplay_ReturnValue) == 0x0008E0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_object_Variable2) == 0x0008E8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Less_IntInt_ReturnValue3) == 0x0008F0, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_AsMaterial_Interface1) == 0x0008F8, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_AsMaterial_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_DynamicCast_bSuccess10) == 0x000900, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000908, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_IsActive_IsActive2) == 0x000910, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_IsActive_IsActive2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_CustomEvent_Loaded) == 0x000918, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_int_Variable1) == 0x000920, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bEnable) == 0x000924, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bCollision) == 0x000925, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bGravity) == 0x000926, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bSpringArm) == 0x000927, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Event_bMovement) == 0x000928, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Event_bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Add_IntInt_ReturnValue4) == 0x00092C, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Array_Get_Item3) == 0x000930, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, CallFunc_Less_IntInt_ReturnValue4) == 0x000938, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_object_Variable3) == 0x000940, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, Temp_bool_Variable1) == 0x000948, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB, K2Node_Select1_Default) == 0x000950, "Member 'BP_AJBInGameCharacter_MDB_C_ExecuteUbergraph_BP_AJBInGameCharacter_MDB::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ProcessDubbingState
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ProcessDubbingState final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ProcessDubbingState) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ProcessDubbingState");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ProcessDubbingState) == 0x000010, "Wrong size on BP_AJBInGameCharacter_MDB_C_ProcessDubbingState");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ProcessDubbingState, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ProcessDubbingState::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ProcessDubbingState, DamageCauser) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ProcessDubbingState::DamageCauser' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMDBMeshVisibleCore
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleCore::bNewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMDBMeshVisibleServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer, NewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMDBMeshVisibleServer::NewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMeshVisibleCore
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleCore::bNewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMeshVisibleServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer, bNewVisibility) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMeshVisibleServer::bNewVisibility' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeEnableCore
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeEnableCore final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeEnableCore) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeEnableCore");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeEnableCore) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeEnableCore");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeEnableCore, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeEnableCore::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeEnableServer
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeEnableServer final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeEnableServer) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeEnableServer");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeEnableServer) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeEnableServer");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeEnableServer, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeEnableServer::bEnable' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.MC_SpawnDamageDisplay
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay final
{
public:
	struct FAJBDamageDisplayParams                DisplayParams;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FAJBDamageDisplayProperty              DisplayProperty;                                   // 0x0030(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay) == 0x000038, "Wrong size on BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay, DisplayParams) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay::DisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay, DisplayProperty) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_MC_SpawnDamageDisplay::DisplayProperty' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetSerialNumber
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_SetSerialNumber final
{
public:
	int32                                         SerialNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_SetSerialNumber) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_SetSerialNumber");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_SetSerialNumber) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_SetSerialNumber");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSerialNumber, SerialNumber) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_SetSerialNumber::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7) == 0x000008, "Wrong size on BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_OnLoaded_21F53AD94A2001589A7A0992CCA6FBC7::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_6FEB94C2436C868ECDE635947C259434
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434) == 0x000008, "Wrong size on BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_OnLoaded_6FEB94C2436C868ECDE635947C259434::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB) == 0x000008, "Wrong size on BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB, Loaded) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_OnLoaded_EE6189324B1F4C2A78E3F8B2A59085EB::Loaded' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShoudRecording
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ShoudRecording final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldRecording;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Ret;                                               // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCharacterByTag_bReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIgnoredRecordingDamageType_ShouldRecord; // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ShoudRecording) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ShoudRecording");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ShoudRecording) == 0x0000C0, "Wrong size on BP_AJBInGameCharacter_MDB_C_ShoudRecording");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, DamageCauser) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, bShouldRecording) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::bShouldRecording' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, Ret) == 0x000011, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::Ret' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_CheckCharacterByTag_bReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_CheckCharacterByTag_bReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000040, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000048, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_IsIgnoredRecordingDamageType_ShouldRecord) == 0x000052, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_IsIgnoredRecordingDamageType_ShouldRecord' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_IsActive_IsActive) == 0x000053, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_IsActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_GetTagName_ReturnValue) == 0x000078, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_Conv_NameToString_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_Concat_StrStr_ReturnValue1) == 0x000090, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000A0, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShoudRecording, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000B0, "Member 'BP_AJBInGameCharacter_MDB_C_ShoudRecording::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsActive
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsActive final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveTransferState_IsActiveState;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveState_IsActiveState;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsActive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsActive");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsActive) == 0x000030, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsActive");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, IsActive_0) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::IsActive_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_IsActiveTransferState_IsActiveState) == 0x000019, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_IsActiveTransferState_IsActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsActive, CallFunc_IsActiveState_IsActiveState) == 0x00002A, "Member 'BP_AJBInGameCharacter_MDB_C_IsActive::CallFunc_IsActiveState_IsActiveState' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsAppear
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsAppear final
{
public:
	bool                                          IsActiveState;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppearTransferState_IsAppearState;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppearState_IsAppearState;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsAppear) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsAppear");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsAppear) == 0x000030, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsAppear");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, IsActiveState) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::IsActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_IsAppearTransferState_IsAppearState) == 0x000019, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_IsAppearTransferState_IsAppearState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsAppear, CallFunc_IsAppearState_IsAppearState) == 0x00002A, "Member 'BP_AJBInGameCharacter_MDB_C_IsAppear::CallFunc_IsAppearState_IsAppearState' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldPropagatePassiveToABC
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPropagate;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC) == 0x000040, "Wrong size on BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, PassiveTag) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, ShouldPropagate) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::ShouldPropagate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC, CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate) == 0x000039, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldPropagatePassiveToABC::CallFunc_ShouldPropagatePassiveToABC_ShouldPropagate' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldRecordImmidiatelyPassive
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRecord;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive) == 0x000040, "Wrong size on BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, PassiveTag) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, ShouldRecord) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::ShouldRecord' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive, CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord) == 0x000039, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldRecordImmidiatelyPassive::CallFunc_ShouldRecordImmidiatelyPassive_ShouldRecord' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CacheOwnerMatchingPlayerIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex final
{
public:
	int32                                         OwnerMatchingPlayerIndexCache_0;                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex, OwnerMatchingPlayerIndexCache_0) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_CacheOwnerMatchingPlayerIndex::OwnerMatchingPlayerIndexCache_0' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.UpdateCameraOnSucceedReplay
// 0x0460 (0x0460 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay final
{
public:
	float                                         Temp_PitchToAdd;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_YawToAdd;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_PitchThreshold;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_YawThreshold;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_PitchDiffCameraForwardAndTarget;              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_YawDiffCameraForwardAndTarget;                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_CameraLocationXY;                             // 0x0018(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_CameraLocation;                               // 0x0024(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_TargetWorldLocationXY;                        // 0x0030(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_TargetWorldLocation;                          // 0x003C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_DeadBodyWorldLocationXY;                      // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0070(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0168(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0228(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue3;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0248(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0260(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x026C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue3;                  // 0x02A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue1;     // 0x02AC(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x02CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x02FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0308(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue2;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0330(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x03C8(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult1;      // 0x03D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay) == 0x000460, "Wrong size on BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_PitchToAdd) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_PitchToAdd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_YawToAdd) == 0x000004, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_YawToAdd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_PitchThreshold) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_PitchThreshold' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_YawThreshold) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_YawThreshold' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_PitchDiffCameraForwardAndTarget) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_PitchDiffCameraForwardAndTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_YawDiffCameraForwardAndTarget) == 0x000014, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_YawDiffCameraForwardAndTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_CameraLocationXY) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_CameraLocationXY' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_CameraLocation) == 0x000024, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_TargetWorldLocationXY) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_TargetWorldLocationXY' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_TargetWorldLocation) == 0x00003C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_TargetWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_DeadBodyWorldLocationXY) == 0x000048, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_DeadBodyWorldLocationXY' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_float_Variable) == 0x000054, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_float_Variable1) == 0x000058, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Conv_FloatToString_ReturnValue) == 0x000060, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000070, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x0000A0, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000128, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Abs_ReturnValue) == 0x00012C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Abs_ReturnValue1) == 0x000134, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Conv_FloatToString_ReturnValue1) == 0x000140, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Conv_FloatToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BooleanOR_ReturnValue) == 0x000150, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Concat_StrStr_ReturnValue1) == 0x000158, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeRotator_ReturnValue1) == 0x000168, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_bool_Variable) == 0x000174, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000178, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000200, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Abs_ReturnValue2) == 0x000204, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000208, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, K2Node_Select_Default) == 0x00020C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000210, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_float_Variable2) == 0x000218, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_X) == 0x00021C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Y) == 0x000220, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Z) == 0x000224, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeVector_ReturnValue) == 0x000228, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Abs_ReturnValue3) == 0x000234, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Abs_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeVector_ReturnValue1) == 0x000238, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000244, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000248, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_X1) == 0x000254, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Y1) == 0x000258, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Z1) == 0x00025C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000260, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeVector_ReturnValue2) == 0x00026C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Roll) == 0x000278, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Pitch) == 0x00027C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Yaw) == 0x000280, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_float_Variable3) == 0x000284, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000288, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_X2) == 0x000294, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Y2) == 0x000298, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakVector_Z2) == 0x00029C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_MakeVector_ReturnValue3) == 0x0002A0, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_MakeVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_GetComponentRotation_ReturnValue1) == 0x0002AC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_GetComponentRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Roll1) == 0x0002B8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Pitch1) == 0x0002BC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BreakRotator_Yaw1) == 0x0002C0, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0002C4, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x0002C8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0002CC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_VSize_ReturnValue) == 0x0002D8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x0002DC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_VSize_ReturnValue1) == 0x0002EC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_BooleanOR_ReturnValue1) == 0x0002F0, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0002F4, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_FClamp_ReturnValue) == 0x0002F8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x0002FC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_FindLookAtRotation_ReturnValue) == 0x000308, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_VSize_ReturnValue2) == 0x000314, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_VSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000318, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, Temp_bool_Variable1) == 0x00031C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000320, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_FClamp_ReturnValue1) == 0x000324, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, K2Node_Select1_Default) == 0x000328, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x00032C, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000330, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0003B8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003BC, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_RInterpTo_ReturnValue) == 0x0003C8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay, CallFunc_K2_SetWorldRotation_SweepHitResult1) == 0x0003D8, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraOnSucceedReplay::CallFunc_K2_SetWorldRotation_SweepHitResult1' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CalcIgnoreDistanceDateTime
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         Timespan;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue1;                         // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Subtract_DateTimeTimespan_ReturnValue;    // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime) == 0x000048, "Wrong size on BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, DateTime) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::DateTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, Timespan) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::Timespan' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_Now_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_MakeTimespan_ReturnValue) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_GetFloatValue_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_Now_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_Now_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime, CallFunc_Subtract_DateTimeTimespan_ReturnValue) == 0x000040, "Member 'BP_AJBInGameCharacter_MDB_C_CalcIgnoreDistanceDateTime::CallFunc_Subtract_DateTimeTimespan_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetMDBMeshOffset
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0018(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset) == 0x0000C8, "Wrong size on BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, Offset) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::Offset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, CallFunc_BreakTransform_Location) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, CallFunc_BreakTransform_Rotation) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, CallFunc_BreakTransform_Scale) == 0x000024, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000040, "Member 'BP_AJBInGameCharacter_MDB_C_SetMDBMeshOffset::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ShouldForceSkipDubbingAction
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldForceSkip;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_ABC_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldNotActionDamageType_ShouldNotAction; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction) == 0x000040, "Wrong size on BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, DamageType) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, ShouldForceSkip) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::ShouldForceSkip' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_ABC' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction, CallFunc_ShouldNotActionDamageType_ShouldNotAction) == 0x000039, "Member 'BP_AJBInGameCharacter_MDB_C_ShouldForceSkipDubbingAction::CallFunc_ShouldNotActionDamageType_ShouldNotAction' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsIgnoredPassive
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnored;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive) == 0x000010, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive, PassiveTag) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive, IsIgnored) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive::IsIgnored' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive, CallFunc_MatchesAnyTags_ReturnValue) == 0x000009, "Member 'BP_AJBInGameCharacter_MDB_C_IsIgnoredPassive::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPropertyType
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_GetPropertyType final
{
public:
	EAJBCharacterPropertyType                     PropertyType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_GetPropertyType) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_GetPropertyType");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_GetPropertyType) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_GetPropertyType");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyType, PropertyType) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyType::PropertyType' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPropertyOwnerCharacterBP
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP) == 0x000028, "Wrong size on BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_GetPropertyOwnerCharacterBP::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.TracableByAI
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_TracableByAI final
{
public:
	bool                                          bTracable;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_TracableByAI) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_TracableByAI");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_TracableByAI) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_TracableByAI");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_TracableByAI, bTracable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_TracableByAI::bTracable' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.DetectableByTrap
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_DetectableByTrap final
{
public:
	bool                                          bDetectable;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_DetectableByTrap) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_DetectableByTrap");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_DetectableByTrap) == 0x000002, "Wrong size on BP_AJBInGameCharacter_MDB_C_DetectableByTrap");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_DetectableByTrap, bDetectable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_DetectableByTrap::bDetectable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_DetectableByTrap, CallFunc_IsActive_IsActive) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_DetectableByTrap::CallFunc_IsActive_IsActive' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.TreatAsCharacterBySpecialProjectile
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile final
{
public:
	bool                                          bTreat;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile, bTreat) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_TreatAsCharacterBySpecialProjectile::bTreat' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsDetectableByDirectAttackGuide
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide final
{
public:
	bool                                          bIsDetectable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide, bIsDetectable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsDetectableByDirectAttackGuide::bIsDetectable' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetCO2Scan
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan) == 0x000002, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan, CallFunc_IsActive_IsActive) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_IsTargetCO2Scan::CallFunc_IsActive_IsActive' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetClourBarrier
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsTargetClourBarrier::IsTarget' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsTargetOverGrow
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow final
{
public:
	bool                                          IsTarget;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow) == 0x000002, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow, IsTarget) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow, CallFunc_IsActive_IsActive) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_IsTargetOverGrow::CallFunc_IsActive_IsActive' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnGetItem
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnGetItem::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnJump
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnJump::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.IsPlayOwnerVoiceOnPassThruEnter
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter final
{
public:
	bool                                          bIsPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter, bIsPlay) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_IsPlayOwnerVoiceOnPassThruEnter::bIsPlay' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeMovementModeOnTimeStop
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop) == 0x000002, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop, bOperatorIsEmpty) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeMovementModeOnTimeStop::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameCharacter_MDB_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameCharacter_MDB_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameCharacter_MDB_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.AddGameplayTag
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_AddGameplayTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Operator;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_AddGameplayTag");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag) == 0x000028, "Wrong size on BP_AJBInGameCharacter_MDB_C_AddGameplayTag");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag, Tag) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_AddGameplayTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag, Operator) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_AddGameplayTag::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag, Target) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_AddGameplayTag::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag, CauserType) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_AddGameplayTag::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AddGameplayTag, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_AddGameplayTag::SerialNumber' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.AJBDamage
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_AJBDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForHPAP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageForAAP;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CutDamage;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamagePriority                               DamagePriority;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithSeparatedStandAttack;                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitEnemysSeparatedStand;                           // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPenetrateAP;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNotUseCollision;                                  // 0x003B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEndured;                                         // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                DamageDisplayParams;                               // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FAJBDamageDisplayProperty              DamageDisplayProperty;                             // 0x0070(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_AJBDamage) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_AJBDamage");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_AJBDamage) == 0x000078, "Wrong size on BP_AJBInGameCharacter_MDB_C_AJBDamage");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamagedActor) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageForHPAP) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageForHPAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageForAAP) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageForAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, CutDamage) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::CutDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageType) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, SerialNumber) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamagePriority) == 0x000024, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamagePriority' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, AttackDistance) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::AttackDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageCauser) == 0x000030, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, WithSeparatedStandAttack) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::WithSeparatedStandAttack' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, HitEnemysSeparatedStand) == 0x000039, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::HitEnemysSeparatedStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, bPenetrateAP) == 0x00003A, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::bPenetrateAP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, bNotUseCollision) == 0x00003B, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::bNotUseCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, IsEndured) == 0x00003C, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::IsEndured' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageDisplayParams) == 0x000040, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageDisplayParams' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_AJBDamage, DamageDisplayProperty) == 0x000070, "Member 'BP_AJBInGameCharacter_MDB_C_AJBDamage::DamageDisplayProperty' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.UpdateCameraParam
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_UpdateCameraParam final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_UpdateCameraParam) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_UpdateCameraParam");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_UpdateCameraParam) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_UpdateCameraParam");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_UpdateCameraParam, DeltaTime) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_UpdateCameraParam::DeltaTime' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.SetSystemEnable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_SetSystemEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCollision;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_SetSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_MDB_C_SetSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable, bEnable) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_SetSystemEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable, bCollision) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_SetSystemEnable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable, bGravity) == 0x000002, "Member 'BP_AJBInGameCharacter_MDB_C_SetSystemEnable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable, bSpringArm) == 0x000003, "Member 'BP_AJBInGameCharacter_MDB_C_SetSystemEnable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_SetSystemEnable, bMovement) == 0x000004, "Member 'BP_AJBInGameCharacter_MDB_C_SetSystemEnable::bMovement' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ResetSystemEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ResetSystemEnable final
{
public:
	bool                                          bRestore;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ResetSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ResetSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ResetSystemEnable) == 0x000001, "Wrong size on BP_AJBInGameCharacter_MDB_C_ResetSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ResetSystemEnable, bRestore) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ResetSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeSystemEnable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemEnable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.ChangeSystemDisable
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable final
{
public:
	bool                                          bCollision;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGravity;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSpringArm;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMovement;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestore;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable) == 0x000005, "Wrong size on BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable, bCollision) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable::bCollision' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable, bGravity) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable::bGravity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable, bSpringArm) == 0x000002, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable::bSpringArm' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable, bMovement) == 0x000003, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable::bMovement' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable, bRestore) == 0x000004, "Member 'BP_AJBInGameCharacter_MDB_C_ChangeSystemDisable::bRestore' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CheckPossibleDetection
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection final
{
public:
	bool                                          bPossibleDetection;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppear_IsActiveState;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDetection_bPossibleDetection; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection) == 0x000001, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection, bPossibleDetection) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection::bPossibleDetection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection, CallFunc_IsAppear_IsActiveState) == 0x000001, "Member 'BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection::CallFunc_IsAppear_IsActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection, CallFunc_CheckPossibleDetection_bPossibleDetection) == 0x000002, "Member 'BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection::CallFunc_CheckPossibleDetection_bPossibleDetection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_AJBInGameCharacter_MDB_C_CheckPossibleDetection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.CheckTargetSelf
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_CheckTargetSelf final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForDamageOverlap;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreMovableStand;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIncludeSelf;                                      // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAfterReflectShouldHitOwner;                       // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTarget;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_CheckTargetSelf");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf) == 0x000010, "Wrong size on BP_AJBInGameCharacter_MDB_C_CheckTargetSelf");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, DamageCauser) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, bForDamageOverlap) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::bForDamageOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, bIgnoreMovableStand) == 0x000009, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::bIgnoreMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, bIncludeSelf) == 0x00000A, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, bAfterReflectShouldHitOwner) == 0x00000B, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::bAfterReflectShouldHitOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, bTarget) == 0x00000C, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::bTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_CheckTargetSelf, CallFunc_IsActive_IsActive) == 0x00000D, "Member 'BP_AJBInGameCharacter_MDB_C_CheckTargetSelf::CallFunc_IsActive_IsActive' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.InteractableOperator
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_InteractableOperator final
{
public:
	class AActor*                                 InteractActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_InteractableOperator) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_InteractableOperator");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_InteractableOperator) == 0x000010, "Wrong size on BP_AJBInGameCharacter_MDB_C_InteractableOperator");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_InteractableOperator, InteractActor) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_InteractableOperator::InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_InteractableOperator, bReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_InteractableOperator::bReturnValue' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetPrimitivesToChangeStencil
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil final
{
public:
	E_StencilDigit                                StencilDigit;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            PrimitiveComponents;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class UPrimitiveComponent*>            CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UPrimitiveComponent*>            Temp_wildcard_Variable;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil) == 0x000048, "Wrong size on BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil, StencilDigit) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil::StencilDigit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil, PrimitiveComponents) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil::PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil, CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil::CallFunc_GetPrimitivesToChangeStencil_PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil, Temp_wildcard_Variable) == 0x000028, "Member 'BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_AJBInGameCharacter_MDB_C_GetPrimitivesToChangeStencil::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetGionOwner
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_GetGionOwner final
{
public:
	class AActor*                                 GionOwner;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_GetGionOwner) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_GetGionOwner");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_GetGionOwner) == 0x000028, "Wrong size on BP_AJBInGameCharacter_MDB_C_GetGionOwner");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetGionOwner, GionOwner) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_GetGionOwner::GionOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetGionOwner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_GetGionOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetGionOwner, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AJBInGameCharacter_MDB_C_GetGionOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetGionOwner, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_GetGionOwner::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetGionOwner, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBInGameCharacter_MDB_C_GetGionOwner::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.FindOwnerMatchingPlayerInfo
// 0x0140 (0x0140 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    MatchingPlayerInfo;                                // 0x0018(0x0088)(Parm, OutParm)
	int32                                         CallFunc_GetOwnerMatchingPlayerIndexCache_OwnerMatchingPlayerIndexCache; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMatchingPlayerInfo_Success;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FindMatchingPlayerInfo_PlayerName;        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_FindMatchingPlayerInfo_MatchingPlayerInfo; // 0x00B8(0x0088)()
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo) == 0x000008, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo) == 0x000140, "Wrong size on BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, Success) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, PlayerName) == 0x000008, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, MatchingPlayerInfo) == 0x000018, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::MatchingPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, CallFunc_GetOwnerMatchingPlayerIndexCache_OwnerMatchingPlayerIndexCache) == 0x0000A0, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::CallFunc_GetOwnerMatchingPlayerIndexCache_OwnerMatchingPlayerIndexCache' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, CallFunc_FindMatchingPlayerInfo_Success) == 0x0000A4, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::CallFunc_FindMatchingPlayerInfo_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, CallFunc_FindMatchingPlayerInfo_PlayerName) == 0x0000A8, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::CallFunc_FindMatchingPlayerInfo_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo, CallFunc_FindMatchingPlayerInfo_MatchingPlayerInfo) == 0x0000B8, "Member 'BP_AJBInGameCharacter_MDB_C_FindOwnerMatchingPlayerInfo::CallFunc_FindMatchingPlayerInfo_MatchingPlayerInfo' has a wrong offset!");

// Function BP_AJBInGameCharacter_MDB.BP_AJBInGameCharacter_MDB_C.GetOwnerMatchingPlayerIndexCache
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache final
{
public:
	int32                                         OwnerMatchingPlayerIndexCache_0;                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache) == 0x000004, "Wrong alignment on BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache");
static_assert(sizeof(BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache) == 0x000004, "Wrong size on BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache");
static_assert(offsetof(BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache, OwnerMatchingPlayerIndexCache_0) == 0x000000, "Member 'BP_AJBInGameCharacter_MDB_C_GetOwnerMatchingPlayerIndexCache::OwnerMatchingPlayerIndexCache_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TestModeMenuItemValue

#include "Basic.hpp"

#include "WB_TestModeMenuItemValue_classes.hpp"
#include "WB_TestModeMenuItemValue_parameters.hpp"


namespace SDK
{

// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ExecuteUbergraph_WB_TestModeMenuItemValue
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuItemValue_C::ExecuteUbergraph_WB_TestModeMenuItemValue(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ExecuteUbergraph_WB_TestModeMenuItemValue");

	Params::WB_TestModeMenuItemValue_C_ExecuteUbergraph_WB_TestModeMenuItemValue Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.OnCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.OnDecide
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::OnDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "OnDecide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.GetValueText
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            OutText                                                (Parm, OutParm)

void UWB_TestModeMenuItemValue_C::GetValueText(class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "GetValueText");

	Params::WB_TestModeMenuItemValue_C_GetValueText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.IsDefaultValue
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuItemValue_C::IsDefaultValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "IsDefaultValue");

	Params::WB_TestModeMenuItemValue_C_IsDefaultValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ValueUp
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsMax                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModeMenuItemValue_C::ValueUp(bool* IsMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ValueUp");

	Params::WB_TestModeMenuItemValue_C_ValueUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMax != nullptr)
		*IsMax = Parms.IsMax;
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ModifyMaxValue
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::ModifyMaxValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ModifyMaxValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ModifyMinValue
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::ModifyMinValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ModifyMinValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ValueDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_TestModeMenuItemValue_C::ValueDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ValueDown");

	Params::WB_TestModeMenuItemValue_C_ValueDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.UpdateValueText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::UpdateValueText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "UpdateValueText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.SetSelectValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuItemValue_C::SetSelectValue(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "SetSelectValue");

	Params::WB_TestModeMenuItemValue_C_SetSelectValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.BlinkTextBlock
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TargetTextBlock                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuItemValue_C::BlinkTextBlock(class UTextBlock* TargetTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "BlinkTextBlock");

	Params::WB_TestModeMenuItemValue_C_BlinkTextBlock Parms{};

	Parms.TargetTextBlock = TargetTextBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.OnPrev
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::OnPrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "OnPrev");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.OnNext
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::OnNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "OnNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModeMenuItemValue_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "PreConstruct");

	Params::WB_TestModeMenuItemValue_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.ModifyLabelColor
// (Protected, BlueprintCallable, BlueprintEvent)

void UWB_TestModeMenuItemValue_C::ModifyLabelColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "ModifyLabelColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.CreateText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock**                      ValueText_0                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TestModeMenuItemValue_C::CreateText(class UTextBlock** ValueText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "CreateText");

	Params::WB_TestModeMenuItemValue_C_CreateText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ValueText_0 != nullptr)
		*ValueText_0 = Parms.ValueText_0;
}


// Function WB_TestModeMenuItemValue.WB_TestModeMenuItemValue_C.IsLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TestModeMenuItemValue_C::IsLock(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TestModeMenuItemValue_C", "IsLock");

	Params::WB_TestModeMenuItemValue_C_IsLock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBCrossFireHurricane

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BI_AJBCrossFireHurricane.BI_AJBCrossFireHurricane_C.TrySpawnAffecterClass
// 0x0040 (0x0040 - 0x0000)
struct BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveTime;                                        // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass) == 0x000010, "Wrong alignment on BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass");
static_assert(sizeof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass) == 0x000040, "Wrong size on BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass, SpawnTransform) == 0x000000, "Member 'BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass, Owner) == 0x000030, "Member 'BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass::Owner' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass, SerialNumber) == 0x000038, "Member 'BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass::SerialNumber' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass, ActiveTime) == 0x00003C, "Member 'BI_AJBCrossFireHurricane_C_TrySpawnAffecterClass::ActiveTime' has a wrong offset!");

// Function BI_AJBCrossFireHurricane.BI_AJBCrossFireHurricane_C.AddToMultipleLocation
// 0x0018 (0x0018 - 0x0000)
struct BI_AJBCrossFireHurricane_C_AddToMultipleLocation final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InScale;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSerialNumber;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDelayTime;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation) == 0x000004, "Wrong alignment on BI_AJBCrossFireHurricane_C_AddToMultipleLocation");
static_assert(sizeof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation) == 0x000018, "Wrong size on BI_AJBCrossFireHurricane_C_AddToMultipleLocation");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation, NewLocation) == 0x000000, "Member 'BI_AJBCrossFireHurricane_C_AddToMultipleLocation::NewLocation' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation, InScale) == 0x00000C, "Member 'BI_AJBCrossFireHurricane_C_AddToMultipleLocation::InScale' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation, InSerialNumber) == 0x000010, "Member 'BI_AJBCrossFireHurricane_C_AddToMultipleLocation::InSerialNumber' has a wrong offset!");
static_assert(offsetof(BI_AJBCrossFireHurricane_C_AddToMultipleLocation, InDelayTime) == 0x000014, "Member 'BI_AJBCrossFireHurricane_C_AddToMultipleLocation::InDelayTime' has a wrong offset!");

}


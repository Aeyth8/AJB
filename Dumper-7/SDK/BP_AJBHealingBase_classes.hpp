#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHealingBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBLongPressInteract_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBHealingBase.BP_AJBHealingBase_C
// 0x0050 (0x0270 - 0x0220)
class UBP_AJBHealingBase_C : public UBP_AJBLongPressInteract_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBHealingBase_C;                // 0x0220(0x0008)(Transient, DuplicateTransient)
	int32                                         HealingValue;                                      // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           HealParticleTag;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           HealSETag;                                         // 0x0238(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugForceInteractableON;                         // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           RecoveryParticleTag;                               // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   RecoveryParticleSocketName;                        // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          RecoveryParticle;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           HealSuccessVoiceTag;                               // 0x0260(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           HealStartVoiceTag;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBHealingBase(int32 EntryPoint);
	void ROC_NotifyHealValue(int32 HealValue);
	void PlayLongInteractSE();
	void MC_OnLongPressInteractEnded(class ABP_AJBInGameCharacter_C* InteractCharacterBP);
	void CheckInteractableTarget(class AActor* TargetActor, bool* bPossibleInteract);
	void OnLongPressInteractBegan(class AActor* InteractActor_0);
	void OnLongPressInteractEnded(bool bSuccess, bool bForceCancel, class AActor* InteractActor_0, bool bFlag01);
	void BeginInteract(bool* bSuccess);
	void GetPriority(int32* Priority);
	void GetText(bool* bSuccess, class FText* Text);
	void CheckInteractable(class ABP_AJBInGameCharacter_C* OperatorCharacter, class AActor* TargetActor, float BaseTraceLength, bool* bInteractable);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBHealingBase_C">();
	}
	static class UBP_AJBHealingBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBHealingBase_C>();
	}
};
static_assert(alignof(UBP_AJBHealingBase_C) == 0x000008, "Wrong alignment on UBP_AJBHealingBase_C");
static_assert(sizeof(UBP_AJBHealingBase_C) == 0x000270, "Wrong size on UBP_AJBHealingBase_C");
static_assert(offsetof(UBP_AJBHealingBase_C, UberGraphFrame_BP_AJBHealingBase_C) == 0x000220, "Member 'UBP_AJBHealingBase_C::UberGraphFrame_BP_AJBHealingBase_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, HealingValue) == 0x000228, "Member 'UBP_AJBHealingBase_C::HealingValue' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, HealParticleTag) == 0x000230, "Member 'UBP_AJBHealingBase_C::HealParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, HealSETag) == 0x000238, "Member 'UBP_AJBHealingBase_C::HealSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, bDebugForceInteractableON) == 0x000240, "Member 'UBP_AJBHealingBase_C::bDebugForceInteractableON' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, RecoveryParticleTag) == 0x000248, "Member 'UBP_AJBHealingBase_C::RecoveryParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, RecoveryParticleSocketName) == 0x000250, "Member 'UBP_AJBHealingBase_C::RecoveryParticleSocketName' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, RecoveryParticle) == 0x000258, "Member 'UBP_AJBHealingBase_C::RecoveryParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, HealSuccessVoiceTag) == 0x000260, "Member 'UBP_AJBHealingBase_C::HealSuccessVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBHealingBase_C, HealStartVoiceTag) == 0x000268, "Member 'UBP_AJBHealingBase_C::HealStartVoiceTag' has a wrong offset!");

}


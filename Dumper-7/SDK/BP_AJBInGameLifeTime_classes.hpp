#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameLifeTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameLifeTime.BP_AJBInGameLifeTime_C
// 0x0038 (0x0128 - 0x00F0)
class UBP_AJBInGameLifeTime_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         Rep_TotalLifeTime;                                 // 0x00F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBBattleGameState*                    GameState;                                         // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rep_TimespanOnSpawn;                               // 0x0108(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnLifeTimeElapsed;                                 // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bInactivatedDestroying;                            // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameLifeTime(int32 EntryPoint);
	void SetLifeTimeAsExpiredImmediately();
	void ResetLifeTimeExpired();
	void ActivateLifeTime();
	void ResetLifeTime(float LifeTimeNew);
	void FillLifeTime();
	void InactivateDestroying();
	void InactivateLifeTime();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	float RestLifeTime();
	bool LifeTimeExpired();
	void TotalLifeTime(float* Rep_LifeTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameLifeTime_C">();
	}
	static class UBP_AJBInGameLifeTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInGameLifeTime_C>();
	}
};
static_assert(alignof(UBP_AJBInGameLifeTime_C) == 0x000008, "Wrong alignment on UBP_AJBInGameLifeTime_C");
static_assert(sizeof(UBP_AJBInGameLifeTime_C) == 0x000128, "Wrong size on UBP_AJBInGameLifeTime_C");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBInGameLifeTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, Rep_TotalLifeTime) == 0x0000F8, "Member 'UBP_AJBInGameLifeTime_C::Rep_TotalLifeTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, GameState) == 0x000100, "Member 'UBP_AJBInGameLifeTime_C::GameState' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, Rep_TimespanOnSpawn) == 0x000108, "Member 'UBP_AJBInGameLifeTime_C::Rep_TimespanOnSpawn' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, OnLifeTimeElapsed) == 0x000110, "Member 'UBP_AJBInGameLifeTime_C::OnLifeTimeElapsed' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTime_C, bInactivatedDestroying) == 0x000120, "Member 'UBP_AJBInGameLifeTime_C::bInactivatedDestroying' has a wrong offset!");

}


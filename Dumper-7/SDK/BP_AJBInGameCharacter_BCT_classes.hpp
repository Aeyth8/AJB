#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_BCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBInGameCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameCharacter_BCT.BP_AJBInGameCharacter_BCT_C
// 0x0020 (0x17D0 - 0x17B0)
class ABP_AJBInGameCharacter_BCT_C final : public ABP_AJBInGameCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameCharacter_BCT_C;        // 0x17A8(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBAccompanySFGSkill_C*             BP_AJBAccompanySFGSkill;                           // 0x17B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBZipRushSkill_C*                  BP_AJBZipRushSkill;                                // 0x17B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBStickyDiveSkill_C*               BP_AJBStickyDiveSkill;                             // 0x17C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBZipperSkill_C*                   BP_AJBZipperSkill;                                 // 0x17C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameCharacter_BCT(int32 EntryPoint);
	void ChangeStealth(bool bEnable);
	void ReleasedButton_ActiveSpecial();
	void PressedButton_ActiveSpecial();
	void PressedButton_ActiveBase();
	void ReleasedButton_Basic();
	void PressedButton_Ultimate();
	void PressedButton_Basic();
	void OnReleasedInteract();
	void OnReleasedCrouch();
	void OnPressedCrouch();
	void OnPressedJump();
	void OnReleasedJump();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void UserConstructionScript();
	void EndCondition(const struct FGameplayTag& Condition);
	void BeginCondition(const struct FGameplayTag& Condition, class UObject* Causer, bool bTriggeredByStand, const struct FGameplayTag& CauserType, int32 SerialNumber, class UObject* PropagationSource);
	void GetGenerateParticleLocation(struct FVector* Location);
	void OnBeforeInteract(bool* bShouldInteract);
	void OnCharacterActive();
	void ShouldRecordHistoryReplayServer(bool* bShouldRecord);
	void IgnoreAttackHitNotifyOnAreaIn(bool* bIgnore);
	void GetTargetLocation(struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameCharacter_BCT_C">();
	}
	static class ABP_AJBInGameCharacter_BCT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameCharacter_BCT_C>();
	}
};
static_assert(alignof(ABP_AJBInGameCharacter_BCT_C) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_BCT_C");
static_assert(sizeof(ABP_AJBInGameCharacter_BCT_C) == 0x0017D0, "Wrong size on ABP_AJBInGameCharacter_BCT_C");
static_assert(offsetof(ABP_AJBInGameCharacter_BCT_C, UberGraphFrame_BP_AJBInGameCharacter_BCT_C) == 0x0017A8, "Member 'ABP_AJBInGameCharacter_BCT_C::UberGraphFrame_BP_AJBInGameCharacter_BCT_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_BCT_C, BP_AJBAccompanySFGSkill) == 0x0017B0, "Member 'ABP_AJBInGameCharacter_BCT_C::BP_AJBAccompanySFGSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_BCT_C, BP_AJBZipRushSkill) == 0x0017B8, "Member 'ABP_AJBInGameCharacter_BCT_C::BP_AJBZipRushSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_BCT_C, BP_AJBStickyDiveSkill) == 0x0017C0, "Member 'ABP_AJBInGameCharacter_BCT_C::BP_AJBStickyDiveSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_BCT_C, BP_AJBZipperSkill) == 0x0017C8, "Member 'ABP_AJBInGameCharacter_BCT_C::BP_AJBZipperSkill' has a wrong offset!");

}


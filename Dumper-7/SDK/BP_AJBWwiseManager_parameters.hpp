#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBWwiseManager

#include "Basic.hpp"

#include "E_WwiseManagerPlayMode_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_WwiseEventInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ExecuteUbergraph_BP_AJBWwiseManager
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag3;                      // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location3;                      // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag2;                      // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_PostWwiseEventOnLocal_AkComponent;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBWwiseManager_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag1;                      // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bKeepRelative1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_SceneComponentToAttach1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_PostWwiseEventAttachedOnLocal_AkComponent; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bKeepRelative;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_SceneComponentToAttach;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBWwiseManager_C*>          CallFunc_GetAllActorsOfClass_OutActors1;           // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBWwiseManager_C*                  CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBWwiseManager_C*                  CallFunc_Array_Get_Item1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager");
static_assert(sizeof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager) == 0x000100, "Wrong size on BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, EntryPoint) == 0x000000, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_EventTag3) == 0x000008, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_EventTag3' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_Location3) == 0x000010, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_Location3' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_EventTag2) == 0x000020, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_EventTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_Location2) == 0x000028, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_PostWwiseEventOnLocal_AkComponent) == 0x000038, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_PostWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, Temp_int_Loop_Counter_Variable1) == 0x000060, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_EventTag1) == 0x000068, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_EventTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_Location1) == 0x000070, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_bKeepRelative1) == 0x00007C, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_bKeepRelative1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_SceneComponentToAttach1) == 0x000080, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_SceneComponentToAttach1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_PostWwiseEventAttachedOnLocal_AkComponent) == 0x000088, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_PostWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Add_IntInt_ReturnValue1) == 0x000090, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_EventTag) == 0x000098, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_Location) == 0x0000A0, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_bKeepRelative) == 0x0000AC, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_bKeepRelative' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, K2Node_CustomEvent_SceneComponentToAttach) == 0x0000B0, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::K2Node_CustomEvent_SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_GetAllActorsOfClass_OutActors1) == 0x0000B8, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Array_Length_ReturnValue1) == 0x0000D0, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Less_IntInt_ReturnValue1) == 0x0000D4, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D5, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, Temp_int_Array_Index_Variable1) == 0x0000D8, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_Array_Get_Item1) == 0x0000E0, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x0000E8, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_GetAJBGameInstance_bSuccess) == 0x0000E9, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0000F0, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager, CallFunc_IsPlayingReplay_ReturnValue) == 0x0000F8, "Member 'BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROS_PostWwiseEventAttached
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKeepRelative;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached");
static_assert(sizeof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached) == 0x000020, "Wrong size on BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached, bKeepRelative) == 0x000014, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached::bKeepRelative' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached, SceneComponentToAttach) == 0x000018, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached::SceneComponentToAttach' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROC_PostWwiseEventAttached
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKeepRelative;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached");
static_assert(sizeof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached) == 0x000020, "Wrong size on BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached, bKeepRelative) == 0x000014, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached::bKeepRelative' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached, SceneComponentToAttach) == 0x000018, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached::SceneComponentToAttach' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROS_PostWwiseEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBWwiseManager_C_ROS_PostWwiseEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_ROS_PostWwiseEvent) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_ROS_PostWwiseEvent");
static_assert(sizeof(BP_AJBWwiseManager_C_ROS_PostWwiseEvent) == 0x000018, "Wrong size on BP_AJBWwiseManager_C_ROS_PostWwiseEvent");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEvent, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEvent::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROS_PostWwiseEvent, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_ROS_PostWwiseEvent::Location' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROC_PostWwiseEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBWwiseManager_C_ROC_PostWwiseEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_ROC_PostWwiseEvent) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_ROC_PostWwiseEvent");
static_assert(sizeof(BP_AJBWwiseManager_C_ROC_PostWwiseEvent) == 0x000018, "Wrong size on BP_AJBWwiseManager_C_ROC_PostWwiseEvent");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEvent, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEvent::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_ROC_PostWwiseEvent, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_ROC_PostWwiseEvent::Location' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventOnLocal
// 0x0108 (0x0108 - 0x0000)
struct BP_AJBWwiseManager_C_PostWwiseEventOnLocal final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoPost;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoDestroy;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AkComponent;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_WwiseEventInfo                     CallFunc_GetWwiseEventInfo_WwiseEventInfo;         // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0088(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x009C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select1_Default;                            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_PostWwiseEventOnLocal");
static_assert(sizeof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal) == 0x000108, "Wrong size on BP_AJBWwiseManager_C_PostWwiseEventOnLocal");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, AutoPost) == 0x000014, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::AutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, AutoDestroy) == 0x000015, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::AutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, AkComponent) == 0x000018, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_GetWwiseEventInfo_WwiseEventInfo) == 0x000020, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_GetWwiseEventInfo_WwiseEventInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Concat_StrStr_ReturnValue1) == 0x000058, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Not_PreBool_ReturnValue1) == 0x000068, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Concat_StrStr_ReturnValue2) == 0x000070, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000080, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_struct_Variable) == 0x000088, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_struct_Variable1) == 0x00009C, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_bool_Variable) == 0x0000AC, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_string_Variable) == 0x0000B0, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, K2Node_Select_Default) == 0x0000C0, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_string_Variable1) == 0x0000D0, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, Temp_bool_Variable1) == 0x0000E0, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, K2Node_Select1_Default) == 0x0000E8, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnLocal, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000F8, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnLocal::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.GetWwiseEventInfo
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBWwiseManager_C_GetWwiseEventInfo final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FST_WwiseEventInfo                     WwiseEventInfo;                                    // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_WwiseEventInfo                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBWwiseManager_C_GetWwiseEventInfo) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_GetWwiseEventInfo");
static_assert(sizeof(BP_AJBWwiseManager_C_GetWwiseEventInfo) == 0x000048, "Wrong size on BP_AJBWwiseManager_C_GetWwiseEventInfo");
static_assert(offsetof(BP_AJBWwiseManager_C_GetWwiseEventInfo, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_GetWwiseEventInfo::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_GetWwiseEventInfo, WwiseEventInfo) == 0x000008, "Member 'BP_AJBWwiseManager_C_GetWwiseEventInfo::WwiseEventInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_GetWwiseEventInfo, CallFunc_GetTagName_ReturnValue) == 0x000020, "Member 'BP_AJBWwiseManager_C_GetWwiseEventInfo::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_GetWwiseEventInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_AJBWwiseManager_C_GetWwiseEventInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_GetWwiseEventInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'BP_AJBWwiseManager_C_GetWwiseEventInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventAttachedOnLocal
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoPost;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoDestroy;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bKeepRelative;                                     // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkComponent;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_PostWwiseEventOnLocal_AkComponent;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAttachmentRule                               Temp_byte_Variable1;                               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               K2Node_Select_Default;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal");
static_assert(sizeof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal) == 0x000040, "Wrong size on BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, AutoPost) == 0x000014, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::AutoPost' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, AutoDestroy) == 0x000015, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::AutoDestroy' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, bKeepRelative) == 0x000016, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::bKeepRelative' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, SceneComponentToAttach) == 0x000018, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, AkComponent) == 0x000020, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, Temp_bool_Variable) == 0x000028, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, CallFunc_PostWwiseEventOnLocal_AkComponent) == 0x000030, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::CallFunc_PostWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, Temp_byte_Variable) == 0x000038, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, Temp_byte_Variable1) == 0x00003A, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, K2Node_Select_Default) == 0x00003B, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00003C, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventOnAll
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBWwiseManager_C_PostWwiseEventOnAll final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_PostWwiseEventOnLocal_AkComponent;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_PostWwiseEventOnAll) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_PostWwiseEventOnAll");
static_assert(sizeof(BP_AJBWwiseManager_C_PostWwiseEventOnAll) == 0x000020, "Wrong size on BP_AJBWwiseManager_C_PostWwiseEventOnAll");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnAll, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnAll::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnAll, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnAll::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnAll, CallFunc_IsServer_ReturnValue) == 0x000014, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnAll::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventOnAll, CallFunc_PostWwiseEventOnLocal_AkComponent) == 0x000018, "Member 'BP_AJBWwiseManager_C_PostWwiseEventOnAll::CallFunc_PostWwiseEventOnLocal_AkComponent' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventAttachedOnAll
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKeepRelative;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponentToAttach;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_PostWwiseEventAttachedOnLocal_AkComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll");
static_assert(sizeof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll) == 0x000030, "Wrong size on BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, Location) == 0x000008, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, bKeepRelative) == 0x000014, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::bKeepRelative' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, SceneComponentToAttach) == 0x000018, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::SceneComponentToAttach' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, CallFunc_IsServer_ReturnValue) == 0x000020, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll, CallFunc_PostWwiseEventAttachedOnLocal_AkComponent) == 0x000028, "Member 'BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll::CallFunc_PostWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseBGMEvent
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBWwiseManager_C_PostWwiseBGMEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldPlayFromStart;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_WwiseEventInfo                     CallFunc_GetWwiseEventInfo_WwiseEventInfo;         // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetLastPlayedWwiseBGMInfo_EventTag;       // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID;      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBWwiseManager_C_PostWwiseBGMEvent) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_PostWwiseBGMEvent");
static_assert(sizeof(BP_AJBWwiseManager_C_PostWwiseBGMEvent) == 0x000078, "Wrong size on BP_AJBWwiseManager_C_PostWwiseBGMEvent");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, EventTag) == 0x000000, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, bShouldPlayFromStart) == 0x000008, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::bShouldPlayFromStart' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_GetWwiseEventInfo_WwiseEventInfo) == 0x000010, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_GetWwiseEventInfo_WwiseEventInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_Not_PreBool_ReturnValue1) == 0x000040, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_Concat_StrStr_ReturnValue1) == 0x000048, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_PostEventAtLocation_ReturnValue) == 0x000058, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_GetAJBGameInstance_bSuccess) == 0x00005C, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000060, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_GetLastPlayedWwiseBGMInfo_EventTag) == 0x000068, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_GetLastPlayedWwiseBGMInfo_EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID) == 0x000070, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000074, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_Not_PreBool_ReturnValue2) == 0x000075, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_PostWwiseBGMEvent, CallFunc_BooleanOR_ReturnValue) == 0x000076, "Member 'BP_AJBWwiseManager_C_PostWwiseBGMEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.StopWwiseBGMEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBWwiseManager_C_StopWwiseBGMEvent final
{
public:
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetLastPlayedWwiseBGMInfo_EventTag;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_StopWwiseBGMEvent) == 0x000008, "Wrong alignment on BP_AJBWwiseManager_C_StopWwiseBGMEvent");
static_assert(sizeof(BP_AJBWwiseManager_C_StopWwiseBGMEvent) == 0x000020, "Wrong size on BP_AJBWwiseManager_C_StopWwiseBGMEvent");
static_assert(offsetof(BP_AJBWwiseManager_C_StopWwiseBGMEvent, CallFunc_GetAJBGameInstance_bSuccess) == 0x000000, "Member 'BP_AJBWwiseManager_C_StopWwiseBGMEvent::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_StopWwiseBGMEvent, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'BP_AJBWwiseManager_C_StopWwiseBGMEvent::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_StopWwiseBGMEvent, CallFunc_GetLastPlayedWwiseBGMInfo_EventTag) == 0x000010, "Member 'BP_AJBWwiseManager_C_StopWwiseBGMEvent::CallFunc_GetLastPlayedWwiseBGMInfo_EventTag' has a wrong offset!");
static_assert(offsetof(BP_AJBWwiseManager_C_StopWwiseBGMEvent, CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID) == 0x000018, "Member 'BP_AJBWwiseManager_C_StopWwiseBGMEvent::CallFunc_GetLastPlayedWwiseBGMInfo_PlayingID' has a wrong offset!");

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ChangePlayMode
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBWwiseManager_C_ChangePlayMode final
{
public:
	E_WwiseManagerPlayMode                        PlayMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBWwiseManager_C_ChangePlayMode) == 0x000001, "Wrong alignment on BP_AJBWwiseManager_C_ChangePlayMode");
static_assert(sizeof(BP_AJBWwiseManager_C_ChangePlayMode) == 0x000001, "Wrong size on BP_AJBWwiseManager_C_ChangePlayMode");
static_assert(offsetof(BP_AJBWwiseManager_C_ChangePlayMode, PlayMode_0) == 0x000000, "Member 'BP_AJBWwiseManager_C_ChangePlayMode::PlayMode_0' has a wrong offset!");

}


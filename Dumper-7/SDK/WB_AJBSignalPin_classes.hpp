#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBSignalPin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_WidgetSafeZone_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_AJBSignalPin.WB_AJBSignalPin_C
// 0x00D0 (0x02D8 - 0x0208)
class UWB_AJBSignalPin_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       VanishFade_TimeOut;                                // 0x0210(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       VanishFade;                                        // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_BottomOutViewArrow;                       // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_LeftOutViewArrow;                         // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_RightOutViewArrow;                        // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_TopOutViewArrow;                          // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconWidgetBP;                                      // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBButton*                             RemoveButton;                                      // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_1;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FST_WidgetSafeZone                     SafeZoneSize;                                      // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                PinLocation3D;                                     // 0x0268(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScreenPosHeaderHeightLimit;                        // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TargetScreenPosition;                              // 0x0278(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentScreenPosition;                             // 0x0280(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CacheOrthant;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableOutViewUI;                                  // 0x028C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutViewWidgetOpacity;                              // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultPinSize;                                    // 0x0294(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinScaleDistance;                                  // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxScaleDistance;                                  // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 IconWidgetClass;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGameplayTag                           SignalPinType;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ViewportMode;                                      // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnClickRemoveButton;                               // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         MinBlurOffset;                                     // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxBlurOffset;                                     // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_AJBSignalPin(int32 EntryPoint);
	void BndEvt__AJBButton_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void UpdatePinScale();
	void UpdateArrowVisibility(bool IsOutViewPosition, const struct FVector2D& ScreenPosition);
	void SetPinLocation(const struct FVector& PinLocation3D_0);
	void UpdateScreenPosition();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetIsPair(bool bIsPair);
	void UpdateBlurOffset(float BlurOffset);
	void SetSignalType(const struct FGameplayTag& SignalTypeTag);
	void UpdateSize(const struct FVector2D& Size);
	void ClampScreenPosition(struct FVector2D& Position, struct FVector2D* NewPosition);
	void GetPinPosition();
	bool IsInViewportPositionFun(const struct FVector2D& ScreenPosition);
	struct FVector2D GetDpiScaledDesiredSize();
	struct FVector2D GetTargetPositionOutOfView(const struct FVector& Location);
	void GetOrthant(const struct FVector2D& ScreenPosition, int32* Orthant);
	void PlayVanishAnimation(bool bIsTimeUp, float* AnimationLength);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_AJBSignalPin_C">();
	}
	static class UWB_AJBSignalPin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_AJBSignalPin_C>();
	}
};
static_assert(alignof(UWB_AJBSignalPin_C) == 0x000008, "Wrong alignment on UWB_AJBSignalPin_C");
static_assert(sizeof(UWB_AJBSignalPin_C) == 0x0002D8, "Wrong size on UWB_AJBSignalPin_C");
static_assert(offsetof(UWB_AJBSignalPin_C, UberGraphFrame) == 0x000208, "Member 'UWB_AJBSignalPin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, VanishFade_TimeOut) == 0x000210, "Member 'UWB_AJBSignalPin_C::VanishFade_TimeOut' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, VanishFade) == 0x000218, "Member 'UWB_AJBSignalPin_C::VanishFade' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, AJBImage_BottomOutViewArrow) == 0x000220, "Member 'UWB_AJBSignalPin_C::AJBImage_BottomOutViewArrow' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, AJBImage_LeftOutViewArrow) == 0x000228, "Member 'UWB_AJBSignalPin_C::AJBImage_LeftOutViewArrow' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, AJBImage_RightOutViewArrow) == 0x000230, "Member 'UWB_AJBSignalPin_C::AJBImage_RightOutViewArrow' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, AJBImage_TopOutViewArrow) == 0x000238, "Member 'UWB_AJBSignalPin_C::AJBImage_TopOutViewArrow' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, IconWidgetBP) == 0x000240, "Member 'UWB_AJBSignalPin_C::IconWidgetBP' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, RemoveButton) == 0x000248, "Member 'UWB_AJBSignalPin_C::RemoveButton' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, RetainerBox_1) == 0x000250, "Member 'UWB_AJBSignalPin_C::RetainerBox_1' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, SafeZoneSize) == 0x000258, "Member 'UWB_AJBSignalPin_C::SafeZoneSize' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, PinLocation3D) == 0x000268, "Member 'UWB_AJBSignalPin_C::PinLocation3D' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, ScreenPosHeaderHeightLimit) == 0x000274, "Member 'UWB_AJBSignalPin_C::ScreenPosHeaderHeightLimit' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, TargetScreenPosition) == 0x000278, "Member 'UWB_AJBSignalPin_C::TargetScreenPosition' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, CurrentScreenPosition) == 0x000280, "Member 'UWB_AJBSignalPin_C::CurrentScreenPosition' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, CacheOrthant) == 0x000288, "Member 'UWB_AJBSignalPin_C::CacheOrthant' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, bEnableOutViewUI) == 0x00028C, "Member 'UWB_AJBSignalPin_C::bEnableOutViewUI' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, OutViewWidgetOpacity) == 0x000290, "Member 'UWB_AJBSignalPin_C::OutViewWidgetOpacity' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, DefaultPinSize) == 0x000294, "Member 'UWB_AJBSignalPin_C::DefaultPinSize' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, MinScaleDistance) == 0x00029C, "Member 'UWB_AJBSignalPin_C::MinScaleDistance' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, MaxScaleDistance) == 0x0002A0, "Member 'UWB_AJBSignalPin_C::MaxScaleDistance' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, IconWidgetClass) == 0x0002A8, "Member 'UWB_AJBSignalPin_C::IconWidgetClass' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, SignalPinType) == 0x0002B0, "Member 'UWB_AJBSignalPin_C::SignalPinType' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, ViewportMode) == 0x0002B8, "Member 'UWB_AJBSignalPin_C::ViewportMode' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, OnClickRemoveButton) == 0x0002C0, "Member 'UWB_AJBSignalPin_C::OnClickRemoveButton' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, MinBlurOffset) == 0x0002D0, "Member 'UWB_AJBSignalPin_C::MinBlurOffset' has a wrong offset!");
static_assert(offsetof(UWB_AJBSignalPin_C, MaxBlurOffset) == 0x0002D4, "Member 'UWB_AJBSignalPin_C::MaxBlurOffset' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRoadRollerPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPreviewBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBRoadRollerPreview.BP_AJBRoadRollerPreview_C
// 0x0028 (0x0390 - 0x0368)
class ABP_AJBRoadRollerPreview_C final : public ABP_AJBPreviewBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBRoadRollerPreview_C;          // 0x0368(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   PreviewSphereInner;                                // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreviewSphereOuter;                                // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        ImpulseDecal;                                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Impulse;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBRoadRollerPreview(int32 EntryPoint);
	void ChangeRoadRollerVisibility(bool bEnable);
	void ReceiveBeginPlay();
	void SetDecalParameter();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBRoadRollerPreview_C">();
	}
	static class ABP_AJBRoadRollerPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBRoadRollerPreview_C>();
	}
};
static_assert(alignof(ABP_AJBRoadRollerPreview_C) == 0x000008, "Wrong alignment on ABP_AJBRoadRollerPreview_C");
static_assert(sizeof(ABP_AJBRoadRollerPreview_C) == 0x000390, "Wrong size on ABP_AJBRoadRollerPreview_C");
static_assert(offsetof(ABP_AJBRoadRollerPreview_C, UberGraphFrame_BP_AJBRoadRollerPreview_C) == 0x000368, "Member 'ABP_AJBRoadRollerPreview_C::UberGraphFrame_BP_AJBRoadRollerPreview_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBRoadRollerPreview_C, PreviewSphereInner) == 0x000370, "Member 'ABP_AJBRoadRollerPreview_C::PreviewSphereInner' has a wrong offset!");
static_assert(offsetof(ABP_AJBRoadRollerPreview_C, PreviewSphereOuter) == 0x000378, "Member 'ABP_AJBRoadRollerPreview_C::PreviewSphereOuter' has a wrong offset!");
static_assert(offsetof(ABP_AJBRoadRollerPreview_C, ImpulseDecal) == 0x000380, "Member 'ABP_AJBRoadRollerPreview_C::ImpulseDecal' has a wrong offset!");
static_assert(offsetof(ABP_AJBRoadRollerPreview_C, DMI_Impulse) == 0x000388, "Member 'ABP_AJBRoadRollerPreview_C::DMI_Impulse' has a wrong offset!");

}


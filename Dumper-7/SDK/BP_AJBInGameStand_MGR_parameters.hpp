#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_MGR

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_MGR.BP_AJBInGameStand_MGR_C.GetDummyShotLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_MGR_C_GetDummyShotLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetShotLocation_Locations;                // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_MGR_C_GetDummyShotLocation");
static_assert(sizeof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation) == 0x000030, "Wrong size on BP_AJBInGameStand_MGR_C_GetDummyShotLocation");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_MGR_C_GetDummyShotLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation, CallFunc_GetShotLocation_Locations) == 0x000010, "Member 'BP_AJBInGameStand_MGR_C_GetDummyShotLocation::CallFunc_GetShotLocation_Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_MGR_C_GetDummyShotLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetDummyShotLocation, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_AJBInGameStand_MGR_C_GetDummyShotLocation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGameStand_MGR.BP_AJBInGameStand_MGR_C.ShouldShowNGPoint
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_MGR_C_ShouldShowNGPoint final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_MGR_C_ShouldShowNGPoint) == 0x000001, "Wrong alignment on BP_AJBInGameStand_MGR_C_ShouldShowNGPoint");
static_assert(sizeof(BP_AJBInGameStand_MGR_C_ShouldShowNGPoint) == 0x000001, "Wrong size on BP_AJBInGameStand_MGR_C_ShouldShowNGPoint");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_ShouldShowNGPoint, bResult) == 0x000000, "Member 'BP_AJBInGameStand_MGR_C_ShouldShowNGPoint::bResult' has a wrong offset!");

// Function BP_AJBInGameStand_MGR.BP_AJBInGameStand_MGR_C.GetShutTraceRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_MGR_C_GetShutTraceRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_MGR_C_GetShutTraceRadius) == 0x000004, "Wrong alignment on BP_AJBInGameStand_MGR_C_GetShutTraceRadius");
static_assert(sizeof(BP_AJBInGameStand_MGR_C_GetShutTraceRadius) == 0x000004, "Wrong size on BP_AJBInGameStand_MGR_C_GetShutTraceRadius");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShutTraceRadius, Radius) == 0x000000, "Member 'BP_AJBInGameStand_MGR_C_GetShutTraceRadius::Radius' has a wrong offset!");

// Function BP_AJBInGameStand_MGR.BP_AJBInGameStand_MGR_C.GetShotLocation
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameStand_MGR_C_GetShotLocation final
{
public:
	bool                                          bConsiderCharacterCapsuleRadius;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SkillTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locations;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FVector>                        TempReturnLocations;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USceneComponent*>                TempComponents;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_MGR_C_GetShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_MGR_C_GetShotLocation");
static_assert(sizeof(BP_AJBInGameStand_MGR_C_GetShotLocation) == 0x000078, "Wrong size on BP_AJBInGameStand_MGR_C_GetShotLocation");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, bConsiderCharacterCapsuleRadius) == 0x000000, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::bConsiderCharacterCapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, SkillTag) == 0x000008, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, Locations) == 0x000010, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, TempReturnLocations) == 0x000020, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::TempReturnLocations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, TempComponents) == 0x000030, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::TempComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_GetComponentsByTag_ReturnValue) == 0x000060, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_GetShotLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_AJBInGameStand_MGR_C_GetShotLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_MGR.BP_AJBInGameStand_MGR_C.CheckLocallyControlled
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_MGR_C_CheckLocallyControlled final
{
public:
	bool                                          bLocallyControlled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled) == 0x000008, "Wrong alignment on BP_AJBInGameStand_MGR_C_CheckLocallyControlled");
static_assert(sizeof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled) == 0x000038, "Wrong size on BP_AJBInGameStand_MGR_C_CheckLocallyControlled");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, bLocallyControlled) == 0x000000, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::bLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000028, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, CallFunc_HasLocalSharedController_ReturnValue) == 0x000031, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_MGR_C_CheckLocallyControlled, CallFunc_IsPlayerController_ReturnValue) == 0x000032, "Member 'BP_AJBInGameStand_MGR_C_CheckLocallyControlled::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");

}


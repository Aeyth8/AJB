#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFerocious

#include "Basic.hpp"

#include "BP_AJBFerocious_classes.hpp"
#include "BP_AJBFerocious_parameters.hpp"


namespace SDK
{

// Function BP_AJBFerocious.BP_AJBFerocious_C.ExecuteUbergraph_BP_AJBFerocious
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBFerocious_C::ExecuteUbergraph_BP_AJBFerocious(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ExecuteUbergraph_BP_AJBFerocious");

	Params::BP_AJBFerocious_C_ExecuteUbergraph_BP_AJBFerocious Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.ActiveFerociousUI
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::ActiveFerociousUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ActiveFerociousUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.UnbindKillOnActive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::UnbindKillOnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "UnbindKillOnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.BindKillOnActive
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::BindKillOnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "BindKillOnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.OnKill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   KilledCharacterId                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFirstBlood                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   UltimateSkillSerialNumberIfInEffect                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeadPlayerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastDefeated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPlayerKill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpecialKill                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelfKill                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::OnKill(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerId, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill, bool bSelfKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "OnKill");

	Params::BP_AJBFerocious_C_OnKill Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.SerialNumber = SerialNumber;
	Parms.AttackDistance = AttackDistance;
	Parms.KilledCharacterId = KilledCharacterId;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bFirstBlood = bFirstBlood;
	Parms.UltimateSkillSerialNumberIfInEffect = UltimateSkillSerialNumberIfInEffect;
	Parms.ElapsedTime = ElapsedTime;
	Parms.DeadPlayerId = DeadPlayerId;
	Parms.bIsLastDefeated = bIsLastDefeated;
	Parms.bPlayerKill = bPlayerKill;
	Parms.bSpecialKill = bSpecialKill;
	Parms.bSelfKill = bSelfKill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.TryDestroyStandLoopParticle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::TryDestroyStandLoopParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "TryDestroyStandLoopParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.ChangeFerociousStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::ChangeFerociousStatus(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ChangeFerociousStatus");

	Params::BP_AJBFerocious_C_ChangeFerociousStatus Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBFerocious_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ReceiveEndPlay");

	Params::BP_AJBFerocious_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.OnContinuedParticleInactivated
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::OnContinuedParticleInactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "OnContinuedParticleInactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.SpawnStandEndParticle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::SpawnStandEndParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "SpawnStandEndParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.OnRelatedCharacterBecomeLastSurvivor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBFerocious_C::OnRelatedCharacterBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "OnRelatedCharacterBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.ActiveContinuedParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActiveForOwner                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bActiveForMovableStand                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::ActiveContinuedParticle(bool bActiveForOwner, bool bActiveForMovableStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ActiveContinuedParticle");

	Params::BP_AJBFerocious_C_ActiveContinuedParticle Parms{};

	Parms.bActiveForOwner = bActiveForOwner;
	Parms.bActiveForMovableStand = bActiveForMovableStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBFerocious_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.OnActionInactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::OnActionInactivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "OnActionInactivate");

	Params::BP_AJBFerocious_C_OnActionInactivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.OnActionActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::OnActionActivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "OnActionActivate");

	Params::BP_AJBFerocious_C_OnActionActivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBFerocious.BP_AJBFerocious_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBFerocious_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBFerocious_C", "NotifyTheWorld");

	Params::BP_AJBFerocious_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}

}


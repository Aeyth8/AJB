#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFerociousTemperamentSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBFerociousTemperamentSkill.BP_AJBFerociousTemperamentSkill_C
// 0x0080 (0x0268 - 0x01E8)
class UBP_AJBFerociousTemperamentSkill_C final : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBFerociousTemperamentSkill_C;  // 0x01E8(0x0008)(Transient, DuplicateTransient)
	class UAnimMontage*                           AM_StandAnimation;                                 // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StandBeginParticleTag;                             // 0x01F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          StandBeginParticle;                                // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActionTime;                                        // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          AS_StandActionAnimation;                           // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StandAnimationSection_Ready;                       // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StandAnimationSection_Action;                      // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompPlayedActionSection;                          // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReadyAnimationTime;                                // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StartVoiceTag;                                     // 0x0230(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         StartPassiveTime;                                  // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompAddedPassive;                                 // 0x023C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandleBeginPassive;                           // 0x0240(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGameplayTag                           PassiveTag;                                        // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bReservedCancel_Local;                             // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PassiveBuffClass;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultActiveTime;                                 // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanceledByProhibition;                            // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBFerociousTemperamentSkill(int32 EntryPoint);
	void OnSkillProhibitionAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag);
	void OnAddPassive_Server();
	void BeginPassive();
	void ROS_AddPassive(bool bShoudUpdateLeftActiveTime);
	void AddPassive();
	void OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag);
	void MC_StateEnd(bool bCancel);
	void ROS_StateEnd(bool bCancel);
	void OnStateEnd(bool bCancel);
	void StateTick();
	void TickState_Action();
	void StateEnd(bool bCancel);
	void BeginState_Action();
	void OnCompleted_7B45FB9D406D5826C78546BC18F683E9(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BC18F683E9(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BC18F683E9(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BC18F683E9(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BC18F683E9(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BCF728BB46(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCF728BB46(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCF728BB46(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCF728BB46(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCF728BB46(class FName NotifyName);
	void SpawnBeginParticle();
	void DestroyBeginParticle();
	void OnDisconnected();
	void ReceiveBeginPlay();
	void OnCancel();
	void OnActive();
	void ReceiveTick(float DeltaSeconds);
	void OnRelatedCharacterBecomeLastSurvivor();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void InitializeVariables();
	void GetDuration(float* Duration);
	void GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP);
	void GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBFerociousTemperamentSkill_C">();
	}
	static class UBP_AJBFerociousTemperamentSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBFerociousTemperamentSkill_C>();
	}
};
static_assert(alignof(UBP_AJBFerociousTemperamentSkill_C) == 0x000008, "Wrong alignment on UBP_AJBFerociousTemperamentSkill_C");
static_assert(sizeof(UBP_AJBFerociousTemperamentSkill_C) == 0x000268, "Wrong size on UBP_AJBFerociousTemperamentSkill_C");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, UberGraphFrame_BP_AJBFerociousTemperamentSkill_C) == 0x0001E8, "Member 'UBP_AJBFerociousTemperamentSkill_C::UberGraphFrame_BP_AJBFerociousTemperamentSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, AM_StandAnimation) == 0x0001F0, "Member 'UBP_AJBFerociousTemperamentSkill_C::AM_StandAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StandBeginParticleTag) == 0x0001F8, "Member 'UBP_AJBFerociousTemperamentSkill_C::StandBeginParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StandBeginParticle) == 0x000200, "Member 'UBP_AJBFerociousTemperamentSkill_C::StandBeginParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, ActionTime) == 0x000208, "Member 'UBP_AJBFerociousTemperamentSkill_C::ActionTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, AS_StandActionAnimation) == 0x000210, "Member 'UBP_AJBFerociousTemperamentSkill_C::AS_StandActionAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StandAnimationSection_Ready) == 0x000218, "Member 'UBP_AJBFerociousTemperamentSkill_C::StandAnimationSection_Ready' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StandAnimationSection_Action) == 0x000220, "Member 'UBP_AJBFerociousTemperamentSkill_C::StandAnimationSection_Action' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, bCompPlayedActionSection) == 0x000228, "Member 'UBP_AJBFerociousTemperamentSkill_C::bCompPlayedActionSection' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, ReadyAnimationTime) == 0x00022C, "Member 'UBP_AJBFerociousTemperamentSkill_C::ReadyAnimationTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StartVoiceTag) == 0x000230, "Member 'UBP_AJBFerociousTemperamentSkill_C::StartVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, StartPassiveTime) == 0x000238, "Member 'UBP_AJBFerociousTemperamentSkill_C::StartPassiveTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, bCompAddedPassive) == 0x00023C, "Member 'UBP_AJBFerociousTemperamentSkill_C::bCompAddedPassive' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, TimerHandleBeginPassive) == 0x000240, "Member 'UBP_AJBFerociousTemperamentSkill_C::TimerHandleBeginPassive' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, PassiveTag) == 0x000248, "Member 'UBP_AJBFerociousTemperamentSkill_C::PassiveTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, bReservedCancel_Local) == 0x000250, "Member 'UBP_AJBFerociousTemperamentSkill_C::bReservedCancel_Local' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, PassiveBuffClass) == 0x000258, "Member 'UBP_AJBFerociousTemperamentSkill_C::PassiveBuffClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, DefaultActiveTime) == 0x000260, "Member 'UBP_AJBFerociousTemperamentSkill_C::DefaultActiveTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerociousTemperamentSkill_C, bCanceledByProhibition) == 0x000264, "Member 'UBP_AJBFerociousTemperamentSkill_C::bCanceledByProhibition' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaLocal

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.ExecuteUbergraph_BP_AJBDamageAreaLocal
// 0x0318 (0x0318 - 0x0000)
struct BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBHighlightManager_bIsValid;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAJBHighlightManager*                   CallFunc_GetAJBHighlightManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float BaseRadius, const struct FVector& BaseLocation, bool DisableReduction)> K2Node_CreateDelegate_OutputDelegate; // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBDamageAreaContext_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float BaseRadius, const struct FVector& BaseLocation)> K2Node_CreateDelegate_OutputDelegate1; // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimespan                              CallFunc_GetTimespanFromBattleStart_ReturnValue;   // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue;    // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue1;                // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue1;   // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue1;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReductionStarted_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue;                 // 0x00C0(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReductionPreAnnounced_ReturnValue;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue1;                // 0x00F8(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue1;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BaseRadius1;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BaseLocation1;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedInGameTimespan_ReturnValue;     // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue2;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BaseRadius;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BaseLocation;                   // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DisableReduction;               // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0188(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x01E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue2;                // 0x0230(0x0020)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0250(0x0018)()
	bool                                          CallFunc_HasTag_ReturnValue2;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0280(0x0010)(ZeroConstructor, NoDestructor)
	EPlayMode                                     CallFunc_GetPlayMode_PlayMode;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetTimespanFromBattleStart_ReturnValue1;  // 0x0298(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue3;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue1;                       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue3;                // 0x02A8(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue3;                      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable3;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetDebugTags_ReturnValue4;                // 0x02F0(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue4;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable3;                      // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal) == 0x000008, "Wrong alignment on BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal) == 0x000318, "Wrong size on BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, EntryPoint) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_int_Variable) == 0x000008, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Has_Been_Initd_Variable1) == 0x00000D, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_IsClosed_Variable) == 0x00000E, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetAJBHighlightManager_bIsValid) == 0x00000F, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetAJBHighlightManager_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetAJBHighlightManager_ReturnValue) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetAJBHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_IsPlayingReplay_ReturnValue) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_IsClosed_Variable1) == 0x000019, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate1) == 0x000048, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTimespanFromBattleStart_ReturnValue) == 0x000058, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTimespanFromBattleStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_MakeTimespan_ReturnValue) == 0x000060, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Subtract_TimespanTimespan_ReturnValue) == 0x000068, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Subtract_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_MakeTimespan_ReturnValue1) == 0x000070, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_MakeTimespan_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTotalSeconds_ReturnValue) == 0x000078, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Subtract_TimespanTimespan_ReturnValue1) == 0x000080, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Subtract_TimespanTimespan_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTotalSeconds_ReturnValue1) == 0x000088, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTotalSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate2) == 0x000090, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_FMin_ReturnValue) == 0x0000A4, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_VLerp_ReturnValue) == 0x0000A8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Lerp_ReturnValue) == 0x0000B4, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_ReductionStarted_ReturnValue) == 0x0000B8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_ReductionStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetDebugTags_ReturnValue) == 0x0000C0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetDebugTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_HasTag_ReturnValue) == 0x0000E0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_ReductionPreAnnounced_ReturnValue) == 0x0000E1, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_ReductionPreAnnounced_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_IsClosed_Variable2) == 0x0000E2, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x0000E8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000F0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetDebugTags_ReturnValue1) == 0x0000F8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetDebugTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_HasTag_ReturnValue1) == 0x000118, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_HasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate3) == 0x000120, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x000130, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Has_Been_Initd_Variable2) == 0x000131, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_BooleanAND_ReturnValue) == 0x000132, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000133, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000138, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CustomEvent_BaseRadius1) == 0x000140, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CustomEvent_BaseRadius1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CustomEvent_BaseLocation1) == 0x000144, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CustomEvent_BaseLocation1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetElapsedInGameTimespan_ReturnValue) == 0x000150, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetElapsedInGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTotalSeconds_ReturnValue2) == 0x000158, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTotalSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CustomEvent_BaseRadius) == 0x00015C, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CustomEvent_BaseRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CustomEvent_BaseLocation) == 0x000160, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CustomEvent_BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CustomEvent_DisableReduction) == 0x00016C, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CustomEvent_DisableReduction' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Round_ReturnValue) == 0x000170, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Conv_VectorToString_ReturnValue) == 0x000178, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_MakeStruct_FormatArgumentData) == 0x000188, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Conv_StringToText_ReturnValue) == 0x0001C8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_MakeStruct_FormatArgumentData1) == 0x0001E0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_MakeArray_Array) == 0x000220, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetDebugTags_ReturnValue2) == 0x000230, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetDebugTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Format_ReturnValue) == 0x000250, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_HasTag_ReturnValue2) == 0x000268, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_HasTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Conv_TextToString_ReturnValue) == 0x000270, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate4) == 0x000280, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetPlayMode_PlayMode) == 0x000290, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetPlayMode_PlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000291, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTimespanFromBattleStart_ReturnValue1) == 0x000298, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTimespanFromBattleStart_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetTotalSeconds_ReturnValue3) == 0x0002A0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetTotalSeconds_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Round_ReturnValue1) == 0x0002A4, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Round_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetDebugTags_ReturnValue3) == 0x0002A8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetDebugTags_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_HasTag_ReturnValue3) == 0x0002C8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_HasTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002CC, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_Has_Been_Initd_Variable3) == 0x0002D0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_Has_Been_Initd_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, K2Node_CreateDelegate_OutputDelegate5) == 0x0002D8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002E8, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_GetDebugTags_ReturnValue4) == 0x0002F0, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_GetDebugTags_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, CallFunc_HasTag_ReturnValue4) == 0x000310, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::CallFunc_HasTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal, Temp_bool_IsClosed_Variable3) == 0x000311, "Member 'BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal::Temp_bool_IsClosed_Variable3' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnIntervalSetupCompleted
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted final
{
public:
	float                                         BaseRadius;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocation;                                      // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableReduction;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted) == 0x000014, "Wrong size on BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted, BaseRadius) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted::BaseRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted, BaseLocation) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted::BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted, DisableReduction) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted::DisableReduction' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnRestart
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDamageAreaLocal_C_OnRestart final
{
public:
	float                                         BaseRadius;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocation;                                      // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_OnRestart) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_OnRestart");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_OnRestart) == 0x000010, "Wrong size on BP_AJBDamageAreaLocal_C_OnRestart");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_OnRestart, BaseRadius) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_OnRestart::BaseRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_OnRestart, BaseLocation) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_OnRestart::BaseLocation' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDamageAreaLocal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_ReceiveTick");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBDamageAreaLocal_C_ReceiveTick");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.InDamageArea
// 0x0074 (0x0074 - 0x0000)
struct BP_AJBDamageAreaLocal_C_InDamageArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationOffset;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DamageAreaAvailable_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSafeArea_Radius;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentSafeArea_Location;              // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_InDamageArea) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_InDamageArea");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_InDamageArea) == 0x000074, "Wrong size on BP_AJBDamageAreaLocal_C_InDamageArea");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, Location) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, LocationOffset) == 0x00000C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::LocationOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, ReturnValue) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_DamageAreaAvailable_ReturnValue) == 0x000011, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_DamageAreaAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_GetCurrentSafeArea_Radius) == 0x000020, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_GetCurrentSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_GetCurrentSafeArea_Location) == 0x000024, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_GetCurrentSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_X1) == 0x00003C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_Y1) == 0x000040, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BreakVector_Z1) == 0x000044, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_MakeVector_ReturnValue1) == 0x00004C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_Square_ReturnValue) == 0x000068, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_VSizeSquared_ReturnValue) == 0x00006C, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InDamageArea, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_AJBDamageAreaLocal_C_InDamageArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetCurrentSafeArea
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetCurrentSafeArea final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetCurrentSafeArea) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetCurrentSafeArea");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetCurrentSafeArea) == 0x000010, "Wrong size on BP_AJBDamageAreaLocal_C_GetCurrentSafeArea");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetCurrentSafeArea, Radius) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetCurrentSafeArea::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetCurrentSafeArea, Location) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetCurrentSafeArea::Location' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTargetSafeArea
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetTargetSafeArea final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetTargetSafeArea) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetTargetSafeArea");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetTargetSafeArea) == 0x000010, "Wrong size on BP_AJBDamageAreaLocal_C_GetTargetSafeArea");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTargetSafeArea, Radius) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetTargetSafeArea::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTargetSafeArea, Location) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetTargetSafeArea::Location' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetCurrentDamageValue
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetCurrentDamageValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetCurrentDamageValue) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetCurrentDamageValue");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetCurrentDamageValue) == 0x000004, "Wrong size on BP_AJBDamageAreaLocal_C_GetCurrentDamageValue");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetCurrentDamageValue, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetCurrentDamageValue::ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetIntervalTimeOfApplyingDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage) == 0x000004, "Wrong size on BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage::ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.DamageAreaAvailable
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDamageAreaLocal_C_DamageAreaAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_DamageAreaAvailable) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_DamageAreaAvailable");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_DamageAreaAvailable) == 0x000002, "Wrong size on BP_AJBDamageAreaLocal_C_DamageAreaAvailable");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_DamageAreaAvailable, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_DamageAreaAvailable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_DamageAreaAvailable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_DamageAreaAvailable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsProceedingReduction
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IsProceedingReduction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReductionCompleted_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReductionStarted_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IsProceedingReduction) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_IsProceedingReduction");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IsProceedingReduction) == 0x000005, "Wrong size on BP_AJBDamageAreaLocal_C_IsProceedingReduction");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsProceedingReduction, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IsProceedingReduction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsProceedingReduction, CallFunc_ReductionCompleted_ReturnValue) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_IsProceedingReduction::CallFunc_ReductionCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsProceedingReduction, CallFunc_ReductionStarted_ReturnValue) == 0x000002, "Member 'BP_AJBDamageAreaLocal_C_IsProceedingReduction::CallFunc_ReductionStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsProceedingReduction, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBDamageAreaLocal_C_IsProceedingReduction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsProceedingReduction, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_IsProceedingReduction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsUntilStartReduction
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetTimespanFromBattleStart_ReturnValue;   // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Exists_bExists;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction) == 0x000008, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction) == 0x000028, "Wrong size on BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, Seconds) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::Seconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_GetTimespanFromBattleStart_ReturnValue) == 0x000008, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_GetTimespanFromBattleStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_Exists_bExists) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_Exists_bExists' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_GetTotalSeconds_ReturnValue) == 0x000014, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_Round_ReturnValue) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsUntilCompleteReduction
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Exists_bExists;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetTimespanFromBattleStart_ReturnValue;   // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction) == 0x000008, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction) == 0x000028, "Wrong size on BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, Seconds) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::Seconds' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_Exists_bExists) == 0x000005, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_Exists_bExists' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_GetTimespanFromBattleStart_ReturnValue) == 0x000008, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_GetTimespanFromBattleStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_GetTotalSeconds_ReturnValue) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_Round_ReturnValue) == 0x000014, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction, CallFunc_Max_ReturnValue) == 0x000020, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsAllReductionCompleted
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IsAllReductionCompleted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IsAllReductionCompleted) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_IsAllReductionCompleted");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IsAllReductionCompleted) == 0x000002, "Wrong size on BP_AJBDamageAreaLocal_C_IsAllReductionCompleted");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsAllReductionCompleted, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IsAllReductionCompleted::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsAllReductionCompleted, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_IsAllReductionCompleted::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsTotalInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval) == 0x000008, "Wrong size on BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsNotPreAnnounced
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IsNotPreAnnounced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedInGameTimespan_ReturnValue;     // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced) == 0x000008, "Wrong alignment on BP_AJBDamageAreaLocal_C_IsNotPreAnnounced");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced) == 0x000028, "Wrong size on BP_AJBDamageAreaLocal_C_IsNotPreAnnounced");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000008, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_GetElapsedInGameTimespan_ReturnValue) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_GetElapsedInGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_GetTotalSeconds_ReturnValue) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsNotPreAnnounced, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBDamageAreaLocal_C_IsNotPreAnnounced::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.InTargetArea
// 0x0074 (0x0074 - 0x0000)
struct BP_AJBDamageAreaLocal_C_InTargetArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationOffset;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetSafeArea_Radius;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetSafeArea_Location;               // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageAreaAvailable_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_InTargetArea) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_InTargetArea");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_InTargetArea) == 0x000074, "Wrong size on BP_AJBDamageAreaLocal_C_InTargetArea");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, Location) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, LocationOffset) == 0x00000C, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::LocationOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, ReturnValue) == 0x000010, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_GetTargetSafeArea_Radius) == 0x000014, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_GetTargetSafeArea_Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_GetTargetSafeArea_Location) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_GetTargetSafeArea_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_X1) == 0x000030, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_Y1) == 0x000034, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BreakVector_Z1) == 0x000038, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_MakeVector_ReturnValue1) == 0x000048, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_FMax_ReturnValue) == 0x000064, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_VSizeSquared_ReturnValue) == 0x000068, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_Square_ReturnValue) == 0x00006C, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_DamageAreaAvailable_ReturnValue) == 0x000070, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_DamageAreaAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000071, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_InTargetArea, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BP_AJBDamageAreaLocal_C_InTargetArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.Exists
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBDamageAreaLocal_C_Exists final
{
public:
	bool                                          bExists;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_Exists) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_Exists");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_Exists) == 0x000002, "Wrong size on BP_AJBDamageAreaLocal_C_Exists");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_Exists, bExists) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_Exists::bExists' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_Exists, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_Exists::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IntervalIndexCurrentTiming
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming final
{
public:
	int32                                         CurrentIntervalIndex_CurrentTiming_0;              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming) == 0x000004, "Wrong size on BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming, CurrentIntervalIndex_CurrentTiming_0) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming::CurrentIntervalIndex_CurrentTiming_0' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.RestOfIntervalCountCurrentTiming
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming) == 0x000008, "Wrong size on BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsDamageAreaActive
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IsDamageAreaActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IsDamageAreaActive) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_IsDamageAreaActive");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IsDamageAreaActive) == 0x000003, "Wrong size on BP_AJBDamageAreaLocal_C_IsDamageAreaActive");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsDamageAreaActive, ReturnValue) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IsDamageAreaActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsDamageAreaActive, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_AJBDamageAreaLocal_C_IsDamageAreaActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsDamageAreaActive, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_AJBDamageAreaLocal_C_IsDamageAreaActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsVanished
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBDamageAreaLocal_C_IsVanished final
{
public:
	bool                                          bIsVanished_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_IsVanished) == 0x000001, "Wrong alignment on BP_AJBDamageAreaLocal_C_IsVanished");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_IsVanished) == 0x000001, "Wrong size on BP_AJBDamageAreaLocal_C_IsVanished");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_IsVanished, bIsVanished_0) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_IsVanished::bIsVanished_0' has a wrong offset!");

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetAdvanceSafeArea
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea final
{
public:
	bool                                          bExistAdvanceSafeArea;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextIntervalIndex;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea) == 0x000004, "Wrong alignment on BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea");
static_assert(sizeof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea) == 0x000038, "Wrong size on BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, bExistAdvanceSafeArea) == 0x000000, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::bExistAdvanceSafeArea' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, Radius) == 0x000004, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, Location) == 0x000008, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, NextIntervalIndex) == 0x000014, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::NextIntervalIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000028, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Array_Get_Item1) == 0x00002C, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}


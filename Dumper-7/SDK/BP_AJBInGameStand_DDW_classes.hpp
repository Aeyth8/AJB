#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_DDW

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBInGameStand_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameStand_DDW.BP_AJBInGameStand_DDW_C
// 0x0060 (0x0540 - 0x04E0)
class ABP_AJBInGameStand_DDW_C final : public ABP_AJBInGameStand_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameStand_DDW_C;            // 0x04E0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               R_Thigh;                                           // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               L_Thigh;                                           // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               R_Hand;                                            // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               L_Hand;                                            // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               R_Forearm;                                         // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               L_Forearm;                                         // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               R_UpperArm;                                        // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               L_UpperArm;                                        // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Head;                                              // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStandPart_DDWLeg_C*        DDWLegActor;                                       // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_DDW_C*           DDWCharacter;                                      // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameStand_DDW(int32 EntryPoint);
	void ReceiveDestroyed();
	void OnReady();
	void OnReturn();
	void OnLaunch();
	void OnLoaded_0F32F5AD4FD4326B99274BAB679E8CB1(class UObject* Loaded);
	void OnLoaded_BDFB3E5841AC4CC1BFADE0806BE6B30F(class UObject* Loaded);
	void OnCompleted_221A419D45A2C2C1678C24BB158A3849(class FName NotifyName);
	void OnBlendOut_221A419D45A2C2C1678C24BB158A3849(class FName NotifyName);
	void OnInterrupted_221A419D45A2C2C1678C24BB158A3849(class FName NotifyName);
	void OnNotifyBegin_221A419D45A2C2C1678C24BB158A3849(class FName NotifyName);
	void OnNotifyEnd_221A419D45A2C2C1678C24BB158A3849(class FName NotifyName);
	void CreateDMIFlow();
	void ChangeSkin(const class FString& StandName, uint8 skinID);
	void PlayAppearMontage();
	void CleanUp(bool bShouldDestroy);
	void StandSetup();
	void GetStandAttackOffset(int32 CloseRangeSkillNo, struct FVector* StandAttackOffset);
	void GetAttackRange(int32 CloseRangeSkillNo, float* AttackRange);
	void GetAttackCollisionRadius(int32 CloseRangeSkillNo, float* Radius);
	void GetAttackLocation(const struct FVector& TargetLocation, struct FVector* Location);
	void GetCloseRangeLaunchedActor(int32 CloseRangeSkillNo, class AActor** LaunchedActor);
	void GetDamageActorTargetLocation(struct FVector* Location);
	void GetLaunchedActorHomeLocation(int32 CloseRangeSkillNo, struct FVector* Location);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameStand_DDW_C">();
	}
	static class ABP_AJBInGameStand_DDW_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameStand_DDW_C>();
	}
};
static_assert(alignof(ABP_AJBInGameStand_DDW_C) == 0x000008, "Wrong alignment on ABP_AJBInGameStand_DDW_C");
static_assert(sizeof(ABP_AJBInGameStand_DDW_C) == 0x000540, "Wrong size on ABP_AJBInGameStand_DDW_C");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, UberGraphFrame_BP_AJBInGameStand_DDW_C) == 0x0004E0, "Member 'ABP_AJBInGameStand_DDW_C::UberGraphFrame_BP_AJBInGameStand_DDW_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, R_Thigh) == 0x0004E8, "Member 'ABP_AJBInGameStand_DDW_C::R_Thigh' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, L_Thigh) == 0x0004F0, "Member 'ABP_AJBInGameStand_DDW_C::L_Thigh' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, R_Hand) == 0x0004F8, "Member 'ABP_AJBInGameStand_DDW_C::R_Hand' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, L_Hand) == 0x000500, "Member 'ABP_AJBInGameStand_DDW_C::L_Hand' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, R_Forearm) == 0x000508, "Member 'ABP_AJBInGameStand_DDW_C::R_Forearm' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, L_Forearm) == 0x000510, "Member 'ABP_AJBInGameStand_DDW_C::L_Forearm' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, R_UpperArm) == 0x000518, "Member 'ABP_AJBInGameStand_DDW_C::R_UpperArm' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, L_UpperArm) == 0x000520, "Member 'ABP_AJBInGameStand_DDW_C::L_UpperArm' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, Head) == 0x000528, "Member 'ABP_AJBInGameStand_DDW_C::Head' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, DDWLegActor) == 0x000530, "Member 'ABP_AJBInGameStand_DDW_C::DDWLegActor' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStand_DDW_C, DDWCharacter) == 0x000538, "Member 'ABP_AJBInGameStand_DDW_C::DDWCharacter' has a wrong offset!");

}


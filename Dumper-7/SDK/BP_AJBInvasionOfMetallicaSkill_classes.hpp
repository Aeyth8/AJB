#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInvasionOfMetallicaSkill

#include "Basic.hpp"

#include "BP_AJBPlacementSkill_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInvasionOfMetallicaSkill.BP_AJBInvasionOfMetallicaSkill_C
// 0x0020 (0x0340 - 0x0320)
class UBP_AJBInvasionOfMetallicaSkill_C final : public UBP_AJBPlacementSkill_C
{
public:
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInvasionOfMetallicaSkill_C;   // 0x0318(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           GivePassiveTag;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AddedActorListServer;                              // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           GiveGionTag;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInvasionOfMetallicaSkill(int32 EntryPoint);
	void OnSpawnObject(bool bPlacement, class AActor* Actor);
	void ReceiveDamageServer(int32 Damage_0, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision, bool bSelfDamage);
	void OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag);
	void OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void SpawnNewObject(const struct FTransform& Transform, class AActor* TargetActor);
	void ReadyCancelCamouflage();
	void ChangeEnableShouldUpdateMetallicaServer(class ABP_AJBInGameCharacter_C* CharacterBP, bool bEnable, bool bIgnoreActiveCheck);
	void GetValidatedActorsServer(TArray<class AActor*>* Actors);
	void RemoveMetallicaServer(class AActor* Actor);
	void TickState_Ready(float DeltaSeconds);
	void TraceObjectTransform(bool* bPossiblePlacement_0, struct FTransform* Transform, class AActor** TargetActor);
	void AddToObjectList(class AActor* TargetActor);
	void ChangePreviewUI(bool bPossiblePlacement_0);
	void SpawnPreviewObjectCore(class AActor** SpawnObject_0);
	void CheckActionStateEnd(bool* bActionStateEnd);
	void ReceiveBeginPlay();
	void OnActive();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void TimeExtension_Server(float Value);
	void TimeRewind_Server(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInvasionOfMetallicaSkill_C">();
	}
	static class UBP_AJBInvasionOfMetallicaSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInvasionOfMetallicaSkill_C>();
	}
};
static_assert(alignof(UBP_AJBInvasionOfMetallicaSkill_C) == 0x000010, "Wrong alignment on UBP_AJBInvasionOfMetallicaSkill_C");
static_assert(sizeof(UBP_AJBInvasionOfMetallicaSkill_C) == 0x000340, "Wrong size on UBP_AJBInvasionOfMetallicaSkill_C");
static_assert(offsetof(UBP_AJBInvasionOfMetallicaSkill_C, UberGraphFrame_BP_AJBInvasionOfMetallicaSkill_C) == 0x000318, "Member 'UBP_AJBInvasionOfMetallicaSkill_C::UberGraphFrame_BP_AJBInvasionOfMetallicaSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBInvasionOfMetallicaSkill_C, GivePassiveTag) == 0x000320, "Member 'UBP_AJBInvasionOfMetallicaSkill_C::GivePassiveTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBInvasionOfMetallicaSkill_C, AddedActorListServer) == 0x000328, "Member 'UBP_AJBInvasionOfMetallicaSkill_C::AddedActorListServer' has a wrong offset!");
static_assert(offsetof(UBP_AJBInvasionOfMetallicaSkill_C, GiveGionTag) == 0x000338, "Member 'UBP_AJBInvasionOfMetallicaSkill_C::GiveGionTag' has a wrong offset!");

}


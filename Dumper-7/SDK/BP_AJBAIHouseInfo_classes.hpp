#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAIHouseInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBAIHouseInfo.BP_AJBAIHouseInfo_C
// 0x0260 (0x0588 - 0x0328)
class ABP_AJBAIHouseInfo_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HouseRef;                                          // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AAJBInGameWindow*>               WINDOWS;                                           // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	UMulticastDelegateProperty_                   TargetActorFound;                                  // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   SetupFinished;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class AAJBInGameWindow*>               Windows1F;                                         // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameWindow*>               Windows1FFacingOut;                                // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameWindow*>               WindowsUpperFloor;                                 // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameGate*>                 Doors;                                             // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameGate*>                 Doors1F;                                           // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameGate*>                 Doors1FFacingOut;                                  // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AAJBInGameGate*>                 DoorsUpperFloor;                                   // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         GatesUpperFloor;                                   // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         LocationZOfLowestGate;                             // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameItemSpawner_C*>     ItemSpawners;                                      // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AJBInGameItemSpawner_C*>     ItemSpawnedItemSpawners;                           // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AJBInGameItemSpawner_C*>     ItemSpawnedItemSpawnersAccessibleFromOutside;      // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                StartPointLocation;                                // 0x0428(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightThreshIfIsOnTheSameFloorParam;               // 0x0434(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBInGameIndoorVolumeComponent_C*> IndoorVolumeComponents;                      // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<class AActor*, struct FVector>           InteractLocation1Memo;                             // 0x0448(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, AdvancedDisplay)
	TMap<class AActor*, struct FVector>           InteractLocation2Memo;                             // 0x0498(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, AdvancedDisplay)
	TMap<class AActor*, bool>                     IsLocation1InHouseMemo;                            // 0x04E8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, AdvancedDisplay)
	TMap<class AActor*, bool>                     IsLocation2InHouseMemo;                            // 0x0538(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, AdvancedDisplay)

public:
	void ExecuteUbergraph_BP_AJBAIHouseInfo(int32 EntryPoint);
	void Setup(class AActor* House, const struct FVector& StartPointLocation_0);
	void UserConstructionScript();
	bool IsHouseInfoOf(class AActor* HouseActor);
	class AActor* GetNearestGate1F(const struct FVector& BaseLocation);
	class AActor* GetHouseAsActor();
	TArray<class ABP_AJBInGameItemSpawner_C*> GetItemSpawnerWithItem(bool bIncludeItemHP, bool bAccessibleFromOutsideOnly);
	bool IsGateOfThisHouse(class AActor* Actor);
	class AActor* GetNearestGateUpperFloor(const struct FVector& BaseLocation);
	void GetOrMakeGateInteractLocationsCache(class AActor* GateActor, struct FVector* Location1, struct FVector* Location2, bool* IsLocation1InHouse, bool* IsLocation2InHouse);
	void GetGateInteractLocationsCache(const class AActor*& GateActor, bool* Success, struct FVector* Location1, struct FVector* Location2, bool* IsLocation1InHouse, bool* IsLocation2InHouse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBAIHouseInfo_C">();
	}
	static class ABP_AJBAIHouseInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBAIHouseInfo_C>();
	}
};
static_assert(alignof(ABP_AJBAIHouseInfo_C) == 0x000008, "Wrong alignment on ABP_AJBAIHouseInfo_C");
static_assert(sizeof(ABP_AJBAIHouseInfo_C) == 0x000588, "Wrong size on ABP_AJBAIHouseInfo_C");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBAIHouseInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_AJBAIHouseInfo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, HouseRef) == 0x000338, "Member 'ABP_AJBAIHouseInfo_C::HouseRef' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, WINDOWS) == 0x000340, "Member 'ABP_AJBAIHouseInfo_C::WINDOWS' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, TargetActorFound) == 0x000350, "Member 'ABP_AJBAIHouseInfo_C::TargetActorFound' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, SetupFinished) == 0x000360, "Member 'ABP_AJBAIHouseInfo_C::SetupFinished' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, Windows1F) == 0x000370, "Member 'ABP_AJBAIHouseInfo_C::Windows1F' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, Windows1FFacingOut) == 0x000380, "Member 'ABP_AJBAIHouseInfo_C::Windows1FFacingOut' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, WindowsUpperFloor) == 0x000390, "Member 'ABP_AJBAIHouseInfo_C::WindowsUpperFloor' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, Doors) == 0x0003A0, "Member 'ABP_AJBAIHouseInfo_C::Doors' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, Doors1F) == 0x0003B0, "Member 'ABP_AJBAIHouseInfo_C::Doors1F' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, Doors1FFacingOut) == 0x0003C0, "Member 'ABP_AJBAIHouseInfo_C::Doors1FFacingOut' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, DoorsUpperFloor) == 0x0003D0, "Member 'ABP_AJBAIHouseInfo_C::DoorsUpperFloor' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, GatesUpperFloor) == 0x0003E0, "Member 'ABP_AJBAIHouseInfo_C::GatesUpperFloor' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, LocationZOfLowestGate) == 0x0003F0, "Member 'ABP_AJBAIHouseInfo_C::LocationZOfLowestGate' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, ItemSpawners) == 0x0003F8, "Member 'ABP_AJBAIHouseInfo_C::ItemSpawners' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, ItemSpawnedItemSpawners) == 0x000408, "Member 'ABP_AJBAIHouseInfo_C::ItemSpawnedItemSpawners' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, ItemSpawnedItemSpawnersAccessibleFromOutside) == 0x000418, "Member 'ABP_AJBAIHouseInfo_C::ItemSpawnedItemSpawnersAccessibleFromOutside' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, StartPointLocation) == 0x000428, "Member 'ABP_AJBAIHouseInfo_C::StartPointLocation' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, HeightThreshIfIsOnTheSameFloorParam) == 0x000434, "Member 'ABP_AJBAIHouseInfo_C::HeightThreshIfIsOnTheSameFloorParam' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, IndoorVolumeComponents) == 0x000438, "Member 'ABP_AJBAIHouseInfo_C::IndoorVolumeComponents' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, InteractLocation1Memo) == 0x000448, "Member 'ABP_AJBAIHouseInfo_C::InteractLocation1Memo' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, InteractLocation2Memo) == 0x000498, "Member 'ABP_AJBAIHouseInfo_C::InteractLocation2Memo' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, IsLocation1InHouseMemo) == 0x0004E8, "Member 'ABP_AJBAIHouseInfo_C::IsLocation1InHouseMemo' has a wrong offset!");
static_assert(offsetof(ABP_AJBAIHouseInfo_C, IsLocation2InHouseMemo) == 0x000538, "Member 'ABP_AJBAIHouseInfo_C::IsLocation2InHouseMemo' has a wrong offset!");

}


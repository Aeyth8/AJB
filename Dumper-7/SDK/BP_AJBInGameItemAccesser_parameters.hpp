#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameItemAccesser

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameItemAccesser.BP_AJBInGameItemAccesser_C.ExecuteUbergraph_BP_AJBInGameItemAccesser
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameItem_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameItem_C*                    K2Node_CustomEvent_ItemBP1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_HitCharacter1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameItem_C*                    K2Node_CustomEvent_ItemBP;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_HitCharacter;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameItem_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         Temp_float_Variable1;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser) == 0x000008, "Wrong alignment on BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser");
static_assert(sizeof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser) == 0x000088, "Wrong size on BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, EntryPoint) == 0x000000, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_bool_Variable) == 0x00001E, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_CustomEvent_ItemBP1) == 0x000020, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_CustomEvent_ItemBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_CustomEvent_HitCharacter1) == 0x000028, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_CustomEvent_HitCharacter1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_CustomEvent_ItemBP) == 0x000030, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_CustomEvent_ItemBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_CustomEvent_HitCharacter) == 0x000038, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_CustomEvent_HitCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_CustomEvent_PlayerIndex) == 0x000040, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_IsValid_ReturnValue1) == 0x000044, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_IsValid_ReturnValue2) == 0x000045, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_float_Variable) == 0x000048, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Event_Operator) == 0x000050, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Event_Time) == 0x000058, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Event_Timing) == 0x00005C, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Event_bEnable) == 0x00005D, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Event_bOperatorIsEmpty) == 0x00005E, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_float_Variable1) == 0x000070, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_bool_Variable1) == 0x000074, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, Temp_int_Variable) == 0x000078, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Select_Default) == 0x00007C, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser, K2Node_Select1_Default) == 0x000080, "Member 'BP_AJBInGameItemAccesser_C_ExecuteUbergraph_BP_AJBInGameItemAccesser::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameItemAccesser.BP_AJBInGameItemAccesser_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameItemAccesser_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameItemAccesser_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameItemAccesser_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameItemAccesser_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameItemAccesser_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameItemAccesser_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameItemAccesser_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameItemAccesser_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameItemAccesser_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameItemAccesser_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameItemAccesser.BP_AJBInGameItemAccesser_C.RequestConsume
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameItemAccesser_C_RequestConsume final
{
public:
	class ABP_AJBInGameItem_C*                    ItemBP;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               HitCharacter;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItemAccesser_C_RequestConsume) == 0x000008, "Wrong alignment on BP_AJBInGameItemAccesser_C_RequestConsume");
static_assert(sizeof(BP_AJBInGameItemAccesser_C_RequestConsume) == 0x000010, "Wrong size on BP_AJBInGameItemAccesser_C_RequestConsume");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_RequestConsume, ItemBP) == 0x000000, "Member 'BP_AJBInGameItemAccesser_C_RequestConsume::ItemBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_RequestConsume, HitCharacter) == 0x000008, "Member 'BP_AJBInGameItemAccesser_C_RequestConsume::HitCharacter' has a wrong offset!");

// Function BP_AJBInGameItemAccesser.BP_AJBInGameItemAccesser_C.ROS_InsteadConsume
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameItemAccesser_C_ROS_InsteadConsume final
{
public:
	class ABP_AJBInGameItem_C*                    ItemBP;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               HitCharacter;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItemAccesser_C_ROS_InsteadConsume) == 0x000008, "Wrong alignment on BP_AJBInGameItemAccesser_C_ROS_InsteadConsume");
static_assert(sizeof(BP_AJBInGameItemAccesser_C_ROS_InsteadConsume) == 0x000018, "Wrong size on BP_AJBInGameItemAccesser_C_ROS_InsteadConsume");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ROS_InsteadConsume, ItemBP) == 0x000000, "Member 'BP_AJBInGameItemAccesser_C_ROS_InsteadConsume::ItemBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ROS_InsteadConsume, HitCharacter) == 0x000008, "Member 'BP_AJBInGameItemAccesser_C_ROS_InsteadConsume::HitCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItemAccesser_C_ROS_InsteadConsume, PlayerIndex) == 0x000010, "Member 'BP_AJBInGameItemAccesser_C_ROS_InsteadConsume::PlayerIndex' has a wrong offset!");

}


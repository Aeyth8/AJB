#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ReticleBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_ReticleBase.WB_ReticleBase_C.ExecuteUbergraph_WB_ReticleBase
// 0x0028 (0x0028 - 0x0000)
struct WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x0004(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOutOfScreen;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_MyCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadShot;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFinishBlow;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase) == 0x000008, "Wrong alignment on WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase");
static_assert(sizeof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase) == 0x000028, "Wrong size on WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, EntryPoint) == 0x000000, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_Position) == 0x000004, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_bOutOfScreen) == 0x00000C, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_bOutOfScreen' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_DeltaSeconds) == 0x000010, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_MyCharacter) == 0x000018, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_MyCharacter' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_bHeadShot) == 0x000020, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_bHeadShot' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase, K2Node_CustomEvent_bFinishBlow) == 0x000021, "Member 'WB_ReticleBase_C_ExecuteUbergraph_WB_ReticleBase::K2Node_CustomEvent_bFinishBlow' has a wrong offset!");

// Function WB_ReticleBase.WB_ReticleBase_C.UpdateReticlePosition
// 0x000C (0x000C - 0x0000)
struct WB_ReticleBase_C_UpdateReticlePosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutOfScreen;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ReticleBase_C_UpdateReticlePosition) == 0x000004, "Wrong alignment on WB_ReticleBase_C_UpdateReticlePosition");
static_assert(sizeof(WB_ReticleBase_C_UpdateReticlePosition) == 0x00000C, "Wrong size on WB_ReticleBase_C_UpdateReticlePosition");
static_assert(offsetof(WB_ReticleBase_C_UpdateReticlePosition, Position) == 0x000000, "Member 'WB_ReticleBase_C_UpdateReticlePosition::Position' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_UpdateReticlePosition, bOutOfScreen) == 0x000008, "Member 'WB_ReticleBase_C_UpdateReticlePosition::bOutOfScreen' has a wrong offset!");

// Function WB_ReticleBase.WB_ReticleBase_C.OnHit
// 0x0002 (0x0002 - 0x0000)
struct WB_ReticleBase_C_OnHit final
{
public:
	bool                                          bHeadShot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFInishBlow;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ReticleBase_C_OnHit) == 0x000001, "Wrong alignment on WB_ReticleBase_C_OnHit");
static_assert(sizeof(WB_ReticleBase_C_OnHit) == 0x000002, "Wrong size on WB_ReticleBase_C_OnHit");
static_assert(offsetof(WB_ReticleBase_C_OnHit, bHeadShot) == 0x000000, "Member 'WB_ReticleBase_C_OnHit::bHeadShot' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_OnHit, bFInishBlow) == 0x000001, "Member 'WB_ReticleBase_C_OnHit::bFInishBlow' has a wrong offset!");

// Function WB_ReticleBase.WB_ReticleBase_C.Update
// 0x0010 (0x0010 - 0x0000)
struct WB_ReticleBase_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    MyCharacter;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ReticleBase_C_Update) == 0x000008, "Wrong alignment on WB_ReticleBase_C_Update");
static_assert(sizeof(WB_ReticleBase_C_Update) == 0x000010, "Wrong size on WB_ReticleBase_C_Update");
static_assert(offsetof(WB_ReticleBase_C_Update, DeltaSeconds) == 0x000000, "Member 'WB_ReticleBase_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ReticleBase_C_Update, MyCharacter) == 0x000008, "Member 'WB_ReticleBase_C_Update::MyCharacter' has a wrong offset!");

}


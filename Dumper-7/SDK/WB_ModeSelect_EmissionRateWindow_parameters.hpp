#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ModeSelect_EmissionRateWindow

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow
// 0x0148 (0x0148 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGachaDetails_OutNeedUpdate;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGachaDetail                        CallFunc_GetGachaDetails_OutLuckyDrawDetail;       // 0x0018(0x0040)()
	struct FAJBGachaDetail                        CallFunc_GetGachaDetails_OutPremiumDrawDetail;     // 0x0058(0x0040)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBGachaDetail                        K2Node_CustomEvent_LuckyDetail;                    // 0x00B8(0x0040)()
	struct FAJBGachaDetail                        K2Node_CustomEvent_PremiumDetail;                  // 0x00F8(0x0040)()
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow) == 0x000148, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, EntryPoint) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_GetAJBGameInstance_bSuccess) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_GetGachaDetails_OutNeedUpdate) == 0x000010, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_GetGachaDetails_OutNeedUpdate' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_GetGachaDetails_OutLuckyDrawDetail) == 0x000018, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_GetGachaDetails_OutLuckyDrawDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_GetGachaDetails_OutPremiumDrawDetail) == 0x000058, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_GetGachaDetails_OutPremiumDrawDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, K2Node_ComponentBoundEvent_OwnerWidget) == 0x0000A8, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, K2Node_ComponentBoundEvent_TargetButton) == 0x0000B0, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, K2Node_CustomEvent_LuckyDetail) == 0x0000B8, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::K2Node_CustomEvent_LuckyDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, K2Node_CustomEvent_PremiumDetail) == 0x0000F8, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::K2Node_CustomEvent_PremiumDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000138, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000140, "Member 'WB_ModeSelect_EmissionRateWindow_C_ExecuteUbergraph_WB_ModeSelect_EmissionRateWindow::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.SetupGachaDetail
// 0x0080 (0x0080 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail final
{
public:
	struct FAJBGachaDetail                        LuckyDetail_0;                                     // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FAJBGachaDetail                        PremiumDetail_0;                                   // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail) == 0x000080, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail, LuckyDetail_0) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail::LuckyDetail_0' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail, PremiumDetail_0) == 0x000040, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupGachaDetail::PremiumDetail_0' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_ModeSelect_EmissionRateWindow_C_BndEvt__WB_CommonButton_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.SetupLuckyDrawDisplay
// 0x0178 (0x0178 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay final
{
public:
	struct FAJBGachaDetail                        GachaDetail;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UWB_EmissionRate_RarityList_C*>  LRaritiles;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EmissionRate_LimitedRarityList_C*   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0070(0x0010)(IsPlainOldData, NoDestructor)
	class UWB_EmissionRate_RarityList_C*          CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBPickupGachaDetail                  CallFunc_Array_Get_Item1;                          // 0x00A0(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryGetCharacterName_Result;               // 0x00E0(0x0018)()
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out;           // 0x00F8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0110(0x0018)()
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0130(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0150(0x0018)()
	TArray<class UWB_EmissionRate_RarityList_C*>  K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay) == 0x000178, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, GachaDetail) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::GachaDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, LRaritiles) == 0x000040, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::LRaritiles' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Create_ReturnValue) == 0x000058, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, Temp_int_Array_Index_Variable1) == 0x00006C, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, K2Node_MakeStruct_Margin) == 0x000070, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Array_Get_Item) == 0x000080, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, Temp_int_Loop_Counter_Variable1) == 0x000088, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000090, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Add_IntInt_ReturnValue1) == 0x000098, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Array_Get_Item1) == 0x0000A0, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Array_Length_ReturnValue1) == 0x0000D8, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Less_IntInt_ReturnValue1) == 0x0000DC, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_TryGetCharacterName_Result) == 0x0000E0, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_TryGetCharacterName_Result' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_GetAJBRewardItemTypeString_Out) == 0x0000F8, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_GetAJBRewardItemTypeString_Out' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000110, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Conv_StringToInt_ReturnValue) == 0x000128, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Conv_StringToText_ReturnValue1) == 0x000130, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Array_Length_ReturnValue2) == 0x000148, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x00014C, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, CallFunc_Conv_StringToText_ReturnValue2) == 0x000150, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay, K2Node_MakeArray_Array) == 0x000168, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupLuckyDrawDisplay::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.SetupPremiumDrawDisplay
// 0x0170 (0x0170 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay final
{
public:
	struct FAJBGachaDetail                        GachaDetail;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UWB_EmissionRate_RarityList_C*>  LRaritiles;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EmissionRate_LimitedRarityList_C*   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EmissionRate_RarityList_C*          CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0080(0x0010)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_EmissionRate_RarityList_C*>  K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	struct FAJBPickupGachaDetail                  CallFunc_Array_Get_Item1;                          // 0x00A8(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryGetCharacterName_Result;               // 0x00E8(0x0018)()
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out;           // 0x0100(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0018)()
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0138(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0158(0x0018)()
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay) == 0x000170, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, GachaDetail) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::GachaDetail' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, LRaritiles) == 0x000040, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::LRaritiles' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Create_ReturnValue) == 0x000058, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, Temp_int_Array_Index_Variable1) == 0x00006C, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Array_Get_Item) == 0x000070, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000078, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, K2Node_MakeStruct_Margin) == 0x000080, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, Temp_int_Loop_Counter_Variable1) == 0x000090, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Add_IntInt_ReturnValue1) == 0x000094, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, K2Node_MakeArray_Array) == 0x000098, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Array_Get_Item1) == 0x0000A8, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Array_Length_ReturnValue1) == 0x0000E0, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Less_IntInt_ReturnValue1) == 0x0000E4, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_TryGetCharacterName_Result) == 0x0000E8, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_TryGetCharacterName_Result' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_GetAJBRewardItemTypeString_Out) == 0x000100, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_GetAJBRewardItemTypeString_Out' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Conv_StringToInt_ReturnValue) == 0x000130, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Conv_StringToText_ReturnValue1) == 0x000138, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Array_Length_ReturnValue2) == 0x000150, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x000154, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay, CallFunc_Conv_StringToText_ReturnValue2) == 0x000158, "Member 'WB_ModeSelect_EmissionRateWindow_C_SetupPremiumDrawDisplay::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.TryGetCharacterName
// 0x0110 (0x0110 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	struct FAJBCharacterInfo                      CallFunc_GetCharacterInfoByCharaIndex_Out;         // 0x0020(0x00E8)()
	bool                                          CallFunc_GetCharacterInfoByCharaIndex_ReturnValue; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName) == 0x000008, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName) == 0x000110, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName, CharacterID) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName::CharacterID' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName, Result) == 0x000008, "Member 'WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName::Result' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName, CallFunc_GetCharacterInfoByCharaIndex_Out) == 0x000020, "Member 'WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName::CallFunc_GetCharacterInfoByCharaIndex_Out' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName, CallFunc_GetCharacterInfoByCharaIndex_ReturnValue) == 0x000108, "Member 'WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName::CallFunc_GetCharacterInfoByCharaIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000109, "Member 'WB_ModeSelect_EmissionRateWindow_C_TryGetCharacterName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_ModeSelect_EmissionRateWindow_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_ModeSelect_EmissionRateWindow.WB_ModeSelect_EmissionRateWindow_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_ModeSelect_EmissionRateWindow_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ModeSelect_EmissionRateWindow_C_IsModeless) == 0x000001, "Wrong alignment on WB_ModeSelect_EmissionRateWindow_C_IsModeless");
static_assert(sizeof(WB_ModeSelect_EmissionRateWindow_C_IsModeless) == 0x000001, "Wrong size on WB_ModeSelect_EmissionRateWindow_C_IsModeless");
static_assert(offsetof(WB_ModeSelect_EmissionRateWindow_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_ModeSelect_EmissionRateWindow_C_IsModeless::ReturnValue' has a wrong offset!");

}


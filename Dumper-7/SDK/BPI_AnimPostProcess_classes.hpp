#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AnimPostProcess

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "ELipType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_AnimPostProcess.BPI_AnimPostProcess_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_AnimPostProcess_C final
{
public:
	void SetEnableLip(bool NewFlag);
	void SetLipAnimSequence(class UAnimSequenceBase* Lip_A, class UAnimSequenceBase* Lip_I, class UAnimSequenceBase* Lip_U, class UAnimSequenceBase* Lip_E, class UAnimSequenceBase* Lip_O);
	void UpdateLipType(ELipType NewType);
	void UpdateLipBlendTime(float NewBlendTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_AnimPostProcess_C">();
	}
	static class IBPI_AnimPostProcess_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_AnimPostProcess_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_AnimPostProcess_C) == 0x000001, "Wrong alignment on IBPI_AnimPostProcess_C");
static_assert(sizeof(IBPI_AnimPostProcess_C) == 0x000001, "Wrong size on IBPI_AnimPostProcess_C");

}


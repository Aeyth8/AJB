#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PvE_MatchInfo

#include "Basic.hpp"

#include "WB_PvE_MatchInfo_classes.hpp"
#include "WB_PvE_MatchInfo_parameters.hpp"


namespace SDK
{

// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.ExecuteUbergraph_WB_PvE_MatchInfo
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::ExecuteUbergraph_WB_PvE_MatchInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "ExecuteUbergraph_WB_PvE_MatchInfo");

	Params::WB_PvE_MatchInfo_C_ExecuteUbergraph_WB_PvE_MatchInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetScore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetScore(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetScore");

	Params::WB_PvE_MatchInfo_C_SetScore Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.UpdateScore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::UpdateScore(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "UpdateScore");

	Params::WB_PvE_MatchInfo_C_UpdateScore Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.EventOnAnimationFinished_EndWave
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::EventOnAnimationFinished_EndWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "EventOnAnimationFinished_EndWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.EventOnAnimationStarted_EndWave
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::EventOnAnimationStarted_EndWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "EventOnAnimationStarted_EndWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.EventOnAnimationFinished_BeginWave
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::EventOnAnimationFinished_BeginWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "EventOnAnimationFinished_BeginWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.EventOnAnimationStarted_BeginWave
// (BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::EventOnAnimationStarted_BeginWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "EventOnAnimationStarted_BeginWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetScoreWindowVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_PvE_MatchInfo_C::SetScoreWindowVisibility(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetScoreWindowVisibility");

	Params::WB_PvE_MatchInfo_C_SetScoreWindowVisibility Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.EndWave
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaveIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaveDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::EndWave(int32 WaveIndex, float WaveDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "EndWave");

	Params::WB_PvE_MatchInfo_C_EndWave Parms{};

	Parms.WaveIndex = WaveIndex;
	Parms.WaveDuration = WaveDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_PvE_MatchInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.BeginWave
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaveIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaveDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::BeginWave(int32 WaveIndex, float WaveDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "BeginWave");

	Params::WB_PvE_MatchInfo_C_BeginWave Parms{};

	Parms.WaveIndex = WaveIndex;
	Parms.WaveDuration = WaveDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.MakeTimeText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Minutes                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            TimeText                                               (Parm, OutParm)

void UWB_PvE_MatchInfo_C::MakeTimeText(int32 Minutes, int32 Seconds, class FText* TimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "MakeTimeText");

	Params::WB_PvE_MatchInfo_C_MakeTimeText Parms{};

	Parms.Minutes = Minutes;
	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);

	if (TimeText != nullptr)
		*TimeText = std::move(Parms.TimeText);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetRemainingTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Minutes                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetRemainingTime(int32 Minutes, int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetRemainingTime");

	Params::WB_PvE_MatchInfo_C_SetRemainingTime Parms{};

	Parms.Minutes = Minutes;
	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetScoreImmediately
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetScoreImmediately(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetScoreImmediately");

	Params::WB_PvE_MatchInfo_C_SetScoreImmediately Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetProgressBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Ratio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetProgressBar(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetProgressBar");

	Params::WB_PvE_MatchInfo_C_SetProgressBar Parms{};

	Parms.Ratio = Ratio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.InitProgressBar
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::InitProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "InitProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetRemainingTimeFromSeconds
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetRemainingTimeFromSeconds(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetRemainingTimeFromSeconds");

	Params::WB_PvE_MatchInfo_C_SetRemainingTimeFromSeconds Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.GetCurrentAnimatedScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  AnimatedScore                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::GetCurrentAnimatedScore(int32* AnimatedScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "GetCurrentAnimatedScore");

	Params::WB_PvE_MatchInfo_C_GetCurrentAnimatedScore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimatedScore != nullptr)
		*AnimatedScore = Parms.AnimatedScore;
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.InitScore
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::InitScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "InitScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetPhaseState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AJBInGamePvE_GamePhase                Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WaveNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxWaveNum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetPhaseState(E_AJBInGamePvE_GamePhase Phase, int32 WaveNum, int32 MaxWaveNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetPhaseState");

	Params::WB_PvE_MatchInfo_C_SetPhaseState Parms{};

	Parms.Phase = Phase;
	Parms.WaveNum = WaveNum;
	Parms.MaxWaveNum = MaxWaveNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.MakeBeginWaveText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaveIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            BeginWaveText                                          (Parm, OutParm)

void UWB_PvE_MatchInfo_C::MakeBeginWaveText(int32 WaveIndex, class FText* BeginWaveText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "MakeBeginWaveText");

	Params::WB_PvE_MatchInfo_C_MakeBeginWaveText Parms{};

	Parms.WaveIndex = WaveIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (BeginWaveText != nullptr)
		*BeginWaveText = std::move(Parms.BeginWaveText);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.MakeBeginWaveSurviveTimeText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WaveSeconds                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            WaveTimeText                                           (Parm, OutParm)

void UWB_PvE_MatchInfo_C::MakeBeginWaveSurviveTimeText(float WaveSeconds, class FText* WaveTimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "MakeBeginWaveSurviveTimeText");

	Params::WB_PvE_MatchInfo_C_MakeBeginWaveSurviveTimeText Parms{};

	Parms.WaveSeconds = WaveSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (WaveTimeText != nullptr)
		*WaveTimeText = std::move(Parms.WaveTimeText);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.BindAnimationDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PvE_MatchInfo_C::BindAnimationDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "BindAnimationDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.MakeEndWaveText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaveIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            EndWaveText                                            (Parm, OutParm)

void UWB_PvE_MatchInfo_C::MakeEndWaveText(int32 WaveIndex, class FText* EndWaveText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "MakeEndWaveText");

	Params::WB_PvE_MatchInfo_C_MakeEndWaveText Parms{};

	Parms.WaveIndex = WaveIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (EndWaveText != nullptr)
		*EndWaveText = std::move(Parms.EndWaveText);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetKillCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetKillCount(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetKillCount");

	Params::WB_PvE_MatchInfo_C_SetKillCount Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PvE_MatchInfo.WB_PvE_MatchInfo_C.SetRetiredCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PvE_MatchInfo_C::SetRetiredCount(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PvE_MatchInfo_C", "SetRetiredCount");

	Params::WB_PvE_MatchInfo_C_SetRetiredCount Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectile_Homing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.ExecuteUbergraph_BP_AJBInGameProjectile_Homing
// 0x0248 (0x0248 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target1;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds5;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds4;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds3;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHomingEnabled_IsEnabled;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMovementLength_Length;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestGion_AkComponent__LocalOnly_;      // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectOnLocal_ParticleEffect; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00D8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_Target;                         // 0x0180(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNoObstacle_IsNoObstacle;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHomingTarget_IsTarget;                  // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_CustomEvent_InputPin;                       // 0x0198(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01B8(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01D0(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHomingIntensity_HomingIntensity;       // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01E8(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F6[0x2];                                      // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue5;         // 0x020C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_227[0x1];                                      // 0x0227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue6;         // 0x0228(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue1;          // 0x0234(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue1;         // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing) == 0x000248, "Wrong size on BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, EntryPoint) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_Target1) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_Target1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds5) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds4) == 0x000014, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds3) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds2) == 0x00001C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds1) == 0x000020, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsHomingEnabled_IsEnabled) == 0x000025, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsHomingEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_Operator) == 0x000028, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_Time) == 0x000030, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_Timing) == 0x000034, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_bEnable) == 0x000035, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_bOperatorIsEmpty) == 0x000036, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Not_PreBool_ReturnValue) == 0x000037, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetMovementLength_Length) == 0x000038, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetMovementLength_Length' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetOwner_ReturnValue1) == 0x000058, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000060, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000069, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x00006C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetOwner_ReturnValue2) == 0x000078, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_RequestGion_AkComponent__LocalOnly_) == 0x000080, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_RequestGion_AkComponent__LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_) == 0x000088, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_RequestGion_bFullfilDisplayCond_LocalOnly_' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00008C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Not_PreBool_ReturnValue1) == 0x000098, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_RequestParticleEffectOnLocal_ParticleEffect) == 0x0000A0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_RequestParticleEffectOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x0000A8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x0000B8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherActor1) == 0x0000C0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherComp1) == 0x0000C8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x0000D0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000D4, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_SweepResult) == 0x0000D8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000160, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherActor) == 0x000168, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherComp) == 0x000170, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000178, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_Target) == 0x000180, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Array_Get_Item) == 0x000188, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Array_AddUnique_ReturnValue) == 0x000190, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsNoObstacle_IsNoObstacle) == 0x000194, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsNoObstacle_IsNoObstacle' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsHomingTarget_IsTarget) == 0x000195, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsHomingTarget_IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_InputPin) == 0x000198, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001A0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Array_Contains_ReturnValue) == 0x0001A1, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_Event_DeltaSeconds) == 0x0001A4, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_CustomEvent_DeltaSeconds) == 0x0001A8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x0001AC, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001B8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001C4, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001D0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_VSize_ReturnValue) == 0x0001DC, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetHomingIntensity_HomingIntensity) == 0x0001E0, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetHomingIntensity_HomingIntensity' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, Temp_bool_True_if_break_was_hit_Variable) == 0x0001E4, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_RInterpTo_ReturnValue) == 0x0001E8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001F4, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Not_PreBool_ReturnValue2) == 0x0001F5, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_GetOwner_ReturnValue3) == 0x0001F8, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000200, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, K2Node_DynamicCast_bSuccess1) == 0x000208, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_HasLocalSharedController_ReturnValue) == 0x000209, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue5) == 0x00020C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, Temp_int_Loop_Counter_Variable) == 0x000218, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Less_IntInt_ReturnValue) == 0x00021C, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_Add_IntInt_ReturnValue) == 0x000220, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_BooleanAND_ReturnValue) == 0x000224, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsValid_ReturnValue1) == 0x000225, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_IsValid_ReturnValue2) == 0x000226, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_GetActorLocation_ReturnValue6) == 0x000228, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_GetActorLocation_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_FindLookAtRotation_ReturnValue1) == 0x000234, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_FindLookAtRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing, CallFunc_K2_SetActorRotation_ReturnValue1) == 0x000240, "Member 'BP_AJBInGameProjectile_Homing_C_ExecuteUbergraph_BP_AJBInGameProjectile_Homing::CallFunc_K2_SetActorRotation_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.UpdateProjectileMotion
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_UpdateProjectileMotion::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.RemoveHomingTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget final
{
public:
	const class AActor*                           InputPin;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget) == 0x000008, "Wrong size on BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget, InputPin) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_RemoveHomingTarget::InputPin' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.AddHomingTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_AddHomingTarget final
{
public:
	const class AActor*                           Target;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_AddHomingTarget) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_AddHomingTarget");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_AddHomingTarget) == 0x000008, "Wrong size on BP_AJBInGameProjectile_Homing_C_AddHomingTarget");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_AddHomingTarget, Target) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_AddHomingTarget::Target' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AJBInGameProjectile_Homing_C_BndEvt__HomingDetectCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.TickState_Homing
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_TickState_Homing final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_TickState_Homing) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_TickState_Homing");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_TickState_Homing) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_TickState_Homing");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_TickState_Homing, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_TickState_Homing::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.TickState_AdditionalCheck
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_TickState_AdditionalCheck::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.TickState_HomingDetection
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_TickState_HomingDetection::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.TickState_Waiting
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_TickState_Waiting final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_TickState_Waiting) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_TickState_Waiting");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_TickState_Waiting) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_TickState_Waiting");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_TickState_Waiting, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_TickState_Waiting::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.StateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_StateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_StateTick) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_StateTick");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_StateTick) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_StateTick");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_StateTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_StateTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.BeginState_Homing
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_BeginState_Homing final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_BeginState_Homing) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_BeginState_Homing");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_BeginState_Homing) == 0x000008, "Wrong size on BP_AJBInGameProjectile_Homing_C_BeginState_Homing");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_BeginState_Homing, Target) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_BeginState_Homing::Target' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.IsNoObstacle
// 0x0158 (0x0158 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_IsNoObstacle final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNoObstacle_0;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBSphereTraceByChannel_OutHit;           // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBSphereTraceByChannel_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_IsNoObstacle");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle) == 0x000158, "Wrong size on BP_AJBInGameProjectile_Homing_C_IsNoObstacle");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, Target) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, IsNoObstacle_0) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::IsNoObstacle_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_IsValid_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x000040, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_AJBSphereTraceByChannel_OutHit) == 0x000048, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_AJBSphereTraceByChannel_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_AJBSphereTraceByChannel_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_AJBSphereTraceByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D1, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D2, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsNoObstacle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'BP_AJBInGameProjectile_Homing_C_IsNoObstacle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.UpdateHomigTimer
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_UpdateHomigTimer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.ChangeState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_ChangeState final
{
public:
	ESnakeBulletState                             NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_ChangeState) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_ChangeState");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_ChangeState) == 0x000001, "Wrong size on BP_AJBInGameProjectile_Homing_C_ChangeState");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ChangeState, NewState) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_ChangeState::NewState' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.SetHomingCollisionEnabled
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled) == 0x000028, "Wrong size on BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, IsEnabled) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, Temp_bool_Variable) == 0x000001, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, Temp_name_Variable) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, Temp_name_Variable1) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBInGameProjectile_Homing_C_SetHomingCollisionEnabled::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.IsHomingEnabled
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_IsHomingEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_IsHomingEnabled");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_IsHomingEnabled");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled, IsEnabled) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.IsHomingTarget
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_IsHomingTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTarget;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_IsAlive;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCharacterDetection_bCheckDetection;  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_IsHomingTarget");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget) == 0x000058, "Wrong size on BP_AJBInGameProjectile_Homing_C_IsHomingTarget");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, Target) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, IsTarget) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, Temp_bool_Variable) == 0x000009, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000020, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000028, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_IsAlive_IsAlive) == 0x000029, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_IsAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_CheckCharacterDetection_bCheckDetection) == 0x00002A, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_CheckCharacterDetection_bCheckDetection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, Temp_bool_Variable1) == 0x000038, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x000040, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000048, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, K2Node_Select_Default) == 0x000049, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_IsPair_bPairCharacter) == 0x00004A, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004B, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_IsValid_ReturnValue) == 0x00004D, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_BooleanAND_ReturnValue1) == 0x00004F, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_IsHomingTarget, CallFunc_BooleanAND_ReturnValue2) == 0x000050, "Member 'BP_AJBInGameProjectile_Homing_C_IsHomingTarget::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.GetHomingIntensity
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_GetHomingIntensity final
{
public:
	float                                         TargetDistance;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingIntensity_0;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_GetHomingIntensity) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_GetHomingIntensity");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_GetHomingIntensity) == 0x00000C, "Wrong size on BP_AJBInGameProjectile_Homing_C_GetHomingIntensity");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetHomingIntensity, TargetDistance) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_GetHomingIntensity::TargetDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetHomingIntensity, HomingIntensity_0) == 0x000004, "Member 'BP_AJBInGameProjectile_Homing_C_GetHomingIntensity::HomingIntensity_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetHomingIntensity, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_GetHomingIntensity::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.GetScaledSpeed
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_GetScaledSpeed final
{
public:
	float                                         Speed_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledSpecifiedSpeed_OutSpeed;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSpeed_Speed;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_GetScaledSpeed");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed) == 0x000014, "Wrong size on BP_AJBInGameProjectile_Homing_C_GetScaledSpeed");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, Speed_0) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::Speed_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, CallFunc_GetScaledSpecifiedSpeed_OutSpeed) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::CallFunc_GetScaledSpecifiedSpeed_OutSpeed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, CallFunc_GetScaledSpeed_Speed) == 0x00000C, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::CallFunc_GetScaledSpeed_Speed' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_GetScaledSpeed, K2Node_Select_Default) == 0x000010, "Member 'BP_AJBInGameProjectile_Homing_C_GetScaledSpeed::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGameProjectile_Homing_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGameProjectile_Homing_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGameProjectile_Homing_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGameProjectile_Homing_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGameProjectile_Homing_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameProjectile_Homing_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameProjectile_Homing.BP_AJBInGameProjectile_Homing_C.ShouldCheckRange
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameProjectile_Homing_C_ShouldCheckRange final
{
public:
	bool                                          bShouldCheckRange;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameProjectile_Homing_C_ShouldCheckRange) == 0x000001, "Wrong alignment on BP_AJBInGameProjectile_Homing_C_ShouldCheckRange");
static_assert(sizeof(BP_AJBInGameProjectile_Homing_C_ShouldCheckRange) == 0x000001, "Wrong size on BP_AJBInGameProjectile_Homing_C_ShouldCheckRange");
static_assert(offsetof(BP_AJBInGameProjectile_Homing_C_ShouldCheckRange, bShouldCheckRange) == 0x000000, "Member 'BP_AJBInGameProjectile_Homing_C_ShouldCheckRange::bShouldCheckRange' has a wrong offset!");

}


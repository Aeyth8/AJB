#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAffecterBase

#include "Basic.hpp"

#include "BP_AJBDamageAffecterBase_classes.hpp"
#include "BP_AJBDamageAffecterBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ExecuteUbergraph_BP_AJBDamageAffecterBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::ExecuteUbergraph_BP_AJBDamageAffecterBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ExecuteUbergraph_BP_AJBDamageAffecterBase");

	Params::BP_AJBDamageAffecterBase_C_ExecuteUbergraph_BP_AJBDamageAffecterBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnAddToMultipleLocationsCore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CurrentTime_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StartWithRandamDelayGionAndSE                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::OnAddToMultipleLocationsCore(const struct FVector& Location, float Scale_0, float Radius_0, int32 SerialNumber_0, bool bRestore, float CurrentTime_0, bool StartWithRandamDelayGionAndSE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnAddToMultipleLocationsCore");

	Params::BP_AJBDamageAffecterBase_C_OnAddToMultipleLocationsCore Parms{};

	Parms.Location = std::move(Location);
	Parms.Scale_0 = Scale_0;
	Parms.Radius_0 = Radius_0;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.bRestore = bRestore;
	Parms.CurrentTime_0 = CurrentTime_0;
	Parms.StartWithRandamDelayGionAndSE = StartWithRandamDelayGionAndSE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.SyncAffecterCore
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ABP_AJBInGameWatcherCamera_C*WatcherCamera                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<struct FVector>&           MultipleLocations_0                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// const TArray<float>&                    MultipleScales_0                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// const TArray<float>&                    MultipleRadiuses                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// const TArray<float>&                    CurrentTimes_0                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_AJBDamageAffecterBase_C::SyncAffecterCore(const class ABP_AJBInGameWatcherCamera_C* WatcherCamera, const TArray<struct FVector>& MultipleLocations_0, const TArray<float>& MultipleScales_0, const TArray<float>& MultipleRadiuses, const TArray<float>& CurrentTimes_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "SyncAffecterCore");

	Params::BP_AJBDamageAffecterBase_C_SyncAffecterCore Parms{};

	Parms.WatcherCamera = WatcherCamera;
	Parms.MultipleLocations_0 = std::move(MultipleLocations_0);
	Parms.MultipleScales_0 = std::move(MultipleScales_0);
	Parms.MultipleRadiuses = std::move(MultipleRadiuses);
	Parms.CurrentTimes_0 = std::move(CurrentTimes_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnWatchTarget_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameWatcherCamera_C*     WatcherCamera                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           BeforeViewTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::OnWatchTarget_Server(class ABP_AJBInGameWatcherCamera_C* WatcherCamera, class AActor* BeforeViewTarget, class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnWatchTarget_Server");

	Params::BP_AJBDamageAffecterBase_C_OnWatchTarget_Server Parms{};

	Parms.WatcherCamera = WatcherCamera;
	Parms.BeforeViewTarget = BeforeViewTarget;
	Parms.NewViewTarget = NewViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.TryRequestGion
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::TryRequestGion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "TryRequestGion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnBecomeLastSurvivor_All
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBitesTheDust                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::OnBecomeLastSurvivor_All(bool bBitesTheDust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnBecomeLastSurvivor_All");

	Params::BP_AJBDamageAffecterBase_C_OnBecomeLastSurvivor_All Parms{};

	Parms.bBitesTheDust = bBitesTheDust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_OnRemoveFromMultipleLocations
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::MC_OnRemoveFromMultipleLocations(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_OnRemoveFromMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_MC_OnRemoveFromMultipleLocations Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnRemoveFromMultipleLocations
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::OnRemoveFromMultipleLocations(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnRemoveFromMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_OnRemoveFromMultipleLocations Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_OnAddToMultipleLocations
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::MC_OnAddToMultipleLocations(const struct FVector& Location, float Scale_0, float Radius_0, int32 SerialNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_OnAddToMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_MC_OnAddToMultipleLocations Parms{};

	Parms.Location = std::move(Location);
	Parms.Scale_0 = Scale_0;
	Parms.Radius_0 = Radius_0;
	Parms.SerialNumber_0 = SerialNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnAddToMultipleLocations_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::OnAddToMultipleLocations_Server(const struct FVector& Location, int32 Index_0, int32 SerialNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnAddToMultipleLocations_Server");

	Params::BP_AJBDamageAffecterBase_C_OnAddToMultipleLocations_Server Parms{};

	Parms.Location = std::move(Location);
	Parms.Index_0 = Index_0;
	Parms.SerialNumber_0 = SerialNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_OnAddPassiveFirst
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAddSelf                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::MC_OnAddPassiveFirst(bool bAddSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_OnAddPassiveFirst");

	Params::BP_AJBDamageAffecterBase_C_MC_OnAddPassiveFirst Parms{};

	Parms.bAddSelf = bAddSelf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnAddPassiveFirst
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAddSelf                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AAJBInGameCharacterBase*          TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::OnAddPassiveFirst(bool bAddSelf, class AAJBInGameCharacterBase* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnAddPassiveFirst");

	Params::BP_AJBDamageAffecterBase_C_OnAddPassiveFirst Parms{};

	Parms.bAddSelf = bAddSelf;
	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CancelAffecter
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::CancelAffecter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CancelAffecter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnTheWorldChanged_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::OnTheWorldChanged_Server(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnTheWorldChanged_Server");

	Params::BP_AJBDamageAffecterBase_C_OnTheWorldChanged_Server Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_TheWorldAleady
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::MC_TheWorldAleady(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_TheWorldAleady");

	Params::BP_AJBDamageAffecterBase_C_MC_TheWorldAleady Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_OnNoDamageChanged
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         OperaatorCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::MC_OnNoDamageChanged(class UObject* TargetActor, class ABP_AJBInGameCharacter_C* OperaatorCharacter, bool bNewFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_OnNoDamageChanged");

	Params::BP_AJBDamageAffecterBase_C_MC_OnNoDamageChanged Parms{};

	Parms.TargetActor = TargetActor;
	Parms.OperaatorCharacter = OperaatorCharacter;
	Parms.bNewFlag = bNewFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_AreaOut
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::MC_AreaOut(class AActor* TargetActor, class ABP_AJBInGameCharacter_C* OperatorCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_AreaOut");

	Params::BP_AJBDamageAffecterBase_C_MC_AreaOut Parms{};

	Parms.TargetActor = TargetActor;
	Parms.OperatorCharacter = OperatorCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.MC_AreaIn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::MC_AreaIn(class AActor* TargetActor, class ABP_AJBInGameCharacter_C* OperatorCharacter, bool bNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "MC_AreaIn");

	Params::BP_AJBDamageAffecterBase_C_MC_AreaIn Parms{};

	Parms.TargetActor = TargetActor;
	Parms.OperatorCharacter = OperatorCharacter;
	Parms.bNoDamage = bNoDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AreaInterval
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_DamageAffecterInfo&    AffecterInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::AreaInterval(const struct FST_DamageAffecterInfo& AffecterInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AreaInterval");

	Params::BP_AJBDamageAffecterBase_C_AreaInterval Parms{};

	Parms.AffecterInfo = std::move(AffecterInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CheckDamageInterval
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::CheckDamageInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CheckDamageInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AreaContinue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::AreaContinue(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AreaContinue");

	Params::BP_AJBDamageAffecterBase_C_AreaContinue Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AreaOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::AreaOut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AreaOut");

	Params::BP_AJBDamageAffecterBase_C_AreaOut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AreaIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::AreaIn(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AreaIn");

	Params::BP_AJBDamageAffecterBase_C_AreaIn Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UpdateInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::UpdateInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UpdateInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UpdateActors
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::UpdateActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UpdateActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AreaTick
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::AreaTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AreaTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ReceiveTick");

	Params::BP_AJBDamageAffecterBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.OnTheWorldChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableTheWorld_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::OnTheWorldChanged(bool bEnableTheWorld_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "OnTheWorldChanged");

	Params::BP_AJBDamageAffecterBase_C_OnTheWorldChanged Parms{};

	Parms.bEnableTheWorld_0 = bEnableTheWorld_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "NotifyTheWorld");

	Params::BP_AJBDamageAffecterBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetScaledRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Radius_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetScaledRadius(int32 Index_0, float* Radius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetScaledRadius");

	Params::BP_AJBDamageAffecterBase_C_GetScaledRadius Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius_0 != nullptr)
		*Radius_0 = Parms.Radius_0;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetActorsOnlyAfterExists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>&                  BeforeActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AActor*>&                  AfterActors                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AActor*>*                  ActorList                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBDamageAffecterBase_C::GetActorsOnlyAfterExists(TArray<class AActor*>& BeforeActors, TArray<class AActor*>& AfterActors, TArray<class AActor*>* ActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetActorsOnlyAfterExists");

	Params::BP_AJBDamageAffecterBase_C_GetActorsOnlyAfterExists Parms{};

	Parms.BeforeActors = std::move(BeforeActors);
	Parms.AfterActors = std::move(AfterActors);

	UObject::ProcessEvent(Func, &Parms);

	BeforeActors = std::move(Parms.BeforeActors);
	AfterActors = std::move(Parms.AfterActors);

	if (ActorList != nullptr)
		*ActorList = std::move(Parms.ActorList);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ForceResetAreaInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::ForceResetAreaInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ForceResetAreaInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.DrawDebugSphere
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::DrawDebugSphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "DrawDebugSphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetPartitionLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetPartitionLocation(int32 Index_0, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetPartitionLocation");

	Params::BP_AJBDamageAffecterBase_C_GetPartitionLocation Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CalcAttackDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  AttackDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::CalcAttackDistance(class AActor* DamagedActor, float* AttackDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CalcAttackDistance");

	Params::BP_AJBDamageAffecterBase_C_CalcAttackDistance Parms{};

	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AttackDistance != nullptr)
		*AttackDistance = Parms.AttackDistance;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CheckTimeLimit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bTimeLimit                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::CheckTimeLimit(bool* bTimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CheckTimeLimit");

	Params::BP_AJBDamageAffecterBase_C_CheckTimeLimit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTimeLimit != nullptr)
		*bTimeLimit = Parms.bTimeLimit;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UpdateCurrentTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::UpdateCurrentTime(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UpdateCurrentTime");

	Params::BP_AJBDamageAffecterBase_C_UpdateCurrentTime Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.ShouldEnableInitialTheWorld_Server
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Should                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::ShouldEnableInitialTheWorld_Server(bool* Should)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "ShouldEnableInitialTheWorld_Server");

	Params::BP_AJBDamageAffecterBase_C_ShouldEnableInitialTheWorld_Server Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Should != nullptr)
		*Should = Parms.Should;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetLocationAsCheckArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>*                 Location                                               (Parm, OutParm, ZeroConstructor)

void ABP_AJBDamageAffecterBase_C::GetLocationAsCheckArea(TArray<struct FVector>* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetLocationAsCheckArea");

	Params::BP_AJBDamageAffecterBase_C_GetLocationAsCheckArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetRotationAsCheckArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::GetRotationAsCheckArea(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetRotationAsCheckArea");

	Params::BP_AJBDamageAffecterBase_C_GetRotationAsCheckArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetPoliticDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_DamageAffecterInfo&    AffecterInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32*                                  Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetPoliticDamage(const struct FST_DamageAffecterInfo& AffecterInfo, int32* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetPoliticDamage");

	Params::BP_AJBDamageAffecterBase_C_GetPoliticDamage Parms{};

	Parms.AffecterInfo = std::move(AffecterInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.AddToMultipleLocations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InScale                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSerialNumber                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDelayTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::AddToMultipleLocations(const struct FVector& NewLocation, float InScale, int32 InSerialNumber, float InDelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "AddToMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_AddToMultipleLocations Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.InScale = InScale;
	Parms.InSerialNumber = InSerialNumber;
	Parms.InDelayTime = InDelayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.RemoveFromMultipleLocations
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RemovedIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::RemoveFromMultipleLocations(int32 RemovedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "RemoveFromMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_RemoveFromMultipleLocations Parms{};

	Parms.RemovedIndex = RemovedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UpdateMultipleLocationsValid
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::UpdateMultipleLocationsValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UpdateMultipleLocationsValid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CheckAreaInEvenOne
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>&                 Locations                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   Length_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartitionNum_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseBoxCollision_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   BoxExtent_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bTarget                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  AffecterIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::CheckAreaInEvenOne(class AActor* Target, TArray<struct FVector>& Locations, const struct FRotator& Rotation, float Length_0, int32 PartitionNum_0, bool bUseBoxCollision_0, const struct FVector& BoxExtent_0, bool* bTarget, int32* AffecterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CheckAreaInEvenOne");

	Params::BP_AJBDamageAffecterBase_C_CheckAreaInEvenOne Parms{};

	Parms.Target = Target;
	Parms.Locations = std::move(Locations);
	Parms.Rotation = std::move(Rotation);
	Parms.Length_0 = Length_0;
	Parms.PartitionNum_0 = PartitionNum_0;
	Parms.bUseBoxCollision_0 = bUseBoxCollision_0;
	Parms.BoxExtent_0 = std::move(BoxExtent_0);

	UObject::ProcessEvent(Func, &Parms);

	Locations = std::move(Parms.Locations);

	if (bTarget != nullptr)
		*bTarget = Parms.bTarget;

	if (AffecterIndex != nullptr)
		*AffecterIndex = Parms.AffecterIndex;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.TryGivePassive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::TryGivePassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "TryGivePassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CalcScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Scale_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::CalcScale(int32 Index_0, float* Scale_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CalcScale");

	Params::BP_AJBDamageAffecterBase_C_CalcScale Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Scale_0 != nullptr)
		*Scale_0 = Parms.Scale_0;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CheckCancel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCancel                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::CheckCancel(bool* bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CheckCancel");

	Params::BP_AJBDamageAffecterBase_C_CheckCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCancel != nullptr)
		*bCancel = Parms.bCancel;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.PossibleGivePassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          AJBCharacterBase                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::PossibleGivePassive(class AAJBInGameCharacterBase* AJBCharacterBase, bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "PossibleGivePassive");

	Params::BP_AJBDamageAffecterBase_C_PossibleGivePassive Parms{};

	Parms.AJBCharacterBase = AJBCharacterBase;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.RequestRangeAttackParticle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::RequestRangeAttackParticle(const struct FVector& RelativeLocation, float Scale_0, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "RequestRangeAttackParticle");

	Params::BP_AJBDamageAffecterBase_C_RequestRangeAttackParticle Parms{};

	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.Scale_0 = Scale_0;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.RequestActiveSE
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::RequestActiveSE(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "RequestActiveSE");

	Params::BP_AJBDamageAffecterBase_C_RequestActiveSE Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.UpdateGionInterval
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::UpdateGionInterval(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "UpdateGionInterval");

	Params::BP_AJBDamageAffecterBase_C_UpdateGionInterval Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.RequestActiveGion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRadius                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::RequestActiveGion(const struct FVector& BaseLocation, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "RequestActiveGion");

	Params::BP_AJBDamageAffecterBase_C_RequestActiveGion Parms{};

	Parms.BaseLocation = std::move(BaseLocation);
	Parms.InRadius = InRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetSerialNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  SerialNumber_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetSerialNumber(int32 Index_0, int32* SerialNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetSerialNumber");

	Params::BP_AJBDamageAffecterBase_C_GetSerialNumber Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (SerialNumber_0 != nullptr)
		*SerialNumber_0 = Parms.SerialNumber_0;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetCurrentHitIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AffecterIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetCurrentHitIndex(class AActor* Actor, int32* AffecterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetCurrentHitIndex");

	Params::BP_AJBDamageAffecterBase_C_GetCurrentHitIndex Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (AffecterIndex != nullptr)
		*AffecterIndex = Parms.AffecterIndex;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetScaledRadiuses
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<float>*                          ScaledRadiuses                                         (Parm, OutParm, ZeroConstructor)

void ABP_AJBDamageAffecterBase_C::GetScaledRadiuses(TArray<float>* ScaledRadiuses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetScaledRadiuses");

	Params::BP_AJBDamageAffecterBase_C_GetScaledRadiuses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScaledRadiuses != nullptr)
		*ScaledRadiuses = std::move(Parms.ScaledRadiuses);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetRangeAttackTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag*                    RangeAttackTag_0                                       (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetRangeAttackTag(bool bRestore, struct FGameplayTag* RangeAttackTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetRangeAttackTag");

	Params::BP_AJBDamageAffecterBase_C_GetRangeAttackTag Parms{};

	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);

	if (RangeAttackTag_0 != nullptr)
		*RangeAttackTag_0 = std::move(Parms.RangeAttackTag_0);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.TryEnableTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::TryEnableTheWorld(const class FString& Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "TryEnableTheWorld");

	Params::BP_AJBDamageAffecterBase_C_TryEnableTheWorld Parms{};

	Parms.Timing = std::move(Timing);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GetActiveTimeOnMultipleLocations
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  CurrentTime_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GetActiveTimeOnMultipleLocations(int32 Index_0, float* CurrentTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GetActiveTimeOnMultipleLocations");

	Params::BP_AJBDamageAffecterBase_C_GetActiveTimeOnMultipleLocations Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentTime_0 != nullptr)
		*CurrentTime_0 = Parms.CurrentTime_0;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.CheckActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBDamageAffecterBase_C::CheckActive(int32 Index_0, bool* bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "CheckActive");

	Params::BP_AJBDamageAffecterBase_C_CheckActive Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.DrawDebugBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBDamageAffecterBase_C::DrawDebugBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "DrawDebugBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAffecterBase.BP_AJBDamageAffecterBase_C.GiveDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_DamageAffecterInfo&    AffecterInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AJBDamageAffecterBase_C::GiveDamage(const struct FST_DamageAffecterInfo& AffecterInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAffecterBase_C", "GiveDamage");

	Params::BP_AJBDamageAffecterBase_C_GiveDamage Parms{};

	Parms.AffecterInfo = std::move(AffecterInfo);

	UObject::ProcessEvent(Func, &Parms);
}

}


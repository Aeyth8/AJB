#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCloseRangeSkill

#include "Basic.hpp"

#include "BP_AJBCloseRangeSkill_classes.hpp"
#include "BP_AJBCloseRangeSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ExecuteUbergraph_BP_AJBCloseRangeSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ExecuteUbergraph_BP_AJBCloseRangeSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ExecuteUbergraph_BP_AJBCloseRangeSkill");

	Params::BP_AJBCloseRangeSkill_C_ExecuteUbergraph_BP_AJBCloseRangeSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnMC_Penetrate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnMC_Penetrate(const struct FVector& Location, const struct FVector& Normal, bool bCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnMC_Penetrate");

	Params::BP_AJBCloseRangeSkill_C_OnMC_Penetrate Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.bCharacter = bCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnPenetrate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnPenetrate(const struct FVector& Location, const struct FVector& Normal, bool bCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnPenetrate");

	Params::BP_AJBCloseRangeSkill_C_OnPenetrate Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.bCharacter = bCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_Penetrate
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::MC_Penetrate(const struct FVector& Location, const struct FVector& Normal, bool bCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_Penetrate");

	Params::BP_AJBCloseRangeSkill_C_MC_Penetrate Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.bCharacter = bCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_Penetrate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::ROS_Penetrate(const struct FVector& Location, const struct FVector& Normal, bool bCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_Penetrate");

	Params::BP_AJBCloseRangeSkill_C_ROS_Penetrate Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.bCharacter = bCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlocking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BlockedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnBlocking(class AActor* BlockedActor, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, bool bInvincible, bool bIsPenetration, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnBlocking");

	Params::BP_AJBCloseRangeSkill_C_OnBlocking Parms{};

	Parms.BlockedActor = BlockedActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnTargetHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnTargetHit(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bIsPenetration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnTargetHit");

	Params::BP_AJBCloseRangeSkill_C_OnTargetHit Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bIsPenetration = bIsPenetration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CancelSkillEndAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::CancelSkillEndAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CancelSkillEndAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnRedash
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnRedash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnRedash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.InitializeVariablesOnRedash
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::InitializeVariablesOnRedash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "InitializeVariablesOnRedash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_EndState
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::MC_EndState(bool bCancel, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_EndState");

	Params::BP_AJBCloseRangeSkill_C_MC_EndState Parms{};

	Parms.bCancel = bCancel;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_EndState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::ROS_EndState(bool bCancel, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_EndState");

	Params::BP_AJBCloseRangeSkill_C_ROS_EndState Parms{};

	Parms.bCancel = bCancel;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.EndState_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::EndState_Local(bool bCancel, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "EndState_Local");

	Params::BP_AJBCloseRangeSkill_C_EndState_Local Parms{};

	Parms.bCancel = bCancel;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnEndState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnEndState(bool bCancel, bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnEndState");

	Params::BP_AJBCloseRangeSkill_C_OnEndState Parms{};

	Parms.bCancel = bCancel;
	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_RequestHitWaitGion
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::MC_RequestHitWaitGion(bool Hit, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_RequestHitWaitGion");

	Params::BP_AJBCloseRangeSkill_C_MC_RequestHitWaitGion Parms{};

	Parms.Hit = Hit;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_RequestHitWaitGion
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ROS_RequestHitWaitGion(bool Hit, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_RequestHitWaitGion");

	Params::BP_AJBCloseRangeSkill_C_ROS_RequestHitWaitGion Parms{};

	Parms.Hit = Hit;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SpeakRushHitVoice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHitCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::SpeakRushHitVoice(bool bHitCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "SpeakRushHitVoice");

	Params::BP_AJBCloseRangeSkill_C_SpeakRushHitVoice Parms{};

	Parms.bHitCharacter = bHitCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_DamageOverlap
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ROS_DamageOverlap(class AActor* Target, class AActor* DamageCauser, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_DamageOverlap");

	Params::BP_AJBCloseRangeSkill_C_ROS_DamageOverlap Parms{};

	Parms.Target = Target;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnDamageOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnDamageOverlap(class AActor* Target, class AActor* DamageCauser, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnDamageOverlap");

	Params::BP_AJBCloseRangeSkill_C_OnDamageOverlap Parms{};

	Parms.Target = Target;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnRepeatCountChanged
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnRepeatCountChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnRepeatCountChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBack
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_BackToPlayer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::MC_BackToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_BackToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_BackToPlayer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::ROS_BackToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_BackToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayBackAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::PlayBackAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlayBackAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlaySkillEndAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::PlaySkillEndAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlaySkillEndAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_AccompanyWait
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::MC_AccompanyWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_AccompanyWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_AccompanyWait
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::ROS_AccompanyWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_AccompanyWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayImpactAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::PlayImpactAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlayImpactAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlaySkillBeginAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::PlaySkillBeginAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlaySkillBeginAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ReceiveEndPlay");

	Params::BP_AJBCloseRangeSkill_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnHit(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnHit");

	Params::BP_AJBCloseRangeSkill_C_OnHit Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnDash
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRedash                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::OnDash(uint8 RepeatCount_0, bool bRedash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnDash");

	Params::BP_AJBCloseRangeSkill_C_OnDash Parms{};

	Parms.RepeatCount_0 = RepeatCount_0;
	Parms.bRedash = bRedash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_Dash
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetDirection_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  TargetComponent_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRedash                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::MC_Dash(const struct FVector& TargetDirection_0, class AActor* TargetActor_0, class UActorComponent* TargetComponent_0, uint8 RepeatCount_0, bool bRedash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_Dash");

	Params::BP_AJBCloseRangeSkill_C_MC_Dash Parms{};

	Parms.TargetDirection_0 = std::move(TargetDirection_0);
	Parms.TargetActor_0 = TargetActor_0;
	Parms.TargetComponent_0 = TargetComponent_0;
	Parms.RepeatCount_0 = RepeatCount_0;
	Parms.bRedash = bRedash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_Dash
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetDirection_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  TargetComponent_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRedash                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::ROS_Dash(const struct FVector& TargetDirection_0, class AActor* TargetActor_0, class UActorComponent* TargetComponent_0, uint8 RepeatCount_0, bool bRedash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_Dash");

	Params::BP_AJBCloseRangeSkill_C_ROS_Dash Parms{};

	Parms.TargetDirection_0 = std::move(TargetDirection_0);
	Parms.TargetActor_0 = TargetActor_0;
	Parms.TargetComponent_0 = TargetComponent_0;
	Parms.RepeatCount_0 = RepeatCount_0;
	Parms.bRedash = bRedash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.MC_HitWait
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::MC_HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "MC_HitWait");

	Params::BP_AJBCloseRangeSkill_C_MC_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ROS_HitWait
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::ROS_HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, int32 SerialNumber_0, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ROS_HitWait");

	Params::BP_AJBCloseRangeSkill_C_ROS_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.SerialNumber_0 = SerialNumber_0;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Redash_Local
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::Redash_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Redash_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.AccompanyWait
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::AccompanyWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "AccompanyWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.BackToPlayer
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::BackToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "BackToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.HitWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "HitWait");

	Params::BP_AJBCloseRangeSkill_C_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Dash
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRedash                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::Dash(uint8 RepeatCount_0, bool bRedash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Dash");

	Params::BP_AJBCloseRangeSkill_C_Dash Parms{};

	Parms.RepeatCount_0 = RepeatCount_0;
	Parms.bRedash = bRedash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.StateTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::StateTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "StateTick");

	Params::BP_AJBCloseRangeSkill_C_StateTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_Dash
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::Update_Dash(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Update_Dash");

	Params::BP_AJBCloseRangeSkill_C_Update_Dash Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_AccompanyWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::Update_AccompanyWait(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Update_AccompanyWait");

	Params::BP_AJBCloseRangeSkill_C_Update_AccompanyWait Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_BackToPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::Update_BackToPlayer(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Update_BackToPlayer");

	Params::BP_AJBCloseRangeSkill_C_Update_BackToPlayer Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.Update_HitWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::Update_HitWait(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "Update_HitWait");

	Params::BP_AJBCloseRangeSkill_C_Update_HitWait Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.InitializeSoundVariables
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::InitializeSoundVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "InitializeSoundVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.StopRushVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::StopRushVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "StopRushVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SpeakRushVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::SpeakRushVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "SpeakRushVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnCompleted_A3F1CD754137FA8BD996C6838AB7F546
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnCompleted_A3F1CD754137FA8BD996C6838AB7F546(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnCompleted_A3F1CD754137FA8BD996C6838AB7F546");

	Params::BP_AJBCloseRangeSkill_C_OnCompleted_A3F1CD754137FA8BD996C6838AB7F546 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546");

	Params::BP_AJBCloseRangeSkill_C_OnBlendOut_A3F1CD754137FA8BD996C6838AB7F546 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546");

	Params::BP_AJBCloseRangeSkill_C_OnInterrupted_A3F1CD754137FA8BD996C6838AB7F546 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546");

	Params::BP_AJBCloseRangeSkill_C_OnNotifyBegin_A3F1CD754137FA8BD996C6838AB7F546 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546");

	Params::BP_AJBCloseRangeSkill_C_OnNotifyEnd_A3F1CD754137FA8BD996C6838AB7F546 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnCompleted_F3884152406B329A4C600188A0955544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnCompleted_F3884152406B329A4C600188A0955544(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnCompleted_F3884152406B329A4C600188A0955544");

	Params::BP_AJBCloseRangeSkill_C_OnCompleted_F3884152406B329A4C600188A0955544 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnBlendOut_F3884152406B329A4C600188A0955544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnBlendOut_F3884152406B329A4C600188A0955544(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnBlendOut_F3884152406B329A4C600188A0955544");

	Params::BP_AJBCloseRangeSkill_C_OnBlendOut_F3884152406B329A4C600188A0955544 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnInterrupted_F3884152406B329A4C600188A0955544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnInterrupted_F3884152406B329A4C600188A0955544(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnInterrupted_F3884152406B329A4C600188A0955544");

	Params::BP_AJBCloseRangeSkill_C_OnInterrupted_F3884152406B329A4C600188A0955544 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyBegin_F3884152406B329A4C600188A0955544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnNotifyBegin_F3884152406B329A4C600188A0955544(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnNotifyBegin_F3884152406B329A4C600188A0955544");

	Params::BP_AJBCloseRangeSkill_C_OnNotifyBegin_F3884152406B329A4C600188A0955544 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnNotifyEnd_F3884152406B329A4C600188A0955544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::OnNotifyEnd_F3884152406B329A4C600188A0955544(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnNotifyEnd_F3884152406B329A4C600188A0955544");

	Params::BP_AJBCloseRangeSkill_C_OnNotifyEnd_F3884152406B329A4C600188A0955544 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SetRepeatCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::SetRepeatCount(int32 RepeatCount_0, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "SetRepeatCount");

	Params::BP_AJBCloseRangeSkill_C_SetRepeatCount Parms{};

	Parms.RepeatCount_0 = RepeatCount_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.DashToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bReached                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::DashToTarget(float Speed, float DeltaSeconds, bool* bReached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "DashToTarget");

	Params::BP_AJBCloseRangeSkill_C_DashToTarget Parms{};

	Parms.Speed = Speed;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (bReached != nullptr)
		*bReached = Parms.bReached;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryRedash
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::TryRedash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "TryRedash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryGetDamageActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBDamageActor_C**            DamageActor_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::TryGetDamageActor(class ABP_AJBDamageActor_C** DamageActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "TryGetDamageActor");

	Params::BP_AJBCloseRangeSkill_C_TryGetDamageActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageActor_0 != nullptr)
		*DamageActor_0 = Parms.DamageActor_0;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.BackToCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bReached                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::BackToCharacter(float Speed, float DeltaSeconds, bool* bReached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "BackToCharacter");

	Params::BP_AJBCloseRangeSkill_C_BackToCharacter Parms{};

	Parms.Speed = Speed;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (bReached != nullptr)
		*bReached = Parms.bReached;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SetLaunchedActorLocationReliable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::SetLaunchedActorLocationReliable(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "SetLaunchedActorLocationReliable");

	Params::BP_AJBCloseRangeSkill_C_SetLaunchedActorLocationReliable Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetLaunchedActorLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         ActorLocation                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetLaunchedActorLocation(struct FVector* ActorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetLaunchedActorLocation");

	Params::BP_AJBCloseRangeSkill_C_GetLaunchedActorLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorLocation != nullptr)
		*ActorLocation = std::move(Parms.ActorLocation);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.UpdateStandRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::UpdateStandRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "UpdateStandRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ChangeAttackRangeWithRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ChangeAttackRangeWithRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ChangeAttackRangeWithRate");

	Params::BP_AJBCloseRangeSkill_C_ChangeAttackRangeWithRate Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayHitSE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::PlayHitSE(class AActor* HitActor, const struct FVector& HitLocation, EPhysicalSurface SurfaceType, bool bBlockedByAAP, bool bHeadShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlayHitSE");

	Params::BP_AJBCloseRangeSkill_C_PlayHitSE Parms{};

	Parms.HitActor = HitActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.SurfaceType = SurfaceType;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.PlayRushSE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::PlayRushSE(class USceneComponent* AttachComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "PlayRushSE");

	Params::BP_AJBCloseRangeSkill_C_PlayRushSE Parms{};

	Parms.AttachComponent = AttachComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.RequestHitWaitGion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHit                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::RequestHitWaitGion(bool bHit, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "RequestHitWaitGion");

	Params::BP_AJBCloseRangeSkill_C_RequestHitWaitGion Parms{};

	Parms.bHit = bHit;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Damage_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetPoliticDamage(bool bHeadShot, int32* Damage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetPoliticDamage");

	Params::BP_AJBCloseRangeSkill_C_GetPoliticDamage Parms{};

	Parms.bHeadShot = bHeadShot;

	UObject::ProcessEvent(Func, &Parms);

	if (Damage_0 != nullptr)
		*Damage_0 = Parms.Damage_0;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.TryDestroyDashParticle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::TryDestroyDashParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "TryDestroyDashParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetDashParticleTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag*                    DashParticleTag_0                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetDashParticleTag(struct FGameplayTag* DashParticleTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetDashParticleTag");

	Params::BP_AJBCloseRangeSkill_C_GetDashParticleTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DashParticleTag_0 != nullptr)
		*DashParticleTag_0 = std::move(Parms.DashParticleTag_0);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CheckHeadShot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageActor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bHeadShot                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::CheckHeadShot(class AActor* HitActor, class AActor* DamageActor_0, const struct FVector& HitLocation, bool* bHeadShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CheckHeadShot");

	Params::BP_AJBCloseRangeSkill_C_CheckHeadShot Parms{};

	Parms.HitActor = HitActor;
	Parms.DamageActor_0 = DamageActor_0;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (bHeadShot != nullptr)
		*bHeadShot = Parms.bHeadShot;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CalcDashSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  DashSpeed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::CalcDashSpeed(float* DashSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CalcDashSpeed");

	Params::BP_AJBCloseRangeSkill_C_CalcDashSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DashSpeed != nullptr)
		*DashSpeed = Parms.DashSpeed;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CalcBackSpeedRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  BackSpeedMin                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  BackSpeedMax                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::CalcBackSpeedRange(float* BackSpeedMin, float* BackSpeedMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CalcBackSpeedRange");

	Params::BP_AJBCloseRangeSkill_C_CalcBackSpeedRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BackSpeedMin != nullptr)
		*BackSpeedMin = Parms.BackSpeedMin;

	if (BackSpeedMax != nullptr)
		*BackSpeedMax = Parms.BackSpeedMax;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.DecideTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          TargetActor_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent**                 TargetComponent_0                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TargetHitLocation_0                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TargetLocation_0                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::DecideTarget(class AActor** TargetActor_0, class UActorComponent** TargetComponent_0, struct FVector* TargetHitLocation_0, struct FVector* TargetLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "DecideTarget");

	Params::BP_AJBCloseRangeSkill_C_DecideTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor_0 != nullptr)
		*TargetActor_0 = Parms.TargetActor_0;

	if (TargetComponent_0 != nullptr)
		*TargetComponent_0 = Parms.TargetComponent_0;

	if (TargetHitLocation_0 != nullptr)
		*TargetHitLocation_0 = std::move(Parms.TargetHitLocation_0);

	if (TargetLocation_0 != nullptr)
		*TargetLocation_0 = std::move(Parms.TargetLocation_0);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetStandTotalRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetStandTotalRange(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetStandTotalRange");

	Params::BP_AJBCloseRangeSkill_C_GetStandTotalRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CalcStandTargetLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TargetLocation_0                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::CalcStandTargetLocation(const struct FVector& EndLocation, struct FVector* TargetLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CalcStandTargetLocation");

	Params::BP_AJBCloseRangeSkill_C_CalcStandTargetLocation Parms{};

	Parms.EndLocation = std::move(EndLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation_0 != nullptr)
		*TargetLocation_0 = std::move(Parms.TargetLocation_0);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CalcCollisionEndLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         EndLocation                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::CalcCollisionEndLocation(struct FVector* EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CalcCollisionEndLocation");

	Params::BP_AJBCloseRangeSkill_C_CalcCollisionEndLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EndLocation != nullptr)
		*EndLocation = std::move(Parms.EndLocation);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetLaunchedActorTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          LauncedActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetLaunchedActorTarget(class AActor** LauncedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetLaunchedActorTarget");

	Params::BP_AJBCloseRangeSkill_C_GetLaunchedActorTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LauncedActor != nullptr)
		*LauncedActor = Parms.LauncedActor;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticAttackRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  AttackRange_cm__0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetPoliticAttackRange(float* AttackRange_cm__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetPoliticAttackRange");

	Params::BP_AJBCloseRangeSkill_C_GetPoliticAttackRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttackRange_cm__0 != nullptr)
		*AttackRange_cm__0 = Parms.AttackRange_cm__0;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticHitWaitTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  HitWaitTime_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetPoliticHitWaitTime(float* HitWaitTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetPoliticHitWaitTime");

	Params::BP_AJBCloseRangeSkill_C_GetPoliticHitWaitTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitWaitTime_0 != nullptr)
		*HitWaitTime_0 = Parms.HitWaitTime_0;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CheckFailedTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bFailedTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::CheckFailedTarget(class AActor* HitActor, bool* bFailedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CheckFailedTarget");

	Params::BP_AJBCloseRangeSkill_C_CheckFailedTarget Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bFailedTarget != nullptr)
		*bFailedTarget = Parms.bFailedTarget;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticAttackCollisionRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  AttackCollisionRadius_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetPoliticAttackCollisionRadius(float* AttackCollisionRadius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetPoliticAttackCollisionRadius");

	Params::BP_AJBCloseRangeSkill_C_GetPoliticAttackCollisionRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttackCollisionRadius_0 != nullptr)
		*AttackCollisionRadius_0 = Parms.AttackCollisionRadius_0;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.CheckDamageActorInfoChangable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bVariable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::CheckDamageActorInfoChangable(bool* bVariable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "CheckDamageActorInfoChangable");

	Params::BP_AJBCloseRangeSkill_C_CheckDamageActorInfoChangable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bVariable != nullptr)
		*bVariable = Parms.bVariable;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetPoliticStandAttackOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         StandAttackOffset                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::GetPoliticStandAttackOffset(struct FVector* StandAttackOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetPoliticStandAttackOffset");

	Params::BP_AJBCloseRangeSkill_C_GetPoliticStandAttackOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandAttackOffset != nullptr)
		*StandAttackOffset = std::move(Parms.StandAttackOffset);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.UpdateDamageActorInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::UpdateDamageActorInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "UpdateDamageActorInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.SnapPostProcess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   BeforeLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         AfterLocation                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::SnapPostProcess(const struct FVector& BeforeLocation, class AActor* HitActor, struct FVector* AfterLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "SnapPostProcess");

	Params::BP_AJBCloseRangeSkill_C_SnapPostProcess Parms{};

	Parms.BeforeLocation = std::move(BeforeLocation);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AfterLocation != nullptr)
		*AfterLocation = std::move(Parms.AfterLocation);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.FacePostProcess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FRotator&                  BeforeRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        AfterRotation                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::FacePostProcess(const struct FRotator& BeforeRotation, class AActor* HitActor, struct FRotator* AfterRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "FacePostProcess");

	Params::BP_AJBCloseRangeSkill_C_FacePostProcess Parms{};

	Parms.BeforeRotation = std::move(BeforeRotation);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AfterRotation != nullptr)
		*AfterRotation = std::move(Parms.AfterRotation);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.GetSkillAttackRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBCloseRangeSkill_C::GetSkillAttackRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "GetSkillAttackRange");

	Params::BP_AJBCloseRangeSkill_C_GetSkillAttackRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "StateBeginPlay");

	Params::BP_AJBCloseRangeSkill_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnReady
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ReceiveTick");

	Params::BP_AJBCloseRangeSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCloseRangeSkill_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "NotifyTheWorld");

	Params::BP_AJBCloseRangeSkill_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBCloseRangeSkill_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCloseRangeSkill.BP_AJBCloseRangeSkill_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCloseRangeSkill_C::ChangeState(uint8 NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCloseRangeSkill_C", "ChangeState");

	Params::BP_AJBCloseRangeSkill_C_ChangeState Parms{};

	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}

}


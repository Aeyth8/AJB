#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_FGO

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_FGO_classes.hpp"
#include "BP_AJBInGameCharacter_FGO_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.ExecuteUbergraph_BP_AJBInGameCharacter_FGO
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_FGO_C::ExecuteUbergraph_BP_AJBInGameCharacter_FGO(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "ExecuteUbergraph_BP_AJBInGameCharacter_FGO");

	Params::BP_AJBInGameCharacter_FGO_C_ExecuteUbergraph_BP_AJBInGameCharacter_FGO Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.InactiveContinuedAccompany
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::InactiveContinuedAccompany()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "InactiveContinuedAccompany");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.ActiveContinuedAccompany
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::ActiveContinuedAccompany()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "ActiveContinuedAccompany");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.GetDummyShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_FGO_C::GetDummyShotLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "GetDummyShotLocation");

	Params::BP_AJBInGameCharacter_FGO_C_GetDummyShotLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.ShouldShowNGPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::ShouldShowNGPoint(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "ShouldShowNGPoint");

	Params::BP_AJBInGameCharacter_FGO_C_ShouldShowNGPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.GetShutTraceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_FGO_C::GetShutTraceRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "GetShutTraceRadius");

	Params::BP_AJBInGameCharacter_FGO_C_GetShutTraceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.GetShotLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConsiderCharacterCapsuleRadius                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTag&              SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 Locations                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameCharacter_FGO_C::GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "GetShotLocation");

	Params::BP_AJBInGameCharacter_FGO_C_GetShotLocation Parms{};

	Parms.bConsiderCharacterCapsuleRadius = bConsiderCharacterCapsuleRadius;
	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.CheckLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bLocallyControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::CheckLocallyControlled(bool* bLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "CheckLocallyControlled");

	Params::BP_AJBInGameCharacter_FGO_C_CheckLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocallyControlled != nullptr)
		*bLocallyControlled = Parms.bLocallyControlled;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.OnGivePassiveSkillServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          HitTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_FGO_C::OnGivePassiveSkillServer(class UObject* HitTarget, const struct FGameplayTag& Tag, class UObject* Causer, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "OnGivePassiveSkillServer");

	Params::BP_AJBInGameCharacter_FGO_C_OnGivePassiveSkillServer Parms{};

	Parms.HitTarget = HitTarget;
	Parms.Tag = std::move(Tag);
	Parms.Causer = Causer;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.ReleasedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::ReleasedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "ReleasedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.PressedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::PressedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "PressedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.ReleasedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::ReleasedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "ReleasedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.PressedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::PressedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "PressedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.PressedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::PressedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "PressedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.Resurrection_Impl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvincibleTimeSec                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAPMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRecoveryUltimateUseCount                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::Resurrection_Impl(float InvincibleTimeSec, bool bAPMax, bool bRecoveryUltimateUseCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "Resurrection_Impl");

	Params::BP_AJBInGameCharacter_FGO_C_Resurrection_Impl Parms{};

	Parms.InvincibleTimeSec = InvincibleTimeSec;
	Parms.bAPMax = bAPMax;
	Parms.bRecoveryUltimateUseCount = bRecoveryUltimateUseCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_FGO_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_FGO_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.SkillInactivated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               InactivatedSkill                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_FGO_C::SkillInactivated(class UBP_AJBSkillBase_C* InactivatedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "SkillInactivated");

	Params::BP_AJBInGameCharacter_FGO_C_SkillInactivated Parms{};

	Parms.InactivatedSkill = InactivatedSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.CanEmote
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer*           FailureFactor                                          (Parm, OutParm)
// struct FGameplayTagContainer*           FailureSkills                                          (Parm, OutParm)
// bool*                                   bCanEmote                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::CanEmote(struct FGameplayTagContainer* FailureFactor, struct FGameplayTagContainer* FailureSkills, bool* bCanEmote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "CanEmote");

	Params::BP_AJBInGameCharacter_FGO_C_CanEmote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FailureFactor != nullptr)
		*FailureFactor = std::move(Parms.FailureFactor);

	if (FailureSkills != nullptr)
		*FailureSkills = std::move(Parms.FailureSkills);

	if (bCanEmote != nullptr)
		*bCanEmote = Parms.bCanEmote;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.OnBeforeInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bShouldInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::OnBeforeInteract(bool* bShouldInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "OnBeforeInteract");

	Params::BP_AJBInGameCharacter_FGO_C_OnBeforeInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldInteract != nullptr)
		*bShouldInteract = Parms.bShouldInteract;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.CheckAnySkillActiveOnTiltOneDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bAnySkillActive                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::CheckAnySkillActiveOnTiltOneDash(bool* bAnySkillActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "CheckAnySkillActiveOnTiltOneDash");

	Params::BP_AJBInGameCharacter_FGO_C_CheckAnySkillActiveOnTiltOneDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAnySkillActive != nullptr)
		*bAnySkillActive = Parms.bAnySkillActive;
}


// Function BP_AJBInGameCharacter_FGO.BP_AJBInGameCharacter_FGO_C.CheckSidlingOnTiltOnce
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bSidling                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_FGO_C::CheckSidlingOnTiltOnce(bool* bSidling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_FGO_C", "CheckSidlingOnTiltOnce");

	Params::BP_AJBInGameCharacter_FGO_C_CheckSidlingOnTiltOnce Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSidling != nullptr)
		*bSidling = Parms.bSidling;
}

}


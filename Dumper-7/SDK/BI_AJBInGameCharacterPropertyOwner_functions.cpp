#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBInGameCharacterPropertyOwner

#include "Basic.hpp"

#include "BI_AJBInGameCharacterPropertyOwner_classes.hpp"
#include "BI_AJBInGameCharacterPropertyOwner_parameters.hpp"


namespace SDK
{

// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.GetPropertyStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        PropertyStandBP                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_AJBInGameCharacterPropertyOwner_C::GetPropertyStand(class ABP_AJBInGameCharacter_C** PropertyStandBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterPropertyOwner_C", "GetPropertyStand");

	Params::BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (PropertyStandBP != nullptr)
		*PropertyStandBP = Parms.PropertyStandBP;
}


// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.CheckExistPropertyStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bExist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterPropertyOwner_C::CheckExistPropertyStand(bool* bExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterPropertyOwner_C", "CheckExistPropertyStand");

	Params::BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bExist != nullptr)
		*bExist = Parms.bExist;
}


// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.CheckTransfer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTransfer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_AJBInGameCharacterPropertyOwner_C::CheckTransfer(bool* bTransfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_AJBInGameCharacterPropertyOwner_C", "CheckTransfer");

	Params::BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (bTransfer != nullptr)
		*bTransfer = Parms.bTransfer;
}

}


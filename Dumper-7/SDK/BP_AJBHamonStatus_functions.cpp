#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHamonStatus

#include "Basic.hpp"

#include "BP_AJBHamonStatus_classes.hpp"
#include "BP_AJBHamonStatus_parameters.hpp"


namespace SDK
{

// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ExecuteUbergraph_BP_AJBHamonStatus
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::ExecuteUbergraph_BP_AJBHamonStatus(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ExecuteUbergraph_BP_AJBHamonStatus");

	Params::BP_AJBHamonStatus_C_ExecuteUbergraph_BP_AJBHamonStatus Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.Replicate_SkipOwner_UIStatus
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::Replicate_SkipOwner_UIStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "Replicate_SkipOwner_UIStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ROS_Replicate_SkipOwner_UIStatus
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Gauge_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsHamonMode_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::ROS_Replicate_SkipOwner_UIStatus(float Gauge_0, bool bIsHamonMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ROS_Replicate_SkipOwner_UIStatus");

	Params::BP_AJBHamonStatus_C_ROS_Replicate_SkipOwner_UIStatus Parms{};

	Parms.Gauge_0 = Gauge_0;
	Parms.bIsHamonMode_0 = bIsHamonMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.OnPassiveAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              AddCondition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SecondTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "OnPassiveAdded");

	Params::BP_AJBHamonStatus_C_OnPassiveAdded Parms{};

	Parms.AddCondition = std::move(AddCondition);
	Parms.SecondTag = std::move(SecondTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.MC_ChangeHamonMode
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::MC_ChangeHamonMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "MC_ChangeHamonMode");

	Params::BP_AJBHamonStatus_C_MC_ChangeHamonMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.Cancel
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.OnBecomeLastSurvivor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBitesTheDust                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::OnBecomeLastSurvivor(bool bBitesTheDust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "OnBecomeLastSurvivor");

	Params::BP_AJBHamonStatus_C_OnBecomeLastSurvivor Parms{};

	Parms.bBitesTheDust = bBitesTheDust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.OnReceiveDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByStatus                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCutByAAP                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEndured                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::OnReceiveDamage(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP, bool IsEndured)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "OnReceiveDamage");

	Params::BP_AJBHamonStatus_C_OnReceiveDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCutByStatus = bDamageIsCutByStatus;
	Parms.bDamageIsCutByAAP = bDamageIsCutByAAP;
	Parms.IsEndured = IsEndured;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBHamonStatus_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ROS_ChangeHamonMode
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::ROS_ChangeHamonMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ROS_ChangeHamonMode");

	Params::BP_AJBHamonStatus_C_ROS_ChangeHamonMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ChangeHamonMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::ChangeHamonMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ChangeHamonMode");

	Params::BP_AJBHamonStatus_C_ChangeHamonMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.TickStateDecrease
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::TickStateDecrease(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "TickStateDecrease");

	Params::BP_AJBHamonStatus_C_TickStateDecrease Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.TickStateDecreaseWait
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::TickStateDecreaseWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "TickStateDecreaseWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.TickStateIncrease
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::TickStateIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "TickStateIncrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.TickStateNone
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::TickStateNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "TickStateNone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.StateTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::StateTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "StateTick");

	Params::BP_AJBHamonStatus_C_StateTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ReceiveTick");

	Params::BP_AJBHamonStatus_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.Play_EndHamonModeVoice
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::Play_EndHamonModeVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "Play_EndHamonModeVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.SpawnStartParticle
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::SpawnStartParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "SpawnStartParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.Play_BeginHamonModeSE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::Play_BeginHamonModeSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "Play_BeginHamonModeSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.IncreaseHamonGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreChangeState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::IncreaseHamonGauge(float Value, bool bIgnoreChangeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "IncreaseHamonGauge");

	Params::BP_AJBHamonStatus_C_IncreaseHamonGauge Parms{};

	Parms.Value = Value;
	Parms.bIgnoreChangeState = bIgnoreChangeState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.DecreaseHamonGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::DecreaseHamonGauge(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "DecreaseHamonGauge");

	Params::BP_AJBHamonStatus_C_DecreaseHamonGauge Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ChangeEnableHamonMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::ChangeEnableHamonMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ChangeEnableHamonMode");

	Params::BP_AJBHamonStatus_C_ChangeEnableHamonMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ChangeHamonState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::ChangeHamonState(uint8 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ChangeHamonState");

	Params::BP_AJBHamonStatus_C_ChangeHamonState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.ForceChangeHamonMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::ForceChangeHamonMode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "ForceChangeHamonMode");

	Params::BP_AJBHamonStatus_C_ForceChangeHamonMode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.Stop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.StartDecrease
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::StartDecrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "StartDecrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.SetHamonGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::SetHamonGauge(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "SetHamonGauge");

	Params::BP_AJBHamonStatus_C_SetHamonGauge Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.StartDecreaseWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::StartDecreaseWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "StartDecreaseWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.UpdateEffectiveCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHamonStatus_C::UpdateEffectiveCount(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "UpdateEffectiveCount");

	Params::BP_AJBHamonStatus_C_UpdateEffectiveCount Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.TryUpdateEffectiveTimeMax
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::TryUpdateEffectiveTimeMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "TryUpdateEffectiveTimeMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.OnRep_(ForSkipOwner)Gauge
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::OnRep__ForSkipOwner_Gauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "OnRep_(ForSkipOwner)Gauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.OnRep_(ForSkipOwner)bIsHamonMode
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBHamonStatus_C::OnRep__ForSkipOwner_bIsHamonMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "OnRep_(ForSkipOwner)bIsHamonMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHamonStatus.BP_AJBHamonStatus_C.IsHamonMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bIsHamonMode_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHamonStatus_C::IsHamonMode(bool* bIsHamonMode_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHamonStatus_C", "IsHamonMode");

	Params::BP_AJBHamonStatus_C_IsHamonMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsHamonMode_0 != nullptr)
		*bIsHamonMode_0 = Parms.bIsHamonMode_0;
}

}


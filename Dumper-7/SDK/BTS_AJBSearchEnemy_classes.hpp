#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBSearchEnemy

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBSearchEnemy.BTS_AJBSearchEnemy_C
// 0x00A8 (0x0140 - 0x0098)
class UBTS_AJBSearchEnemy_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 EnemyFocusingOnKey;                                // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 IfFocusingEnemyInFiringRange;                      // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 PathToFocusingEnemy;                               // 0x00F0(0x0028)(Edit, BlueprintVisible)
	float                                         TargetingRangeBufferParam;                         // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetingRangeBuffer;                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventTagLocker*                        EnemyTypeLocker;                                   // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnlyPlayersWithoutInsight;                       // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BTS_AJBSearchEnemy(int32 EntryPoint);
	void SearchNearestPlayerWithoutRecognizing();
	void ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SearchNearestEnemy();
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBSearchEnemy_C">();
	}
	static class UBTS_AJBSearchEnemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBSearchEnemy_C>();
	}
};
static_assert(alignof(UBTS_AJBSearchEnemy_C) == 0x000008, "Wrong alignment on UBTS_AJBSearchEnemy_C");
static_assert(sizeof(UBTS_AJBSearchEnemy_C) == 0x000140, "Wrong size on UBTS_AJBSearchEnemy_C");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBSearchEnemy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, EnemyFocusingOnKey) == 0x0000A0, "Member 'UBTS_AJBSearchEnemy_C::EnemyFocusingOnKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, IfFocusingEnemyInFiringRange) == 0x0000C8, "Member 'UBTS_AJBSearchEnemy_C::IfFocusingEnemyInFiringRange' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, PathToFocusingEnemy) == 0x0000F0, "Member 'UBTS_AJBSearchEnemy_C::PathToFocusingEnemy' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, TargetingRangeBufferParam) == 0x000118, "Member 'UBTS_AJBSearchEnemy_C::TargetingRangeBufferParam' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, TargetingRangeBuffer) == 0x000120, "Member 'UBTS_AJBSearchEnemy_C::TargetingRangeBuffer' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, Recognition) == 0x000128, "Member 'UBTS_AJBSearchEnemy_C::Recognition' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, EnemyTypeLocker) == 0x000130, "Member 'UBTS_AJBSearchEnemy_C::EnemyTypeLocker' has a wrong offset!");
static_assert(offsetof(UBTS_AJBSearchEnemy_C, IsOnlyPlayersWithoutInsight) == 0x000138, "Member 'UBTS_AJBSearchEnemy_C::IsOnlyPlayersWithoutInsight' has a wrong offset!");

}


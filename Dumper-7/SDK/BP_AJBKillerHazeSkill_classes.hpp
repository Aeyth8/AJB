#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKillerHazeSkill

#include "Basic.hpp"

#include "BP_AJBShotPreviewSkill_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C
// 0x0020 (0x03A0 - 0x0380)
class UBP_AJBKillerHazeSkill_C final : public UBP_AJBShotPreviewSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBKillerHazeSkill_C;            // 0x0380(0x0008)(Transient, DuplicateTransient)
	class ABP_AJBDamageAffecterBase_C*            KillerHazeAffecter;                                // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActionTimeOnFerocious_s_;                          // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBKillerHazeSkill(int32 EntryPoint);
	void TrySpawnKillerHazeAffecter(const struct FTransform& SpawnTransform, class AActor* Owner, float PassiveSkillTime, float OverridedScale, int32 SerialNumber_0, float ActiveTime);
	void AddToMultipleLocations(const struct FVector& Location, float Scale, int32 InSerialNumber, float DelayTime);
	void GetPoliticActionTime(float* ActionTime);
	void OnStateAction();
	bool CanUseSkill(struct FGameplayTagContainer* TagContainer);

	bool IsInPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBKillerHazeSkill_C">();
	}
	static class UBP_AJBKillerHazeSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBKillerHazeSkill_C>();
	}
};
static_assert(alignof(UBP_AJBKillerHazeSkill_C) == 0x000010, "Wrong alignment on UBP_AJBKillerHazeSkill_C");
static_assert(sizeof(UBP_AJBKillerHazeSkill_C) == 0x0003A0, "Wrong size on UBP_AJBKillerHazeSkill_C");
static_assert(offsetof(UBP_AJBKillerHazeSkill_C, UberGraphFrame_BP_AJBKillerHazeSkill_C) == 0x000380, "Member 'UBP_AJBKillerHazeSkill_C::UberGraphFrame_BP_AJBKillerHazeSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBKillerHazeSkill_C, KillerHazeAffecter) == 0x000388, "Member 'UBP_AJBKillerHazeSkill_C::KillerHazeAffecter' has a wrong offset!");
static_assert(offsetof(UBP_AJBKillerHazeSkill_C, ActionTimeOnFerocious_s_) == 0x000390, "Member 'UBP_AJBKillerHazeSkill_C::ActionTimeOnFerocious_s_' has a wrong offset!");

}


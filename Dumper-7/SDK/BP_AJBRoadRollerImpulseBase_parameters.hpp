#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRoadRollerImpulseBase

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBRoadRollerImpulseBase.BP_AJBRoadRollerImpulseBase_C.ExecuteUbergraph_BP_AJBRoadRollerImpulseBase
// 0x01A0 (0x01A0 - 0x0000)
struct BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue1;             // 0x00E0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase) == 0x000008, "Wrong alignment on BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase");
static_assert(sizeof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase) == 0x0001A0, "Wrong size on BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, EntryPoint) == 0x000000, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetTagName_ReturnValue) == 0x000008, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000028, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Right_ReturnValue) == 0x000030, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Event_Operator) == 0x0000B0, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Event_Time) == 0x0000B8, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Event_Timing) == 0x0000BC, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Event_bEnable) == 0x0000BD, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Event_bOperatorIsEmpty) == 0x0000BE, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, Temp_bool_Variable) == 0x0000BF, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0000C8, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0000D0, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_GetCharacterName_CharacterName) == 0x0000D8, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_NameToText_ReturnValue1) == 0x0000E0, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_NameToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_IsValid_ReturnValue1) == 0x0000F8, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_Select_Default) == 0x000100, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_MakeStruct_FormatArgumentData1) == 0x000118, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_IsValid_ReturnValue2) == 0x000168, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Format_ReturnValue) == 0x000170, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_TextToString_ReturnValue) == 0x000188, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase, CallFunc_Conv_StringToName_ReturnValue) == 0x000198, "Member 'BP_AJBRoadRollerImpulseBase_C_ExecuteUbergraph_BP_AJBRoadRollerImpulseBase::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBRoadRollerImpulseBase.BP_AJBRoadRollerImpulseBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBRoadRollerImpulseBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


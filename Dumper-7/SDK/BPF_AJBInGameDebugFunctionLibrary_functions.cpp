#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBInGameDebugFunctionLibrary

#include "Basic.hpp"

#include "BPF_AJBInGameDebugFunctionLibrary_classes.hpp"
#include "BPF_AJBInGameDebugFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetControllerObjectNameFromActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    StringIfNotHasController                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetControllerObjectNameFromActor(class AActor* Actor, const class FString& StringIfNotHasController, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetControllerObjectNameFromActor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor Parms{};

	Parms.Actor = Actor;
	Parms.StringIfNotHasController = std::move(StringIfNotHasController);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetPairObjectsNameFromActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    StringIfNotHasPair                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          PairCharacterObjectName                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          PairControllerObjectName                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetPairObjectsNameFromActor(class AActor* Actor, const class FString& StringIfNotHasPair, class UObject* __WorldContext, class FString* PairCharacterObjectName, class FString* PairControllerObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetPairObjectsNameFromActor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor Parms{};

	Parms.Actor = Actor;
	Parms.StringIfNotHasPair = std::move(StringIfNotHasPair);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PairCharacterObjectName != nullptr)
		*PairCharacterObjectName = std::move(Parms.PairCharacterObjectName);

	if (PairControllerObjectName != nullptr)
		*PairControllerObjectName = std::move(Parms.PairControllerObjectName);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenCharacterObjectName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugShortenCharacterObjectName(const class FString& ObjectName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugShortenCharacterObjectName");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName Parms{};

	Parms.ObjectName = std::move(ObjectName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenControllerObjectName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPF_AJBInGameDebugFunctionLibrary_C::DebugShortenControllerObjectName(const class FString& ObjectName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugShortenControllerObjectName");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName Parms{};

	Parms.ObjectName = std::move(ObjectName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetAvailableCharacterTags
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAvailableNegotiationsCharacter                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelectable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUsableAsNPC                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bShipping                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class FName, struct FGameplayTag>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm)

TMap<class FName, struct FGameplayTag> UBPF_AJBInGameDebugFunctionLibrary_C::DebugGetAvailableCharacterTags(bool bAvailableNegotiationsCharacter, bool bSelectable, bool bUsableAsNPC, bool bShipping, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DebugGetAvailableCharacterTags");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags Parms{};

	Parms.bAvailableNegotiationsCharacter = bAvailableNegotiationsCharacter;
	Parms.bSelectable = bSelectable;
	Parms.bUsableAsNPC = bUsableAsNPC;
	Parms.bShipping = bShipping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawCross
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawCross(const struct FVector2D& Location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawCross");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawCross Parms{};

	Parms.Location = std::move(Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllCrosses
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::ClearAllCrosses(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "ClearAllCrosses");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawOutlineRect
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawOutlineRect(const struct FBox2D& Box, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawOutlineRect");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect Parms{};

	Parms.Box = std::move(Box);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllOutlineRects
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::ClearAllOutlineRects(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "ClearAllOutlineRects");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawDebugText
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawDebugText(const class FString& Text, const struct FVector2D& Location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawDebugText");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText Parms{};

	Parms.Text = std::move(Text);
	Parms.Location = std::move(Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllDebugTexts
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::ClearAllDebugTexts(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "ClearAllDebugTexts");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawCrossWithColor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawCrossWithColor(const struct FVector2D& Location, const struct FLinearColor& Color, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawCrossWithColor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor Parms{};

	Parms.Location = std::move(Location);
	Parms.Color = std::move(Color);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawDebugGrid
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   CenterLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  PlaneRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LifeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FIntPoint&                 GridNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawDebugGrid(const struct FVector& CenterLocation, const struct FRotator& PlaneRotation, const struct FVector2D& Size, const struct FLinearColor& LineColor, float LifeTime, float Thickness, const struct FIntPoint& GridNum, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawDebugGrid");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid Parms{};

	Parms.CenterLocation = std::move(CenterLocation);
	Parms.PlaneRotation = std::move(PlaneRotation);
	Parms.Size = std::move(Size);
	Parms.LineColor = std::move(LineColor);
	Parms.LifeTime = LifeTime;
	Parms.Thickness = Thickness;
	Parms.GridNum = std::move(GridNum);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawBoxGauge
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   GaugeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GaugeValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawBoxGauge(const struct FBox2D& Box, float GaugeMax, float GaugeValue, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawBoxGauge");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge Parms{};

	Parms.Box = std::move(Box);
	Parms.GaugeMax = GaugeMax;
	Parms.GaugeValue = GaugeValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawBoxGaugeWithColor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBox2D&                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   GaugeMax                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GaugeValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              OutlineColor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              FilledColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::DrawBoxGaugeWithColor(const struct FBox2D& Box, float GaugeMax, float GaugeValue, const struct FLinearColor& OutlineColor, const struct FLinearColor& FilledColor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "DrawBoxGaugeWithColor");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor Parms{};

	Parms.Box = std::move(Box);
	Parms.GaugeMax = GaugeMax;
	Parms.GaugeValue = GaugeValue;
	Parms.OutlineColor = std::move(OutlineColor);
	Parms.FilledColor = std::move(FilledColor);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.GetDebugScreenDrawHelper
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_AJBDebugScreenDrawHelper_C**  DebugScreenDrawHelper                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_AJBInGameDebugFunctionLibrary_C::GetDebugScreenDrawHelper(class UObject* __WorldContext, bool* Success, class UBP_AJBDebugScreenDrawHelper_C** DebugScreenDrawHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_AJBInGameDebugFunctionLibrary_C", "GetDebugScreenDrawHelper");

	Params::BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (DebugScreenDrawHelper != nullptr)
		*DebugScreenDrawHelper = Parms.DebugScreenDrawHelper;
}

}


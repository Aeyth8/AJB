#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBChargeRushSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBCloseRangeSkill_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBChargeRushSkill.BP_AJBChargeRushSkill_C
// 0x0020 (0x0420 - 0x0400)
class UBP_AJBChargeRushSkill_C : public UBP_AJBCloseRangeSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBChargeRushSkill_C;            // 0x0400(0x0008)(Transient, DuplicateTransient)
	bool                                          bIsCharging;                                       // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargingTime;                                      // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsReservedReleaseCharging;                         // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          IsFixed;                                           // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_412[0x2];                                      // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FixedChargeLevel;                                  // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         ChargeLevelCache;                                  // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         FullChargeTime;                                    // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBChargeRushSkill(int32 EntryPoint);
	void ResetFixedChargeState();
	void ReserveReleaseCharging();
	void OnActive_Impl();
	void ReserveBeginCharging();
	void ResetAllChargeState();
	void ReleaseCharging();
	void BeginCharging();
	void MC_BeginState_Charging();
	void ROS_BeginState_Charging();
	void Replicate_FixedStats_Local(int32 ChargeLevel);
	void MC_Replicate_FixedStats(int32 ChargeLevel);
	void ROS_Replicate_FixedStats(int32 ChargeLevel);
	void Replicate_FixedStates();
	void FixChargeState_Local();
	void OnEndState(bool bCancel, bool bRestore);
	void OnChargeLevelChanged(int32 NewChargeLevel);
	void BeginState_FixCharge();
	void BeginState_Charging();
	void TickState_Charging(float DeltaSeconds);
	void BeginState_Charging_Local();
	void IsCharging(bool* IsCharging_0);
	void CalcChargeLevel(float ChargingTime_0, int32* Level);
	void GetChargingTime(float* Time);
	void SetChargingTime(float Value, float* NewTime);
	void AddChargingTime(float Value, float* NewTime);
	void CalcCurrentChargeLevel(int32* ChargeLevel);
	void GetFixedChargeLevel(bool* IsFixed_0, int32* ChargeLevel);
	void OnDash(uint8 RepeatCount_0, bool bRedash);
	void Redash_Local();
	void StateTick(float DeltaSeconds);
	void StateBeginPlay(bool bShouldRestore);
	void OnCancel();
	void OnActive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBChargeRushSkill_C">();
	}
	static class UBP_AJBChargeRushSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBChargeRushSkill_C>();
	}
};
static_assert(alignof(UBP_AJBChargeRushSkill_C) == 0x000008, "Wrong alignment on UBP_AJBChargeRushSkill_C");
static_assert(sizeof(UBP_AJBChargeRushSkill_C) == 0x000420, "Wrong size on UBP_AJBChargeRushSkill_C");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, UberGraphFrame_BP_AJBChargeRushSkill_C) == 0x000400, "Member 'UBP_AJBChargeRushSkill_C::UberGraphFrame_BP_AJBChargeRushSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, bIsCharging) == 0x000408, "Member 'UBP_AJBChargeRushSkill_C::bIsCharging' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, ChargingTime) == 0x00040C, "Member 'UBP_AJBChargeRushSkill_C::ChargingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, IsReservedReleaseCharging) == 0x000410, "Member 'UBP_AJBChargeRushSkill_C::IsReservedReleaseCharging' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, IsFixed) == 0x000411, "Member 'UBP_AJBChargeRushSkill_C::IsFixed' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, FixedChargeLevel) == 0x000414, "Member 'UBP_AJBChargeRushSkill_C::FixedChargeLevel' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, ChargeLevelCache) == 0x000418, "Member 'UBP_AJBChargeRushSkill_C::ChargeLevelCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBChargeRushSkill_C, FullChargeTime) == 0x00041C, "Member 'UBP_AJBChargeRushSkill_C::FullChargeTime' has a wrong offset!");

}


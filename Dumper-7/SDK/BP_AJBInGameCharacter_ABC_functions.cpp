#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_ABC

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_ABC_classes.hpp"
#include "BP_AJBInGameCharacter_ABC_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ExecuteUbergraph_BP_AJBInGameCharacter_ABC
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::ExecuteUbergraph_BP_AJBInGameCharacter_ABC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ExecuteUbergraph_BP_AJBInGameCharacter_ABC");

	Params::BP_AJBInGameCharacter_ABC_C_ExecuteUbergraph_BP_AJBInGameCharacter_ABC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.NotifyTheWorldOnEventGraph
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::NotifyTheWorldOnEventGraph(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "NotifyTheWorldOnEventGraph");

	Params::BP_AJBInGameCharacter_ABC_C_NotifyTheWorldOnEventGraph Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ReceiveEndPlay");

	Params::BP_AJBInGameCharacter_ABC_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ShouldValidDamageType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::ShouldValidDamageType(const struct FGameplayTag& DamageType, bool bPenetrateAP, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ShouldValidDamageType");

	Params::BP_AJBInGameCharacter_ABC_C_ShouldValidDamageType Parms{};

	Parms.DamageType = std::move(DamageType);
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.GetPropertyStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        PropertyStandBP                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::GetPropertyStand(class ABP_AJBInGameCharacter_C** PropertyStandBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "GetPropertyStand");

	Params::BP_AJBInGameCharacter_ABC_C_GetPropertyStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PropertyStandBP != nullptr)
		*PropertyStandBP = Parms.PropertyStandBP;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.CheckExistPropertyStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bExist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::CheckExistPropertyStand(bool* bExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "CheckExistPropertyStand");

	Params::BP_AJBInGameCharacter_ABC_C_CheckExistPropertyStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExist != nullptr)
		*bExist = Parms.bExist;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.CheckTransfer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bTransfer                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::CheckTransfer(bool* bTransfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "CheckTransfer");

	Params::BP_AJBInGameCharacter_ABC_C_CheckTransfer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bTransfer != nullptr)
		*bTransfer = Parms.bTransfer;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.OnRep_MatchingPlayerIndex
// (Event, Public, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::OnRep_MatchingPlayerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "OnRep_MatchingPlayerIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.TryToShareMatchingPlayerIndexWithStand
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MatchingPlayerIndex_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::TryToShareMatchingPlayerIndexWithStand(int32 MatchingPlayerIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "TryToShareMatchingPlayerIndexWithStand");

	Params::BP_AJBInGameCharacter_ABC_C_TryToShareMatchingPlayerIndexWithStand Parms{};

	Parms.MatchingPlayerIndex_0 = MatchingPlayerIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.SetupSharedController
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::SetupSharedController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "SetupSharedController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ReleasedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::ReleasedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ReleasedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PressedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::PressedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PressedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PressedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::PressedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PressedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_ABC_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.ReleasedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::ReleasedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "ReleasedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PressedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::PressedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PressedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_ABC_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.CalcDamageRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float*                                  DamageRate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::CalcDamageRate(class AActor* DamagedActor, const struct FGameplayTag& DamageType, float* DamageRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "CalcDamageRate");

	Params::BP_AJBInGameCharacter_ABC_C_CalcDamageRate Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageType = std::move(DamageType);

	UObject::ProcessEvent(Func, &Parms);

	if (DamageRate != nullptr)
		*DamageRate = Parms.DamageRate;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PredictionAttackHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::PredictionAttackHit(bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PredictionAttackHit");

	Params::BP_AJBInGameCharacter_ABC_C_PredictionAttackHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.PreConsumeHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LeftDamageForHP                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  OverrideLeftDamageForHP                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_ABC_C::PreConsumeHP(int32 LeftDamageForHP, const struct FGameplayTag& DamageType, bool bPenetrateAP, int32* OverrideLeftDamageForHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "PreConsumeHP");

	Params::BP_AJBInGameCharacter_ABC_C_PreConsumeHP Parms{};

	Parms.LeftDamageForHP = LeftDamageForHP;
	Parms.DamageType = std::move(DamageType);
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);

	if (OverrideLeftDamageForHP != nullptr)
		*OverrideLeftDamageForHP = Parms.OverrideLeftDamageForHP;
}


// Function BP_AJBInGameCharacter_ABC.BP_AJBInGameCharacter_ABC_C.OnBeforeInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bShouldInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_ABC_C::OnBeforeInteract(bool* bShouldInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_ABC_C", "OnBeforeInteract");

	Params::BP_AJBInGameCharacter_ABC_C_OnBeforeInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldInteract != nullptr)
		*bShouldInteract = Parms.bShouldInteract;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBReplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBLongPressInteract_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBReplay.BP_AJBReplay_C
// 0x0070 (0x0290 - 0x0220)
class UBP_AJBReplay_C final : public UBP_AJBLongPressInteract_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBReplay_C;                     // 0x0220(0x0008)(Transient, DuplicateTransient)
	float                                         ReplayTime;                                        // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          ReplayStartParticle;                               // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTag_Start;                                 // 0x0238(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTag_Changed;                               // 0x0240(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          ReplayChangedParticle;                             // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBReplayActor_C*                   ReplayActor;                                       // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GionTag_Interacting;                               // 0x0258(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         GionDelay_Interacting;                             // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GionInterval_Interacting;                          // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SuccessInteractionSETag;                           // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SuccessInteractionVoiceTag;                        // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BeginInteractionVoiceTag;                          // 0x0278(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bOwnerIsDubbing;                                   // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           ReplayLoopSE;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBReplay(int32 EntryPoint);
	void StopLongInteractSe();
	void PlayLongInteractSE();
	void OnInteractSucceedServer(class ABP_AJBInGameCharacter_C* TargetCharacterBP, const struct FTransform& InteractActorTransform, const struct FDateTime& AccessedHistoryDateTime);
	void OnInteractSucceed(const struct FTransform& InteractActorTransform);
	void MC_SuccessInteract(const struct FTransform& InteractActorTransform);
	void OnCompleteReplay();
	void ROS_SuccessInteract(int32 TargetPlayerID, const struct FDateTime& AccessedHistoryDateTime, const struct FTransform& InteractActorTransform);
	void End_ReplayLoopSE();
	void Pause_ReplayLoopSE();
	void OnEnd_ReplayLoopSE(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void Resume_ReplayLoopSE();
	void Play_ReplayLoopSE();
	void FindHistoryTarget(int32 PlayerID, class ABP_AJBInGameCharacter_C** TargetCharacterBP);
	void SpawnReplayActor(class ABP_AJBInGameCharacter_C* TargetCharacterBP, const struct FTransform& InteractActorTransform);
	void OnLongPressInteractBegan(class AActor* InteractActor_0);
	void OnLongPressInteractEnded(bool bSuccess, bool bForceCancel, class AActor* InteractActor_0, bool bFlag01);
	void OnChangedViewTarget();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void BeginInteract(bool* bSuccess);
	void CheckInteractable(class ABP_AJBInGameCharacter_C* OperatorCharacter, class AActor* TargetActor, float BaseTraceLength, bool* bInteractable);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void CheckActive(bool* bActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBReplay_C">();
	}
	static class UBP_AJBReplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBReplay_C>();
	}
};
static_assert(alignof(UBP_AJBReplay_C) == 0x000008, "Wrong alignment on UBP_AJBReplay_C");
static_assert(sizeof(UBP_AJBReplay_C) == 0x000290, "Wrong size on UBP_AJBReplay_C");
static_assert(offsetof(UBP_AJBReplay_C, UberGraphFrame_BP_AJBReplay_C) == 0x000220, "Member 'UBP_AJBReplay_C::UberGraphFrame_BP_AJBReplay_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ReplayTime) == 0x000228, "Member 'UBP_AJBReplay_C::ReplayTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ReplayStartParticle) == 0x000230, "Member 'UBP_AJBReplay_C::ReplayStartParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ParticleTag_Start) == 0x000238, "Member 'UBP_AJBReplay_C::ParticleTag_Start' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ParticleTag_Changed) == 0x000240, "Member 'UBP_AJBReplay_C::ParticleTag_Changed' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ReplayChangedParticle) == 0x000248, "Member 'UBP_AJBReplay_C::ReplayChangedParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ReplayActor) == 0x000250, "Member 'UBP_AJBReplay_C::ReplayActor' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, GionTag_Interacting) == 0x000258, "Member 'UBP_AJBReplay_C::GionTag_Interacting' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, GionDelay_Interacting) == 0x000260, "Member 'UBP_AJBReplay_C::GionDelay_Interacting' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, GionInterval_Interacting) == 0x000264, "Member 'UBP_AJBReplay_C::GionInterval_Interacting' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, SuccessInteractionSETag) == 0x000268, "Member 'UBP_AJBReplay_C::SuccessInteractionSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, SuccessInteractionVoiceTag) == 0x000270, "Member 'UBP_AJBReplay_C::SuccessInteractionVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, BeginInteractionVoiceTag) == 0x000278, "Member 'UBP_AJBReplay_C::BeginInteractionVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, bOwnerIsDubbing) == 0x000280, "Member 'UBP_AJBReplay_C::bOwnerIsDubbing' has a wrong offset!");
static_assert(offsetof(UBP_AJBReplay_C, ReplayLoopSE) == 0x000288, "Member 'UBP_AJBReplay_C::ReplayLoopSE' has a wrong offset!");

}


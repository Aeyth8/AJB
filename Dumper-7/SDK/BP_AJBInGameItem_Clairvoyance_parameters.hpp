#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameItem_Clairvoyance

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameItem_Clairvoyance.BP_AJBInGameItem_Clairvoyance_C.ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_Event_TargetCharacter;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSpaceShaving;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBClairvoyance_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBParamContent*                       CallFunc_GetParamDefaultContent_ReturnValue1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_AddGameplayTag_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance) == 0x000008, "Wrong alignment on BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance");
static_assert(sizeof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance) == 0x000050, "Wrong size on BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, EntryPoint) == 0x000000, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, K2Node_Event_TargetCharacter) == 0x000008, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, K2Node_Event_bSpaceShaving) == 0x000010, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::K2Node_Event_bSpaceShaving' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_GetParamDefaultContent_ReturnValue) == 0x000028, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_GetParamDefaultContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_GetParamDefaultContent_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_GetParamDefaultContent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_GetFloatValue_ReturnValue) == 0x000038, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_GetFloatValue_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance, CallFunc_AddGameplayTag_self_CastInput) == 0x000040, "Member 'BP_AJBInGameItem_Clairvoyance_C_ExecuteUbergraph_BP_AJBInGameItem_Clairvoyance::CallFunc_AddGameplayTag_self_CastInput' has a wrong offset!");

// Function BP_AJBInGameItem_Clairvoyance.BP_AJBInGameItem_Clairvoyance_C.OnConsumedServer
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer final
{
public:
	class ABP_AJBInGameCharacter_C*               TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpaceShaving;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer) == 0x000008, "Wrong alignment on BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer");
static_assert(sizeof(BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer) == 0x000010, "Wrong size on BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer, TargetCharacter) == 0x000000, "Member 'BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer, bSpaceShaving) == 0x000008, "Member 'BP_AJBInGameItem_Clairvoyance_C_OnConsumedServer::bSpaceShaving' has a wrong offset!");

// Function BP_AJBInGameItem_Clairvoyance.BP_AJBInGameItem_Clairvoyance_C.GetCauserOwnerCharacterBP
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong size on BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBInGameItem_Clairvoyance_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");

// Function BP_AJBInGameItem_Clairvoyance.BP_AJBInGameItem_Clairvoyance_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag, PassiveSkillTag) == 0x000000, "Member 'BP_AJBInGameItem_Clairvoyance_C_GetPassiveSkillTag::PassiveSkillTag' has a wrong offset!");

// Function BP_AJBInGameItem_Clairvoyance.BP_AJBInGameItem_Clairvoyance_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameItem_Clairvoyance_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameItem_Clairvoyance_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBInGameItem_Clairvoyance_C_GetDuration");
static_assert(sizeof(BP_AJBInGameItem_Clairvoyance_C_GetDuration) == 0x000004, "Wrong size on BP_AJBInGameItem_Clairvoyance_C_GetDuration");
static_assert(offsetof(BP_AJBInGameItem_Clairvoyance_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBInGameItem_Clairvoyance_C_GetDuration::Duration' has a wrong offset!");

}


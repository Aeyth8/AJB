#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerTrackBase

#include "Basic.hpp"

#include "BP_SequencerTrackBase_classes.hpp"
#include "BP_SequencerTrackBase_parameters.hpp"


namespace SDK
{

// Function BP_SequencerTrackBase.BP_SequencerTrackBase_C.ExecuteUbergraph_BP_SequencerTrackBase
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerTrackBase_C::ExecuteUbergraph_BP_SequencerTrackBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerTrackBase_C", "ExecuteUbergraph_BP_SequencerTrackBase");

	Params::BP_SequencerTrackBase_C_ExecuteUbergraph_BP_SequencerTrackBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SequencerTrackBase.BP_SequencerTrackBase_C.SkipTrack
// (BlueprintCallable, BlueprintEvent)

void ABP_SequencerTrackBase_C::SkipTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerTrackBase_C", "SkipTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SequencerTrackBase.BP_SequencerTrackBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SequencerTrackBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerTrackBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SequencerTrackBase.BP_SequencerTrackBase_C.IsSkippingTrack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bIsSkiping                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SequencerTrackBase_C::IsSkippingTrack(bool* bIsSkiping) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerTrackBase_C", "IsSkippingTrack");

	Params::BP_SequencerTrackBase_C_IsSkippingTrack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsSkiping != nullptr)
		*bIsSkiping = Parms.bIsSkiping;
}

}


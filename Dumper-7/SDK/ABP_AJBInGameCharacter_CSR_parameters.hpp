#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameCharacter_CSR

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_AJBInGameCharacter_CSR.ABP_AJBInGameCharacter_CSR_C.ExecuteUbergraph_ABP_AJBInGameCharacter_CSR
// 0x0080 (0x0080 - 0x0000)
struct ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_CSR_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_CSR;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActivated_HasActivated;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR");
static_assert(sizeof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR) == 0x000080, "Wrong size on ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, EntryPoint) == 0x000000, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, K2Node_Event_DeltaTimeX) == 0x000040, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000048, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_CSR) == 0x000050, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_CSR' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_InverseTransformRotation_ReturnValue) == 0x00005C, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR, CallFunc_HasActivated_HasActivated) == 0x000078, "Member 'ABP_AJBInGameCharacter_CSR_C_ExecuteUbergraph_ABP_AJBInGameCharacter_CSR::CallFunc_HasActivated_HasActivated' has a wrong offset!");

// Function ABP_AJBInGameCharacter_CSR.ABP_AJBInGameCharacter_CSR_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AJBInGameCharacter_CSR_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}


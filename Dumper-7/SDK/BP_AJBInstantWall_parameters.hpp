#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInstantWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.ExecuteUbergraph_BP_AJBInstantWall
// 0x0160 (0x0160 - 0x0000)
struct BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds2;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue1;             // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall) == 0x000008, "Wrong alignment on BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall");
static_assert(sizeof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall) == 0x000160, "Wrong size on BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, EntryPoint) == 0x000000, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_Event_DeltaSeconds2) == 0x000010, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_Event_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_Event_DeltaSeconds1) == 0x000020, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_Event_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000028, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_BreakVector_X) == 0x000090, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_BreakVector_Y) == 0x000094, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_BreakVector_Z) == 0x000098, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000A0, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_GetCharacterName_CharacterName) == 0x0000B8, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_Conv_NameToText_ReturnValue1) == 0x0000C0, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_Conv_NameToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_MakeStruct_FormatArgumentData1) == 0x0000D8, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, K2Node_Event_DeltaSeconds) == 0x000140, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_Conv_TextToString_ReturnValue) == 0x000148, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall, CallFunc_Conv_StringToName_ReturnValue) == 0x000158, "Member 'BP_AJBInstantWall_C_ExecuteUbergraph_BP_AJBInstantWall::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInstantWall_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInstantWall_C_ReceiveTick");
static_assert(sizeof(BP_AJBInstantWall_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInstantWall_C_ReceiveTick");
static_assert(offsetof(BP_AJBInstantWall_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInstantWall_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.UpdateCollisionMesh
// 0x001C (0x001C - 0x0000)
struct BP_AJBInstantWall_C_UpdateCollisionMesh final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_UpdateCollisionMesh) == 0x000004, "Wrong alignment on BP_AJBInstantWall_C_UpdateCollisionMesh");
static_assert(sizeof(BP_AJBInstantWall_C_UpdateCollisionMesh) == 0x00001C, "Wrong size on BP_AJBInstantWall_C_UpdateCollisionMesh");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateCollisionMesh, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_AJBInstantWall_C_UpdateCollisionMesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateCollisionMesh, CallFunc_BreakVector_Y) == 0x000004, "Member 'BP_AJBInstantWall_C_UpdateCollisionMesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateCollisionMesh, CallFunc_BreakVector_Z) == 0x000008, "Member 'BP_AJBInstantWall_C_UpdateCollisionMesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateCollisionMesh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInstantWall_C_UpdateCollisionMesh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateCollisionMesh, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_AJBInstantWall_C_UpdateCollisionMesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.UpdateRenderCustomDepthPass
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInstantWall_C_UpdateRenderCustomDepthPass final
{
public:
	bool                                          CallFunc_ShouldActiveRenderCustomDepthPass_bShouldActive; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInstantWall_C_UpdateRenderCustomDepthPass) == 0x000001, "Wrong alignment on BP_AJBInstantWall_C_UpdateRenderCustomDepthPass");
static_assert(sizeof(BP_AJBInstantWall_C_UpdateRenderCustomDepthPass) == 0x000002, "Wrong size on BP_AJBInstantWall_C_UpdateRenderCustomDepthPass");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateRenderCustomDepthPass, CallFunc_ShouldActiveRenderCustomDepthPass_bShouldActive) == 0x000000, "Member 'BP_AJBInstantWall_C_UpdateRenderCustomDepthPass::CallFunc_ShouldActiveRenderCustomDepthPass_bShouldActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_UpdateRenderCustomDepthPass, CallFunc_BooleanXOR_ReturnValue) == 0x000001, "Member 'BP_AJBInstantWall_C_UpdateRenderCustomDepthPass::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.ShouldActiveRenderCustomDepthPass
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass final
{
public:
	bool                                          bShouldActive;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBCrimsonDimensionAffecter_C*      CallFunc_TryGetDimensionAffecter_CrimsonDimensionAffecter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActiveState_bActiveState;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass) == 0x000008, "Wrong alignment on BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass");
static_assert(sizeof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass) == 0x000018, "Wrong size on BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass");
static_assert(offsetof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass, bShouldActive) == 0x000000, "Member 'BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass::bShouldActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass, CallFunc_TryGetDimensionAffecter_CrimsonDimensionAffecter) == 0x000008, "Member 'BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass::CallFunc_TryGetDimensionAffecter_CrimsonDimensionAffecter' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass, CallFunc_CheckActiveState_bActiveState) == 0x000010, "Member 'BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass::CallFunc_CheckActiveState_bActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBInstantWall_C_ShouldActiveRenderCustomDepthPass::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.TryGetDimensionAffecter
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInstantWall_C_TryGetDimensionAffecter final
{
public:
	class ABP_AJBCrimsonDimensionAffecter_C*      CrimsonDimensionAffecter_0;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBCrimsonDimensionAffecter_C*> CallFunc_GetAllActorsOfClass_OutActors;         // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBCrimsonDimensionAffecter_C*      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_TryGetDimensionAffecter) == 0x000008, "Wrong alignment on BP_AJBInstantWall_C_TryGetDimensionAffecter");
static_assert(sizeof(BP_AJBInstantWall_C_TryGetDimensionAffecter) == 0x000030, "Wrong size on BP_AJBInstantWall_C_TryGetDimensionAffecter");
static_assert(offsetof(BP_AJBInstantWall_C_TryGetDimensionAffecter, CrimsonDimensionAffecter_0) == 0x000000, "Member 'BP_AJBInstantWall_C_TryGetDimensionAffecter::CrimsonDimensionAffecter_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_TryGetDimensionAffecter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBInstantWall_C_TryGetDimensionAffecter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_TryGetDimensionAffecter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_AJBInstantWall_C_TryGetDimensionAffecter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_TryGetDimensionAffecter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_AJBInstantWall_C_TryGetDimensionAffecter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_TryGetDimensionAffecter, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBInstantWall_C_TryGetDimensionAffecter::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.StateTick_Standby
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInstantWall_C_StateTick_Standby final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_StateTick_Standby) == 0x000004, "Wrong alignment on BP_AJBInstantWall_C_StateTick_Standby");
static_assert(sizeof(BP_AJBInstantWall_C_StateTick_Standby) == 0x000004, "Wrong size on BP_AJBInstantWall_C_StateTick_Standby");
static_assert(offsetof(BP_AJBInstantWall_C_StateTick_Standby, DeltaSeconds) == 0x000000, "Member 'BP_AJBInstantWall_C_StateTick_Standby::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.StateTick_Prepare
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInstantWall_C_StateTick_Prepare final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_StateTick_Prepare) == 0x000004, "Wrong alignment on BP_AJBInstantWall_C_StateTick_Prepare");
static_assert(sizeof(BP_AJBInstantWall_C_StateTick_Prepare) == 0x000004, "Wrong size on BP_AJBInstantWall_C_StateTick_Prepare");
static_assert(offsetof(BP_AJBInstantWall_C_StateTick_Prepare, DeltaSeconds) == 0x000000, "Member 'BP_AJBInstantWall_C_StateTick_Prepare::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInstantWall.BP_AJBInstantWall_C.GetTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInstantWall_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInstantWall_C_GetTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInstantWall_C_GetTargetLocation");
static_assert(sizeof(BP_AJBInstantWall_C_GetTargetLocation) == 0x000018, "Wrong size on BP_AJBInstantWall_C_GetTargetLocation");
static_assert(offsetof(BP_AJBInstantWall_C_GetTargetLocation, Location) == 0x000000, "Member 'BP_AJBInstantWall_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInstantWall_C_GetTargetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_AJBInstantWall_C_GetTargetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}


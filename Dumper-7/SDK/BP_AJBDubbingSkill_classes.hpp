#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDubbingSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBTransferSkill_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDubbingSkill.BP_AJBDubbingSkill_C
// 0x0110 (0x0480 - 0x0370)
class UBP_AJBDubbingSkill_C final : public UBP_AJBTransferSkill_C
{
public:
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBDubbingSkill_C;               // 0x0368(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           BeginDubbingSETag;                                 // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DubbingRecordedSETag;                              // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DubbingDamagedSETag;                               // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<struct FGameplayTag>                     CurrentFrameAddedPassiveCache;                     // 0x0388(0x0050)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FGameplayTagContainer                  PassiveTagsShouldPropagateToABC;                   // 0x03D8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                  PassiveTagsShouldPropagateToMDB;                   // 0x03F8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                  PassiveTagsShouldRecordImmidiately;                // 0x0418(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                  DamageTypeTagsIgnoreRecording;                     // 0x0438(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UAnimMontage*                           AM_DubbingStart;                                   // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  DamageTypeTagsShouldNotDubbing;                    // 0x0460(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBDubbingSkill(int32 EntryPoint);
	void UnCrouchMDB();
	void PlayActionMontage(class FName StartingSection);
	void OnABCPassiveRemoved__Server_(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnABCPassiveAdded__Server_(const struct FGameplayTag& AddCondition, class UObject* Causer, const struct FGameplayTag& CauserType);
	void SetupDubbing(class ABP_AJBInGameCharacter_ABC_C* ABC);
	void OnClientMovableStandRestarted();
	void OnBeginState_Action2();
	void ActionCommon();
	void OnCompleted_7B45FB9D406D5826C78546BCDDDB52AD(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCDDDB52AD(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCDDDB52AD(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCDDDB52AD(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCDDDB52AD(class FName NotifyName);
	void IsAppearState(bool* IsAppearState_0);
	void SpawnParticlePropertyStandAction();
	void TickState_Transfer(float DeltaSeconds);
	void OnStateEnd(bool bCancel, bool bRestore);
	void OnBeginState_Transfer(bool bRenaturation);
	void OnBeginState_Action(class ABP_AJBInGameCharacter_C* TargetCharacter);
	void ShouldPropagatePassiveToABC(const struct FGameplayTag& PassiveTag, bool* ShouldPropagate);
	void ShouldPropagatePassiveToMDB(const struct FGameplayTag& PassiveTag, bool* ShouldPropagate);
	void ClearAddedPassiveCache();
	void IsStateShouldPropagate(bool* IsShowing);
	void PropagatePassiveToABC(const struct FGameplayTag& PassiveTag, const struct FGameplayTag& CauserType);
	void PropagatePassiveToMDB(const struct FGameplayTag& PassiveTag);
	void IsActiveState(bool* IsActiveState_0);
	void InitialPropagatePassiveToMDB();
	void ShouldRecordImmidiatelyPassive(const struct FGameplayTag& PassiveTag, bool* ShouldRecord);
	void IsIgnoredRecordingDamageType(const struct FGameplayTag& DamageType, bool* ShouldRecord);
	void ShouldNotActionDamageType(const struct FGameplayTag& DamageType, bool* ShouldNotAction);
	void ChangeState(uint8 NextState);
	void ShouldCancelOnLandingStop(bool* bShouldCancel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDubbingSkill_C">();
	}
	static class UBP_AJBDubbingSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBDubbingSkill_C>();
	}
};
static_assert(alignof(UBP_AJBDubbingSkill_C) == 0x000010, "Wrong alignment on UBP_AJBDubbingSkill_C");
static_assert(sizeof(UBP_AJBDubbingSkill_C) == 0x000480, "Wrong size on UBP_AJBDubbingSkill_C");
static_assert(offsetof(UBP_AJBDubbingSkill_C, UberGraphFrame_BP_AJBDubbingSkill_C) == 0x000368, "Member 'UBP_AJBDubbingSkill_C::UberGraphFrame_BP_AJBDubbingSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, BeginDubbingSETag) == 0x000370, "Member 'UBP_AJBDubbingSkill_C::BeginDubbingSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, DubbingRecordedSETag) == 0x000378, "Member 'UBP_AJBDubbingSkill_C::DubbingRecordedSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, DubbingDamagedSETag) == 0x000380, "Member 'UBP_AJBDubbingSkill_C::DubbingDamagedSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, CurrentFrameAddedPassiveCache) == 0x000388, "Member 'UBP_AJBDubbingSkill_C::CurrentFrameAddedPassiveCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, PassiveTagsShouldPropagateToABC) == 0x0003D8, "Member 'UBP_AJBDubbingSkill_C::PassiveTagsShouldPropagateToABC' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, PassiveTagsShouldPropagateToMDB) == 0x0003F8, "Member 'UBP_AJBDubbingSkill_C::PassiveTagsShouldPropagateToMDB' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, PassiveTagsShouldRecordImmidiately) == 0x000418, "Member 'UBP_AJBDubbingSkill_C::PassiveTagsShouldRecordImmidiately' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, DamageTypeTagsIgnoreRecording) == 0x000438, "Member 'UBP_AJBDubbingSkill_C::DamageTypeTagsIgnoreRecording' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, AM_DubbingStart) == 0x000458, "Member 'UBP_AJBDubbingSkill_C::AM_DubbingStart' has a wrong offset!");
static_assert(offsetof(UBP_AJBDubbingSkill_C, DamageTypeTagsShouldNotDubbing) == 0x000460, "Member 'UBP_AJBDubbingSkill_C::DamageTypeTagsShouldNotDubbing' has a wrong offset!");

}


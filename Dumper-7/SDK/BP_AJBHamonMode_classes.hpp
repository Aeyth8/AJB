#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHamonMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBHamonMode.BP_AJBHamonMode_C
// 0x0020 (0x0230 - 0x0210)
class UBP_AJBHamonMode_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBHamonMode_C;                  // 0x0210(0x0008)(Transient, DuplicateTransient)
	float                                         MoveSpeedRate;                                     // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attack___;                                         // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Defence___;                                        // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           HamonLoopSE;                                       // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBHamonMode(int32 EntryPoint);
	void OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnPassiveAdded(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag);
	void PlayInactiveSE();
	void OnContinuedParticleActivated();
	void Internal_Setup_Hamon_LoopSE();
	void SpawnEndParticle();
	void Play_Hamon_EndSE();
	void End_Hamon_LoopSE();
	void Pause_Hamon_LoopSE();
	void UnlockResumeGate_Breathing_LoopSE();
	void OnEnd_Hamon_LoopSE(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void Resume_Hamon_LoopSE();
	void Play_Hamon_LoopSE();
	void StopSE(class UObject* Causer);
	void PlaySE(class UObject* Causer);
	void ReceiveBeginPlay();
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBHamonMode_C">();
	}
	static class UBP_AJBHamonMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBHamonMode_C>();
	}
};
static_assert(alignof(UBP_AJBHamonMode_C) == 0x000008, "Wrong alignment on UBP_AJBHamonMode_C");
static_assert(sizeof(UBP_AJBHamonMode_C) == 0x000230, "Wrong size on UBP_AJBHamonMode_C");
static_assert(offsetof(UBP_AJBHamonMode_C, UberGraphFrame_BP_AJBHamonMode_C) == 0x000210, "Member 'UBP_AJBHamonMode_C::UberGraphFrame_BP_AJBHamonMode_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBHamonMode_C, MoveSpeedRate) == 0x000218, "Member 'UBP_AJBHamonMode_C::MoveSpeedRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBHamonMode_C, Attack___) == 0x00021C, "Member 'UBP_AJBHamonMode_C::Attack___' has a wrong offset!");
static_assert(offsetof(UBP_AJBHamonMode_C, Defence___) == 0x000220, "Member 'UBP_AJBHamonMode_C::Defence___' has a wrong offset!");
static_assert(offsetof(UBP_AJBHamonMode_C, HamonLoopSE) == 0x000228, "Member 'UBP_AJBHamonMode_C::HamonLoopSE' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStandPart_DDWLeg

#include "Basic.hpp"

#include "BP_AJBActorBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameStandPart_DDWLeg.BP_AJBInGameStandPart_DDWLeg_C
// 0x0040 (0x0370 - 0x0330)
class ABP_AJBInGameStandPart_DDWLeg_C final : public ABP_AJBActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DMI_LegMesh;                                       // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                SliceDirection;                                    // 0x0350(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SliceOffset;                                       // 0x035C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugPrintScreenDDWLegInfo;                       // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBInGameStandPart_DDWLeg(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void DetachFromOwner(const struct FRotator& Rotator);
	void AttachForOwner(const struct FRotator& Rotator);
	void Disappear(bool bAnimation);
	void Appear(bool bAnimation);
	void SetLegVisibility(bool bNewVisibility);
	void OnCompleted_9749DC52433D60649DD8CC991FEC9526(class FName NotifyName);
	void OnBlendOut_9749DC52433D60649DD8CC991FEC9526(class FName NotifyName);
	void OnInterrupted_9749DC52433D60649DD8CC991FEC9526(class FName NotifyName);
	void OnNotifyBegin_9749DC52433D60649DD8CC991FEC9526(class FName NotifyName);
	void OnNotifyEnd_9749DC52433D60649DD8CC991FEC9526(class FName NotifyName);
	void OnCompleted_C835400E473C71A629AFEBBDCDB01BAD(class FName NotifyName);
	void OnBlendOut_C835400E473C71A629AFEBBDCDB01BAD(class FName NotifyName);
	void OnInterrupted_C835400E473C71A629AFEBBDCDB01BAD(class FName NotifyName);
	void OnNotifyBegin_C835400E473C71A629AFEBBDCDB01BAD(class FName NotifyName);
	void OnNotifyEnd_C835400E473C71A629AFEBBDCDB01BAD(class FName NotifyName);
	void UserConstructionScript();
	void CreateDMIFlow();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameStandPart_DDWLeg_C">();
	}
	static class ABP_AJBInGameStandPart_DDWLeg_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameStandPart_DDWLeg_C>();
	}
};
static_assert(alignof(ABP_AJBInGameStandPart_DDWLeg_C) == 0x000008, "Wrong alignment on ABP_AJBInGameStandPart_DDWLeg_C");
static_assert(sizeof(ABP_AJBInGameStandPart_DDWLeg_C) == 0x000370, "Wrong size on ABP_AJBInGameStandPart_DDWLeg_C");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, UberGraphFrame) == 0x000330, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, SkeletalMesh) == 0x000338, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, DMI_LegMesh) == 0x000340, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::DMI_LegMesh' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, SliceDirection) == 0x000350, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::SliceDirection' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, SliceOffset) == 0x00035C, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::SliceOffset' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameStandPart_DDWLeg_C, bDebugPrintScreenDDWLegInfo) == 0x000368, "Member 'ABP_AJBInGameStandPart_DDWLeg_C::bDebugPrintScreenDDWLegInfo' has a wrong offset!");

}


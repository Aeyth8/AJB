#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAssaultDiveAffecter

#include "Basic.hpp"

#include "BP_AJBAssaultDiveAffecter_classes.hpp"
#include "BP_AJBAssaultDiveAffecter_parameters.hpp"


namespace SDK
{

// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.ExecuteUbergraph_BP_AJBAssaultDiveAffecter
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBAssaultDiveAffecter_C::ExecuteUbergraph_BP_AJBAssaultDiveAffecter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "ExecuteUbergraph_BP_AJBAssaultDiveAffecter");

	Params::BP_AJBAssaultDiveAffecter_C_ExecuteUbergraph_BP_AJBAssaultDiveAffecter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.UpdateLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBAssaultDiveAffecter_C::UpdateLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "UpdateLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBAssaultDiveAffecter_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "NotifyTheWorld");

	Params::BP_AJBAssaultDiveAffecter_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBAssaultDiveAffecter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "ReceiveTick");

	Params::BP_AJBAssaultDiveAffecter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBAssaultDiveAffecter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBAssaultDiveAffecter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.GetLocationAsCheckArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>*                 Location                                               (Parm, OutParm, ZeroConstructor)

void ABP_AJBAssaultDiveAffecter_C::GetLocationAsCheckArea(TArray<struct FVector>* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "GetLocationAsCheckArea");

	Params::BP_AJBAssaultDiveAffecter_C_GetLocationAsCheckArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.GetPartitionLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBAssaultDiveAffecter_C::GetPartitionLocation(int32 Index_0, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "GetPartitionLocation");

	Params::BP_AJBAssaultDiveAffecter_C_GetPartitionLocation Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBAssaultDiveAffecter.BP_AJBAssaultDiveAffecter_C.GetRotationAsCheckArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_AJBAssaultDiveAffecter_C::GetRotationAsCheckArea(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAssaultDiveAffecter_C", "GetRotationAsCheckArea");

	Params::BP_AJBAssaultDiveAffecter_C_GetRotationAsCheckArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}

}


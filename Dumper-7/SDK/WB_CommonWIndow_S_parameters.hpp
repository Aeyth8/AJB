#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CommonWIndow_S

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.ExecuteUbergraph_WB_CommonWIndow_S
// 0x01D0 (0x01D0 - 0x0000)
struct WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   K2Node_CustomEvent_Title1;                         // 0x0018(0x0018)()
	class FText                                   K2Node_CustomEvent_Text2;                          // 0x0030(0x0018)()
	class FText                                   K2Node_CustomEvent_Text1;                          // 0x0048(0x0018)()
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent3;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Title2;                         // 0x00B0(0x0018)()
	class FText                                   K2Node_CustomEvent_YesButton1;                     // 0x00C8(0x0018)()
	class FText                                   K2Node_CustomEvent_NoButton1;                      // 0x00E0(0x0018)()
	bool                                          CallFunc_FindAJBViewportWidgetOfClass_bSuccess;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_GameOver_C*                         CallFunc_FindAJBViewportWidgetOfClass_OutWidget;   // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget;                   // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPlayDecisionSE;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPlayCancelSE;                // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPlayOpenSE;                  // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsPlayCloseSE;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Title;                          // 0x0128(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0140(0x0018)()
	class FText                                   K2Node_CustomEvent_YesButton;                      // 0x0158(0x0018)()
	class FText                                   K2Node_CustomEvent_NoButton;                       // 0x0170(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue1;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x018C(0x0010)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue1;       // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin1;                         // 0x01B0(0x0010)(IsPlainOldData, NoDestructor)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate1;     // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S");
static_assert(sizeof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S) == 0x0001D0, "Wrong size on WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, EntryPoint) == 0x000000, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Title1) == 0x000018, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Title1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Text2) == 0x000030, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Text2' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Text1) == 0x000048, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Text1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x000060, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_ComponentBoundEvent_TargetButton1) == 0x000068, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000070, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_ComponentBoundEvent_TargetButton) == 0x000078, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000080, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000090, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x000098, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_RequestWwiseEventOnLocal_AkComponent3) == 0x0000A0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_RequestWwiseEventOnLocal_AkComponent3' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A8, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Title2) == 0x0000B0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Title2' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_YesButton1) == 0x0000C8, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_YesButton1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_NoButton1) == 0x0000E0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_NoButton1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_FindAJBViewportWidgetOfClass_bSuccess) == 0x0000F8, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_FindAJBViewportWidgetOfClass_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_FindAJBViewportWidgetOfClass_OutWidget) == 0x000100, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_FindAJBViewportWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_TextIsEmpty_ReturnValue) == 0x000108, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_SwitchEnum1_CmpSuccess) == 0x000109, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_TargetWidget) == 0x000110, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_TargetWidget' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_byte_Variable) == 0x000118, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_bIsPlayDecisionSE) == 0x000119, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_bIsPlayDecisionSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_bIsPlayCancelSE) == 0x00011A, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_bIsPlayCancelSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_bIsPlayOpenSE) == 0x00011B, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_bIsPlayOpenSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_bIsPlayCloseSE) == 0x00011C, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_bIsPlayCloseSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_byte_Variable1) == 0x00011D, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_bool_Variable) == 0x00011E, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_byte_Variable2) == 0x00011F, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_Select_Default) == 0x000120, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_byte_Variable3) == 0x000121, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, Temp_bool_Variable1) == 0x000122, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Title) == 0x000128, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_Text) == 0x000140, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_YesButton) == 0x000158, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_YesButton' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CustomEvent_NoButton) == 0x000170, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CustomEvent_NoButton' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_TextIsEmpty_ReturnValue1) == 0x000188, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_TextIsEmpty_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_Select1_Default) == 0x000189, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_MakeStruct_Margin) == 0x00018C, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x0001A0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, CallFunc_SlotAsVerticalBoxSlot_ReturnValue1) == 0x0001A8, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::CallFunc_SlotAsVerticalBoxSlot_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_MakeStruct_Margin1) == 0x0001B0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_MakeStruct_Margin1' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S, K2Node_CreateDelegate_OutputDelegate1) == 0x0001C0, "Member 'WB_CommonWIndow_S_C_ExecuteUbergraph_WB_CommonWIndow_S::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.ShowButton2AndText
// 0x0060 (0x0060 - 0x0000)
struct WB_CommonWIndow_S_C_ShowButton2AndText final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   YesButton;                                         // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NoButton;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_CommonWIndow_S_C_ShowButton2AndText) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_ShowButton2AndText");
static_assert(sizeof(WB_CommonWIndow_S_C_ShowButton2AndText) == 0x000060, "Wrong size on WB_CommonWIndow_S_C_ShowButton2AndText");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2AndText, Title) == 0x000000, "Member 'WB_CommonWIndow_S_C_ShowButton2AndText::Title' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2AndText, Text) == 0x000018, "Member 'WB_CommonWIndow_S_C_ShowButton2AndText::Text' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2AndText, YesButton) == 0x000030, "Member 'WB_CommonWIndow_S_C_ShowButton2AndText::YesButton' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2AndText, NoButton) == 0x000048, "Member 'WB_CommonWIndow_S_C_ShowButton2AndText::NoButton' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.SetIsPlaySE
// 0x0004 (0x0004 - 0x0000)
struct WB_CommonWIndow_S_C_SetIsPlaySE final
{
public:
	bool                                          bIsPlayDecisionSE;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPlayCancelSE;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPlayOpenSE_0;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPlayCloseSE_0;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_SetIsPlaySE) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_SetIsPlaySE");
static_assert(sizeof(WB_CommonWIndow_S_C_SetIsPlaySE) == 0x000004, "Wrong size on WB_CommonWIndow_S_C_SetIsPlaySE");
static_assert(offsetof(WB_CommonWIndow_S_C_SetIsPlaySE, bIsPlayDecisionSE) == 0x000000, "Member 'WB_CommonWIndow_S_C_SetIsPlaySE::bIsPlayDecisionSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_SetIsPlaySE, bIsPlayCancelSE) == 0x000001, "Member 'WB_CommonWIndow_S_C_SetIsPlaySE::bIsPlayCancelSE' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_SetIsPlaySE, bIsPlayOpenSE_0) == 0x000002, "Member 'WB_CommonWIndow_S_C_SetIsPlaySE::bIsPlayOpenSE_0' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_SetIsPlaySE, bIsPlayCloseSE_0) == 0x000003, "Member 'WB_CommonWIndow_S_C_SetIsPlaySE::bIsPlayCloseSE_0' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnOpeningGameOver
// 0x0008 (0x0008 - 0x0000)
struct WB_CommonWIndow_S_C_OnOpeningGameOver final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnOpeningGameOver) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_OnOpeningGameOver");
static_assert(sizeof(WB_CommonWIndow_S_C_OnOpeningGameOver) == 0x000008, "Wrong size on WB_CommonWIndow_S_C_OnOpeningGameOver");
static_assert(offsetof(WB_CommonWIndow_S_C_OnOpeningGameOver, TargetWidget) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnOpeningGameOver::TargetWidget' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_CommonWIndow_S_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.ShowTextOnly
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonWIndow_S_C_ShowTextOnly final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_CommonWIndow_S_C_ShowTextOnly) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_ShowTextOnly");
static_assert(sizeof(WB_CommonWIndow_S_C_ShowTextOnly) == 0x000018, "Wrong size on WB_CommonWIndow_S_C_ShowTextOnly");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowTextOnly, Text) == 0x000000, "Member 'WB_CommonWIndow_S_C_ShowTextOnly::Text' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.ShowTitle
// 0x0030 (0x0030 - 0x0000)
struct WB_CommonWIndow_S_C_ShowTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_CommonWIndow_S_C_ShowTitle) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_ShowTitle");
static_assert(sizeof(WB_CommonWIndow_S_C_ShowTitle) == 0x000030, "Wrong size on WB_CommonWIndow_S_C_ShowTitle");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowTitle, Title) == 0x000000, "Member 'WB_CommonWIndow_S_C_ShowTitle::Title' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowTitle, Text) == 0x000018, "Member 'WB_CommonWIndow_S_C_ShowTitle::Text' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.ShowButton2
// 0x0048 (0x0048 - 0x0000)
struct WB_CommonWIndow_S_C_ShowButton2 final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   YesButton;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NoButton;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_CommonWIndow_S_C_ShowButton2) == 0x000008, "Wrong alignment on WB_CommonWIndow_S_C_ShowButton2");
static_assert(sizeof(WB_CommonWIndow_S_C_ShowButton2) == 0x000048, "Wrong size on WB_CommonWIndow_S_C_ShowButton2");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2, Title) == 0x000000, "Member 'WB_CommonWIndow_S_C_ShowButton2::Title' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2, YesButton) == 0x000018, "Member 'WB_CommonWIndow_S_C_ShowButton2::YesButton' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_ShowButton2, NoButton) == 0x000030, "Member 'WB_CommonWIndow_S_C_ShowButton2::NoButton' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.GetButtonResult
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_GetButtonResult final
{
public:
	EAJBConfirmResult                             Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonWIndow_S_C_GetButtonResult) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_GetButtonResult");
static_assert(sizeof(WB_CommonWIndow_S_C_GetButtonResult) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_GetButtonResult");
static_assert(offsetof(WB_CommonWIndow_S_C_GetButtonResult, Result) == 0x000000, "Member 'WB_CommonWIndow_S_C_GetButtonResult::Result' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedUp");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedUp");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedRight");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedRight");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedLeft");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedLeft");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedDown");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedDown");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedDecide");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedDecide");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedCancel");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedCancel");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedUp");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedUp");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedRight");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedRight");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedLeft");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedLeft");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedDown");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedDown");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedDecide");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedDecide");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedCancel");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedCancel");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_CommonWIndow_S_C_OnInputTurnRate");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_CommonWIndow_S_C_OnInputTurnRate");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_CommonWIndow_S_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedTouch");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedTouch");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedTouch");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedTouch");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_CommonWIndow_S_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_CommonWIndow_S_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedTouch, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'WB_CommonWIndow_S_C_OnInputPressedTouch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_CommonWIndow_S_C_OnInputMoveRight");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_CommonWIndow_S_C_OnInputMoveRight");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_CommonWIndow_S_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_CommonWIndow_S_C_OnInputMoveForward");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_CommonWIndow_S_C_OnInputMoveForward");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_CommonWIndow_S_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_CommonWIndow_S_C_OnInputLookupRate");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_CommonWIndow_S_C_OnInputLookupRate");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_CommonWIndow_S_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_IsModeless) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_IsModeless");
static_assert(sizeof(WB_CommonWIndow_S_C_IsModeless) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_IsModeless");
static_assert(offsetof(WB_CommonWIndow_S_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedR2");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedR2");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedR1");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedR1");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedL3");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedL3");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedL2");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedL2");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputReleasedL1");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputReleasedL1");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedR2");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedR2");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedR1");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedR1");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedL3");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedL3");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedL2");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedL2");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_CommonWIndow_S.WB_CommonWIndow_S_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonWIndow_S_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonWIndow_S_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_CommonWIndow_S_C_OnInputPressedL1");
static_assert(sizeof(WB_CommonWIndow_S_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_CommonWIndow_S_C_OnInputPressedL1");
static_assert(offsetof(WB_CommonWIndow_S_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_CommonWIndow_S_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

}


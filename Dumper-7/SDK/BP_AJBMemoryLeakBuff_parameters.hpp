#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBMemoryLeakBuff

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.ExecuteUbergraph_BP_AJBMemoryLeakBuff
// 0x0200 (0x0200 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation; // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_LotteryBuff_LotteryTag;                   // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LotteryBuff_NextPhase;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_ApplyBuffTag;                   // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NextPhase;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActiveForOwner;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bActiveForMovableStand;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterName_CharacterName;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue1;             // 0x0168(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0180(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff) == 0x000200, "Wrong size on BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, EntryPoint) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000038, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_IsPlayerController_ReturnValue) == 0x000040, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation) == 0x000044, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetGenerateParticleRelativeLocationFromCapsuleCenter_RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_IsDedicatedServer_ReturnValue) == 0x000050, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetObjectClass_ReturnValue) == 0x000058, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetOwner_ReturnValue2) == 0x000060, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000068, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_bSuccess2) == 0x000070, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000071, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_LotteryBuff_LotteryTag) == 0x000080, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_LotteryBuff_LotteryTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_LotteryBuff_NextPhase) == 0x000088, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_LotteryBuff_NextPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_Event_bTriggeredByStand) == 0x00008C, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00008D, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_IsServer_ReturnValue) == 0x00008E, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_CustomEvent_ApplyBuffTag) == 0x000090, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_CustomEvent_ApplyBuffTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_CustomEvent_NextPhase) == 0x000098, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_CustomEvent_NextPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Conv_NameToText_ReturnValue) == 0x0000A0, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_IsServer_ReturnValue1) == 0x0000F8, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetOwner_ReturnValue3) == 0x000108, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_Event_bActiveForOwner) == 0x000110, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_Event_bActiveForOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_Event_bActiveForMovableStand) == 0x000111, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_Event_bActiveForMovableStand' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x000118, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_bSuccess3) == 0x000120, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_HasLocalSharedController_ReturnValue) == 0x000121, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000128, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetOwner_ReturnValue4) == 0x000138, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000140, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000148, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_DynamicCast_bSuccess4) == 0x000150, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, Temp_int_Variable) == 0x000154, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_GetCharacterName_CharacterName) == 0x000158, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Conv_NameToText_ReturnValue1) == 0x000168, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Conv_NameToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_MakeStruct_FormatArgumentData1) == 0x000180, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, K2Node_MakeArray_Array) == 0x0001C0, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Format_ReturnValue) == 0x0001D0, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Conv_TextToString_ReturnValue) == 0x0001E8, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff, CallFunc_Conv_StringToName_ReturnValue) == 0x0001F8, "Member 'BP_AJBMemoryLeakBuff_C_ExecuteUbergraph_BP_AJBMemoryLeakBuff::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.MC_ApplyBuff
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_MC_ApplyBuff final
{
public:
	struct FGameplayTag                           ApplyBuffTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPhase;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_MC_ApplyBuff) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_MC_ApplyBuff");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_MC_ApplyBuff) == 0x000010, "Wrong size on BP_AJBMemoryLeakBuff_C_MC_ApplyBuff");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_MC_ApplyBuff, ApplyBuffTag) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_MC_ApplyBuff::ApplyBuffTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_MC_ApplyBuff, NextPhase) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_MC_ApplyBuff::NextPhase' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.LotteryBuff
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_LotteryBuff final
{
public:
	struct FGameplayTag                           LotteryTag;                                        // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPhase;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempNextPhase;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempDecided;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TempLotteryTag;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLotteryIndex;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBuffLimit_bLimit;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagIndex_Index;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_LotteryBuff) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_LotteryBuff");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_LotteryBuff) == 0x000060, "Wrong size on BP_AJBMemoryLeakBuff_C_LotteryBuff");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, LotteryTag) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::LotteryTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, NextPhase) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::NextPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, TempNextPhase) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::TempNextPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, TempDecided) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::TempDecided' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, TempLotteryTag) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::TempLotteryTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, TempLotteryIndex) == 0x000020, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::TempLotteryIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000030, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_CheckBuffLimit_bLimit) == 0x000034, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_CheckBuffLimit_bLimit' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_GetTagIndex_Index) == 0x000038, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_GetTagIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Array_Get_Item1) == 0x000050, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000058, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_LotteryBuff, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000059, "Member 'BP_AJBMemoryLeakBuff_C_LotteryBuff::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.CheckBuffLimit
// 0x001C (0x001C - 0x0000)
struct BP_AJBMemoryLeakBuff_C_CheckBuffLimit final
{
public:
	bool                                          bLimit;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_CheckBuffLimit");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit) == 0x00001C, "Wrong size on BP_AJBMemoryLeakBuff_C_CheckBuffLimit");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, bLimit) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::bLimit' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CheckBuffLimit, CallFunc_Less_IntInt_ReturnValue1) == 0x000019, "Member 'BP_AJBMemoryLeakBuff_C_CheckBuffLimit::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.DebugTick
// 0x0120 (0x0120 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_DebugTick final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_DebugTick) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_DebugTick");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_DebugTick) == 0x000120, "Wrong size on BP_AJBMemoryLeakBuff_C_DebugTick");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000058, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Max_ReturnValue) == 0x000068, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000070, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_HasLocalSharedController_ReturnValue) == 0x000079, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Array_Get_Item1) == 0x000080, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_GetTagName_ReturnValue) == 0x000088, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Conv_NameToText_ReturnValue) == 0x000090, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, K2Node_MakeStruct_FormatArgumentData1) == 0x0000A8, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_DebugTick, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_AJBMemoryLeakBuff_C_DebugTick::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.ApplyBuff
// 0x0490 (0x0490 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_ApplyBuff final
{
public:
	struct FGameplayTag                           ApplyBuffTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPhase;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMPMaxIncrement_Value;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMPMax_Value;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0110(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttack_Value;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMoveSpeed_Value;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0168(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x01A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F8(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue3;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue4;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue5;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x0240(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x0280(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0290(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x02D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x02E8(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue1;           // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0308(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue2;           // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue6;             // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue7;             // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base2;   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3; // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4; // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue10;                   // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5; // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue2;                  // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagIndex_Index;                        // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue11;                   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_ApplyBuff) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_ApplyBuff");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_ApplyBuff) == 0x000490, "Wrong size on BP_AJBMemoryLeakBuff_C_ApplyBuff");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, ApplyBuffTag) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::ApplyBuffTag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, NextPhase) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::NextPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000028, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue1) == 0x000040, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue2) == 0x000048, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000050, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000060, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_HasLocalSharedController_ReturnValue) == 0x000069, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000070, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess4) == 0x000080, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetMPMaxIncrement_Value) == 0x000084, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetMPMaxIncrement_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_CalcMPMax_Value) == 0x000088, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_CalcMPMax_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData1) == 0x0000D0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData2) == 0x000110, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000150, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000154, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000158, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_CalcAttack_Value) == 0x00015C, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_CalcAttack_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_CalcMoveSpeed_Value) == 0x000160, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_CalcMoveSpeed_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData3) == 0x000168, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData4) == 0x0001A8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeArray_Array) == 0x0001E8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Format_ReturnValue) == 0x0001F8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue3) == 0x000210, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_TextToString_ReturnValue) == 0x000218, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x000228, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess5) == 0x000230, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000231, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue3) == 0x000234, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue4) == 0x000238, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue5) == 0x00023C, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData5) == 0x000240, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeArray_Array1) == 0x000280, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData6) == 0x000290, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Format_ReturnValue1) == 0x0002D0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_MakeArray_Array2) == 0x0002E8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_TextToString_ReturnValue1) == 0x0002F8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_TextToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Format_ReturnValue2) == 0x000308, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_TextToString_ReturnValue2) == 0x000320, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_TextToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue6) == 0x000330, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue4) == 0x000338, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_Conv_IntToFloat_ReturnValue7) == 0x000340, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_Conv_IntToFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsAJBIn_Game_Character_Base2) == 0x000348, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsAJBIn_Game_Character_Base2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess6) == 0x000350, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue5) == 0x000358, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000360, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000368, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess7) == 0x000370, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue6) == 0x000378, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000380, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess8) == 0x000388, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue7) == 0x000390, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x000398, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess9) == 0x0003A8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0003B0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess10) == 0x0003B8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue8) == 0x0003C0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x0003C8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess11) == 0x0003D0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0003D8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess12) == 0x0003E0, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3) == 0x0003E8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess13) == 0x0003F8, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4) == 0x000400, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess14) == 0x000410, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue9) == 0x000418, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000420, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess15) == 0x000428, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue10) == 0x000430, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000438, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess16) == 0x000440, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1) == 0x000448, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess17) == 0x000450, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5) == 0x000458, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess18) == 0x000468, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_MatchesTag_ReturnValue) == 0x000469, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_MatchesTag_ReturnValue1) == 0x00046A, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_MatchesTag_ReturnValue2) == 0x00046B, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_MatchesTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00046C, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetTagIndex_Index) == 0x000470, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetTagIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000474, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, CallFunc_GetOwner_ReturnValue11) == 0x000478, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::CallFunc_GetOwner_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000480, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ApplyBuff, K2Node_DynamicCast_bSuccess19) == 0x000488, "Member 'BP_AJBMemoryLeakBuff_C_ApplyBuff::K2Node_DynamicCast_bSuccess19' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.GetTagIndex
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_GetTagIndex final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_GetTagIndex) == 0x000008, "Wrong alignment on BP_AJBMemoryLeakBuff_C_GetTagIndex");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_GetTagIndex) == 0x000030, "Wrong size on BP_AJBMemoryLeakBuff_C_GetTagIndex");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, Tag) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, Index_0) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetTagIndex, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000029, "Member 'BP_AJBMemoryLeakBuff_C_GetTagIndex::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.CalcMoveSpeed
// 0x001C (0x001C - 0x0000)
struct BP_AJBMemoryLeakBuff_C_CalcMoveSpeed final
{
public:
	int32                                         Phase;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_CalcMoveSpeed");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed) == 0x00001C, "Wrong size on BP_AJBMemoryLeakBuff_C_CalcMoveSpeed");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, Phase) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::Phase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, Value) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000014, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMoveSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_CalcMoveSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.CalcAttack
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_CalcAttack final
{
public:
	int32                                         Phase;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_CalcAttack) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_CalcAttack");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_CalcAttack) == 0x000014, "Wrong size on BP_AJBMemoryLeakBuff_C_CalcAttack");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcAttack, Phase) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_CalcAttack::Phase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcAttack, Value) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_CalcAttack::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcAttack, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_CalcAttack::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcAttack, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_CalcAttack::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcAttack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_CalcAttack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.CalcMPMax
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_CalcMPMax final
{
public:
	int32                                         Phase;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue3;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue4;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue5;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_CalcMPMax) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_CalcMPMax");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_CalcMPMax) == 0x000030, "Wrong size on BP_AJBMemoryLeakBuff_C_CalcMPMax");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, Phase) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::Phase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, Value) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, TempValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::TempValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x00000D, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x00000E, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue3) == 0x00000F, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue4) == 0x000014, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000018, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00001C, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_GreaterEqual_IntInt_ReturnValue5) == 0x000020, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_GreaterEqual_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000024, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue4) == 0x000028, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_CalcMPMax, CallFunc_Add_FloatFloat_ReturnValue5) == 0x00002C, "Member 'BP_AJBMemoryLeakBuff_C_CalcMPMax::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.GetMPMaxIncrement
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement final
{
public:
	int32                                         Phase;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue3;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue4;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue5;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement) == 0x000010, "Wrong size on BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, Phase) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::Phase' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, Value) == 0x000004, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000009, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x00000A, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue3) == 0x00000B, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue4) == 0x00000C, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement, CallFunc_GreaterEqual_IntInt_ReturnValue5) == 0x00000D, "Member 'BP_AJBMemoryLeakBuff_C_GetMPMaxIncrement::CallFunc_GreaterEqual_IntInt_ReturnValue5' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.ActiveContinuedParticle
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle final
{
public:
	bool                                          bActiveForOwner;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bActiveForMovableStand;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle) == 0x000001, "Wrong alignment on BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle) == 0x000002, "Wrong size on BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle, bActiveForOwner) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle::bActiveForOwner' has a wrong offset!");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle, bActiveForMovableStand) == 0x000001, "Member 'BP_AJBMemoryLeakBuff_C_ActiveContinuedParticle::bActiveForMovableStand' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBMemoryLeakBuff_C_OnActionActivate");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBMemoryLeakBuff_C_OnActionActivate");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBMemoryLeakBuff.BP_AJBMemoryLeakBuff_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBMemoryLeakBuff_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMemoryLeakBuff_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBMemoryLeakBuff_C_ReceiveTick");
static_assert(sizeof(BP_AJBMemoryLeakBuff_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBMemoryLeakBuff_C_ReceiveTick");
static_assert(offsetof(BP_AJBMemoryLeakBuff_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBMemoryLeakBuff_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


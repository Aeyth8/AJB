#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBCyclicAimDeviation_Paramed

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTS_AJBCyclicAimDeviation_Paramed.BTS_AJBCyclicAimDeviation_Paramed_C.ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed
// 0x0070 (0x0070 - 0x0000)
struct BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatParam_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatParam_Found;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_CyclicFloatBySineCurve_ReturnValue;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNPC_bIsNPC;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed) == 0x000008, "Wrong alignment on BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed");
static_assert(sizeof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed) == 0x000070, "Wrong size on BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, EntryPoint) == 0x000000, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, Temp_bool_Variable) == 0x00001C, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, Temp_float_Variable) == 0x000020, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Event_OwnerController1) == 0x000028, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Event_ControlledPawn1) == 0x000030, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_GetRecognition_ReturnValue) == 0x000038, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_GetFloatParam_ReturnValue) == 0x000040, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_GetFloatParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_GetFloatParam_Found) == 0x000044, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_GetFloatParam_Found' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_AI_CyclicFloatBySineCurve_ReturnValue) == 0x00004C, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_AI_CyclicFloatBySineCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000050, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character) == 0x000058, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000064, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, CallFunc_IsNPC_bIsNPC) == 0x000068, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::CallFunc_IsNPC_bIsNPC' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed, K2Node_Select_Default) == 0x00006C, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed::K2Node_Select_Default' has a wrong offset!");

// Function BTS_AJBCyclicAimDeviation_Paramed.BTS_AJBCyclicAimDeviation_Paramed_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_AJBCyclicAimDeviation_Paramed.BTS_AJBCyclicAimDeviation_Paramed_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI");
static_assert(sizeof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBCyclicAimDeviation_Paramed_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

}


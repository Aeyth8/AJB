#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Aura

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Aura.WB_Aura_C
// 0x0020 (0x0228 - 0x0208)
class UWB_Aura_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              Aura;                                              // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideAuraMaterial;                              // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AuraOffset;                                        // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Aura(int32 EntryPoint);
	void SetAuraOffset(float AuraOffset_0);
	void PreConstruct(bool IsDesignTime);

	class UMaterialInstanceDynamic* GetDynamicMaterialInstance() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Aura_C">();
	}
	static class UWB_Aura_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Aura_C>();
	}
};
static_assert(alignof(UWB_Aura_C) == 0x000008, "Wrong alignment on UWB_Aura_C");
static_assert(sizeof(UWB_Aura_C) == 0x000228, "Wrong size on UWB_Aura_C");
static_assert(offsetof(UWB_Aura_C, UberGraphFrame) == 0x000208, "Member 'UWB_Aura_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Aura_C, Aura) == 0x000210, "Member 'UWB_Aura_C::Aura' has a wrong offset!");
static_assert(offsetof(UWB_Aura_C, OverrideAuraMaterial) == 0x000218, "Member 'UWB_Aura_C::OverrideAuraMaterial' has a wrong offset!");
static_assert(offsetof(UWB_Aura_C, AuraOffset) == 0x000220, "Member 'UWB_Aura_C::AuraOffset' has a wrong offset!");

}


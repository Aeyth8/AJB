#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAirBombSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBSnipeSkill_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBAirBombSkill.BP_AJBAirBombSkill_C
// 0x00F0 (0x0378 - 0x0288)
class UBP_AJBAirBombSkill_C final : public UBP_AJBSnipeSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBAirBombSkill_C;               // 0x0288(0x0008)(Transient, DuplicateTransient)
	float                                         ActionTime_s_;                                     // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_StandChargeUp;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_StandAction;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InvalidDistance;                                   // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDistance;                                   // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedFirst;                              // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileHomingIntensityFirst;                    // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeed;                                   // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandleSyncTargetLocation;                     // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                TargetLocation;                                    // 0x02C8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SyncTargetLocationInterval;                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rep_TargetLocation;                                // 0x02D8(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileHomingIntensity;                         // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          ParticleOrbit;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleOrbitScale;                                // 0x02F0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SpawnPreviewClass;                                 // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnGuideClass;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PreviewObject;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 GuideObject;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistanceTraceStartToBase;                       // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceBaseToTraceEnd;                            // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinForwardZForMaxTraceDistanceRate;                // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxForawrdZForMinTraceDistanceRate;                // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTraceDistanceRate;                              // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTraceDistanceRateDown;                          // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTraceDistanceRateUp;                            // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileCollisionRadius;                         // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileInitialVelocityTime_s_;                  // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SwitchSETag;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CV_Reflection;                                     // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SwitchVoiceTag;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileTargetForwardOffset;                     // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SyncProjectileLocationInterval;                    // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandleSyncProjectileLocation;                 // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         SyncProjectileLocationDistance;                    // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileLifeTime_s_;                             // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBAirBombSkill(int32 EntryPoint);
	void MC_SyncProjectileLocation(const struct FVector& TargetLocation_0);
	void SyncProjectileLocation();
	void ROS_SyncProjectileLocation(const struct FVector& TargetLocation_0);
	void EndSyncProjectileLocationTimer();
	void BeginSyncProjectileLocationTimer();
	void UpdateProjectileVisual();
	void OnSetViewTargetToNewSpectator_Local();
	void SyncTargetLocation();
	void ROS_SyncTargetLocation(const struct FVector& TargetLocation_0);
	void EndSyncTargetLocationTimer();
	void BeginSyncTargetLocationTimer();
	void Disappear();
	void Ignition();
	void OnLocalConsumed(bool bSucceed);
	void MC_EndState();
	void ROS_EndState();
	void EndStateLocal();
	void MC_BeginStateAction();
	void ROS_BeginStateAction();
	void BeginStateAction();
	void OnCompleted_7B45FB9D406D5826C78546BCA3129FB9(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCA3129FB9(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCA3129FB9(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCA3129FB9(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCA3129FB9(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BC6139A5AC(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BC6139A5AC(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BC6139A5AC(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BC6139A5AC(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BC6139A5AC(class FName NotifyName);
	void TrySpawnParticleOrbit(class AActor* AttachActor);
	void TryDestroyParticleOrbit();
	void TrySpawnPreviewObjects();
	void TryDestroyPreviewObjects();
	void UpdatePreviewObjects();
	void UpdateVelocity();
	void GetPoliticSpeed(float* Speed);
	void GetPoliticHomingIntensity(float* HomingIntencity);
	void GetPoliticDistance(float* Distance);
	void CalcProjectileVelocity(class ABP_AJBInGameProjectileAirBomb_C* ProjectileAirBomb, struct FVector* Velocity);
	void UpdateTargetLocationLocal();
	void TotalProjectileInitialDistance(float* Distance);
	void CountTimeAchievement();
	void EndState();
	void OnStateReady();
	void OnStateAction();
	void OnStateChargeUp();
	void ChangeProjectileSpeedScale(float SpeedScale);
	void ChangeAdditionalProjectileGravityPower(float Power);
	void TickStateAction();
	void TickStateChargeUp(float DeltaSeconds);
	void ReplicatedBullet();
	void StateBeginPlay(bool bShouldRestore);
	void ReceiveBeginPlay();
	void OnCancel();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void CheckStateCanAccompany(bool* bCanAccompany);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBAirBombSkill_C">();
	}
	static class UBP_AJBAirBombSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBAirBombSkill_C>();
	}
};
static_assert(alignof(UBP_AJBAirBombSkill_C) == 0x000008, "Wrong alignment on UBP_AJBAirBombSkill_C");
static_assert(sizeof(UBP_AJBAirBombSkill_C) == 0x000378, "Wrong size on UBP_AJBAirBombSkill_C");
static_assert(offsetof(UBP_AJBAirBombSkill_C, UberGraphFrame_BP_AJBAirBombSkill_C) == 0x000288, "Member 'UBP_AJBAirBombSkill_C::UberGraphFrame_BP_AJBAirBombSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ActionTime_s_) == 0x000290, "Member 'UBP_AJBAirBombSkill_C::ActionTime_s_' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, AM_StandChargeUp) == 0x000298, "Member 'UBP_AJBAirBombSkill_C::AM_StandChargeUp' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, AM_StandAction) == 0x0002A0, "Member 'UBP_AJBAirBombSkill_C::AM_StandAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, InvalidDistance) == 0x0002A8, "Member 'UBP_AJBAirBombSkill_C::InvalidDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, CurrentDistance) == 0x0002AC, "Member 'UBP_AJBAirBombSkill_C::CurrentDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileSpeedFirst) == 0x0002B0, "Member 'UBP_AJBAirBombSkill_C::ProjectileSpeedFirst' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileHomingIntensityFirst) == 0x0002B4, "Member 'UBP_AJBAirBombSkill_C::ProjectileHomingIntensityFirst' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileSpeed) == 0x0002B8, "Member 'UBP_AJBAirBombSkill_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, TimerHandleSyncTargetLocation) == 0x0002C0, "Member 'UBP_AJBAirBombSkill_C::TimerHandleSyncTargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, TargetLocation) == 0x0002C8, "Member 'UBP_AJBAirBombSkill_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SyncTargetLocationInterval) == 0x0002D4, "Member 'UBP_AJBAirBombSkill_C::SyncTargetLocationInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, Rep_TargetLocation) == 0x0002D8, "Member 'UBP_AJBAirBombSkill_C::Rep_TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileHomingIntensity) == 0x0002E4, "Member 'UBP_AJBAirBombSkill_C::ProjectileHomingIntensity' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ParticleOrbit) == 0x0002E8, "Member 'UBP_AJBAirBombSkill_C::ParticleOrbit' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ParticleOrbitScale) == 0x0002F0, "Member 'UBP_AJBAirBombSkill_C::ParticleOrbitScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SpawnPreviewClass) == 0x000300, "Member 'UBP_AJBAirBombSkill_C::SpawnPreviewClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SpawnGuideClass) == 0x000308, "Member 'UBP_AJBAirBombSkill_C::SpawnGuideClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, PreviewObject) == 0x000310, "Member 'UBP_AJBAirBombSkill_C::PreviewObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, GuideObject) == 0x000318, "Member 'UBP_AJBAirBombSkill_C::GuideObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MaxDistanceTraceStartToBase) == 0x000320, "Member 'UBP_AJBAirBombSkill_C::MaxDistanceTraceStartToBase' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, DistanceBaseToTraceEnd) == 0x000324, "Member 'UBP_AJBAirBombSkill_C::DistanceBaseToTraceEnd' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MinForwardZForMaxTraceDistanceRate) == 0x000328, "Member 'UBP_AJBAirBombSkill_C::MinForwardZForMaxTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MaxForawrdZForMinTraceDistanceRate) == 0x00032C, "Member 'UBP_AJBAirBombSkill_C::MaxForawrdZForMinTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MaxTraceDistanceRate) == 0x000330, "Member 'UBP_AJBAirBombSkill_C::MaxTraceDistanceRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MinTraceDistanceRateDown) == 0x000334, "Member 'UBP_AJBAirBombSkill_C::MinTraceDistanceRateDown' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, MinTraceDistanceRateUp) == 0x000338, "Member 'UBP_AJBAirBombSkill_C::MinTraceDistanceRateUp' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileCollisionRadius) == 0x00033C, "Member 'UBP_AJBAirBombSkill_C::ProjectileCollisionRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileInitialVelocityTime_s_) == 0x000340, "Member 'UBP_AJBAirBombSkill_C::ProjectileInitialVelocityTime_s_' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SwitchSETag) == 0x000348, "Member 'UBP_AJBAirBombSkill_C::SwitchSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, CV_Reflection) == 0x000350, "Member 'UBP_AJBAirBombSkill_C::CV_Reflection' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SwitchVoiceTag) == 0x000358, "Member 'UBP_AJBAirBombSkill_C::SwitchVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileTargetForwardOffset) == 0x000360, "Member 'UBP_AJBAirBombSkill_C::ProjectileTargetForwardOffset' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SyncProjectileLocationInterval) == 0x000364, "Member 'UBP_AJBAirBombSkill_C::SyncProjectileLocationInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, TimerHandleSyncProjectileLocation) == 0x000368, "Member 'UBP_AJBAirBombSkill_C::TimerHandleSyncProjectileLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, SyncProjectileLocationDistance) == 0x000370, "Member 'UBP_AJBAirBombSkill_C::SyncProjectileLocationDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBAirBombSkill_C, ProjectileLifeTime_s_) == 0x000374, "Member 'UBP_AJBAirBombSkill_C::ProjectileLifeTime_s_' has a wrong offset!");

}


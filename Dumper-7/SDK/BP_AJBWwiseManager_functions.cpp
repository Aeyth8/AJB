#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBWwiseManager

#include "Basic.hpp"

#include "BP_AJBWwiseManager_classes.hpp"
#include "BP_AJBWwiseManager_parameters.hpp"


namespace SDK
{

// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ExecuteUbergraph_BP_AJBWwiseManager
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ExecuteUbergraph_BP_AJBWwiseManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ExecuteUbergraph_BP_AJBWwiseManager");

	Params::BP_AJBWwiseManager_C_ExecuteUbergraph_BP_AJBWwiseManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBWwiseManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROS_PostWwiseEventAttached
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bKeepRelative                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  SceneComponentToAttach                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ROS_PostWwiseEventAttached(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ROS_PostWwiseEventAttached");

	Params::BP_AJBWwiseManager_C_ROS_PostWwiseEventAttached Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);
	Parms.bKeepRelative = bKeepRelative;
	Parms.SceneComponentToAttach = SceneComponentToAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROC_PostWwiseEventAttached
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bKeepRelative                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  SceneComponentToAttach                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ROC_PostWwiseEventAttached(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ROC_PostWwiseEventAttached");

	Params::BP_AJBWwiseManager_C_ROC_PostWwiseEventAttached Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);
	Parms.bKeepRelative = bKeepRelative;
	Parms.SceneComponentToAttach = SceneComponentToAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROS_PostWwiseEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ROS_PostWwiseEvent(const struct FGameplayTag& EventTag, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ROS_PostWwiseEvent");

	Params::BP_AJBWwiseManager_C_ROS_PostWwiseEvent Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ROC_PostWwiseEvent
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ROC_PostWwiseEvent(const struct FGameplayTag& EventTag, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ROC_PostWwiseEvent");

	Params::BP_AJBWwiseManager_C_ROC_PostWwiseEvent Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBWwiseManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventOnLocal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoPost                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AutoDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAkComponent**                    AkComponent                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::PostWwiseEventOnLocal(const struct FGameplayTag& EventTag, const struct FVector& Location, bool AutoPost, bool AutoDestroy, class UAkComponent** AkComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "PostWwiseEventOnLocal");

	Params::BP_AJBWwiseManager_C_PostWwiseEventOnLocal Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);
	Parms.AutoPost = AutoPost;
	Parms.AutoDestroy = AutoDestroy;

	UObject::ProcessEvent(Func, &Parms);

	if (AkComponent != nullptr)
		*AkComponent = Parms.AkComponent;
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.GetWwiseEventInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FST_WwiseEventInfo*              WwiseEventInfo                                         (Parm, OutParm, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::GetWwiseEventInfo(const struct FGameplayTag& EventTag, struct FST_WwiseEventInfo* WwiseEventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "GetWwiseEventInfo");

	Params::BP_AJBWwiseManager_C_GetWwiseEventInfo Parms{};

	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);

	if (WwiseEventInfo != nullptr)
		*WwiseEventInfo = std::move(Parms.WwiseEventInfo);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventAttachedOnLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoPost                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AutoDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bKeepRelative                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  SceneComponentToAttach                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkComponent**                    AkComponent                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::PostWwiseEventAttachedOnLocal(const struct FGameplayTag& EventTag, const struct FVector& Location, bool AutoPost, bool AutoDestroy, bool bKeepRelative, class USceneComponent* SceneComponentToAttach, class UAkComponent** AkComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "PostWwiseEventAttachedOnLocal");

	Params::BP_AJBWwiseManager_C_PostWwiseEventAttachedOnLocal Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);
	Parms.AutoPost = AutoPost;
	Parms.AutoDestroy = AutoDestroy;
	Parms.bKeepRelative = bKeepRelative;
	Parms.SceneComponentToAttach = SceneComponentToAttach;

	UObject::ProcessEvent(Func, &Parms);

	if (AkComponent != nullptr)
		*AkComponent = Parms.AkComponent;
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventOnAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::PostWwiseEventOnAll(const struct FGameplayTag& EventTag, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "PostWwiseEventOnAll");

	Params::BP_AJBWwiseManager_C_PostWwiseEventOnAll Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseEventAttachedOnAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bKeepRelative                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  SceneComponentToAttach                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::PostWwiseEventAttachedOnAll(const struct FGameplayTag& EventTag, const struct FVector& Location, bool bKeepRelative, class USceneComponent* SceneComponentToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "PostWwiseEventAttachedOnAll");

	Params::BP_AJBWwiseManager_C_PostWwiseEventAttachedOnAll Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Location = std::move(Location);
	Parms.bKeepRelative = bKeepRelative;
	Parms.SceneComponentToAttach = SceneComponentToAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.PostWwiseBGMEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldPlayFromStart                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBWwiseManager_C::PostWwiseBGMEvent(const struct FGameplayTag& EventTag, bool bShouldPlayFromStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "PostWwiseBGMEvent");

	Params::BP_AJBWwiseManager_C_PostWwiseBGMEvent Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.bShouldPlayFromStart = bShouldPlayFromStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.StopWwiseBGMEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBWwiseManager_C::StopWwiseBGMEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "StopWwiseBGMEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBWwiseManager.BP_AJBWwiseManager_C.ChangePlayMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WwiseManagerPlayMode                  PlayMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBWwiseManager_C::ChangePlayMode(E_WwiseManagerPlayMode PlayMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBWwiseManager_C", "ChangePlayMode");

	Params::BP_AJBWwiseManager_C_ChangePlayMode Parms{};

	Parms.PlayMode_0 = PlayMode_0;

	UObject::ProcessEvent(Func, &Parms);
}

}


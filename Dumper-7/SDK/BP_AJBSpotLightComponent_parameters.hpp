#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSpotLightComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBSpotLightComponent.BP_AJBSpotLightComponent_C.ExecuteUbergraph_BP_AJBSpotLightComponent
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         K2Node_CustomEvent_CurrentCut1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_BeforeCut;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_CurrentCut;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_NextCut;                        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue1;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue2;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PrevState;                      // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastSurvivorCharacter_Result;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastSurvivorCharacter_Result1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastSurvivorCharacter_Result2;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(uint8 CurrentCut, uint8 NextCut)> K2Node_CreateDelegate_OutputDelegate2;          // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(uint8 CurrentCut, uint8 BeforeCut)> K2Node_CreateDelegate_OutputDelegate3;        // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent) == 0x000008, "Wrong alignment on BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent");
static_assert(sizeof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent) == 0x0000D8, "Wrong size on BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, EntryPoint) == 0x000000, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000004, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000008, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000010, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CustomEvent_CurrentCut1) == 0x000030, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CustomEvent_CurrentCut1' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CustomEvent_BeforeCut) == 0x000031, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CustomEvent_BeforeCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CustomEvent_CurrentCut) == 0x000032, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CustomEvent_CurrentCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CustomEvent_NextCut) == 0x000033, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CustomEvent_NextCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetValidValue_ReturnValue) == 0x000034, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetValidValue_ReturnValue1) == 0x000035, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetValidValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000036, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000037, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetValidValue_ReturnValue2) == 0x000038, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetValidValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CreateDelegate_OutputDelegate1) == 0x000040, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_SwitchEnum1_CmpSuccess) == 0x000050, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CustomEvent_PrevState) == 0x000058, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CustomEvent_PrevState' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000068, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_IsLastSurvivorCharacter_Result) == 0x000069, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_IsLastSurvivorCharacter_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetOwner_ReturnValue1) == 0x000070, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_IsLastSurvivorCharacter_Result1) == 0x000078, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_IsLastSurvivorCharacter_Result1' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetOwner_ReturnValue2) == 0x000080, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_IsLastSurvivorCharacter_Result2) == 0x000089, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_IsLastSurvivorCharacter_Result2' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x00008A, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000090, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CreateDelegate_OutputDelegate2) == 0x000098, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, K2Node_CreateDelegate_OutputDelegate3) == 0x0000A8, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetOwner_ReturnValue3) == 0x0000B8, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_GetViewTarget_ReturnValue) == 0x0000C8, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'BP_AJBSpotLightComponent_C_ExecuteUbergraph_BP_AJBSpotLightComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBSpotLightComponent.BP_AJBSpotLightComponent_C.OnBeginVictoryShot_Shot
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot final
{
public:
	struct FGameplayTag                           PrevState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot) == 0x000008, "Wrong alignment on BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot");
static_assert(sizeof(BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot) == 0x000008, "Wrong size on BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot");
static_assert(offsetof(BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot, PrevState) == 0x000000, "Member 'BP_AJBSpotLightComponent_C_OnBeginVictoryShot_Shot::PrevState' has a wrong offset!");

// Function BP_AJBSpotLightComponent.BP_AJBSpotLightComponent_C.OnEndLastSurvivorCut
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut final
{
public:
	uint8                                         CurrentCut;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NextCut;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut) == 0x000001, "Wrong alignment on BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut");
static_assert(sizeof(BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut) == 0x000002, "Wrong size on BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut");
static_assert(offsetof(BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut, CurrentCut) == 0x000000, "Member 'BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut::CurrentCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut, NextCut) == 0x000001, "Member 'BP_AJBSpotLightComponent_C_OnEndLastSurvivorCut::NextCut' has a wrong offset!");

// Function BP_AJBSpotLightComponent.BP_AJBSpotLightComponent_C.OnBeginLastSurvivorCut
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut final
{
public:
	uint8                                         CurrentCut;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         BeforeCut;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut) == 0x000001, "Wrong alignment on BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut");
static_assert(sizeof(BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut) == 0x000002, "Wrong size on BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut");
static_assert(offsetof(BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut, CurrentCut) == 0x000000, "Member 'BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut::CurrentCut' has a wrong offset!");
static_assert(offsetof(BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut, BeforeCut) == 0x000001, "Member 'BP_AJBSpotLightComponent_C_OnBeginLastSurvivorCut::BeforeCut' has a wrong offset!");

}


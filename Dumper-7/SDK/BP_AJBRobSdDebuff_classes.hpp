#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRobSdDebuff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBRobSdDebuff.BP_AJBRobSdDebuff_C
// 0x0028 (0x0238 - 0x0210)
class UBP_AJBRobSdDebuff_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBRobSdDebuff_C;                // 0x0210(0x0008)(Transient, DuplicateTransient)
	float                                         ConsumeMPRate;                                     // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRate;                                        // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EndParticleTag;                                    // 0x0220(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SDParticleTag;                                     // 0x0228(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          AJBParticleSD;                                     // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBRobSdDebuff(int32 EntryPoint);
	void ShouldSpawnEndParticle(class ABP_AJBInGameCharacter_C* CharacterBP, bool* bShould);
	void ReceiveBeginPlay();
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void TryDestroyParticles();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBRobSdDebuff_C">();
	}
	static class UBP_AJBRobSdDebuff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBRobSdDebuff_C>();
	}
};
static_assert(alignof(UBP_AJBRobSdDebuff_C) == 0x000008, "Wrong alignment on UBP_AJBRobSdDebuff_C");
static_assert(sizeof(UBP_AJBRobSdDebuff_C) == 0x000238, "Wrong size on UBP_AJBRobSdDebuff_C");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, UberGraphFrame_BP_AJBRobSdDebuff_C) == 0x000210, "Member 'UBP_AJBRobSdDebuff_C::UberGraphFrame_BP_AJBRobSdDebuff_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, ConsumeMPRate) == 0x000218, "Member 'UBP_AJBRobSdDebuff_C::ConsumeMPRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, AttackRate) == 0x00021C, "Member 'UBP_AJBRobSdDebuff_C::AttackRate' has a wrong offset!");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, EndParticleTag) == 0x000220, "Member 'UBP_AJBRobSdDebuff_C::EndParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, SDParticleTag) == 0x000228, "Member 'UBP_AJBRobSdDebuff_C::SDParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBRobSdDebuff_C, AJBParticleSD) == 0x000230, "Member 'UBP_AJBRobSdDebuff_C::AJBParticleSD' has a wrong offset!");

}


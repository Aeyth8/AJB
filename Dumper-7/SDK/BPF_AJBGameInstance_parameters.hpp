#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBGameInstance

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.GetAJBGameInstance
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBGameInstance_C_GetAJBGameInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  AJB_Game_Instance;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBGameInstance_C*                  K2Node_DynamicCast_AsBP_AJBGame_Instance;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBGameInstance_C_GetAJBGameInstance) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_GetAJBGameInstance");
static_assert(sizeof(BPF_AJBGameInstance_C_GetAJBGameInstance) == 0x000030, "Wrong size on BPF_AJBGameInstance_C_GetAJBGameInstance");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, bSuccess) == 0x000008, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, AJB_Game_Instance) == 0x000010, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, K2Node_DynamicCast_AsBP_AJBGame_Instance) == 0x000020, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::K2Node_DynamicCast_AsBP_AJBGame_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetAJBGameInstance, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPF_AJBGameInstance_C_GetAJBGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.PlayModeEquals
// 0x0028 (0x0028 - 0x0000)
struct BPF_AJBGameInstance_C_PlayModeEquals final
{
public:
	EPlayMode                                     PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBGameInstance_C_PlayModeEquals) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_PlayModeEquals");
static_assert(sizeof(BPF_AJBGameInstance_C_PlayModeEquals) == 0x000028, "Wrong size on BPF_AJBGameInstance_C_PlayModeEquals");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, PlayMode) == 0x000000, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::PlayMode' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, __WorldContext) == 0x000008, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, bResult) == 0x000010, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::bResult' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, CallFunc_GetAJBGameInstance_bSuccess) == 0x000011, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeEquals, CallFunc_PlayModeEquals_bResult) == 0x000020, "Member 'BPF_AJBGameInstance_C_PlayModeEquals::CallFunc_PlayModeEquals_bResult' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.GetPlayMode
// 0x0018 (0x0018 - 0x0000)
struct BPF_AJBGameInstance_C_GetPlayMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayMode                                     PlayMode;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBGameInstance_C_GetPlayMode) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_GetPlayMode");
static_assert(sizeof(BPF_AJBGameInstance_C_GetPlayMode) == 0x000018, "Wrong size on BPF_AJBGameInstance_C_GetPlayMode");
static_assert(offsetof(BPF_AJBGameInstance_C_GetPlayMode, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_GetPlayMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetPlayMode, PlayMode) == 0x000008, "Member 'BPF_AJBGameInstance_C_GetPlayMode::PlayMode' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetPlayMode, CallFunc_GetAJBGameInstance_bSuccess) == 0x000009, "Member 'BPF_AJBGameInstance_C_GetPlayMode::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetPlayMode, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BPF_AJBGameInstance_C_GetPlayMode::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.SetPlayMode
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBGameInstance_C_SetPlayMode final
{
public:
	EPlayMode                                     PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBGameInstance_C_SetPlayMode) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_SetPlayMode");
static_assert(sizeof(BPF_AJBGameInstance_C_SetPlayMode) == 0x000020, "Wrong size on BPF_AJBGameInstance_C_SetPlayMode");
static_assert(offsetof(BPF_AJBGameInstance_C_SetPlayMode, PlayMode) == 0x000000, "Member 'BPF_AJBGameInstance_C_SetPlayMode::PlayMode' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_SetPlayMode, __WorldContext) == 0x000008, "Member 'BPF_AJBGameInstance_C_SetPlayMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_SetPlayMode, CallFunc_GetAJBGameInstance_bSuccess) == 0x000010, "Member 'BPF_AJBGameInstance_C_SetPlayMode::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_SetPlayMode, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'BPF_AJBGameInstance_C_SetPlayMode::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.GetHighlightManager
// 0x0028 (0x0028 - 0x0000)
struct BPF_AJBGameInstance_C_GetHighlightManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBHighlightManager*                   highlightManager;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBHighlightManager*                   CallFunc_GetHighlightManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBGameInstance_C_GetHighlightManager) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_GetHighlightManager");
static_assert(sizeof(BPF_AJBGameInstance_C_GetHighlightManager) == 0x000028, "Wrong size on BPF_AJBGameInstance_C_GetHighlightManager");
static_assert(offsetof(BPF_AJBGameInstance_C_GetHighlightManager, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_GetHighlightManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetHighlightManager, highlightManager) == 0x000008, "Member 'BPF_AJBGameInstance_C_GetHighlightManager::highlightManager' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetHighlightManager, CallFunc_GetAJBGameInstance_bSuccess) == 0x000010, "Member 'BPF_AJBGameInstance_C_GetHighlightManager::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetHighlightManager, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'BPF_AJBGameInstance_C_GetHighlightManager::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_GetHighlightManager, CallFunc_GetHighlightManager_ReturnValue) == 0x000020, "Member 'BPF_AJBGameInstance_C_GetHighlightManager::CallFunc_GetHighlightManager_ReturnValue' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.PlayModeIsPair
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBGameInstance_C_PlayModeIsPair final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBGameInstance_C_PlayModeIsPair) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_PlayModeIsPair");
static_assert(sizeof(BPF_AJBGameInstance_C_PlayModeIsPair) == 0x000020, "Wrong size on BPF_AJBGameInstance_C_PlayModeIsPair");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsPair, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_PlayModeIsPair::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsPair, ReturnValue) == 0x000008, "Member 'BPF_AJBGameInstance_C_PlayModeIsPair::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsPair, CallFunc_GetAJBGameInstance_bSuccess) == 0x000009, "Member 'BPF_AJBGameInstance_C_PlayModeIsPair::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsPair, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BPF_AJBGameInstance_C_PlayModeIsPair::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsPair, CallFunc_PlayModeIsPair_ReturnValue) == 0x000018, "Member 'BPF_AJBGameInstance_C_PlayModeIsPair::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.PlayModeIsShopCompetition
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBGameInstance_C_PlayModeIsShopCompetition final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsShopCompetition_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_PlayModeIsShopCompetition");
static_assert(sizeof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition) == 0x000020, "Wrong size on BPF_AJBGameInstance_C_PlayModeIsShopCompetition");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_PlayModeIsShopCompetition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition, ReturnValue) == 0x000008, "Member 'BPF_AJBGameInstance_C_PlayModeIsShopCompetition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_GetAJBGameInstance_bSuccess) == 0x000009, "Member 'BPF_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BPF_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsShopCompetition, CallFunc_PlayModeIsShopCompetition_ReturnValue) == 0x000018, "Member 'BPF_AJBGameInstance_C_PlayModeIsShopCompetition::CallFunc_PlayModeIsShopCompetition_ReturnValue' has a wrong offset!");

// Function BPF_AJBGameInstance.BPF_AJBGameInstance_C.PlayModeIsSupportingCharacterAchievement
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeIsSupportingCharacterAchievement_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement) == 0x000008, "Wrong alignment on BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement");
static_assert(sizeof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement) == 0x000020, "Wrong size on BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, __WorldContext) == 0x000000, "Member 'BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, ReturnValue) == 0x000008, "Member 'BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_GetAJBGameInstance_bSuccess) == 0x000009, "Member 'BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000010, "Member 'BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement, CallFunc_PlayModeIsSupportingCharacterAchievement_ReturnValue) == 0x000018, "Member 'BPF_AJBGameInstance_C_PlayModeIsSupportingCharacterAchievement::CallFunc_PlayModeIsSupportingCharacterAchievement_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBJumpOverFenceOnPath

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBJumpOverFenceOnPath.BTS_AJBJumpOverFenceOnPath_C
// 0x0050 (0x00E8 - 0x0098)
class UBTS_AJBJumpOverFenceOnPath_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 RO_NextDest;                                       // 0x00A0(0x0028)(Edit, BlueprintVisible)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class AEventTagLocker*                        HighJumpEventLocker;                               // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            InputProxy;                                        // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         JumpInterval;                                      // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpAvailableAngleDeg;                             // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBJumpOverFenceOnPath(int32 EntryPoint);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void CloseJumpGate();
	void OpenJumpGate();
	void InitOnce(class AAIController* AIController);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBJumpOverFenceOnPath_C">();
	}
	static class UBTS_AJBJumpOverFenceOnPath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBJumpOverFenceOnPath_C>();
	}
};
static_assert(alignof(UBTS_AJBJumpOverFenceOnPath_C) == 0x000008, "Wrong alignment on UBTS_AJBJumpOverFenceOnPath_C");
static_assert(sizeof(UBTS_AJBJumpOverFenceOnPath_C) == 0x0000E8, "Wrong size on UBTS_AJBJumpOverFenceOnPath_C");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBJumpOverFenceOnPath_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, RO_NextDest) == 0x0000A0, "Member 'UBTS_AJBJumpOverFenceOnPath_C::RO_NextDest' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, Recognition) == 0x0000C8, "Member 'UBTS_AJBJumpOverFenceOnPath_C::Recognition' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, HighJumpEventLocker) == 0x0000D0, "Member 'UBTS_AJBJumpOverFenceOnPath_C::HighJumpEventLocker' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, InputProxy) == 0x0000D8, "Member 'UBTS_AJBJumpOverFenceOnPath_C::InputProxy' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, JumpInterval) == 0x0000E0, "Member 'UBTS_AJBJumpOverFenceOnPath_C::JumpInterval' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpOverFenceOnPath_C, JumpAvailableAngleDeg) == 0x0000E4, "Member 'UBTS_AJBJumpOverFenceOnPath_C::JumpAvailableAngleDeg' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDebugScreenDrawHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDebugScreenDrawHelper.BP_AJBDebugScreenDrawHelper_C
// 0x00C8 (0x01B8 - 0x00F0)
class UBP_AJBDebugScreenDrawHelper_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	TArray<struct FVector2D>                      CrossLocations;                                    // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	bool                                          DrawOnlyTick;                                      // 0x0108(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrossSize;                                         // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0110(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineThickness;                                     // 0x0120(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBox2D>                         OutlineRectBox;                                    // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<class FString>                         TextStrings;                                       // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<struct FVector2D>                      TextLocations;                                     // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<struct FLinearColor>                   CrossColors;                                       // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<struct FBox2D>                         BoxGaugeBox;                                       // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<float>                                 BoxGaugeMax;                                       // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<float>                                 BoxGaugeValue;                                     // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<struct FLinearColor>                   BoxGaugeOutlineColor;                              // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)
	TArray<struct FLinearColor>                   BoxGaugeFilledColor;                               // 0x01A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, AdvancedDisplay)

public:
	void ExecuteUbergraph_BP_AJBDebugScreenDrawHelper(int32 EntryPoint);
	void DrawBoxGaugeDefaultColor(const struct FBox2D& Box, float GaugeMax, float GaugeValue);
	void ClearBoxGauge();
	void DrawBoxGauge(const struct FBox2D& Box, float GaugeMax, float GaugeValue, const struct FLinearColor& OutlineColor, const struct FLinearColor& FilledColor);
	void DrawCrossWithColor(const struct FVector2D& Location, const struct FLinearColor& Color);
	void ClearAllText();
	void DrawText(const class FString& Text, const struct FVector2D& Location);
	void ClearAllOutlineRect();
	void DrawOutlineRect(const struct FBox2D& Box);
	void ClearAllItem();
	void ClearAllCross();
	void DrawCross(const struct FVector2D& Location);
	void ReceiveDebugDrawHUD();
	void GetOwnerHUD(bool* Success, class AHUD** HUD);
	void GetCrossLine(const struct FVector2D& Location, struct FVector2D* LineStartV, struct FVector2D* LineEndV, struct FVector2D* LineStartH, struct FVector2D* LineEndH);
	void DrawCross_Internal(class AHUD* HUD, const struct FVector2D& Location, const struct FLinearColor& LineColor_0, float LineThickness_0);
	void DrawOutlineRect_Internal(class AHUD* HUD, const struct FBox2D& RectPositions, const struct FLinearColor& LineColor_0, float LineThickness_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDebugScreenDrawHelper_C">();
	}
	static class UBP_AJBDebugScreenDrawHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBDebugScreenDrawHelper_C>();
	}
};
static_assert(alignof(UBP_AJBDebugScreenDrawHelper_C) == 0x000008, "Wrong alignment on UBP_AJBDebugScreenDrawHelper_C");
static_assert(sizeof(UBP_AJBDebugScreenDrawHelper_C) == 0x0001B8, "Wrong size on UBP_AJBDebugScreenDrawHelper_C");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBDebugScreenDrawHelper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, CrossLocations) == 0x0000F8, "Member 'UBP_AJBDebugScreenDrawHelper_C::CrossLocations' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, DrawOnlyTick) == 0x000108, "Member 'UBP_AJBDebugScreenDrawHelper_C::DrawOnlyTick' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, CrossSize) == 0x00010C, "Member 'UBP_AJBDebugScreenDrawHelper_C::CrossSize' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, LineColor) == 0x000110, "Member 'UBP_AJBDebugScreenDrawHelper_C::LineColor' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, LineThickness) == 0x000120, "Member 'UBP_AJBDebugScreenDrawHelper_C::LineThickness' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, OutlineRectBox) == 0x000128, "Member 'UBP_AJBDebugScreenDrawHelper_C::OutlineRectBox' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, TextStrings) == 0x000138, "Member 'UBP_AJBDebugScreenDrawHelper_C::TextStrings' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, TextLocations) == 0x000148, "Member 'UBP_AJBDebugScreenDrawHelper_C::TextLocations' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, CrossColors) == 0x000158, "Member 'UBP_AJBDebugScreenDrawHelper_C::CrossColors' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, BoxGaugeBox) == 0x000168, "Member 'UBP_AJBDebugScreenDrawHelper_C::BoxGaugeBox' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, BoxGaugeMax) == 0x000178, "Member 'UBP_AJBDebugScreenDrawHelper_C::BoxGaugeMax' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, BoxGaugeValue) == 0x000188, "Member 'UBP_AJBDebugScreenDrawHelper_C::BoxGaugeValue' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, BoxGaugeOutlineColor) == 0x000198, "Member 'UBP_AJBDebugScreenDrawHelper_C::BoxGaugeOutlineColor' has a wrong offset!");
static_assert(offsetof(UBP_AJBDebugScreenDrawHelper_C, BoxGaugeFilledColor) == 0x0001A8, "Member 'UBP_AJBDebugScreenDrawHelper_C::BoxGaugeFilledColor' has a wrong offset!");

}


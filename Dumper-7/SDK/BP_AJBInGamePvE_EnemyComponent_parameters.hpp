#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGamePvE_EnemyComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "ST_AJBInGamePvE_EnemyInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGamePvE_EnemyComponent.BP_AJBInGamePvE_EnemyComponent_C.ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKnockDownScore_Score;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_EnemyInfo             K2Node_CustomEvent_EnemyInfo;                      // 0x0008(0x0030)(ConstParm, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SpawnType;                      // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_DamageType;                     // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DeadActor;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate; // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBPvEGameState_IsValid;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBPvEGameState_C*                  CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKnockDownScore_Score1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_AddGameplayTag_self_CastInput; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBActionBase_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBPassiveSkillBase_C*              K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base;     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAutoTerminateNPCComponent_C* K2Node_DynamicCast_AsBP_AJBIn_Game_Auto_Terminate_NPCComponent; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent");
static_assert(sizeof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent) == 0x000110, "Wrong size on BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, EntryPoint) == 0x000000, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetKnockDownScore_Score) == 0x000004, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetKnockDownScore_Score' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CustomEvent_EnemyInfo) == 0x000008, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CustomEvent_EnemyInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CustomEvent_SpawnType) == 0x000038, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CustomEvent_SpawnType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CustomEvent_DamageType) == 0x000040, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CustomEvent_DeadActor) == 0x000048, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CustomEvent_DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CustomEvent_DamageCauser) == 0x000050, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000058, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetAJBPvEGameState_IsValid) == 0x000074, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetAJBPvEGameState_IsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState) == 0x000078, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetKnockDownScore_Score1) == 0x000080, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetKnockDownScore_Score1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000A8, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0000B0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_AddGameplayTag_self_CastInput) == 0x0000C0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_AddGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base) == 0x0000E8, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_AsBP_AJBPassive_Skill_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_bSuccess1) == 0x0000F0, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_AsBP_AJBIn_Game_Auto_Terminate_NPCComponent) == 0x000100, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_AsBP_AJBIn_Game_Auto_Terminate_NPCComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent, K2Node_DynamicCast_bSuccess2) == 0x000108, "Member 'BP_AJBInGamePvE_EnemyComponent_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemyComponent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemyComponent.BP_AJBInGamePvE_EnemyComponent_C.GetKnockDownScore
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore");
static_assert(sizeof(BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore) == 0x000004, "Wrong size on BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore, Score) == 0x000000, "Member 'BP_AJBInGamePvE_EnemyComponent_C_GetKnockDownScore::Score' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemyComponent.BP_AJBInGamePvE_EnemyComponent_C.InitEnemyInfo
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo final
{
public:
	struct FST_AJBInGamePvE_EnemyInfo             EnemyInfo;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FGameplayTag                           SpawnType;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo");
static_assert(sizeof(BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo) == 0x000038, "Wrong size on BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo, EnemyInfo) == 0x000000, "Member 'BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo::EnemyInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo, SpawnType) == 0x000030, "Member 'BP_AJBInGamePvE_EnemyComponent_C_InitEnemyInfo::SpawnType' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemyComponent.BP_AJBInGamePvE_EnemyComponent_C.OnDied (Server)
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_ final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_");
static_assert(sizeof(BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_) == 0x000018, "Wrong size on BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_, DamageType) == 0x000000, "Member 'BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_, DeadActor) == 0x000008, "Member 'BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_, DamageCauser) == 0x000010, "Member 'BP_AJBInGamePvE_EnemyComponent_C_OnDied__Server_::DamageCauser' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemyComponent.BP_AJBInGamePvE_EnemyComponent_C.SetKnockDownScore
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore");
static_assert(sizeof(BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore) == 0x000004, "Wrong size on BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore");
static_assert(offsetof(BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore, Score) == 0x000000, "Member 'BP_AJBInGamePvE_EnemyComponent_C_SetKnockDownScore::Score' has a wrong offset!");

}


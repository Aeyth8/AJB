#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBMiddleRangeSkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.ExecuteUbergraph_BP_AJBMiddleRangeSkill
// 0x0190 (0x0190 - 0x0000)
struct BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_Event_HitComponent;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CuttingRate;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableDamage;                       // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInvincible;                          // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsPenetration;                       // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBlockedByAAP;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHeadShot;                            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAvoidSkill;                          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_RepeatCount;                          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRedash;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue1;         // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_AJBDamageActor_C*                   CallFunc_TryGetDamageActor_DamageActor1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue1;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill) == 0x000190, "Wrong size on BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, EntryPoint) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CustomEvent_NotifyName1) == 0x000018, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CustomEvent_NotifyName) == 0x000020, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, Temp_name_Variable) == 0x000038, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000040, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000048, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_HitActor) == 0x000058, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_HitComponent) == 0x000060, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_HitLocation) == 0x000068, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_HitNormal) == 0x000074, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_CuttingRate) == 0x000080, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_SurfaceType) == 0x000084, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bDisableDamage) == 0x000085, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bInvincible) == 0x000086, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bIsPenetration) == 0x000087, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bBlockedByAAP) == 0x000088, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bHeadShot) == 0x000089, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bAvoidSkill) == 0x00008A, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bAvoidSkill' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_RepeatCount) == 0x00008B, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_RepeatCount' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_bRedash) == 0x00008C, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_bRedash' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CustomEvent_NotifyName4) == 0x000090, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CreateDelegate_OutputDelegate2) == 0x000098, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CustomEvent_NotifyName2) == 0x0000A8, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000B0, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CreateDelegate_OutputDelegate3) == 0x0000C0, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_Conv_VectorToString_ReturnValue) == 0x0000D0, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_TryGetDamageActor_DamageActor) == 0x0000E0, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_TryGetDamageActor_DamageActor' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_Concat_StrStr_ReturnValue1) == 0x000108, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_Conv_VectorToString_ReturnValue1) == 0x000118, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_Conv_VectorToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_TryGetDamageActor_DamageActor1) == 0x000128, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_TryGetDamageActor_DamageActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_Concat_StrStr_ReturnValue2) == 0x000130, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_Event_DeltaSeconds) == 0x000140, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CustomEvent_NotifyName3) == 0x000148, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_GetOwnerStand_ReturnValue1) == 0x000150, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_GetOwnerStand_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_IsValid_ReturnValue1) == 0x000158, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000160, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_DynamicCast_bSuccess1) == 0x000168, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000170, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, K2Node_CreateDelegate_OutputDelegate4) == 0x000178, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_IsValid_ReturnValue2) == 0x000188, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000189, "Member 'BP_AJBMiddleRangeSkill_C_ExecuteUbergraph_BP_AJBMiddleRangeSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong size on BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA, NotifyName) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnBlendOut_26B5F2EB43E6A0E07FE6AD9D1D291CFA::NotifyName' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong size on BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA, NotifyName) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnCompleted_26B5F2EB43E6A0E07FE6AD9D1D291CFA::NotifyName' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong size on BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA, NotifyName) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnInterrupted_26B5F2EB43E6A0E07FE6AD9D1D291CFA::NotifyName' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong size on BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA, NotifyName) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnNotifyBegin_26B5F2EB43E6A0E07FE6AD9D1D291CFA::NotifyName' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA) == 0x000008, "Wrong size on BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA, NotifyName) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnNotifyEnd_26B5F2EB43E6A0E07FE6AD9D1D291CFA::NotifyName' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.OnDash
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBMiddleRangeSkill_C_OnDash final
{
public:
	uint8                                         RepeatCount_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRedash;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_OnDash) == 0x000001, "Wrong alignment on BP_AJBMiddleRangeSkill_C_OnDash");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_OnDash) == 0x000002, "Wrong size on BP_AJBMiddleRangeSkill_C_OnDash");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnDash, RepeatCount_0) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_OnDash::RepeatCount_0' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_OnDash, bRedash) == 0x000001, "Member 'BP_AJBMiddleRangeSkill_C_OnDash::bRedash' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.HitWait
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBMiddleRangeSkill_C_HitWait final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableDamage;                                    // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInvincible;                                       // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPenetration;                                    // 0x002F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBlockedByAAP;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHeadShot;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAvoidSkill;                                       // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_HitWait) == 0x000008, "Wrong alignment on BP_AJBMiddleRangeSkill_C_HitWait");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_HitWait) == 0x000038, "Wrong size on BP_AJBMiddleRangeSkill_C_HitWait");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, HitActor) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, HitComponent) == 0x000008, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, HitLocation) == 0x000010, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, HitNormal) == 0x00001C, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, CuttingRate) == 0x000028, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, SurfaceType) == 0x00002C, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bDisableDamage) == 0x00002D, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bInvincible) == 0x00002E, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bInvincible' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bIsPenetration) == 0x00002F, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bIsPenetration' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bBlockedByAAP) == 0x000030, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bBlockedByAAP' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bHeadShot) == 0x000031, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bHeadShot' has a wrong offset!");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_HitWait, bAvoidSkill) == 0x000032, "Member 'BP_AJBMiddleRangeSkill_C_HitWait::bAvoidSkill' has a wrong offset!");

// Function BP_AJBMiddleRangeSkill.BP_AJBMiddleRangeSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBMiddleRangeSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBMiddleRangeSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBMiddleRangeSkill_C_ReceiveTick");
static_assert(sizeof(BP_AJBMiddleRangeSkill_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBMiddleRangeSkill_C_ReceiveTick");
static_assert(offsetof(BP_AJBMiddleRangeSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBMiddleRangeSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


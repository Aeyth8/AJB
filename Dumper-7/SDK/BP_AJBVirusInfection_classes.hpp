#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBVirusInfection

#include "Basic.hpp"

#include "BP_AJBContinuationDamage_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBVirusInfection.BP_AJBVirusInfection_C
// 0x0028 (0x0290 - 0x0268)
class UBP_AJBVirusInfection_C final : public UBP_AJBContinuationDamage_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBVirusInfection_C;             // 0x0268(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           KillVoiceTag;                                      // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CheckQueuedVoiceTagsOnKilled;                      // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bTempQueued;                                       // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldShowDamageDisplaying_0;                      // 0x0289(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBVirusInfection(int32 EntryPoint);
	void MakeDamageDisplayProperty(struct FAJBDamageDisplayProperty* CharacterDamageDisplayProperty);
	void OnActionActivate(bool bTriggeredByStand);
	void PlaySE(class UObject* Causer);
	void OnActionInactivate(bool bTriggeredByStand);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBVirusInfection_C">();
	}
	static class UBP_AJBVirusInfection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBVirusInfection_C>();
	}
};
static_assert(alignof(UBP_AJBVirusInfection_C) == 0x000008, "Wrong alignment on UBP_AJBVirusInfection_C");
static_assert(sizeof(UBP_AJBVirusInfection_C) == 0x000290, "Wrong size on UBP_AJBVirusInfection_C");
static_assert(offsetof(UBP_AJBVirusInfection_C, UberGraphFrame_BP_AJBVirusInfection_C) == 0x000268, "Member 'UBP_AJBVirusInfection_C::UberGraphFrame_BP_AJBVirusInfection_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBVirusInfection_C, KillVoiceTag) == 0x000270, "Member 'UBP_AJBVirusInfection_C::KillVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBVirusInfection_C, CheckQueuedVoiceTagsOnKilled) == 0x000278, "Member 'UBP_AJBVirusInfection_C::CheckQueuedVoiceTagsOnKilled' has a wrong offset!");
static_assert(offsetof(UBP_AJBVirusInfection_C, bTempQueued) == 0x000288, "Member 'UBP_AJBVirusInfection_C::bTempQueued' has a wrong offset!");
static_assert(offsetof(UBP_AJBVirusInfection_C, ShouldShowDamageDisplaying_0) == 0x000289, "Member 'UBP_AJBVirusInfection_C::ShouldShowDamageDisplaying_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCloudPointTarget

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_FXVisibilityInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.ExecuteUbergraph_BP_AJBCloudPointTarget
// 0x0120 (0x0120 - 0x0000)
struct BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToSpeakVoice_bWillBeSpoken;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_Point;                                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_BeforeValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AfterValue;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_NewVisibility;                        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_FXVisibilityInfo                   K2Node_Event_PrevFXVisibility;                     // 0x0074(0x0002)(HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   K2Node_Event_FXVisibility;                         // 0x0076(0x0002)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)> K2Node_CreateDelegate_OutputDelegate; // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_CalcValueRate_ValueRate;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess; // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCharacterFloatParameterFromDefaultContent_Value; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SecondTag;                      // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00F8(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget");
static_assert(sizeof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget) == 0x000120, "Wrong size on BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, EntryPoint) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetOwner_ReturnValue1) == 0x000020, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_TryToSpeakVoice_bWillBeSpoken) == 0x000028, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_TryToSpeakVoice_bWillBeSpoken' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000030, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_Operator) == 0x000040, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_Time) == 0x000048, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_Timing) == 0x00004C, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_bEnable) == 0x00004D, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_bOperatorIsEmpty) == 0x00004E, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_HasLocalSharedController_ReturnValue) == 0x00004F, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_Point) == 0x000050, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_Causer) == 0x000058, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_Min_ReturnValue) == 0x000064, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_BeforeValue) == 0x000068, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_BeforeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_AfterValue) == 0x00006C, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_AfterValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000071, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_NewVisibility) == 0x000073, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_NewVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_PrevFXVisibility) == 0x000074, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_PrevFXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_FXVisibility) == 0x000076, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_FXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetOwner_ReturnValue2) == 0x000080, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000088, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_CalcValueRate_ValueRate) == 0x0000A8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_CalcValueRate_ValueRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_IsServer_ReturnValue) == 0x0000AC, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000AD, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0000AE, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess) == 0x0000AF, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetCharacterFloatParameterFromDefaultContent_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetCharacterFloatParameterFromDefaultContent_Value) == 0x0000B0, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetCharacterFloatParameterFromDefaultContent_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_FTrunc_ReturnValue) == 0x0000B4, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetOwner_ReturnValue3) == 0x0000B8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_GetOwner_ReturnValue4) == 0x0000C0, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000C8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_bSuccess3) == 0x0000D0, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0000D8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_DynamicCast_bSuccess4) == 0x0000E0, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000E1, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_CustomEvent_AddCondition) == 0x0000E8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, K2Node_CustomEvent_SecondTag) == 0x0000F0, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::K2Node_CustomEvent_SecondTag' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000F8, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget, CallFunc_MatchesAnyTags_ReturnValue) == 0x000118, "Member 'BP_AJBCloudPointTarget_C_ExecuteUbergraph_BP_AJBCloudPointTarget::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.OnPassiveAdded
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloudPointTarget_C_OnPassiveAdded final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SecondTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_OnPassiveAdded) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_OnPassiveAdded");
static_assert(sizeof(BP_AJBCloudPointTarget_C_OnPassiveAdded) == 0x000010, "Wrong size on BP_AJBCloudPointTarget_C_OnPassiveAdded");
static_assert(offsetof(BP_AJBCloudPointTarget_C_OnPassiveAdded, AddCondition) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_OnPassiveAdded::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_OnPassiveAdded, SecondTag) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_OnPassiveAdded::SecondTag' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloudPointTarget_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_ReceiveTick");
static_assert(sizeof(BP_AJBCloudPointTarget_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBCloudPointTarget_C_ReceiveTick");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.NotifyChangeFXVisibility
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility final
{
public:
	struct FST_FXVisibilityInfo                   PrevFXVisibility;                                  // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FST_FXVisibilityInfo                   FXVisibility;                                      // 0x0002(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility) == 0x000001, "Wrong alignment on BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility");
static_assert(sizeof(BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility) == 0x000004, "Wrong size on BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility, PrevFXVisibility) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility::PrevFXVisibility' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility, FXVisibility) == 0x000002, "Member 'BP_AJBCloudPointTarget_C_NotifyChangeFXVisibility::FXVisibility' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.ChangeParticleVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBCloudPointTarget_C_ChangeParticleVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_ChangeParticleVisibility) == 0x000001, "Wrong alignment on BP_AJBCloudPointTarget_C_ChangeParticleVisibility");
static_assert(sizeof(BP_AJBCloudPointTarget_C_ChangeParticleVisibility) == 0x000001, "Wrong size on BP_AJBCloudPointTarget_C_ChangeParticleVisibility");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ChangeParticleVisibility, NewVisibility) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_ChangeParticleVisibility::NewVisibility' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.AddValue
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloudPointTarget_C_AddValue final
{
public:
	int32                                         Point;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_AddValue) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_AddValue");
static_assert(sizeof(BP_AJBCloudPointTarget_C_AddValue) == 0x000010, "Wrong size on BP_AJBCloudPointTarget_C_AddValue");
static_assert(offsetof(BP_AJBCloudPointTarget_C_AddValue, Point) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_AddValue::Point' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_AddValue, Causer_0) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_AddValue::Causer_0' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCloudPointTarget_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBCloudPointTarget_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBCloudPointTarget_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBCloudPointTarget_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBCloudPointTarget_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBCloudPointTarget_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.OnConsumed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBCloudPointTarget_C_OnConsumed final
{
public:
	int32                                         BeforeValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_OnConsumed) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_OnConsumed");
static_assert(sizeof(BP_AJBCloudPointTarget_C_OnConsumed) == 0x000008, "Wrong size on BP_AJBCloudPointTarget_C_OnConsumed");
static_assert(offsetof(BP_AJBCloudPointTarget_C_OnConsumed, BeforeValue) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_OnConsumed::BeforeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_OnConsumed, AfterValue) == 0x000004, "Member 'BP_AJBCloudPointTarget_C_OnConsumed::AfterValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.SpawnCloudBarrierCloudServer
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBCloudBarrierCloud_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer) == 0x000010, "Wrong alignment on BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer");
static_assert(sizeof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer) == 0x000060, "Wrong size on BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_AJBCloudPointTarget_C_SpawnCloudBarrierCloudServer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.CalcValueRate
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBCloudPointTarget_C_CalcValueRate final
{
public:
	float                                         ValueRate;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorTimeDilation_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_CalcValueRate) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_CalcValueRate");
static_assert(sizeof(BP_AJBCloudPointTarget_C_CalcValueRate) == 0x000038, "Wrong size on BP_AJBCloudPointTarget_C_CalcValueRate");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, ValueRate) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::ValueRate' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, Temp_float_Variable) == 0x000004, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, Temp_bool_Variable1) == 0x000009, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_GetActorTimeDilation_ReturnValue) == 0x000018, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_GetActorTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, K2Node_Select_Default) == 0x000020, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, K2Node_Select1_Default) == 0x000024, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00002C, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_CalcValueRate, CallFunc_FInterpTo_ReturnValue) == 0x000034, "Member 'BP_AJBCloudPointTarget_C_CalcValueRate::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.UpdateCloudPointLocal
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBCloudPointTarget_C_UpdateCloudPointLocal final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_UpdateCloudPointLocal) == 0x000001, "Wrong alignment on BP_AJBCloudPointTarget_C_UpdateCloudPointLocal");
static_assert(sizeof(BP_AJBCloudPointTarget_C_UpdateCloudPointLocal) == 0x000002, "Wrong size on BP_AJBCloudPointTarget_C_UpdateCloudPointLocal");
static_assert(offsetof(BP_AJBCloudPointTarget_C_UpdateCloudPointLocal, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_UpdateCloudPointLocal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_UpdateCloudPointLocal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_AJBCloudPointTarget_C_UpdateCloudPointLocal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.GetValue
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloudPointTarget_C_GetValue final
{
public:
	int32                                         AAPValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_GetValue) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_GetValue");
static_assert(sizeof(BP_AJBCloudPointTarget_C_GetValue) == 0x000004, "Wrong size on BP_AJBCloudPointTarget_C_GetValue");
static_assert(offsetof(BP_AJBCloudPointTarget_C_GetValue, AAPValue) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_GetValue::AAPValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.GetValueMax
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCloudPointTarget_C_GetValueMax final
{
public:
	int32                                         AAPValueMax;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_GetValueMax) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_GetValueMax");
static_assert(sizeof(BP_AJBCloudPointTarget_C_GetValueMax) == 0x000004, "Wrong size on BP_AJBCloudPointTarget_C_GetValueMax");
static_assert(offsetof(BP_AJBCloudPointTarget_C_GetValueMax, AAPValueMax) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_GetValueMax::AAPValueMax' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.Consume
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBCloudPointTarget_C_Consume final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftDamage;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeforeValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterValue;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBeforeCloudPoint;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempLeftDamageValue;                              // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempDiff;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_Consume) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_Consume");
static_assert(sizeof(BP_AJBCloudPointTarget_C_Consume) == 0x000038, "Wrong size on BP_AJBCloudPointTarget_C_Consume");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, Damage) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_Consume::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, LeftDamage) == 0x000004, "Member 'BP_AJBCloudPointTarget_C_Consume::LeftDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, BeforeValue) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_Consume::BeforeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, AfterValue) == 0x00000C, "Member 'BP_AJBCloudPointTarget_C_Consume::AfterValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, TempBeforeCloudPoint) == 0x000010, "Member 'BP_AJBCloudPointTarget_C_Consume::TempBeforeCloudPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, bTempLeftDamageValue) == 0x000014, "Member 'BP_AJBCloudPointTarget_C_Consume::bTempLeftDamageValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, TempDiff) == 0x000018, "Member 'BP_AJBCloudPointTarget_C_Consume::TempDiff' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBCloudPointTarget_C_Consume::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, CallFunc_Abs_Int_ReturnValue) == 0x000020, "Member 'BP_AJBCloudPointTarget_C_Consume::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_AJBCloudPointTarget_C_Consume::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, Temp_bool_Variable) == 0x000028, "Member 'BP_AJBCloudPointTarget_C_Consume::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBCloudPointTarget_C_Consume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBCloudPointTarget_C_Consume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_Consume, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBCloudPointTarget_C_Consume::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.GetParticleTagBlocked
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBCloudPointTarget_C_GetParticleTagBlocked final
{
public:
	struct FGameplayTag                           ParticleTag;                                       // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_GetParticleTagBlocked) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_GetParticleTagBlocked");
static_assert(sizeof(BP_AJBCloudPointTarget_C_GetParticleTagBlocked) == 0x000008, "Wrong size on BP_AJBCloudPointTarget_C_GetParticleTagBlocked");
static_assert(offsetof(BP_AJBCloudPointTarget_C_GetParticleTagBlocked, ParticleTag) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_GetParticleTagBlocked::ParticleTag' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.GetSETagBlocked
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBCloudPointTarget_C_GetSETagBlocked final
{
public:
	struct FGameplayTag                           SETag;                                             // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_GetSETagBlocked) == 0x000008, "Wrong alignment on BP_AJBCloudPointTarget_C_GetSETagBlocked");
static_assert(sizeof(BP_AJBCloudPointTarget_C_GetSETagBlocked) == 0x000008, "Wrong size on BP_AJBCloudPointTarget_C_GetSETagBlocked");
static_assert(offsetof(BP_AJBCloudPointTarget_C_GetSETagBlocked, SETag) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_GetSETagBlocked::SETag' has a wrong offset!");

// Function BP_AJBCloudPointTarget.BP_AJBCloudPointTarget_C.ConsumeSimulated
// 0x003C (0x003C - 0x0000)
struct BP_AJBCloudPointTarget_C_ConsumeSimulated final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftDamage;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeforeValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AfterValue;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempAfterCloudPoint;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTempLeftDamageValue;                              // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempDiff;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBeforeCloudPoint;                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCloudPointTarget_C_ConsumeSimulated) == 0x000004, "Wrong alignment on BP_AJBCloudPointTarget_C_ConsumeSimulated");
static_assert(sizeof(BP_AJBCloudPointTarget_C_ConsumeSimulated) == 0x00003C, "Wrong size on BP_AJBCloudPointTarget_C_ConsumeSimulated");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, Damage) == 0x000000, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, LeftDamage) == 0x000004, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::LeftDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, BeforeValue) == 0x000008, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::BeforeValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, AfterValue) == 0x00000C, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::AfterValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, TempAfterCloudPoint) == 0x000010, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::TempAfterCloudPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, bTempLeftDamageValue) == 0x000014, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::bTempLeftDamageValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, TempDiff) == 0x000018, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::TempDiff' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, TempBeforeCloudPoint) == 0x00001C, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::TempBeforeCloudPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, Temp_int_Variable) == 0x000020, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, CallFunc_Abs_Int_ReturnValue) == 0x000024, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, CallFunc_Max_ReturnValue) == 0x000028, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, Temp_bool_Variable) == 0x00002C, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCloudPointTarget_C_ConsumeSimulated, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBCloudPointTarget_C_ConsumeSimulated::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPurpleRushSkill

#include "Basic.hpp"

#include "BP_AJBPurpleRushSkill_classes.hpp"
#include "BP_AJBPurpleRushSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.ExecuteUbergraph_BP_AJBPurpleRushSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPurpleRushSkill_C::ExecuteUbergraph_BP_AJBPurpleRushSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "ExecuteUbergraph_BP_AJBPurpleRushSkill");

	Params::BP_AJBPurpleRushSkill_C_ExecuteUbergraph_BP_AJBPurpleRushSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.OnDecreaseCapsule
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDecrease_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::OnDecreaseCapsule(const struct FVector& Location, bool bDecrease_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "OnDecreaseCapsule");

	Params::BP_AJBPurpleRushSkill_C_OnDecreaseCapsule Parms{};

	Parms.Location = std::move(Location);
	Parms.bDecrease_0 = bDecrease_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.MC_DecreaseCapsule
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDecrease_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::MC_DecreaseCapsule(const struct FVector& Location, bool bDecrease_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "MC_DecreaseCapsule");

	Params::BP_AJBPurpleRushSkill_C_MC_DecreaseCapsule Parms{};

	Parms.Location = std::move(Location);
	Parms.bDecrease_0 = bDecrease_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.ROS_DecreaseCapsule
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDecrease_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::ROS_DecreaseCapsule(const struct FVector& Location, bool bDecrease_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "ROS_DecreaseCapsule");

	Params::BP_AJBPurpleRushSkill_C_ROS_DecreaseCapsule Parms{};

	Parms.Location = std::move(Location);
	Parms.bDecrease_0 = bDecrease_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.CalcActiveTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  ActiveTime_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPurpleRushSkill_C::CalcActiveTime(float* ActiveTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "CalcActiveTime");

	Params::BP_AJBPurpleRushSkill_C_CalcActiveTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveTime_0 != nullptr)
		*ActiveTime_0 = Parms.ActiveTime_0;
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.CheckHitAny
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bHit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::CheckHitAny(class AActor* HitActor, class UActorComponent* HitComponent, bool* bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "CheckHitAny");

	Params::BP_AJBPurpleRushSkill_C_CheckHitAny Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bHit != nullptr)
		*bHit = Parms.bHit;
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.OnDash
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   RepeatCount_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRedash                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::OnDash(uint8 RepeatCount_0, bool bRedash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "OnDash");

	Params::BP_AJBPurpleRushSkill_C_OnDash Parms{};

	Parms.RepeatCount_0 = RepeatCount_0;
	Parms.bRedash = bRedash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.HitWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInvincible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsPenetration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPurpleRushSkill_C::HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "HitWait");

	Params::BP_AJBPurpleRushSkill_C_HitWait Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.CuttingRate = CuttingRate;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bInvincible = bInvincible;
	Parms.bIsPenetration = bIsPenetration;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bHeadShot = bHeadShot;
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.CalcDashSpeed
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  DashSpeed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPurpleRushSkill_C::CalcDashSpeed(float* DashSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "CalcDashSpeed");

	Params::BP_AJBPurpleRushSkill_C_CalcDashSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DashSpeed != nullptr)
		*DashSpeed = Parms.DashSpeed;
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.CalcBackSpeedRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  BackSpeedMin                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  BackSpeedMax                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPurpleRushSkill_C::CalcBackSpeedRange(float* BackSpeedMin, float* BackSpeedMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "CalcBackSpeedRange");

	Params::BP_AJBPurpleRushSkill_C_CalcBackSpeedRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BackSpeedMin != nullptr)
		*BackSpeedMin = Parms.BackSpeedMin;

	if (BackSpeedMax != nullptr)
		*BackSpeedMax = Parms.BackSpeedMax;
}


// Function BP_AJBPurpleRushSkill.BP_AJBPurpleRushSkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBPurpleRushSkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPurpleRushSkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}


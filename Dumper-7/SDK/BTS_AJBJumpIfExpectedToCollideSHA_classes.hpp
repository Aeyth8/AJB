#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBJumpIfExpectedToCollideSHA

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBJumpIfExpectedToCollideSHA.BTS_AJBJumpIfExpectedToCollideSHA_C
// 0x0080 (0x0118 - 0x0098)
class UBTS_AJBJumpIfExpectedToCollideSHA_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	float                                         DistanceThresh;                                    // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 InputDestinationKey;                               // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 FocusingEnemy;                                     // 0x00D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	float                                         JumpInterval;                                      // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventTagLocker*                        HighJumpEventLocker;                               // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            Input;                                             // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBJumpIfExpectedToCollideSHA(int32 EntryPoint);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void CloseGate();
	void OpenGate();
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBJumpIfExpectedToCollideSHA_C">();
	}
	static class UBTS_AJBJumpIfExpectedToCollideSHA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBJumpIfExpectedToCollideSHA_C>();
	}
};
static_assert(alignof(UBTS_AJBJumpIfExpectedToCollideSHA_C) == 0x000008, "Wrong alignment on UBTS_AJBJumpIfExpectedToCollideSHA_C");
static_assert(sizeof(UBTS_AJBJumpIfExpectedToCollideSHA_C) == 0x000118, "Wrong size on UBTS_AJBJumpIfExpectedToCollideSHA_C");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, DistanceThresh) == 0x0000A0, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::DistanceThresh' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, InputDestinationKey) == 0x0000A8, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::InputDestinationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, FocusingEnemy) == 0x0000D0, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::FocusingEnemy' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, JumpInterval) == 0x0000F8, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::JumpInterval' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, HighJumpEventLocker) == 0x000100, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::HighJumpEventLocker' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, Recognition) == 0x000108, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::Recognition' has a wrong offset!");
static_assert(offsetof(UBTS_AJBJumpIfExpectedToCollideSHA_C, Input) == 0x000110, "Member 'UBTS_AJBJumpIfExpectedToCollideSHA_C::Input' has a wrong offset!");

}


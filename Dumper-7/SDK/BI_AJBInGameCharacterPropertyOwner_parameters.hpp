#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_AJBInGameCharacterPropertyOwner

#include "Basic.hpp"


namespace SDK::Params
{

// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.GetPropertyStand
// 0x0008 (0x0008 - 0x0000)
struct BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand final
{
public:
	class ABP_AJBInGameCharacter_C*               PropertyStandBP;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand) == 0x000008, "Wrong alignment on BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand");
static_assert(sizeof(BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand) == 0x000008, "Wrong size on BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand");
static_assert(offsetof(BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand, PropertyStandBP) == 0x000000, "Member 'BI_AJBInGameCharacterPropertyOwner_C_GetPropertyStand::PropertyStandBP' has a wrong offset!");

// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.CheckExistPropertyStand
// 0x0001 (0x0001 - 0x0000)
struct BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand final
{
public:
	bool                                          bExist;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand) == 0x000001, "Wrong alignment on BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand");
static_assert(sizeof(BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand) == 0x000001, "Wrong size on BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand");
static_assert(offsetof(BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand, bExist) == 0x000000, "Member 'BI_AJBInGameCharacterPropertyOwner_C_CheckExistPropertyStand::bExist' has a wrong offset!");

// Function BI_AJBInGameCharacterPropertyOwner.BI_AJBInGameCharacterPropertyOwner_C.CheckTransfer
// 0x0001 (0x0001 - 0x0000)
struct BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer final
{
public:
	bool                                          bTransfer;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer) == 0x000001, "Wrong alignment on BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer");
static_assert(sizeof(BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer) == 0x000001, "Wrong size on BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer");
static_assert(offsetof(BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer, bTransfer) == 0x000000, "Member 'BI_AJBInGameCharacterPropertyOwner_C_CheckTransfer::bTransfer' has a wrong offset!");

}


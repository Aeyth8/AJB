#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerEventManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_SequencerEventManager.BP_SequencerEventManager_C.ExecuteUbergraph_BP_SequencerEventManager
// 0x0048 (0x0048 - 0x0000)
struct BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SequencerTrackBase_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SequencerTrackBase_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ABP_SequencerTrackBase_C*>       CallFunc_GetValidSequencerTracks_OutSequencerTracks; // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager) == 0x000008, "Wrong alignment on BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager");
static_assert(sizeof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager) == 0x000048, "Wrong size on BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, EntryPoint) == 0x000000, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager, CallFunc_GetValidSequencerTracks_OutSequencerTracks) == 0x000038, "Member 'BP_SequencerEventManager_C_ExecuteUbergraph_BP_SequencerEventManager::CallFunc_GetValidSequencerTracks_OutSequencerTracks' has a wrong offset!");

// Function BP_SequencerEventManager.BP_SequencerEventManager_C.GetValidSequencerTracks
// 0x0050 (0x0050 - 0x0000)
struct BP_SequencerEventManager_C_GetValidSequencerTracks final
{
public:
	TArray<class ABP_SequencerTrackBase_C*>       InSequencerTracks;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class ABP_SequencerTrackBase_C*>       OutSequencerTracks;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class ABP_SequencerTrackBase_C*>       SequencerTracksLocal;                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         IndexLocal;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SequencerTrackBase_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SequencerEventManager_C_GetValidSequencerTracks) == 0x000008, "Wrong alignment on BP_SequencerEventManager_C_GetValidSequencerTracks");
static_assert(sizeof(BP_SequencerEventManager_C_GetValidSequencerTracks) == 0x000050, "Wrong size on BP_SequencerEventManager_C_GetValidSequencerTracks");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, InSequencerTracks) == 0x000000, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::InSequencerTracks' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, OutSequencerTracks) == 0x000010, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::OutSequencerTracks' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, SequencerTracksLocal) == 0x000020, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::SequencerTracksLocal' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, IndexLocal) == 0x000030, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::IndexLocal' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, Temp_int_Variable) == 0x000034, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000049, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_GetValidSequencerTracks, CallFunc_Array_LastIndex_ReturnValue) == 0x00004C, "Member 'BP_SequencerEventManager_C_GetValidSequencerTracks::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function BP_SequencerEventManager.BP_SequencerEventManager_C.IsSkipping
// 0x0038 (0x0038 - 0x0000)
struct BP_SequencerEventManager_C_IsSkipping final
{
public:
	bool                                          bIsSkipping;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNeedRefreshTracksLocal;                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SequencerTrackBase_C*>       CallFunc_GetValidSequencerTracks_OutSequencerTracks; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SequencerTrackBase_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkippingTrack_bIsSkiping;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SequencerEventManager_C_IsSkipping) == 0x000008, "Wrong alignment on BP_SequencerEventManager_C_IsSkipping");
static_assert(sizeof(BP_SequencerEventManager_C_IsSkipping) == 0x000038, "Wrong size on BP_SequencerEventManager_C_IsSkipping");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, bIsSkipping) == 0x000000, "Member 'BP_SequencerEventManager_C_IsSkipping::bIsSkipping' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, bNeedRefreshTracksLocal) == 0x000001, "Member 'BP_SequencerEventManager_C_IsSkipping::bNeedRefreshTracksLocal' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SequencerEventManager_C_IsSkipping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SequencerEventManager_C_IsSkipping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_GetValidSequencerTracks_OutSequencerTracks) == 0x000010, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_GetValidSequencerTracks_OutSequencerTracks' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SequencerEventManager_C_IsSkipping, CallFunc_IsSkippingTrack_bIsSkiping) == 0x000032, "Member 'BP_SequencerEventManager_C_IsSkipping::CallFunc_IsSkippingTrack_bIsSkiping' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_VictoryShotResult

#include "Basic.hpp"

#include "WB_VictoryShotResult_classes.hpp"
#include "WB_VictoryShotResult_parameters.hpp"


namespace SDK
{

// Function WB_VictoryShotResult.WB_VictoryShotResult_C.ExecuteUbergraph_WB_VictoryShotResult
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VictoryShotResult_C::ExecuteUbergraph_WB_VictoryShotResult(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "ExecuteUbergraph_WB_VictoryShotResult");

	Params::WB_VictoryShotResult_C_ExecuteUbergraph_WB_VictoryShotResult Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.BndEvt__Anim_Appear_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature
// (BlueprintEvent)

void UWB_VictoryShotResult_C::BndEvt__Anim_Appear_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "BndEvt__Anim_Appear_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.PlayResultAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_VictoryShotResult_C::PlayResultAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "PlayResultAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.UpdateDisplay
// (BlueprintCallable, BlueprintEvent)

void UWB_VictoryShotResult_C::UpdateDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "UpdateDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.RemoveLocalPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FMatchingPlayerInfo>&     MatchingPlayers                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UWB_VictoryShotResult_C::RemoveLocalPlayer(TArray<struct FMatchingPlayerInfo>& MatchingPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "RemoveLocalPlayer");

	Params::WB_VictoryShotResult_C_RemoveLocalPlayer Parms{};

	Parms.MatchingPlayers = std::move(MatchingPlayers);

	UObject::ProcessEvent(Func, &Parms);

	MatchingPlayers = std::move(Parms.MatchingPlayers);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.DecideUserID
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VictoryShotResult_C::DecideUserID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "DecideUserID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.SetIndividualResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsGood                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAJBTextBlock**                   LabelWidget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAJBTextBlock**                   ValueWidget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_BattleRecord_Detail_Good_C**  GoodAnimationWidget                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VictoryShotResult_C::SetIndividualResult(int32 Index_0, const class FText& Label, const class FText& Value, bool IsGood, class UAJBTextBlock** LabelWidget, class UAJBTextBlock** ValueWidget, class UWB_BattleRecord_Detail_Good_C** GoodAnimationWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "SetIndividualResult");

	Params::WB_VictoryShotResult_C_SetIndividualResult Parms{};

	Parms.Index_0 = Index_0;
	Parms.Label = std::move(Label);
	Parms.Value = std::move(Value);
	Parms.IsGood = IsGood;

	UObject::ProcessEvent(Func, &Parms);

	if (LabelWidget != nullptr)
		*LabelWidget = Parms.LabelWidget;

	if (ValueWidget != nullptr)
		*ValueWidget = Parms.ValueWidget;

	if (GoodAnimationWidget != nullptr)
		*GoodAnimationWidget = Parms.GoodAnimationWidget;
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.SetIndividualResult_TwoLines
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsGood                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAJBTextBlock**                   LabelWidget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAJBTextBlock**                   Value1Widget                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAJBTextBlock**                   Value2Widget                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_BattleRecord_Detail_Good_C**  GoodAnimationWidget                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VictoryShotResult_C::SetIndividualResult_TwoLines(int32 Index_0, const class FText& Label, const class FText& Value1, const class FText& Value2, bool IsGood, class UAJBTextBlock** LabelWidget, class UAJBTextBlock** Value1Widget, class UAJBTextBlock** Value2Widget, class UWB_BattleRecord_Detail_Good_C** GoodAnimationWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "SetIndividualResult_TwoLines");

	Params::WB_VictoryShotResult_C_SetIndividualResult_TwoLines Parms{};

	Parms.Index_0 = Index_0;
	Parms.Label = std::move(Label);
	Parms.Value1 = std::move(Value1);
	Parms.Value2 = std::move(Value2);
	Parms.IsGood = IsGood;

	UObject::ProcessEvent(Func, &Parms);

	if (LabelWidget != nullptr)
		*LabelWidget = Parms.LabelWidget;

	if (Value1Widget != nullptr)
		*Value1Widget = Parms.Value1Widget;

	if (Value2Widget != nullptr)
		*Value2Widget = Parms.Value2Widget;

	if (GoodAnimationWidget != nullptr)
		*GoodAnimationWidget = Parms.GoodAnimationWidget;
}


// Function WB_VictoryShotResult.WB_VictoryShotResult_C.SetScoreRank
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScoreRank                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VictoryShotResult_C::SetScoreRank(int32 ScoreRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VictoryShotResult_C", "SetScoreRank");

	Params::WB_VictoryShotResult_C_SetScoreRank Parms{};

	Parms.ScoreRank = ScoreRank;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Reward

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "ERewardDisplayType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_Reward.WB_Reward_C.ExecuteUbergraph_WB_Reward
// 0x0600 (0x0600 - 0x0000)
struct WB_Reward_C_ExecuteUbergraph_WB_Reward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate1;     // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAJBGameRewardInfo>             K2Node_CustomEvent_RewardInfos;                    // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	ERewardDisplayType                            K2Node_CustomEvent_RewardDisplayType;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return;              // 0x0070(0x0040)()
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget4;                  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate2;     // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00E4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget3;                  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return1;             // 0x0140(0x0040)()
	class UNetHttp*                               CallFunc_Create_ReturnValue;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBSetGameRewardParam                 K2Node_MakeStruct_AJBSetGameRewardParam;           // 0x0188(0x0020)()
	class UAJBNetAPI*                             CallFunc_Request_ResultSetReward_ReturnValue;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonWIndow_S_C*                   CallFunc_Create_ReturnValue1;                      // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CharaIndex;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemType                               K2Node_CustomEvent_RewardType;                     // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RewardNo;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue2;             // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF[0x1];                                      // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDuplicateCurrentReward_bDuplicate;      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return2;             // 0x01F0(0x0040)()
	class UWB_EmoteChange_Window_C*               CallFunc_Create_ReturnValue2;                      // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out;           // 0x0238(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0250(0x0040)(HasGetValueTypeHash)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate3;     // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ZeroConstructor, ReferenceParm)
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget2;                  // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B8(0x0018)()
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget1;                  // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate4;     // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate5;     // 0x02E8(0x0010)(ZeroConstructor, NoDestructor)
	class UAJBAssetManager*                       CallFunc_Get_ReturnValue;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                CallFunc_GetRewardCharaIconTexture_ReturnValue;    // 0x0300(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                CallFunc_GetRewardStandIconTexture_ReturnValue;    // 0x0328(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue1; // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue1;  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return3;             // 0x03C0(0x0040)()
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0410(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable1;                             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D1;                  // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue1;       // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0448(0x0010)(IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin1;                         // 0x0458(0x0010)(IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue2;       // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin2;                         // 0x0478(0x0010)(IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin3;                         // 0x0488(0x0010)(IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded1;                        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBNetAPIResult                              Temp_byte_Variable;                                // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A3[0x5];                                      // 0x04A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_SelectCardWindow_C*         CallFunc_GetSelectCardWindow_OutWidget;            // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget;                   // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result;                         // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate7;             // 0x04C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate8;             // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result1;                        // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBProfileCardDetail                  K2Node_CustomEvent_ProfileCardDetail;              // 0x04F0(0x0030)()
	int32                                         CallFunc_GetCurrentDisplayTicketNum_ReturnValue;   // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate9;             // 0x0528(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRewardRarity_Return;                   // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDuplicateCurrentReward_bDuplicate1;     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent3;    // 0x0560(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent4;    // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CommonWIndow_S_C*                   CallFunc_Create_ReturnValue3;                      // 0x0570(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent5;    // 0x0578(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent6;    // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent7;    // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBPairProfileCardDetail              K2Node_CustomEvent_PairProfileCardDetail;          // 0x0598(0x0030)()
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue3;             // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum5_CmpSuccess;                     // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA[0x6];                                      // 0x05CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent8;    // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBHUDBase*                            K2Node_DynamicCast_AsAJBHUDBase;                   // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_ExecuteUbergraph_WB_Reward) == 0x000008, "Wrong alignment on WB_Reward_C_ExecuteUbergraph_WB_Reward");
static_assert(sizeof(WB_Reward_C_ExecuteUbergraph_WB_Reward) == 0x000600, "Wrong size on WB_Reward_C_ExecuteUbergraph_WB_Reward");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, EntryPoint) == 0x000000, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_RewardInfos) == 0x000030, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_RewardInfos' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_RewardDisplayType) == 0x000040, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_RewardDisplayType' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000048, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x000050, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_ComponentBoundEvent_TargetButton1) == 0x000058, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000060, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_ComponentBoundEvent_TargetButton) == 0x000068, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetCurrentRewardInfo_Return) == 0x000070, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetCurrentRewardInfo_Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_TargetWidget4) == 0x0000B0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_TargetWidget4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate2) == 0x0000B8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValid_ReturnValue1) == 0x0000D4, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Add_IntInt_ReturnValue1) == 0x0000D8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Array_Length_ReturnValue1) == 0x0000DC, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_Event_MyGeometry) == 0x0000E4, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_Event_InDeltaTime) == 0x00011C, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000120, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_FMax_ReturnValue) == 0x000124, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_MakeLiteralByte_ReturnValue) == 0x000128, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_TargetWidget3) == 0x000130, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_TargetWidget3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValid_ReturnValue2) == 0x000138, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetCurrentRewardInfo_Return1) == 0x000140, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetCurrentRewardInfo_Return1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Create_ReturnValue) == 0x000180, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_AJBSetGameRewardParam) == 0x000188, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_AJBSetGameRewardParam' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Request_ResultSetReward_ReturnValue) == 0x0001A8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Request_ResultSetReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValid_ReturnValue3) == 0x0001B0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Create_ReturnValue1) == 0x0001B8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_CharaIndex) == 0x0001C0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_CharaIndex' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_RewardType) == 0x0001C4, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_RewardType' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_RewardNo) == 0x0001C8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_RewardNo' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum1_CmpSuccess) == 0x0001CC, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_MakeLiteralByte_ReturnValue1) == 0x0001CD, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_MakeLiteralByte_ReturnValue2) == 0x0001CE, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_MakeLiteralByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, Temp_object_Variable) == 0x0001D0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_AsTexture_2D) == 0x0001D8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsDuplicateCurrentReward_bDuplicate) == 0x0001E1, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsDuplicateCurrentReward_bDuplicate' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_Loaded) == 0x0001E8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetCurrentRewardInfo_Return2) == 0x0001F0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetCurrentRewardInfo_Return2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Create_ReturnValue2) == 0x000230, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Create_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetAJBRewardItemTypeString_Out) == 0x000238, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetAJBRewardItemTypeString_Out' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_FormatArgumentData) == 0x000250, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate3) == 0x000290, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeArray_Array) == 0x0002A0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_TargetWidget2) == 0x0002B0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_TargetWidget2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Format_ReturnValue) == 0x0002B8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_TargetWidget1) == 0x0002D0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_TargetWidget1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate4) == 0x0002D8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate5) == 0x0002E8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Get_ReturnValue) == 0x0002F8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetRewardCharaIconTexture_ReturnValue) == 0x000300, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetRewardCharaIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetRewardStandIconTexture_ReturnValue) == 0x000328, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetRewardStandIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000350, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000360, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Concat_StrStr_ReturnValue) == 0x000368, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Concat_StrStr_ReturnValue1) == 0x000378, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue1) == 0x000388, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Concat_StrStr_ReturnValue2) == 0x000398, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValidSoftObjectReference_ReturnValue1) == 0x0003A8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValidSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Concat_StrStr_ReturnValue3) == 0x0003B0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetCurrentRewardInfo_Return3) == 0x0003C0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetCurrentRewardInfo_Return3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000400, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, Temp_int_Variable) == 0x000404, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Less_IntInt_ReturnValue) == 0x000408, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate6) == 0x000410, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, Temp_object_Variable1) == 0x000420, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_AsTexture_2D1) == 0x000428, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_AsTexture_2D1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_bSuccess1) == 0x000430, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000438, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_SlotAsVerticalBoxSlot_ReturnValue1) == 0x000440, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_SlotAsVerticalBoxSlot_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_Margin) == 0x000448, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_Margin1) == 0x000458, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_Margin1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_SlotAsVerticalBoxSlot_ReturnValue2) == 0x000468, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_SlotAsVerticalBoxSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000470, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_Margin2) == 0x000478, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_Margin2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_MakeStruct_Margin3) == 0x000488, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_MakeStruct_Margin3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_Loaded1) == 0x000498, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_Loaded1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, Temp_byte_Variable) == 0x0004A0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum2_CmpSuccess) == 0x0004A1, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum3_CmpSuccess) == 0x0004A2, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetSelectCardWindow_OutWidget) == 0x0004A8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetSelectCardWindow_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum4_CmpSuccess) == 0x0004B0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_TargetWidget) == 0x0004B8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_TargetWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004C0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_Result) == 0x0004C1, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate7) == 0x0004C8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate8) == 0x0004D8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_Result1) == 0x0004E8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_ProfileCardDetail) == 0x0004F0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_ProfileCardDetail' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetCurrentDisplayTicketNum_ReturnValue) == 0x000520, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetCurrentDisplayTicketNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CreateDelegate_OutputDelegate9) == 0x000528, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Array_Length_ReturnValue2) == 0x000538, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetRewardRarity_Return) == 0x00053C, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetRewardRarity_Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Add_IntInt_ReturnValue2) == 0x000540, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchInteger_CmpSuccess) == 0x000544, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000548, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsDuplicateCurrentReward_bDuplicate1) == 0x000550, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsDuplicateCurrentReward_bDuplicate1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x000558, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent3) == 0x000560, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent4) == 0x000568, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Create_ReturnValue3) == 0x000570, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Create_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent5) == 0x000578, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent5' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent6) == 0x000580, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent6' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent7) == 0x000588, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent7' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Not_PreBool_ReturnValue) == 0x000590, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_Not_PreBool_ReturnValue1) == 0x000591, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_CustomEvent_PairProfileCardDetail) == 0x000598, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_CustomEvent_PairProfileCardDetail' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_MakeLiteralByte_ReturnValue3) == 0x0005C8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_MakeLiteralByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_SwitchEnum5_CmpSuccess) == 0x0005C9, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_SwitchEnum5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_RequestWwiseEventOnLocal_AkComponent8) == 0x0005D0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_RequestWwiseEventOnLocal_AkComponent8' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetPlayerController_ReturnValue) == 0x0005D8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_GetHUD_ReturnValue) == 0x0005E0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, CallFunc_IsValid_ReturnValue4) == 0x0005E8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_AsAJBHUDBase) == 0x0005F0, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_ExecuteUbergraph_WB_Reward, K2Node_DynamicCast_bSuccess2) == 0x0005F8, "Member 'WB_Reward_C_ExecuteUbergraph_WB_Reward::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.SetupPairRewardInfo_CharaCard
// 0x0030 (0x0030 - 0x0000)
struct WB_Reward_C_SetupPairRewardInfo_CharaCard final
{
public:
	struct FAJBPairProfileCardDetail              PairProfileCardDetail;                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_Reward_C_SetupPairRewardInfo_CharaCard) == 0x000008, "Wrong alignment on WB_Reward_C_SetupPairRewardInfo_CharaCard");
static_assert(sizeof(WB_Reward_C_SetupPairRewardInfo_CharaCard) == 0x000030, "Wrong size on WB_Reward_C_SetupPairRewardInfo_CharaCard");
static_assert(offsetof(WB_Reward_C_SetupPairRewardInfo_CharaCard, PairProfileCardDetail) == 0x000000, "Member 'WB_Reward_C_SetupPairRewardInfo_CharaCard::PairProfileCardDetail' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.SetupRewardInfo_CharaCard
// 0x0030 (0x0030 - 0x0000)
struct WB_Reward_C_SetupRewardInfo_CharaCard final
{
public:
	struct FAJBProfileCardDetail                  ProfileCardDetail;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_Reward_C_SetupRewardInfo_CharaCard) == 0x000008, "Wrong alignment on WB_Reward_C_SetupRewardInfo_CharaCard");
static_assert(sizeof(WB_Reward_C_SetupRewardInfo_CharaCard) == 0x000030, "Wrong size on WB_Reward_C_SetupRewardInfo_CharaCard");
static_assert(offsetof(WB_Reward_C_SetupRewardInfo_CharaCard, ProfileCardDetail) == 0x000000, "Member 'WB_Reward_C_SetupRewardInfo_CharaCard::ProfileCardDetail' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnClosedSelectCardWindow
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnClosedSelectCardWindow final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnClosedSelectCardWindow) == 0x000008, "Wrong alignment on WB_Reward_C_OnClosedSelectCardWindow");
static_assert(sizeof(WB_Reward_C_OnClosedSelectCardWindow) == 0x000008, "Wrong size on WB_Reward_C_OnClosedSelectCardWindow");
static_assert(offsetof(WB_Reward_C_OnClosedSelectCardWindow, TargetWidget) == 0x000000, "Member 'WB_Reward_C_OnClosedSelectCardWindow::TargetWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnClosedSetRewardErrorConfirm
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnClosedSetRewardErrorConfirm final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnClosedSetRewardErrorConfirm) == 0x000008, "Wrong alignment on WB_Reward_C_OnClosedSetRewardErrorConfirm");
static_assert(sizeof(WB_Reward_C_OnClosedSetRewardErrorConfirm) == 0x000008, "Wrong size on WB_Reward_C_OnClosedSetRewardErrorConfirm");
static_assert(offsetof(WB_Reward_C_OnClosedSetRewardErrorConfirm, TargetWidget) == 0x000000, "Member 'WB_Reward_C_OnClosedSetRewardErrorConfirm::TargetWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnClosedSetRewardConfirm
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnClosedSetRewardConfirm final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnClosedSetRewardConfirm) == 0x000008, "Wrong alignment on WB_Reward_C_OnClosedSetRewardConfirm");
static_assert(sizeof(WB_Reward_C_OnClosedSetRewardConfirm) == 0x000008, "Wrong size on WB_Reward_C_OnClosedSetRewardConfirm");
static_assert(offsetof(WB_Reward_C_OnClosedSetRewardConfirm, TargetWidget) == 0x000000, "Member 'WB_Reward_C_OnClosedSetRewardConfirm::TargetWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.LoadAndSetRewardIcon
// 0x000C (0x000C - 0x0000)
struct WB_Reward_C_LoadAndSetRewardIcon final
{
public:
	int32                                         CharaIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemType                               RewardType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RewardNo;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_LoadAndSetRewardIcon) == 0x000004, "Wrong alignment on WB_Reward_C_LoadAndSetRewardIcon");
static_assert(sizeof(WB_Reward_C_LoadAndSetRewardIcon) == 0x00000C, "Wrong size on WB_Reward_C_LoadAndSetRewardIcon");
static_assert(offsetof(WB_Reward_C_LoadAndSetRewardIcon, CharaIndex) == 0x000000, "Member 'WB_Reward_C_LoadAndSetRewardIcon::CharaIndex' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_LoadAndSetRewardIcon, RewardType) == 0x000004, "Member 'WB_Reward_C_LoadAndSetRewardIcon::RewardType' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_LoadAndSetRewardIcon, RewardNo) == 0x000008, "Member 'WB_Reward_C_LoadAndSetRewardIcon::RewardNo' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnClosedEmotionConfirm
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnClosedEmotionConfirm final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnClosedEmotionConfirm) == 0x000008, "Wrong alignment on WB_Reward_C_OnClosedEmotionConfirm");
static_assert(sizeof(WB_Reward_C_OnClosedEmotionConfirm) == 0x000008, "Wrong size on WB_Reward_C_OnClosedEmotionConfirm");
static_assert(offsetof(WB_Reward_C_OnClosedEmotionConfirm, TargetWidget) == 0x000000, "Member 'WB_Reward_C_OnClosedEmotionConfirm::TargetWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Reward_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_Tick) == 0x000004, "Wrong alignment on WB_Reward_C_Tick");
static_assert(sizeof(WB_Reward_C_Tick) == 0x00003C, "Wrong size on WB_Reward_C_Tick");
static_assert(offsetof(WB_Reward_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Reward_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Reward_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnClosedSelfWindow
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnClosedSelfWindow final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnClosedSelfWindow) == 0x000008, "Wrong alignment on WB_Reward_C_OnClosedSelfWindow");
static_assert(sizeof(WB_Reward_C_OnClosedSelfWindow) == 0x000008, "Wrong size on WB_Reward_C_OnClosedSelfWindow");
static_assert(offsetof(WB_Reward_C_OnClosedSelfWindow, TargetWidget) == 0x000000, "Member 'WB_Reward_C_OnClosedSelfWindow::TargetWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Reward_C_BndEvt__WB_CommonButton_YES_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_Reward_C_BndEvt__WB_CommonButton_NO_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.SetupRewardInfos
// 0x0018 (0x0018 - 0x0000)
struct WB_Reward_C_SetupRewardInfos final
{
public:
	TArray<struct FAJBGameRewardInfo>             RewardInfos;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	ERewardDisplayType                            RewardDisplayType_0;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_SetupRewardInfos) == 0x000008, "Wrong alignment on WB_Reward_C_SetupRewardInfos");
static_assert(sizeof(WB_Reward_C_SetupRewardInfos) == 0x000018, "Wrong size on WB_Reward_C_SetupRewardInfos");
static_assert(offsetof(WB_Reward_C_SetupRewardInfos, RewardInfos) == 0x000000, "Member 'WB_Reward_C_SetupRewardInfos::RewardInfos' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_SetupRewardInfos, RewardDisplayType_0) == 0x000010, "Member 'WB_Reward_C_SetupRewardInfos::RewardDisplayType_0' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781) == 0x000008, "Wrong alignment on WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781");
static_assert(sizeof(WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781) == 0x000008, "Wrong size on WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781");
static_assert(offsetof(WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781, Loaded) == 0x000000, "Member 'WB_Reward_C_OnLoaded_77EAD88244AAD51CBBD2CA9A267B7781::Loaded' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnLoaded_D06591D84DE59F90B2031BB9DCE793EE
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE) == 0x000008, "Wrong alignment on WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE");
static_assert(sizeof(WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE) == 0x000008, "Wrong size on WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE");
static_assert(offsetof(WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE, Loaded) == 0x000000, "Member 'WB_Reward_C_OnLoaded_D06591D84DE59F90B2031BB9DCE793EE::Loaded' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnSuccess_29B54CC84A5E31F039E7F69F055B81A0
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0 final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0) == 0x000001, "Wrong alignment on WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0");
static_assert(sizeof(WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0) == 0x000001, "Wrong size on WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0");
static_assert(offsetof(WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0, Result) == 0x000000, "Member 'WB_Reward_C_OnSuccess_29B54CC84A5E31F039E7F69F055B81A0::Result' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnFailed_29B54CC84A5E31F039E7F69F055B81A0
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0 final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0) == 0x000001, "Wrong alignment on WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0");
static_assert(sizeof(WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0) == 0x000001, "Wrong size on WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0");
static_assert(offsetof(WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0, Result) == 0x000000, "Member 'WB_Reward_C_OnFailed_29B54CC84A5E31F039E7F69F055B81A0::Result' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetCurrentRewardInfo
// 0x0080 (0x0080 - 0x0000)
struct WB_Reward_C_GetCurrentRewardInfo final
{
public:
	struct FAJBGameRewardInfo                     Return;                                            // 0x0000(0x0040)(Parm, OutParm)
	struct FAJBGameRewardInfo                     CallFunc_Array_Get_Item;                           // 0x0040(0x0040)()
};
static_assert(alignof(WB_Reward_C_GetCurrentRewardInfo) == 0x000008, "Wrong alignment on WB_Reward_C_GetCurrentRewardInfo");
static_assert(sizeof(WB_Reward_C_GetCurrentRewardInfo) == 0x000080, "Wrong size on WB_Reward_C_GetCurrentRewardInfo");
static_assert(offsetof(WB_Reward_C_GetCurrentRewardInfo, Return) == 0x000000, "Member 'WB_Reward_C_GetCurrentRewardInfo::Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentRewardInfo, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_Reward_C_GetCurrentRewardInfo::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.UpdateRewardDisplay
// 0x0600 (0x0600 - 0x0000)
struct WB_Reward_C_UpdateRewardDisplay final
{
public:
	int32                                         LTicketConsumeNum;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LPreviousTicketNum;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LPlayerTicketNum;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGameRewardInfo                     LCurrentInfo;                                      // 0x0010(0x0040)(Edit, BlueprintVisible)
	class UTexture2D*                             CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCardDetailName_Name;                   // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCardDetail_bReturn;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryGetCharacterName_CharacterName;        // 0x0098(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryGetCharacterName_CharacterName1;       // 0x00B8(0x0018)()
	class FText                                   CallFunc_TryGetCharacterName_CharacterName2;       // 0x00D0(0x0018)()
	class FText                                   CallFunc_TryGetCharacterName_CharacterName3;       // 0x00E8(0x0018)()
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentDisplayTicketNum_ReturnValue;   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0108(0x0018)()
	class FText                                   CallFunc_GetAJBRewardCharaProfileCardString_Out;   // 0x0120(0x0018)()
	class UTexture2D*                             CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture1; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out;           // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0160(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x01A0(0x0018)()
	class UAJBAssetManager*                       CallFunc_Get_ReturnValue;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAJBRewardLimitStringLen_Len;           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBPrimaryEmote*                       CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetAJBRewardItemTypeCommonIcon_OutTexture; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x0220(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0240(0x0018)()
	bool                                          CallFunc_IsDuplicateCurrentReward_bDuplicate;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out1;          // 0x0260(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0278(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x02B8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue3;              // 0x02F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0310(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0320(0x0018)()
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out2;          // 0x0338(0x0018)()
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out3;          // 0x0350(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0368(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x03A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x03E8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x03F8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x0438(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0450(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0460(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0478(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x04B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x04D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x04E0(0x0018)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out4;          // 0x0520(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue3;           // 0x0538(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData7;             // 0x0550(0x0040)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array4;                           // 0x0598(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue4;                      // 0x05A8(0x0018)()
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return;              // 0x05C0(0x0040)()
};
static_assert(alignof(WB_Reward_C_UpdateRewardDisplay) == 0x000008, "Wrong alignment on WB_Reward_C_UpdateRewardDisplay");
static_assert(sizeof(WB_Reward_C_UpdateRewardDisplay) == 0x000600, "Wrong size on WB_Reward_C_UpdateRewardDisplay");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, LTicketConsumeNum) == 0x000000, "Member 'WB_Reward_C_UpdateRewardDisplay::LTicketConsumeNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, LPreviousTicketNum) == 0x000004, "Member 'WB_Reward_C_UpdateRewardDisplay::LPreviousTicketNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, LPlayerTicketNum) == 0x000008, "Member 'WB_Reward_C_UpdateRewardDisplay::LPlayerTicketNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, LCurrentInfo) == 0x000010, "Member 'WB_Reward_C_UpdateRewardDisplay::LCurrentInfo' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture) == 0x000050, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetCardDetailName_Name) == 0x000060, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetCardDetailName_Name' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsCardDetail_bReturn) == 0x000070, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsCardDetail_bReturn' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_TryGetCharacterName_CharacterName) == 0x000098, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_TryGetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_TryGetCharacterName_CharacterName1) == 0x0000B8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_TryGetCharacterName_CharacterName1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_TryGetCharacterName_CharacterName2) == 0x0000D0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_TryGetCharacterName_CharacterName2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_TryGetCharacterName_CharacterName3) == 0x0000E8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_TryGetCharacterName_CharacterName3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_SwitchEnum1_CmpSuccess) == 0x000100, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetCurrentDisplayTicketNum_ReturnValue) == 0x000104, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetCurrentDisplayTicketNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000108, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardCharaProfileCardString_Out) == 0x000120, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardCharaProfileCardString_Out' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture1) == 0x000138, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardCharaProfileCommonIcon_OutTexture1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsValid_ReturnValue1) == 0x000140, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeString_Out) == 0x000148, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeString_Out' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x000160, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_StringToText_ReturnValue1) == 0x0001A0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Get_ReturnValue) == 0x0001B8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardLimitStringLen_Len) == 0x0001C0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardLimitStringLen_Len' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue) == 0x0001C8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_TryGetLoadedPrimaryEmoteAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBGameInstance_bSuccess) == 0x0001D0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0001D8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsValid_ReturnValue2) == 0x0001E0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_DynamicCast_AsTexture_2D) == 0x0001E8, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsValid_ReturnValue3) == 0x0001F1, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Max_ReturnValue) == 0x0001F4, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeCommonIcon_OutTexture) == 0x0001F8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeCommonIcon_OutTexture' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsValid_ReturnValue4) == 0x000200, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_SwitchEnum2_CmpSuccess) == 0x000201, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Array_Length_ReturnValue) == 0x000204, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Multiply_IntInt_ReturnValue) == 0x000208, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBGameInstance_bSuccess1) == 0x00020C, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000210, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000218, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Add_IntInt_ReturnValue1) == 0x00021C, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_IntToText_ReturnValue1) == 0x000220, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Array_Length_ReturnValue1) == 0x000238, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_IntToText_ReturnValue2) == 0x000240, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_IsDuplicateCurrentReward_bDuplicate) == 0x000258, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_IsDuplicateCurrentReward_bDuplicate' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeString_Out1) == 0x000260, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeString_Out1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData1) == 0x000278, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData2) == 0x0002B8, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_IntToText_ReturnValue3) == 0x0002F8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_IntToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeArray_Array) == 0x000310, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Format_ReturnValue) == 0x000320, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeString_Out2) == 0x000338, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeString_Out2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeString_Out3) == 0x000350, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeString_Out3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData3) == 0x000368, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData4) == 0x0003A8, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeArray_Array1) == 0x0003E8, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData5) == 0x0003F8, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Format_ReturnValue1) == 0x000438, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeArray_Array2) == 0x000450, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Format_ReturnValue2) == 0x000460, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData6) == 0x000478, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_StringToText_ReturnValue2) == 0x0004B8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeArray_Array3) == 0x0004D0, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Format_ReturnValue3) == 0x0004E0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Len_ReturnValue) == 0x0004F8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x0004FC, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Left_ReturnValue) == 0x000500, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Concat_StrStr_ReturnValue) == 0x000510, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetAJBRewardItemTypeString_Out4) == 0x000520, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetAJBRewardItemTypeString_Out4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Conv_StringToText_ReturnValue3) == 0x000538, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Conv_StringToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeStruct_FormatArgumentData7) == 0x000550, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeStruct_FormatArgumentData7' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_SwitchEnum3_CmpSuccess) == 0x000590, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, K2Node_MakeArray_Array4) == 0x000598, "Member 'WB_Reward_C_UpdateRewardDisplay::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_Format_ReturnValue4) == 0x0005A8, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_Format_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_UpdateRewardDisplay, CallFunc_GetCurrentRewardInfo_Return) == 0x0005C0, "Member 'WB_Reward_C_UpdateRewardDisplay::CallFunc_GetCurrentRewardInfo_Return' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.IsDuplicateCurrentReward
// 0x0050 (0x0050 - 0x0000)
struct WB_Reward_C_IsDuplicateCurrentReward final
{
public:
	bool                                          bDuplicate;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return;              // 0x0008(0x0040)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_IsDuplicateCurrentReward) == 0x000008, "Wrong alignment on WB_Reward_C_IsDuplicateCurrentReward");
static_assert(sizeof(WB_Reward_C_IsDuplicateCurrentReward) == 0x000050, "Wrong size on WB_Reward_C_IsDuplicateCurrentReward");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, bDuplicate) == 0x000000, "Member 'WB_Reward_C_IsDuplicateCurrentReward::bDuplicate' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, CallFunc_GetCurrentRewardInfo_Return) == 0x000008, "Member 'WB_Reward_C_IsDuplicateCurrentReward::CallFunc_GetCurrentRewardInfo_Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WB_Reward_C_IsDuplicateCurrentReward::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000049, "Member 'WB_Reward_C_IsDuplicateCurrentReward::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00004A, "Member 'WB_Reward_C_IsDuplicateCurrentReward::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsDuplicateCurrentReward, CallFunc_BooleanOR_ReturnValue) == 0x00004B, "Member 'WB_Reward_C_IsDuplicateCurrentReward::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetAppropriateRewardString
// 0x00B0 (0x00B0 - 0x0000)
struct WB_Reward_C_GetAppropriateRewardString final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	ERewardDisplayType                            Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0080(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0018)()
};
static_assert(alignof(WB_Reward_C_GetAppropriateRewardString) == 0x000008, "Wrong alignment on WB_Reward_C_GetAppropriateRewardString");
static_assert(sizeof(WB_Reward_C_GetAppropriateRewardString) == 0x0000B0, "Wrong size on WB_Reward_C_GetAppropriateRewardString");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, ReturnValue) == 0x000000, "Member 'WB_Reward_C_GetAppropriateRewardString::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_byte_Variable) == 0x000018, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_text_Variable) == 0x000020, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_text_Variable1) == 0x000038, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_text_Variable2) == 0x000050, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_text_Variable3) == 0x000068, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, Temp_text_Variable4) == 0x000080, "Member 'WB_Reward_C_GetAppropriateRewardString::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetAppropriateRewardString, K2Node_Select_Default) == 0x000098, "Member 'WB_Reward_C_GetAppropriateRewardString::K2Node_Select_Default' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetSelectCardWindow
// 0x0028 (0x0028 - 0x0000)
struct WB_Reward_C_GetSelectCardWindow final
{
public:
	class UWB_Lottery_SelectCardWindow_C*         OutWidget;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_SelectCardWindow_C*         CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAJBViewportWidgetOfClass_bSuccess;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Lottery_SelectCardWindow_C*         CallFunc_FindAJBViewportWidgetOfClass_OutWidget;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_GetSelectCardWindow) == 0x000008, "Wrong alignment on WB_Reward_C_GetSelectCardWindow");
static_assert(sizeof(WB_Reward_C_GetSelectCardWindow) == 0x000028, "Wrong size on WB_Reward_C_GetSelectCardWindow");
static_assert(offsetof(WB_Reward_C_GetSelectCardWindow, OutWidget) == 0x000000, "Member 'WB_Reward_C_GetSelectCardWindow::OutWidget' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetSelectCardWindow, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WB_Reward_C_GetSelectCardWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetSelectCardWindow, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WB_Reward_C_GetSelectCardWindow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetSelectCardWindow, CallFunc_FindAJBViewportWidgetOfClass_bSuccess) == 0x000018, "Member 'WB_Reward_C_GetSelectCardWindow::CallFunc_FindAJBViewportWidgetOfClass_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetSelectCardWindow, CallFunc_FindAJBViewportWidgetOfClass_OutWidget) == 0x000020, "Member 'WB_Reward_C_GetSelectCardWindow::CallFunc_FindAJBViewportWidgetOfClass_OutWidget' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetCurrentDisplayTicketNum
// 0x0048 (0x0048 - 0x0000)
struct WB_Reward_C_GetCurrentDisplayTicketNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LPreviousTicketNum;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LPlayerTicketNum;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LTicketConsumeNum;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Reward_C_GetCurrentDisplayTicketNum) == 0x000008, "Wrong alignment on WB_Reward_C_GetCurrentDisplayTicketNum");
static_assert(sizeof(WB_Reward_C_GetCurrentDisplayTicketNum) == 0x000048, "Wrong size on WB_Reward_C_GetCurrentDisplayTicketNum");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, ReturnValue) == 0x000000, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, LPreviousTicketNum) == 0x000004, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::LPreviousTicketNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, LPlayerTicketNum) == 0x000008, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::LPlayerTicketNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, LTicketConsumeNum) == 0x00000C, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::LTicketConsumeNum' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_GetAJBGameInstance_bSuccess) == 0x000010, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000028, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000030, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Add_IntInt_ReturnValue1) == 0x00003C, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Multiply_IntInt_ReturnValue1) == 0x000040, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Multiply_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCurrentDisplayTicketNum, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'WB_Reward_C_GetCurrentDisplayTicketNum::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetRewardRarity
// 0x0048 (0x0048 - 0x0000)
struct WB_Reward_C_GetRewardRarity final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return;              // 0x0008(0x0040)()
};
static_assert(alignof(WB_Reward_C_GetRewardRarity) == 0x000008, "Wrong alignment on WB_Reward_C_GetRewardRarity");
static_assert(sizeof(WB_Reward_C_GetRewardRarity) == 0x000048, "Wrong size on WB_Reward_C_GetRewardRarity");
static_assert(offsetof(WB_Reward_C_GetRewardRarity, Return) == 0x000000, "Member 'WB_Reward_C_GetRewardRarity::Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetRewardRarity, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'WB_Reward_C_GetRewardRarity::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetRewardRarity, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000005, "Member 'WB_Reward_C_GetRewardRarity::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetRewardRarity, CallFunc_GetCurrentRewardInfo_Return) == 0x000008, "Member 'WB_Reward_C_GetRewardRarity::CallFunc_GetCurrentRewardInfo_Return' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.TryGetCharacterName
// 0x0148 (0x0148 - 0x0000)
struct WB_Reward_C_TryGetCharacterName final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0018)(Parm, OutParm)
	struct FAJBGameRewardInfo                     CallFunc_GetCurrentRewardInfo_Return;              // 0x0018(0x0040)()
	struct FAJBCharacterInfo                      CallFunc_GetCharacterInfoByCharaIndex_Out;         // 0x0058(0x00E8)()
	bool                                          CallFunc_GetCharacterInfoByCharaIndex_ReturnValue; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_TryGetCharacterName) == 0x000008, "Wrong alignment on WB_Reward_C_TryGetCharacterName");
static_assert(sizeof(WB_Reward_C_TryGetCharacterName) == 0x000148, "Wrong size on WB_Reward_C_TryGetCharacterName");
static_assert(offsetof(WB_Reward_C_TryGetCharacterName, CharacterName) == 0x000000, "Member 'WB_Reward_C_TryGetCharacterName::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_TryGetCharacterName, CallFunc_GetCurrentRewardInfo_Return) == 0x000018, "Member 'WB_Reward_C_TryGetCharacterName::CallFunc_GetCurrentRewardInfo_Return' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_TryGetCharacterName, CallFunc_GetCharacterInfoByCharaIndex_Out) == 0x000058, "Member 'WB_Reward_C_TryGetCharacterName::CallFunc_GetCharacterInfoByCharaIndex_Out' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_TryGetCharacterName, CallFunc_GetCharacterInfoByCharaIndex_ReturnValue) == 0x000140, "Member 'WB_Reward_C_TryGetCharacterName::CallFunc_GetCharacterInfoByCharaIndex_ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.IsCardDetail
// 0x0004 (0x0004 - 0x0000)
struct WB_Reward_C_IsCardDetail final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_IsCardDetail) == 0x000001, "Wrong alignment on WB_Reward_C_IsCardDetail");
static_assert(sizeof(WB_Reward_C_IsCardDetail) == 0x000004, "Wrong size on WB_Reward_C_IsCardDetail");
static_assert(offsetof(WB_Reward_C_IsCardDetail, bReturn) == 0x000000, "Member 'WB_Reward_C_IsCardDetail::bReturn' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsCardDetail, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'WB_Reward_C_IsCardDetail::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsCardDetail, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000002, "Member 'WB_Reward_C_IsCardDetail::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_IsCardDetail, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_Reward_C_IsCardDetail::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.GetCardDetailName
// 0x0018 (0x0018 - 0x0000)
struct WB_Reward_C_GetCardDetailName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_GetCardDetailName) == 0x000008, "Wrong alignment on WB_Reward_C_GetCardDetailName");
static_assert(sizeof(WB_Reward_C_GetCardDetailName) == 0x000018, "Wrong size on WB_Reward_C_GetCardDetailName");
static_assert(offsetof(WB_Reward_C_GetCardDetailName, Name_0) == 0x000000, "Member 'WB_Reward_C_GetCardDetailName::Name_0' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCardDetailName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'WB_Reward_C_GetCardDetailName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_GetCardDetailName, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000011, "Member 'WB_Reward_C_GetCardDetailName::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.SetEnableApplyReward
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_SetEnableApplyReward final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_SetEnableApplyReward) == 0x000001, "Wrong alignment on WB_Reward_C_SetEnableApplyReward");
static_assert(sizeof(WB_Reward_C_SetEnableApplyReward) == 0x000001, "Wrong size on WB_Reward_C_SetEnableApplyReward");
static_assert(offsetof(WB_Reward_C_SetEnableApplyReward, Enable) == 0x000000, "Member 'WB_Reward_C_SetEnableApplyReward::Enable' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_Reward_C_OnInputTurnRate");
static_assert(sizeof(WB_Reward_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_Reward_C_OnInputTurnRate");
static_assert(offsetof(WB_Reward_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_Reward_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_Reward_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedUp");
static_assert(sizeof(WB_Reward_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedUp");
static_assert(offsetof(WB_Reward_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedTouch");
static_assert(sizeof(WB_Reward_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedTouch");
static_assert(offsetof(WB_Reward_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedRight");
static_assert(sizeof(WB_Reward_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedRight");
static_assert(offsetof(WB_Reward_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedLeft");
static_assert(sizeof(WB_Reward_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedLeft");
static_assert(offsetof(WB_Reward_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedDown");
static_assert(sizeof(WB_Reward_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedDown");
static_assert(offsetof(WB_Reward_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedDecide");
static_assert(sizeof(WB_Reward_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedDecide");
static_assert(offsetof(WB_Reward_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedCancel");
static_assert(sizeof(WB_Reward_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedCancel");
static_assert(offsetof(WB_Reward_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedUp");
static_assert(sizeof(WB_Reward_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedUp");
static_assert(offsetof(WB_Reward_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_Reward_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_Reward_C_OnInputPressedTouch");
static_assert(sizeof(WB_Reward_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_Reward_C_OnInputPressedTouch");
static_assert(offsetof(WB_Reward_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_Reward_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_Reward_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_Reward_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedRight");
static_assert(sizeof(WB_Reward_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedRight");
static_assert(offsetof(WB_Reward_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedLeft");
static_assert(sizeof(WB_Reward_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedLeft");
static_assert(offsetof(WB_Reward_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedDown");
static_assert(sizeof(WB_Reward_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedDown");
static_assert(offsetof(WB_Reward_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedDecide");
static_assert(sizeof(WB_Reward_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedDecide");
static_assert(offsetof(WB_Reward_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedCancel");
static_assert(sizeof(WB_Reward_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedCancel");
static_assert(offsetof(WB_Reward_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_Reward_C_OnInputMoveRight");
static_assert(sizeof(WB_Reward_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_Reward_C_OnInputMoveRight");
static_assert(offsetof(WB_Reward_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_Reward_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_Reward_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_Reward_C_OnInputMoveForward");
static_assert(sizeof(WB_Reward_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_Reward_C_OnInputMoveForward");
static_assert(offsetof(WB_Reward_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_Reward_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_Reward_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Reward_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_Reward_C_OnInputLookupRate");
static_assert(sizeof(WB_Reward_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_Reward_C_OnInputLookupRate");
static_assert(offsetof(WB_Reward_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_Reward_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_Reward_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_Reward_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_IsModeless) == 0x000001, "Wrong alignment on WB_Reward_C_IsModeless");
static_assert(sizeof(WB_Reward_C_IsModeless) == 0x000001, "Wrong size on WB_Reward_C_IsModeless");
static_assert(offsetof(WB_Reward_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_Reward_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedR2");
static_assert(sizeof(WB_Reward_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedR2");
static_assert(offsetof(WB_Reward_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedR1");
static_assert(sizeof(WB_Reward_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedR1");
static_assert(offsetof(WB_Reward_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedL2");
static_assert(sizeof(WB_Reward_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedL2");
static_assert(offsetof(WB_Reward_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedL1");
static_assert(sizeof(WB_Reward_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedL1");
static_assert(offsetof(WB_Reward_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedR2");
static_assert(sizeof(WB_Reward_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedR2");
static_assert(offsetof(WB_Reward_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedR1");
static_assert(sizeof(WB_Reward_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedR1");
static_assert(offsetof(WB_Reward_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedL2");
static_assert(sizeof(WB_Reward_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedL2");
static_assert(offsetof(WB_Reward_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedL1");
static_assert(sizeof(WB_Reward_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedL1");
static_assert(offsetof(WB_Reward_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputReleasedL3");
static_assert(sizeof(WB_Reward_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_Reward_C_OnInputReleasedL3");
static_assert(offsetof(WB_Reward_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_Reward.WB_Reward_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_Reward_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Reward_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_Reward_C_OnInputPressedL3");
static_assert(sizeof(WB_Reward_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_Reward_C_OnInputPressedL3");
static_assert(offsetof(WB_Reward_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_Reward_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


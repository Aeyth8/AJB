#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_EmoteChange_Window

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ExecuteUbergraph_WB_EmoteChange_Window
// 0x05C8 (0x05C8 - 0x0000)
struct WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UWB_CommonWIndow_S_C*                   CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget2;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate1;     // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate2;     // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget1;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget4;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton4;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget3;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton3;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressableButton_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPressableButton_ReturnValue1;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget2;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton2;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressableButton_ReturnValue2;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPressableButton_ReturnValue3;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBWindowWidget*                       K2Node_CustomEvent_TargetWidget;                   // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Position;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBNetAPIResult                              Temp_byte_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_CharacterName4;                 // 0x0118(0x0018)()
	class FText                                   K2Node_CustomEvent_EmoteName4;                     // 0x0130(0x0018)()
	EAJBNetAPIResult                              K2Node_CustomEvent_Result;                         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_CharacterName3;                 // 0x0150(0x0018)()
	class FText                                   K2Node_CustomEvent_EmoteName3;                     // 0x0168(0x0018)()
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate3;             // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	EAJBNetAPIResult                              K2Node_CustomEvent_Result1;                        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_CharacterName2;                 // 0x0198(0x0018)()
	class FText                                   K2Node_CustomEvent_EmoteName2;                     // 0x01B0(0x0018)()
	TDelegate<void(EAJBNetAPIResult Result)>      K2Node_CreateDelegate_OutputDelegate4;             // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   K2Node_CustomEvent_CharacterName1;                 // 0x01D8(0x0018)()
	class FText                                   K2Node_CustomEvent_EmoteName1;                     // 0x01F0(0x0018)()
	class FString                                 Temp_string_Variable;                              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DirectionIndex;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_CharacterName;                  // 0x0230(0x0018)()
	class FText                                   K2Node_CustomEvent_EmoteName;                      // 0x0248(0x0018)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEmoteData>                     CallFunc_GetPlayerCharacterEmoteData_OutEmoteData; // 0x0288(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetPlayerCharacterEmoteData_ReturnValue;  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_GetCharacterInfoByCharaIndex_Out;         // 0x02A0(0x00E8)()
	bool                                          CallFunc_GetCharacterInfoByCharaIndex_ReturnValue; // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmoteData                             CallFunc_Array_Get_Item;                           // 0x0390(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable3;                             // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetAJBRewardItemTypeString_Out;           // 0x03D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0428(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0438(0x0018)()
	TDelegate<void(class UAJBWindowWidget* TargetWidget)> K2Node_CreateDelegate_OutputDelegate5;     // 0x0450(0x0010)(ZeroConstructor, NoDestructor)
	class UNetHttp*                               CallFunc_Create_ReturnValue1;                      // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable4;                             // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable5;                             // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable6;                             // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ERewardItemType                               Temp_byte_Variable1;                               // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04B0(0x0018)()
	int32                                         K2Node_CustomEvent_RewardNo;                       // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CharacterID;                    // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemType                               K2Node_CustomEvent_RewardItemType;                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RewardString;                   // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_TargetText;                     // 0x04E8(0x0018)()
	class UTextBlock*                             K2Node_CustomEvent_TargetTextWidget;               // 0x0500(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAJBEmoteChangeLimitStringLen_Len;      // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAJBSetGameRewardParam                 K2Node_MakeStruct_AJBSetGameRewardParam;           // 0x0530(0x0020)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAJBNetAPI*                             CallFunc_Request_ResultSetReward_ReturnValue;      // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0568(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonWIndow_S_C*                   CallFunc_Create_ReturnValue2;                      // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBHUDBase*                            K2Node_DynamicCast_AsAJBHUDBase;                   // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C2[0x2];                                      // 0x05C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window");
static_assert(sizeof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window) == 0x0005C8, "Wrong size on WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, EntryPoint) == 0x000000, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_TargetWidget2) == 0x000020, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_TargetWidget2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate2) == 0x000038, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_TargetWidget1) == 0x000048, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_TargetWidget1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_Event_MyGeometry) == 0x000050, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_Event_InDeltaTime) == 0x000088, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00008C, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_FMax_ReturnValue) == 0x000094, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_OwnerWidget4) == 0x000098, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_OwnerWidget4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_TargetButton4) == 0x0000A0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_TargetButton4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_OwnerWidget3) == 0x0000A8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_OwnerWidget3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_TargetButton3) == 0x0000B0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_TargetButton3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsPressableButton_ReturnValue) == 0x0000B8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsPressableButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsPressableButton_ReturnValue1) == 0x0000B9, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsPressableButton_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_OwnerWidget2) == 0x0000C0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_OwnerWidget2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_TargetButton2) == 0x0000C8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_TargetButton2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x0000D0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_TargetButton1) == 0x0000D8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsPressableButton_ReturnValue2) == 0x0000E0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsPressableButton_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsPressableButton_ReturnValue3) == 0x0000E1, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsPressableButton_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_TargetWidget) == 0x0000E8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_TargetWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x0000F0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_Position) == 0x0000F8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_byte_Variable) == 0x0000FC, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000100, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_ComponentBoundEvent_TargetButton) == 0x000108, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000110, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterName4) == 0x000118, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterName4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_EmoteName4) == 0x000130, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_EmoteName4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_Result) == 0x000148, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterName3) == 0x000150, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterName3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_EmoteName3) == 0x000168, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_EmoteName3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate3) == 0x000180, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_Result1) == 0x000190, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterName2) == 0x000198, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterName2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_EmoteName2) == 0x0001B0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_EmoteName2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate4) == 0x0001C8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterName1) == 0x0001D8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterName1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_EmoteName1) == 0x0001F0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_EmoteName1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable) == 0x000208, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable1) == 0x000218, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_DirectionIndex) == 0x000228, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_DirectionIndex' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterName) == 0x000230, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_EmoteName) == 0x000248, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_EmoteName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_SwitchInteger_CmpSuccess) == 0x000260, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable2) == 0x000268, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_int_Array_Index_Variable) == 0x000278, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetAJBGameInstance_bSuccess) == 0x00027C, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000280, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetPlayerCharacterEmoteData_OutEmoteData) == 0x000288, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetPlayerCharacterEmoteData_OutEmoteData' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetPlayerCharacterEmoteData_ReturnValue) == 0x000298, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetPlayerCharacterEmoteData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetCharacterInfoByCharaIndex_Out) == 0x0002A0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetCharacterInfoByCharaIndex_Out' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetCharacterInfoByCharaIndex_ReturnValue) == 0x000388, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetCharacterInfoByCharaIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Array_Get_Item) == 0x000390, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Array_Length_ReturnValue) == 0x0003B8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable3) == 0x0003C0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetAJBRewardItemTypeString_Out) == 0x0003D0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetAJBRewardItemTypeString_Out' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_MakeStruct_FormatArgumentData) == 0x0003E8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_MakeArray_Array) == 0x000428, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Format_ReturnValue) == 0x000438, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CreateDelegate_OutputDelegate5) == 0x000450, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Create_ReturnValue1) == 0x000460, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable4) == 0x000468, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable5) == 0x000478, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_string_Variable6) == 0x000488, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_byte_Variable1) == 0x000498, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_Select_Default) == 0x0004A0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Conv_StringToText_ReturnValue) == 0x0004B0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_RewardNo) == 0x0004C8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_RewardNo' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_CharacterID) == 0x0004CC, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_CharacterID' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_RewardItemType) == 0x0004D0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_RewardItemType' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_RewardString) == 0x0004D8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_RewardString' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_TargetText) == 0x0004E8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_TargetText' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_CustomEvent_TargetTextWidget) == 0x000500, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_CustomEvent_TargetTextWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetAJBEmoteChangeLimitStringLen_Len) == 0x000508, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetAJBEmoteChangeLimitStringLen_Len' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Conv_TextToString_ReturnValue) == 0x000510, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Left_ReturnValue) == 0x000520, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_MakeStruct_AJBSetGameRewardParam) == 0x000530, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_MakeStruct_AJBSetGameRewardParam' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Concat_StrStr_ReturnValue) == 0x000550, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Request_ResultSetReward_ReturnValue) == 0x000560, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Request_ResultSetReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Conv_StringToText_ReturnValue1) == 0x000568, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsValid_ReturnValue1) == 0x000580, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Len_ReturnValue) == 0x000584, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Greater_IntInt_ReturnValue) == 0x000588, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000589, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Create_ReturnValue2) == 0x000590, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Create_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, Temp_int_Loop_Counter_Variable) == 0x000598, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetPlayerController_ReturnValue) == 0x0005A0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_IsValid_ReturnValue2) == 0x0005A8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_GetHUD_ReturnValue) == 0x0005B0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_DynamicCast_AsAJBHUDBase) == 0x0005B8, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_DynamicCast_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, K2Node_DynamicCast_bSuccess) == 0x0005C0, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Less_IntInt_ReturnValue) == 0x0005C1, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window, CallFunc_Add_IntInt_ReturnValue) == 0x0005C4, "Member 'WB_EmoteChange_Window_C_ExecuteUbergraph_WB_EmoteChange_Window::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.UpdateText
// 0x0020 (0x0020 - 0x0000)
struct WB_EmoteChange_Window_C_UpdateText final
{
public:
	class FText                                   TargetText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTextBlock*                             TargetTextWidget;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_UpdateText) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_UpdateText");
static_assert(sizeof(WB_EmoteChange_Window_C_UpdateText) == 0x000020, "Wrong size on WB_EmoteChange_Window_C_UpdateText");
static_assert(offsetof(WB_EmoteChange_Window_C_UpdateText, TargetText) == 0x000000, "Member 'WB_EmoteChange_Window_C_UpdateText::TargetText' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_UpdateText, TargetTextWidget) == 0x000018, "Member 'WB_EmoteChange_Window_C_UpdateText::TargetTextWidget' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.SetupParam
// 0x0020 (0x0020 - 0x0000)
struct WB_EmoteChange_Window_C_SetupParam final
{
public:
	int32                                         RewardNo_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CharacterID_0;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemType                               RewardItemType_0;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RewardString_0;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_SetupParam) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_SetupParam");
static_assert(sizeof(WB_EmoteChange_Window_C_SetupParam) == 0x000020, "Wrong size on WB_EmoteChange_Window_C_SetupParam");
static_assert(offsetof(WB_EmoteChange_Window_C_SetupParam, RewardNo_0) == 0x000000, "Member 'WB_EmoteChange_Window_C_SetupParam::RewardNo_0' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_SetupParam, CharacterID_0) == 0x000004, "Member 'WB_EmoteChange_Window_C_SetupParam::CharacterID_0' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_SetupParam, RewardItemType_0) == 0x000008, "Member 'WB_EmoteChange_Window_C_SetupParam::RewardItemType_0' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_SetupParam, RewardString_0) == 0x000010, "Member 'WB_EmoteChange_Window_C_SetupParam::RewardString_0' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ChangeEmoteInfo
// 0x0038 (0x0038 - 0x0000)
struct WB_EmoteChange_Window_C_ChangeEmoteInfo final
{
public:
	int32                                         DirectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CharacterName;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   EmoteName;                                         // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_EmoteChange_Window_C_ChangeEmoteInfo) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ChangeEmoteInfo");
static_assert(sizeof(WB_EmoteChange_Window_C_ChangeEmoteInfo) == 0x000038, "Wrong size on WB_EmoteChange_Window_C_ChangeEmoteInfo");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeEmoteInfo, DirectionIndex) == 0x000000, "Member 'WB_EmoteChange_Window_C_ChangeEmoteInfo::DirectionIndex' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeEmoteInfo, CharacterName) == 0x000008, "Member 'WB_EmoteChange_Window_C_ChangeEmoteInfo::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeEmoteInfo, EmoteName) == 0x000020, "Member 'WB_EmoteChange_Window_C_ChangeEmoteInfo::EmoteName' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ChangeLeftEmoteInfo
// 0x0030 (0x0030 - 0x0000)
struct WB_EmoteChange_Window_C_ChangeLeftEmoteInfo final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   EmoteName;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_EmoteChange_Window_C_ChangeLeftEmoteInfo) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ChangeLeftEmoteInfo");
static_assert(sizeof(WB_EmoteChange_Window_C_ChangeLeftEmoteInfo) == 0x000030, "Wrong size on WB_EmoteChange_Window_C_ChangeLeftEmoteInfo");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeLeftEmoteInfo, CharacterName) == 0x000000, "Member 'WB_EmoteChange_Window_C_ChangeLeftEmoteInfo::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeLeftEmoteInfo, EmoteName) == 0x000018, "Member 'WB_EmoteChange_Window_C_ChangeLeftEmoteInfo::EmoteName' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ChangeRightEmoteInfo
// 0x0030 (0x0030 - 0x0000)
struct WB_EmoteChange_Window_C_ChangeRightEmoteInfo final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   EmoteName;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_EmoteChange_Window_C_ChangeRightEmoteInfo) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ChangeRightEmoteInfo");
static_assert(sizeof(WB_EmoteChange_Window_C_ChangeRightEmoteInfo) == 0x000030, "Wrong size on WB_EmoteChange_Window_C_ChangeRightEmoteInfo");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeRightEmoteInfo, CharacterName) == 0x000000, "Member 'WB_EmoteChange_Window_C_ChangeRightEmoteInfo::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeRightEmoteInfo, EmoteName) == 0x000018, "Member 'WB_EmoteChange_Window_C_ChangeRightEmoteInfo::EmoteName' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ChangeBottomEmoteInfo
// 0x0030 (0x0030 - 0x0000)
struct WB_EmoteChange_Window_C_ChangeBottomEmoteInfo final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   EmoteName;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_EmoteChange_Window_C_ChangeBottomEmoteInfo) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ChangeBottomEmoteInfo");
static_assert(sizeof(WB_EmoteChange_Window_C_ChangeBottomEmoteInfo) == 0x000030, "Wrong size on WB_EmoteChange_Window_C_ChangeBottomEmoteInfo");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeBottomEmoteInfo, CharacterName) == 0x000000, "Member 'WB_EmoteChange_Window_C_ChangeBottomEmoteInfo::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeBottomEmoteInfo, EmoteName) == 0x000018, "Member 'WB_EmoteChange_Window_C_ChangeBottomEmoteInfo::EmoteName' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.ChangeTopEmoteInfo
// 0x0030 (0x0030 - 0x0000)
struct WB_EmoteChange_Window_C_ChangeTopEmoteInfo final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   EmoteName;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_EmoteChange_Window_C_ChangeTopEmoteInfo) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_ChangeTopEmoteInfo");
static_assert(sizeof(WB_EmoteChange_Window_C_ChangeTopEmoteInfo) == 0x000030, "Wrong size on WB_EmoteChange_Window_C_ChangeTopEmoteInfo");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeTopEmoteInfo, CharacterName) == 0x000000, "Member 'WB_EmoteChange_Window_C_ChangeTopEmoteInfo::CharacterName' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_ChangeTopEmoteInfo, EmoteName) == 0x000018, "Member 'WB_EmoteChange_Window_C_ChangeTopEmoteInfo::EmoteName' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Cancel_K2Node_ComponentBoundEvent_5_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.RequestChangeEmote
// 0x0004 (0x0004 - 0x0000)
struct WB_EmoteChange_Window_C_RequestChangeEmote final
{
public:
	int32                                         Position;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_RequestChangeEmote) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_RequestChangeEmote");
static_assert(sizeof(WB_EmoteChange_Window_C_RequestChangeEmote) == 0x000004, "Wrong size on WB_EmoteChange_Window_C_RequestChangeEmote");
static_assert(offsetof(WB_EmoteChange_Window_C_RequestChangeEmote, Position) == 0x000000, "Member 'WB_EmoteChange_Window_C_RequestChangeEmote::Position' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnClosedNotifyEmotionChangeConfirm
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm");
static_assert(sizeof(WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm");
static_assert(offsetof(WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm, TargetWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnClosedNotifyEmotionChangeConfirm::TargetWidget' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Top_K2Node_ComponentBoundEvent_3_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Right_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Bottom_K2Node_ComponentBoundEvent_1_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_EmoteChange_Window_C_BndEvt__WB_CommonButton_Left_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_EmoteChange_Window_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_Tick) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_Tick");
static_assert(sizeof(WB_EmoteChange_Window_C_Tick) == 0x00003C, "Wrong size on WB_EmoteChange_Window_C_Tick");
static_assert(offsetof(WB_EmoteChange_Window_C_Tick, MyGeometry) == 0x000000, "Member 'WB_EmoteChange_Window_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_EmoteChange_Window_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnClosedWindow
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnClosedWindow final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnClosedWindow) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_OnClosedWindow");
static_assert(sizeof(WB_EmoteChange_Window_C_OnClosedWindow) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnClosedWindow");
static_assert(offsetof(WB_EmoteChange_Window_C_OnClosedWindow, TargetWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnClosedWindow::TargetWidget' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnOpenedWindow
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnOpenedWindow final
{
public:
	class UAJBWindowWidget*                       TargetWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnOpenedWindow) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_OnOpenedWindow");
static_assert(sizeof(WB_EmoteChange_Window_C_OnOpenedWindow) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnOpenedWindow");
static_assert(offsetof(WB_EmoteChange_Window_C_OnOpenedWindow, TargetWidget) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnOpenedWindow::TargetWidget' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D");
static_assert(sizeof(WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D");
static_assert(offsetof(WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D, Result) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnSuccess_7F1CACB54C174945FB87CCBFF9C3464D::Result' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnFailed_7F1CACB54C174945FB87CCBFF9C3464D
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D final
{
public:
	EAJBNetAPIResult                              Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D");
static_assert(sizeof(WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D");
static_assert(offsetof(WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D, Result) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnFailed_7F1CACB54C174945FB87CCBFF9C3464D::Result' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_OnInputTurnRate");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnInputTurnRate");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_EmoteChange_Window_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedUp");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedUp");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedTouch");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedTouch");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedRight");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedRight");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedLeft");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedLeft");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedDown");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedDown");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedDecide");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedDecide");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedCancel");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedCancel");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedUp");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedUp");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedTouch");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedTouch");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_EmoteChange_Window_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_EmoteChange_Window_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedRight");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedRight");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedLeft");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedLeft");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedDown");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedDown");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedDecide
// 0x0020 (0x0020 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonButton_C*                     SelectingButtonLocal;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CommonButton_C*                     CallFunc_GetSelectingButton_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedDecide) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedDecide");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedDecide) == 0x000020, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedDecide");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedDecide, SelectingButtonLocal) == 0x000008, "Member 'WB_EmoteChange_Window_C_OnInputPressedDecide::SelectingButtonLocal' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedDecide, CallFunc_GetSelectingButton_ReturnValue) == 0x000010, "Member 'WB_EmoteChange_Window_C_OnInputPressedDecide::CallFunc_GetSelectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedDecide, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WB_EmoteChange_Window_C_OnInputPressedDecide::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedCancel");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedCancel");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_OnInputMoveRight");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnInputMoveRight");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_EmoteChange_Window_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_OnInputMoveForward");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnInputMoveForward");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_EmoteChange_Window_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_EmoteChange_Window_C_OnInputLookupRate");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_EmoteChange_Window_C_OnInputLookupRate");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_EmoteChange_Window_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_IsModeless) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_IsModeless");
static_assert(sizeof(WB_EmoteChange_Window_C_IsModeless) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_IsModeless");
static_assert(offsetof(WB_EmoteChange_Window_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedR2");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedR2");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedR1");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedR1");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedL3");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedL3");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedL2");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedL2");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputReleasedL1");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputReleasedL1");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedR2");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedR2");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedR1");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedR1");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedL3");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedL3");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedL2");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedL2");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_EmoteChange_Window_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_EmoteChange_Window_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_EmoteChange_Window_C_OnInputPressedL1");
static_assert(sizeof(WB_EmoteChange_Window_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_EmoteChange_Window_C_OnInputPressedL1");
static_assert(offsetof(WB_EmoteChange_Window_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_EmoteChange_Window.WB_EmoteChange_Window_C.GetSelectingButton
// 0x0020 (0x0020 - 0x0000)
struct WB_EmoteChange_Window_C_GetSelectingButton final
{
public:
	class UWB_CommonButton_C*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonButton_C*                     Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CommonButton_C*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_EmoteChange_Window_C_GetSelectingButton) == 0x000008, "Wrong alignment on WB_EmoteChange_Window_C_GetSelectingButton");
static_assert(sizeof(WB_EmoteChange_Window_C_GetSelectingButton) == 0x000020, "Wrong size on WB_EmoteChange_Window_C_GetSelectingButton");
static_assert(offsetof(WB_EmoteChange_Window_C_GetSelectingButton, ReturnValue) == 0x000000, "Member 'WB_EmoteChange_Window_C_GetSelectingButton::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_GetSelectingButton, Temp_int_Variable) == 0x000008, "Member 'WB_EmoteChange_Window_C_GetSelectingButton::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_GetSelectingButton, Temp_object_Variable) == 0x000010, "Member 'WB_EmoteChange_Window_C_GetSelectingButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_EmoteChange_Window_C_GetSelectingButton, K2Node_Select_Default) == 0x000018, "Member 'WB_EmoteChange_Window_C_GetSelectingButton::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ActionLogColumn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.UpdateText
// 0x0818 (0x0818 - 0x0000)
struct WB_ActionLogColumn_C_UpdateText final
{
public:
	class FText                                   MessageBase;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Type;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value1;                                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value2;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LNameValue;                                        // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   NewLocalVar_0;                                     // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   LValue2;                                           // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   LValue1;                                           // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0088(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x00A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0110(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0198(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x01D8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0200(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0240(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0250(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0268(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsRadioChatLog_bRadioChat;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x02B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x02C0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out;   // 0x02E8(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue; // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess2;             // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance2;    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out1;  // 0x0380(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue1; // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0410(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x0428(0x0018)()
	bool                                          CallFunc_GetAJBGameInstance_bSuccess3;             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance3;    // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess4;             // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance4;    // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out2;  // 0x0460(0x0088)()
	bool                                          CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue2; // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x04F0(0x0018)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x0510(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0550(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array4;                           // 0x0590(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array5;                           // 0x05A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue4;                      // 0x05B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue5;                      // 0x05C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData7;             // 0x05E0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData8;             // 0x0620(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData9;             // 0x0660(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array6;                           // 0x06A0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array7;                           // 0x06B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue6;                      // 0x06C0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue7;                      // 0x06D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData10;            // 0x06F0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData11;            // 0x0730(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array8;                           // 0x0770(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue8;                      // 0x0780(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData12;            // 0x0798(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array9;                           // 0x07D8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue9;                      // 0x07E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0800(0x0018)()
};
static_assert(alignof(WB_ActionLogColumn_C_UpdateText) == 0x000008, "Wrong alignment on WB_ActionLogColumn_C_UpdateText");
static_assert(sizeof(WB_ActionLogColumn_C_UpdateText) == 0x000818, "Wrong size on WB_ActionLogColumn_C_UpdateText");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, MessageBase) == 0x000000, "Member 'WB_ActionLogColumn_C_UpdateText::MessageBase' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, Type) == 0x000018, "Member 'WB_ActionLogColumn_C_UpdateText::Type' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, Value1) == 0x00001C, "Member 'WB_ActionLogColumn_C_UpdateText::Value1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, Value2) == 0x000020, "Member 'WB_ActionLogColumn_C_UpdateText::Value2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, LNameValue) == 0x000028, "Member 'WB_ActionLogColumn_C_UpdateText::LNameValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, NewLocalVar_0) == 0x000040, "Member 'WB_ActionLogColumn_C_UpdateText::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, LValue2) == 0x000058, "Member 'WB_ActionLogColumn_C_UpdateText::LValue2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, LValue1) == 0x000070, "Member 'WB_ActionLogColumn_C_UpdateText::LValue1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue) == 0x000088, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue1) == 0x0000A0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_MakeLiteralText_ReturnValue2) == 0x0000B8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData1) == 0x000110, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_bSuccess) == 0x000150, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000158, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array) == 0x000160, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, Temp_bool_Variable) == 0x000188, "Member 'WB_ActionLogColumn_C_UpdateText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00018C, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000190, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData2) == 0x000198, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array1) == 0x0001D8, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue1) == 0x0001E8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData3) == 0x000200, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array2) == 0x000240, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue2) == 0x000250, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData4) == 0x000268, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_IsRadioChatLog_bRadioChat) == 0x0002A8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_IsRadioChatLog_bRadioChat' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array3) == 0x0002B0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue3) == 0x0002C0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TextIsEmpty_ReturnValue) == 0x0002D8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_bSuccess1) == 0x0002D9, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x0002E0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out) == 0x0002E8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue) == 0x000370, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_bSuccess2) == 0x000371, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_AJB_Game_Instance2) == 0x000378, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_AJB_Game_Instance2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out1) == 0x000380, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue1) == 0x000408, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Conv_StringToText_ReturnValue) == 0x000410, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Conv_StringToText_ReturnValue1) == 0x000428, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_bSuccess3) == 0x000440, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_bSuccess3' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_AJB_Game_Instance3) == 0x000448, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_AJB_Game_Instance3' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_bSuccess4) == 0x000450, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_bSuccess4' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_GetAJBGameInstance_AJB_Game_Instance4) == 0x000458, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_GetAJBGameInstance_AJB_Game_Instance4' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out2) == 0x000460, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_Out2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue2) == 0x0004E8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_TryGetMatchingPlayerInfoByPlayerID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Conv_StringToText_ReturnValue2) == 0x0004F0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_SwitchInteger_CmpSuccess) == 0x000508, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData5) == 0x000510, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData6) == 0x000550, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array4) == 0x000590, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array5) == 0x0005A0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array5' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue4) == 0x0005B0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue5) == 0x0005C8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData7) == 0x0005E0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData7' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData8) == 0x000620, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData8' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData9) == 0x000660, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData9' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array6) == 0x0006A0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array6' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array7) == 0x0006B0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array7' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue6) == 0x0006C0, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue7) == 0x0006D8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData10) == 0x0006F0, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData10' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData11) == 0x000730, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData11' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array8) == 0x000770, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array8' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue8) == 0x000780, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue8' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeStruct_FormatArgumentData12) == 0x000798, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeStruct_FormatArgumentData12' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_MakeArray_Array9) == 0x0007D8, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_MakeArray_Array9' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, CallFunc_Format_ReturnValue9) == 0x0007E8, "Member 'WB_ActionLogColumn_C_UpdateText::CallFunc_Format_ReturnValue9' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_UpdateText, K2Node_Select_Default) == 0x000800, "Member 'WB_ActionLogColumn_C_UpdateText::K2Node_Select_Default' has a wrong offset!");

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.InvisibleText
// 0x0018 (0x0018 - 0x0000)
struct WB_ActionLogColumn_C_InvisibleText final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
};
static_assert(alignof(WB_ActionLogColumn_C_InvisibleText) == 0x000008, "Wrong alignment on WB_ActionLogColumn_C_InvisibleText");
static_assert(sizeof(WB_ActionLogColumn_C_InvisibleText) == 0x000018, "Wrong size on WB_ActionLogColumn_C_InvisibleText");
static_assert(offsetof(WB_ActionLogColumn_C_InvisibleText, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WB_ActionLogColumn_C_InvisibleText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.IsUsedText
// 0x0002 (0x0002 - 0x0000)
struct WB_ActionLogColumn_C_IsUsedText final
{
public:
	bool                                          bUsed;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ActionLogColumn_C_IsUsedText) == 0x000001, "Wrong alignment on WB_ActionLogColumn_C_IsUsedText");
static_assert(sizeof(WB_ActionLogColumn_C_IsUsedText) == 0x000002, "Wrong size on WB_ActionLogColumn_C_IsUsedText");
static_assert(offsetof(WB_ActionLogColumn_C_IsUsedText, bUsed) == 0x000000, "Member 'WB_ActionLogColumn_C_IsUsedText::bUsed' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_IsUsedText, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'WB_ActionLogColumn_C_IsUsedText::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.SetVisibleTimer
// 0x0010 (0x0010 - 0x0000)
struct WB_ActionLogColumn_C_SetVisibleTimer final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor)
};
static_assert(alignof(WB_ActionLogColumn_C_SetVisibleTimer) == 0x000008, "Wrong alignment on WB_ActionLogColumn_C_SetVisibleTimer");
static_assert(sizeof(WB_ActionLogColumn_C_SetVisibleTimer) == 0x000010, "Wrong size on WB_ActionLogColumn_C_SetVisibleTimer");
static_assert(offsetof(WB_ActionLogColumn_C_SetVisibleTimer, Time) == 0x000000, "Member 'WB_ActionLogColumn_C_SetVisibleTimer::Time' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_SetVisibleTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_ActionLogColumn_C_SetVisibleTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_SetVisibleTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'WB_ActionLogColumn_C_SetVisibleTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.GetVisibleTimerElapsedTime 
// 0x0008 (0x0008 - 0x0000)
struct WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_ final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_) == 0x000004, "Wrong alignment on WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_");
static_assert(sizeof(WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_) == 0x000008, "Wrong size on WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_");
static_assert(offsetof(WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_, ReturnValue) == 0x000000, "Member 'WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000004, "Member 'WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.IsRadioChatLog
// 0x0008 (0x0008 - 0x0000)
struct WB_ActionLogColumn_C_IsRadioChatLog final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRadioChat;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ActionLogColumn_C_IsRadioChatLog) == 0x000004, "Wrong alignment on WB_ActionLogColumn_C_IsRadioChatLog");
static_assert(sizeof(WB_ActionLogColumn_C_IsRadioChatLog) == 0x000008, "Wrong size on WB_ActionLogColumn_C_IsRadioChatLog");
static_assert(offsetof(WB_ActionLogColumn_C_IsRadioChatLog, Type) == 0x000000, "Member 'WB_ActionLogColumn_C_IsRadioChatLog::Type' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_IsRadioChatLog, bRadioChat) == 0x000004, "Member 'WB_ActionLogColumn_C_IsRadioChatLog::bRadioChat' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_IsRadioChatLog, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'WB_ActionLogColumn_C_IsRadioChatLog::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_IsRadioChatLog, CallFunc_Less_IntInt_ReturnValue) == 0x000006, "Member 'WB_ActionLogColumn_C_IsRadioChatLog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionLogColumn_C_IsRadioChatLog, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WB_ActionLogColumn_C_IsRadioChatLog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


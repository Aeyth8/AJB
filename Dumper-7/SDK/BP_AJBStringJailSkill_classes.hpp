#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStringJailSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBMiddleRangeSkill_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBStringJailSkill.BP_AJBStringJailSkill_C
// 0x0038 (0x0458 - 0x0420)
class UBP_AJBStringJailSkill_C final : public UBP_AJBMiddleRangeSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBStringJailSkill_C;            // 0x0420(0x0008)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   OnPlaySkillBeginAnimation;                         // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           ActiveGionTag;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PassiveActiveTime;                                 // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitLengthAlpha;                                    // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasHit;                                           // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImpossibleShotTraceDistance;                       // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasInvalidatedOnly;                               // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBStringJailSkill(int32 EntryPoint);
	void OnMultipleHit(EAJBSkillType SkillType_0, int32 HittedCharacterCount, int32 BlockedCharacterCount, int32 InvalidatedCharacterCount);
	void PlayNetScaleAnimation();
	void SetNetVisibility(bool bNewVisibility);
	bool IsInDashPossiblePlace();
	void OnEndState(bool bCancel, bool bRestore);
	void PlaySkillBeginAnimation();
	void HitWait(class AActor* HitActor, class UActorComponent* HitComponent, const struct FVector& HitLocation, const struct FVector& HitNormal, float CuttingRate, EPhysicalSurface SurfaceType, bool bDisableDamage, bool bInvincible, bool bIsPenetration, bool bBlockedByAAP, bool bHeadShot, bool bAvoidSkill);
	void SpeakRushVoice();
	void TryRedash();
	void TryGetDamageActor(class ABP_AJBDamageActor_C** DamageActor_0);
	void ReceiveBeginPlay();
	void OnActive();
	void OnInactive();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void GetDuration(float* Duration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBStringJailSkill_C">();
	}
	static class UBP_AJBStringJailSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBStringJailSkill_C>();
	}
};
static_assert(alignof(UBP_AJBStringJailSkill_C) == 0x000008, "Wrong alignment on UBP_AJBStringJailSkill_C");
static_assert(sizeof(UBP_AJBStringJailSkill_C) == 0x000458, "Wrong size on UBP_AJBStringJailSkill_C");
static_assert(offsetof(UBP_AJBStringJailSkill_C, UberGraphFrame_BP_AJBStringJailSkill_C) == 0x000420, "Member 'UBP_AJBStringJailSkill_C::UberGraphFrame_BP_AJBStringJailSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, OnPlaySkillBeginAnimation) == 0x000428, "Member 'UBP_AJBStringJailSkill_C::OnPlaySkillBeginAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, ActiveGionTag) == 0x000438, "Member 'UBP_AJBStringJailSkill_C::ActiveGionTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, PassiveActiveTime) == 0x000440, "Member 'UBP_AJBStringJailSkill_C::PassiveActiveTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, HitLengthAlpha) == 0x000444, "Member 'UBP_AJBStringJailSkill_C::HitLengthAlpha' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, bWasHit) == 0x000448, "Member 'UBP_AJBStringJailSkill_C::bWasHit' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, ImpossibleShotTraceDistance) == 0x00044C, "Member 'UBP_AJBStringJailSkill_C::ImpossibleShotTraceDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBStringJailSkill_C, bWasInvalidatedOnly) == 0x000450, "Member 'UBP_AJBStringJailSkill_C::bWasInvalidatedOnly' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCrossFireHurricaneSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBProjectileSkill_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBCrossFireHurricaneSkill.BP_AJBCrossFireHurricaneSkill_C
// 0x0020 (0x02C8 - 0x02A8)
class UBP_AJBCrossFireHurricaneSkill_C final : public UBP_AJBProjectileSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBCrossFireHurricaneSkill_C;    // 0x02A8(0x0008)(Transient, DuplicateTransient)
	float                                         TempShotTimeCount;                                 // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBCrossfireHurricaneAffecter_C*    AffecterClass;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPHealStopTime;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReserveShot;                                       // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBCrossFireHurricaneSkill(int32 EntryPoint);
	void PlayShotAnimation();
	void FakeTick(float DeltaTime);
	void None_Tick(float DeltaSeconds);
	void TrySpawnAffecterClass(const struct FTransform& SpawnTransform, class AActor* Owner, int32 SerialNumber_0, float ActiveTime);
	void AddToMultipleLocation(const struct FVector& NewLocation, float InScale, int32 InSerialNumber, float InDelayTime);
	void OnCompleted_9C69F8C943F460AE0F1D87A52F2EFD6C(class FName NotifyName);
	void OnBlendOut_9C69F8C943F460AE0F1D87A52F2EFD6C(class FName NotifyName);
	void OnInterrupted_9C69F8C943F460AE0F1D87A52F2EFD6C(class FName NotifyName);
	void OnNotifyBegin_9C69F8C943F460AE0F1D87A52F2EFD6C(class FName NotifyName);
	void OnNotifyEnd_9C69F8C943F460AE0F1D87A52F2EFD6C(class FName NotifyName);
	void OnCompleted_89C65F004CC5E6FC2E31A6BBC201311C(class FName NotifyName);
	void OnBlendOut_89C65F004CC5E6FC2E31A6BBC201311C(class FName NotifyName);
	void OnInterrupted_89C65F004CC5E6FC2E31A6BBC201311C(class FName NotifyName);
	void OnNotifyBegin_89C65F004CC5E6FC2E31A6BBC201311C(class FName NotifyName);
	void OnStateEnd();
	void AppearEffect(const struct FVector& Location);
	void OnNotifyEnd_89C65F004CC5E6FC2E31A6BBC201311C(class FName NotifyName);
	bool IsHealStop();
	void OnBeginState_Shot();
	void SpawnProjectile(class ABP_AJBInGameCharacter_C* OwnerCharacter, const struct FVector& Location, const struct FRotator& Rotation, bool IsAttackBySeparatedStand, class ABP_AJBInGameProjectile_C** SpawnedProjectile);
	void SpawnLaunchParticle();
	void ReceiveBeginPlay();
	void ChangeState(uint8 NextState);
	void CheckStateCanAccompany(bool* bCanAccompany);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBCrossFireHurricaneSkill_C">();
	}
	static class UBP_AJBCrossFireHurricaneSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBCrossFireHurricaneSkill_C>();
	}
};
static_assert(alignof(UBP_AJBCrossFireHurricaneSkill_C) == 0x000008, "Wrong alignment on UBP_AJBCrossFireHurricaneSkill_C");
static_assert(sizeof(UBP_AJBCrossFireHurricaneSkill_C) == 0x0002C8, "Wrong size on UBP_AJBCrossFireHurricaneSkill_C");
static_assert(offsetof(UBP_AJBCrossFireHurricaneSkill_C, UberGraphFrame_BP_AJBCrossFireHurricaneSkill_C) == 0x0002A8, "Member 'UBP_AJBCrossFireHurricaneSkill_C::UberGraphFrame_BP_AJBCrossFireHurricaneSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBCrossFireHurricaneSkill_C, TempShotTimeCount) == 0x0002B0, "Member 'UBP_AJBCrossFireHurricaneSkill_C::TempShotTimeCount' has a wrong offset!");
static_assert(offsetof(UBP_AJBCrossFireHurricaneSkill_C, AffecterClass) == 0x0002B8, "Member 'UBP_AJBCrossFireHurricaneSkill_C::AffecterClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBCrossFireHurricaneSkill_C, MPHealStopTime) == 0x0002C0, "Member 'UBP_AJBCrossFireHurricaneSkill_C::MPHealStopTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBCrossFireHurricaneSkill_C, ReserveShot) == 0x0002C4, "Member 'UBP_AJBCrossFireHurricaneSkill_C::ReserveShot' has a wrong offset!");

}


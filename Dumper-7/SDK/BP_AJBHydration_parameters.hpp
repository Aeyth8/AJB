#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHydration

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBHydration.BP_AJBHydration_C.ExecuteUbergraph_BP_AJBHydration
// 0x0100 (0x0100 - 0x0000)
struct BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_AddGameplayTag_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTouchedWater_IsTouchedWater;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_TraceCharacterFootingInfo_OutHit;         // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TraceCharacterFootingInfo_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration) == 0x000008, "Wrong alignment on BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration");
static_assert(sizeof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration) == 0x000100, "Wrong size on BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, EntryPoint) == 0x000000, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_AddGameplayTag_self_CastInput) == 0x000020, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_AddGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_GetOwner_ReturnValue1) == 0x000030, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_IsTouchedWater_IsTouchedWater) == 0x000038, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_IsTouchedWater_IsTouchedWater' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000040, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_DynamicCast_bSuccess1) == 0x000048, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_TraceCharacterFootingInfo_OutHit) == 0x000070, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_TraceCharacterFootingInfo_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration, CallFunc_TraceCharacterFootingInfo_ReturnValue) == 0x0000F8, "Member 'BP_AJBHydration_C_ExecuteUbergraph_BP_AJBHydration::CallFunc_TraceCharacterFootingInfo_ReturnValue' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.IsOnWaterSurface
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBHydration_C_IsOnWaterSurface final
{
public:
	bool                                          IsOnWaterFloor;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetFloorInfoCache_FloorInfoCache;         // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHydration_C_IsOnWaterSurface) == 0x000008, "Wrong alignment on BP_AJBHydration_C_IsOnWaterSurface");
static_assert(sizeof(BP_AJBHydration_C_IsOnWaterSurface) == 0x0000B8, "Wrong size on BP_AJBHydration_C_IsOnWaterSurface");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, IsOnWaterFloor) == 0x000000, "Member 'BP_AJBHydration_C_IsOnWaterSurface::IsOnWaterFloor' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_GetFloorInfoCache_FloorInfoCache) == 0x000010, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_GetFloorInfoCache_FloorInfoCache' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000098, "Member 'BP_AJBHydration_C_IsOnWaterSurface::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_AJBHydration_C_IsOnWaterSurface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_GetSurfaceType_ReturnValue) == 0x0000A1, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_GetMovementComponent_ReturnValue) == 0x0000A8, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_IsFalling_ReturnValue) == 0x0000B1, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsOnWaterSurface, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'BP_AJBHydration_C_IsOnWaterSurface::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.GetFloorInfoCache
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBHydration_C_GetFloorInfoCache final
{
public:
	struct FHitResult                             FloorInfoCache_0;                                  // 0x0000(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AJBHydration_C_GetFloorInfoCache) == 0x000008, "Wrong alignment on BP_AJBHydration_C_GetFloorInfoCache");
static_assert(sizeof(BP_AJBHydration_C_GetFloorInfoCache) == 0x000088, "Wrong size on BP_AJBHydration_C_GetFloorInfoCache");
static_assert(offsetof(BP_AJBHydration_C_GetFloorInfoCache, FloorInfoCache_0) == 0x000000, "Member 'BP_AJBHydration_C_GetFloorInfoCache::FloorInfoCache_0' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.IsInWater
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBHydration_C_IsInWater final
{
public:
	bool                                          IsInWater_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UnderwaterAffecter_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInWater_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHydration_C_IsInWater) == 0x000008, "Wrong alignment on BP_AJBHydration_C_IsInWater");
static_assert(sizeof(BP_AJBHydration_C_IsInWater) == 0x000020, "Wrong size on BP_AJBHydration_C_IsInWater");
static_assert(offsetof(BP_AJBHydration_C_IsInWater, IsInWater_0) == 0x000000, "Member 'BP_AJBHydration_C_IsInWater::IsInWater_0' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsInWater, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBHydration_C_IsInWater::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsInWater, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AJBHydration_C_IsInWater::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsInWater, CallFunc_IsInWater_ReturnValue) == 0x000018, "Member 'BP_AJBHydration_C_IsInWater::CallFunc_IsInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsInWater, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBHydration_C_IsInWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.IsTouchedWater
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBHydration_C_IsTouchedWater final
{
public:
	bool                                          IsTouchedWater_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeavyRain_IsHeavyRain;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnWaterSurface_IsOnWaterFloor;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInWater_IsInWater;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHydration_C_IsTouchedWater) == 0x000001, "Wrong alignment on BP_AJBHydration_C_IsTouchedWater");
static_assert(sizeof(BP_AJBHydration_C_IsTouchedWater) == 0x000006, "Wrong size on BP_AJBHydration_C_IsTouchedWater");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, IsTouchedWater_0) == 0x000000, "Member 'BP_AJBHydration_C_IsTouchedWater::IsTouchedWater_0' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, CallFunc_IsHeavyRain_IsHeavyRain) == 0x000001, "Member 'BP_AJBHydration_C_IsTouchedWater::CallFunc_IsHeavyRain_IsHeavyRain' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, CallFunc_IsOnWaterSurface_IsOnWaterFloor) == 0x000002, "Member 'BP_AJBHydration_C_IsTouchedWater::CallFunc_IsOnWaterSurface_IsOnWaterFloor' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, CallFunc_IsInWater_IsInWater) == 0x000003, "Member 'BP_AJBHydration_C_IsTouchedWater::CallFunc_IsInWater_IsInWater' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_AJBHydration_C_IsTouchedWater::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsTouchedWater, CallFunc_BooleanOR_ReturnValue1) == 0x000005, "Member 'BP_AJBHydration_C_IsTouchedWater::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.IsHeavyRain
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBHydration_C_IsHeavyRain final
{
public:
	bool                                          IsHeavyRain_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0030(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBHydration_C_IsHeavyRain) == 0x000008, "Wrong alignment on BP_AJBHydration_C_IsHeavyRain");
static_assert(sizeof(BP_AJBHydration_C_IsHeavyRain) == 0x000058, "Wrong size on BP_AJBHydration_C_IsHeavyRain");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, IsHeavyRain_0) == 0x000000, "Member 'BP_AJBHydration_C_IsHeavyRain::IsHeavyRain_0' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBHydration_C_IsHeavyRain::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBHydration_C_IsHeavyRain::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBHydration_C_IsHeavyRain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, CallFunc_GetGameplayTags_self_CastInput) == 0x000020, "Member 'BP_AJBHydration_C_IsHeavyRain::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000030, "Member 'BP_AJBHydration_C_IsHeavyRain::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBHydration_C_IsHeavyRain, CallFunc_HasTag_ReturnValue) == 0x000050, "Member 'BP_AJBHydration_C_IsHeavyRain::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBHydration_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHydration_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBHydration_C_ReceiveTick");
static_assert(sizeof(BP_AJBHydration_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBHydration_C_ReceiveTick");
static_assert(offsetof(BP_AJBHydration_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBHydration_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.GetCauserOwnerCharacterBP
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBHydration_C_GetCauserOwnerCharacterBP final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHydration_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong alignment on BP_AJBHydration_C_GetCauserOwnerCharacterBP");
static_assert(sizeof(BP_AJBHydration_C_GetCauserOwnerCharacterBP) == 0x000008, "Wrong size on BP_AJBHydration_C_GetCauserOwnerCharacterBP");
static_assert(offsetof(BP_AJBHydration_C_GetCauserOwnerCharacterBP, CharacterBP) == 0x000000, "Member 'BP_AJBHydration_C_GetCauserOwnerCharacterBP::CharacterBP' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.GetPassiveSkillTag
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBHydration_C_GetPassiveSkillTag final
{
public:
	struct FGameplayTag                           PassiveSkillTag;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHydration_C_GetPassiveSkillTag) == 0x000008, "Wrong alignment on BP_AJBHydration_C_GetPassiveSkillTag");
static_assert(sizeof(BP_AJBHydration_C_GetPassiveSkillTag) == 0x000008, "Wrong size on BP_AJBHydration_C_GetPassiveSkillTag");
static_assert(offsetof(BP_AJBHydration_C_GetPassiveSkillTag, PassiveSkillTag) == 0x000000, "Member 'BP_AJBHydration_C_GetPassiveSkillTag::PassiveSkillTag' has a wrong offset!");

// Function BP_AJBHydration.BP_AJBHydration_C.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBHydration_C_GetDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBHydration_C_GetDuration) == 0x000004, "Wrong alignment on BP_AJBHydration_C_GetDuration");
static_assert(sizeof(BP_AJBHydration_C_GetDuration) == 0x000004, "Wrong size on BP_AJBHydration_C_GetDuration");
static_assert(offsetof(BP_AJBHydration_C_GetDuration, Duration) == 0x000000, "Member 'BP_AJBHydration_C_GetDuration::Duration' has a wrong offset!");

}


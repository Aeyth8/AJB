#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBitesTheDustAffecter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBSkillAffecterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBBitesTheDustAffecter.BP_AJBBitesTheDustAffecter_C
// 0x0190 (0x0518 - 0x0388)
class ABP_AJBBitesTheDustAffecter_C final : public ABP_AJBSkillAffecterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBBitesTheDustAffecter_C;       // 0x0388(0x0008)(Transient, DuplicateTransient)
	float                                         Timeline_Enemy_Eye_XScale_A896204848CA741EAD9785A7E232FB88; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Enemy_Eye_Intensity_A896204848CA741EAD9785A7E232FB88; // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Enemy_Eye_YScale_A896204848CA741EAD9785A7E232FB88; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Enemy_Shake_A896204848CA741EAD9785A7E232FB88; // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Enemy__Direction_A896204848CA741EAD9785A7E232FB88; // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Enemy;                                    // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Self_Shake_76AA89E04CEB6961B91E938A5F7B8168; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Self__Direction_76AA89E04CEB6961B91E938A5F7B8168; // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Self;                                     // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Both_PreSceneChange_Alpha_88F84AAF4223E6D3A7FF21897D120562; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Both_SceneChange_88F84AAF4223E6D3A7FF21897D120562; // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Both_Flash_88F84AAF4223E6D3A7FF21897D120562; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Both__Direction_88F84AAF4223E6D3A7FF21897D120562; // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Both;                                     // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_FallDownCharacter;                              // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_StartCharacter;                                 // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimePreBomb;                                  // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StandAccompanyTime;                                // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParticlePreBombTime;                               // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeBomb;                                     // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimePreFade;                                  // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeFadeOut;                                  // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeFade;                                     // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTimeFadeIn;                                   // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMIBitesTheDust;                                   // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MT_BitesTheDust;                                   // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompletedStandAccompany;                          // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_PreBombStand;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_BombStand;                                      // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompletedParticlePreBomb;                         // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ParticleTagPreBomb;                                // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ParticleTagBomb;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GionTagBitesTheDustStart;                          // 0x0448(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GionTagBitesTheDustDuring;                         // 0x0450(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGameCharacter_C*>       CharacterBPList;                                   // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           ParticleTagDuring;                                 // 0x0468(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DuringParticleDistanceFromCamera;                  // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallAmount;                                       // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypesObstacle;                               // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         ArroundTraceNum;                                   // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArroundTraceIncScale;                              // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkyTraceNum;                                       // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyTraceIncScale;                                  // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              RewindBaseDateTime;                                // 0x0498(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              LastRewindedDateTime;                              // 0x04A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          DuringParticle;                                    // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypesGround;                                 // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         GroundTraceHeight;                                 // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ExplosionSETag;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StartSETag;                                        // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RewindSETag;                                       // 0x04D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FadeInSETag;                                       // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StartVoiceTag;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RevivedVoiceTag;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAreaIgnoreTiming;                            // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompletedDelayPreBomb;                            // 0x04FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayPreBombTime;                                  // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAJBBitesTheDustRewindInfo>     RewindInfoList;                                    // 0x0508(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBBitesTheDustAffecter(int32 EntryPoint);
	void RewindRotationServer(class ABP_AJBInGamePlayerController_C* BP_AJBPlayerController, const struct FRotator& Rotation);
	void MC_OnBeginStateDelayPreBomb(const TArray<class ABP_AJBInGameCharacter_C*>& CharacterBPList_0);
	void MC_OnBeginStatePreBomb(const TArray<class ABP_AJBInGameCharacter_C*>& CharacterBPList_0);
	void TickStateFadeIn();
	void TickStateFade();
	void TickStateFadeOut();
	void TickStatePreFade();
	void TickStateBomb();
	void TickStatePreBomb();
	void OnBeginStateFadeIn();
	void OnBeginStateFadeInOneShot();
	void BeginStateFadeInServer();
	void OnBeginStateFade(bool bGuarantee);
	void OnBeginStateFadeOneShot();
	void BeginStateFadeServer();
	void OnBeginStateFadeOut();
	void OnBeginStateFadeOutOneShot();
	void BeginStateFadeOutServer();
	void OnBeginStatePreFade();
	void OnBeginStatePreFadeOneShot();
	void BeginStatePreFadeServer();
	void OnBeginStateBomb();
	void OnBeginStateBombOneShot();
	void OnStateEnd();
	void StateTick();
	void BeginStateBombServer();
	void OnBeginStatePreBomb();
	void OnBeginStatePreBombOneShot();
	void BeginStatePreBombServer();
	void MC_BeginStateFadeIn();
	void MC_BeginStateFade();
	void MC_BeginStateFadeOut();
	void MC_BeginStatePreFade();
	void MC_BeginStateBomb();
	void MC_BeginStatePreBomb();
	void EndBitesTheDustTimeline(bool bOwner);
	void BeginBitesTheDustTimeline(bool bOwner);
	void OnCompleted_ECDA910A43D19FB7AD9F0F98DFE8BF20(class FName NotifyName);
	void OnBlendOut_ECDA910A43D19FB7AD9F0F98DFE8BF20(class FName NotifyName);
	void OnInterrupted_ECDA910A43D19FB7AD9F0F98DFE8BF20(class FName NotifyName);
	void OnNotifyBegin_ECDA910A43D19FB7AD9F0F98DFE8BF20(class FName NotifyName);
	void OnNotifyEnd_ECDA910A43D19FB7AD9F0F98DFE8BF20(class FName NotifyName);
	void OnCompleted_438BD6C34CCB4FDA0B2AF7A79C71CD55(class FName NotifyName);
	void OnBlendOut_438BD6C34CCB4FDA0B2AF7A79C71CD55(class FName NotifyName);
	void OnInterrupted_438BD6C34CCB4FDA0B2AF7A79C71CD55(class FName NotifyName);
	void OnNotifyBegin_438BD6C34CCB4FDA0B2AF7A79C71CD55(class FName NotifyName);
	void OnNotifyEnd_438BD6C34CCB4FDA0B2AF7A79C71CD55(class FName NotifyName);
	void Timeline_Enemy__UpdateFunc();
	void Timeline_Enemy__FinishedFunc();
	void Timeline_Both__UpdateFunc();
	void Timeline_Both__FinishedFunc();
	void Timeline_Self__UpdateFunc();
	void Timeline_Self__FinishedFunc();
	void CheckViewTargetIsOwner(bool* bOwner);
	void TryCreateDMIBitesTheDust();
	void GetAllCharacters(TArray<class ABP_AJBInGameCharacter_C*>* CharacterBPList_0);
	void Rewind();
	void CalcGroundLocation(const struct FVector& CharacterLocation, class ABP_AJBInGameCharacter_C* CharacterBP, struct FVector* GroundLocation);
	void CalcOutsideDamageAreaLocation(const struct FVector& InLocation, struct FVector* OutLocation);
	void CheckOutsideDamageArea(const struct FVector& Location, bool* bIsOutsideDamageArea);
	void CancelProcess(TArray<class ABP_AJBInGameCharacter_C*>& CharacterBPList_0);
	void StopCharacterMontage();
	void StopStandMontage();
	void ChangeEnableInput(bool bEnable, bool bResetInput);
	void UserConstructionScript();
	void CheckValidState(bool* bValidState);
	void ChangeStateCore(uint8 NewState);
	void CheckActiveState(bool* bActiveState);
	void OnRep_StateCore();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBBitesTheDustAffecter_C">();
	}
	static class ABP_AJBBitesTheDustAffecter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBBitesTheDustAffecter_C>();
	}
};
static_assert(alignof(ABP_AJBBitesTheDustAffecter_C) == 0x000008, "Wrong alignment on ABP_AJBBitesTheDustAffecter_C");
static_assert(sizeof(ABP_AJBBitesTheDustAffecter_C) == 0x000518, "Wrong size on ABP_AJBBitesTheDustAffecter_C");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, UberGraphFrame_BP_AJBBitesTheDustAffecter_C) == 0x000388, "Member 'ABP_AJBBitesTheDustAffecter_C::UberGraphFrame_BP_AJBBitesTheDustAffecter_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy_Eye_XScale_A896204848CA741EAD9785A7E232FB88) == 0x000390, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy_Eye_XScale_A896204848CA741EAD9785A7E232FB88' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy_Eye_Intensity_A896204848CA741EAD9785A7E232FB88) == 0x000394, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy_Eye_Intensity_A896204848CA741EAD9785A7E232FB88' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy_Eye_YScale_A896204848CA741EAD9785A7E232FB88) == 0x000398, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy_Eye_YScale_A896204848CA741EAD9785A7E232FB88' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy_Shake_A896204848CA741EAD9785A7E232FB88) == 0x00039C, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy_Shake_A896204848CA741EAD9785A7E232FB88' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy__Direction_A896204848CA741EAD9785A7E232FB88) == 0x0003A0, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy__Direction_A896204848CA741EAD9785A7E232FB88' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Enemy) == 0x0003A8, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Enemy' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Self_Shake_76AA89E04CEB6961B91E938A5F7B8168) == 0x0003B0, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Self_Shake_76AA89E04CEB6961B91E938A5F7B8168' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Self__Direction_76AA89E04CEB6961B91E938A5F7B8168) == 0x0003B4, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Self__Direction_76AA89E04CEB6961B91E938A5F7B8168' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Self) == 0x0003B8, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Self' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Both_PreSceneChange_Alpha_88F84AAF4223E6D3A7FF21897D120562) == 0x0003C0, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Both_PreSceneChange_Alpha_88F84AAF4223E6D3A7FF21897D120562' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Both_SceneChange_88F84AAF4223E6D3A7FF21897D120562) == 0x0003C4, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Both_SceneChange_88F84AAF4223E6D3A7FF21897D120562' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Both_Flash_88F84AAF4223E6D3A7FF21897D120562) == 0x0003C8, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Both_Flash_88F84AAF4223E6D3A7FF21897D120562' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Both__Direction_88F84AAF4223E6D3A7FF21897D120562) == 0x0003CC, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Both__Direction_88F84AAF4223E6D3A7FF21897D120562' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, Timeline_Both) == 0x0003D0, "Member 'ABP_AJBBitesTheDustAffecter_C::Timeline_Both' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, AM_FallDownCharacter) == 0x0003D8, "Member 'ABP_AJBBitesTheDustAffecter_C::AM_FallDownCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, AM_StartCharacter) == 0x0003E0, "Member 'ABP_AJBBitesTheDustAffecter_C::AM_StartCharacter' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimePreBomb) == 0x0003E8, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimePreBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StandAccompanyTime) == 0x0003EC, "Member 'ABP_AJBBitesTheDustAffecter_C::StandAccompanyTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ParticlePreBombTime) == 0x0003F0, "Member 'ABP_AJBBitesTheDustAffecter_C::ParticlePreBombTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimeBomb) == 0x0003F4, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimeBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimePreFade) == 0x0003F8, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimePreFade' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimeFadeOut) == 0x0003FC, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimeFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimeFade) == 0x000400, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimeFade' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StateTimeFadeIn) == 0x000404, "Member 'ABP_AJBBitesTheDustAffecter_C::StateTimeFadeIn' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, DMIBitesTheDust) == 0x000408, "Member 'ABP_AJBBitesTheDustAffecter_C::DMIBitesTheDust' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, MT_BitesTheDust) == 0x000410, "Member 'ABP_AJBBitesTheDustAffecter_C::MT_BitesTheDust' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, bCompletedStandAccompany) == 0x000418, "Member 'ABP_AJBBitesTheDustAffecter_C::bCompletedStandAccompany' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, AM_PreBombStand) == 0x000420, "Member 'ABP_AJBBitesTheDustAffecter_C::AM_PreBombStand' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, AM_BombStand) == 0x000428, "Member 'ABP_AJBBitesTheDustAffecter_C::AM_BombStand' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, bCompletedParticlePreBomb) == 0x000430, "Member 'ABP_AJBBitesTheDustAffecter_C::bCompletedParticlePreBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ParticleTagPreBomb) == 0x000438, "Member 'ABP_AJBBitesTheDustAffecter_C::ParticleTagPreBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ParticleTagBomb) == 0x000440, "Member 'ABP_AJBBitesTheDustAffecter_C::ParticleTagBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, GionTagBitesTheDustStart) == 0x000448, "Member 'ABP_AJBBitesTheDustAffecter_C::GionTagBitesTheDustStart' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, GionTagBitesTheDustDuring) == 0x000450, "Member 'ABP_AJBBitesTheDustAffecter_C::GionTagBitesTheDustDuring' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, CharacterBPList) == 0x000458, "Member 'ABP_AJBBitesTheDustAffecter_C::CharacterBPList' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ParticleTagDuring) == 0x000468, "Member 'ABP_AJBBitesTheDustAffecter_C::ParticleTagDuring' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, DuringParticleDistanceFromCamera) == 0x000470, "Member 'ABP_AJBBitesTheDustAffecter_C::DuringParticleDistanceFromCamera' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, SmallAmount) == 0x000474, "Member 'ABP_AJBBitesTheDustAffecter_C::SmallAmount' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ObjectTypesObstacle) == 0x000478, "Member 'ABP_AJBBitesTheDustAffecter_C::ObjectTypesObstacle' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ArroundTraceNum) == 0x000488, "Member 'ABP_AJBBitesTheDustAffecter_C::ArroundTraceNum' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ArroundTraceIncScale) == 0x00048C, "Member 'ABP_AJBBitesTheDustAffecter_C::ArroundTraceIncScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, SkyTraceNum) == 0x000490, "Member 'ABP_AJBBitesTheDustAffecter_C::SkyTraceNum' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, SkyTraceIncScale) == 0x000494, "Member 'ABP_AJBBitesTheDustAffecter_C::SkyTraceIncScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, RewindBaseDateTime) == 0x000498, "Member 'ABP_AJBBitesTheDustAffecter_C::RewindBaseDateTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, LastRewindedDateTime) == 0x0004A0, "Member 'ABP_AJBBitesTheDustAffecter_C::LastRewindedDateTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, DuringParticle) == 0x0004A8, "Member 'ABP_AJBBitesTheDustAffecter_C::DuringParticle' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ObjectTypesGround) == 0x0004B0, "Member 'ABP_AJBBitesTheDustAffecter_C::ObjectTypesGround' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, GroundTraceHeight) == 0x0004C0, "Member 'ABP_AJBBitesTheDustAffecter_C::GroundTraceHeight' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, ExplosionSETag) == 0x0004C8, "Member 'ABP_AJBBitesTheDustAffecter_C::ExplosionSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StartSETag) == 0x0004D0, "Member 'ABP_AJBBitesTheDustAffecter_C::StartSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, RewindSETag) == 0x0004D8, "Member 'ABP_AJBBitesTheDustAffecter_C::RewindSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, FadeInSETag) == 0x0004E0, "Member 'ABP_AJBBitesTheDustAffecter_C::FadeInSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, StartVoiceTag) == 0x0004E8, "Member 'ABP_AJBBitesTheDustAffecter_C::StartVoiceTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, RevivedVoiceTag) == 0x0004F0, "Member 'ABP_AJBBitesTheDustAffecter_C::RevivedVoiceTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, DamageAreaIgnoreTiming) == 0x0004F8, "Member 'ABP_AJBBitesTheDustAffecter_C::DamageAreaIgnoreTiming' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, bCompletedDelayPreBomb) == 0x0004FC, "Member 'ABP_AJBBitesTheDustAffecter_C::bCompletedDelayPreBomb' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, DelayPreBombTime) == 0x000500, "Member 'ABP_AJBBitesTheDustAffecter_C::DelayPreBombTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBBitesTheDustAffecter_C, RewindInfoList) == 0x000508, "Member 'ABP_AJBBitesTheDustAffecter_C::RewindInfoList' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBCyclicAimDeviation_Paramed

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBCyclicAimDeviation_Paramed.BTS_AJBCyclicAimDeviation_Paramed_C
// 0x0068 (0x0100 - 0x0098)
class UBTS_AJBCyclicAimDeviation_Paramed_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 RO_EnemyFocusingOn;                                // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 AimDeviationKey;                                   // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	float                                         TimeOfOneCycle;                                    // 0x00F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinValueParam;                                     // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValueParam;                                     // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_AJBCyclicAimDeviation_Paramed(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBCyclicAimDeviation_Paramed_C">();
	}
	static class UBTS_AJBCyclicAimDeviation_Paramed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBCyclicAimDeviation_Paramed_C>();
	}
};
static_assert(alignof(UBTS_AJBCyclicAimDeviation_Paramed_C) == 0x000008, "Wrong alignment on UBTS_AJBCyclicAimDeviation_Paramed_C");
static_assert(sizeof(UBTS_AJBCyclicAimDeviation_Paramed_C) == 0x000100, "Wrong size on UBTS_AJBCyclicAimDeviation_Paramed_C");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, RO_EnemyFocusingOn) == 0x0000A0, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::RO_EnemyFocusingOn' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, AimDeviationKey) == 0x0000C8, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::AimDeviationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, TimeOfOneCycle) == 0x0000F0, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::TimeOfOneCycle' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, MinValueParam) == 0x0000F4, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::MinValueParam' has a wrong offset!");
static_assert(offsetof(UBTS_AJBCyclicAimDeviation_Paramed_C, MaxValueParam) == 0x0000F8, "Member 'UBTS_AJBCyclicAimDeviation_Paramed_C::MaxValueParam' has a wrong offset!");

}


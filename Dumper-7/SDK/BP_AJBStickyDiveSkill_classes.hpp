#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStickyDiveSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBStickyDiveSkill.BP_AJBStickyDiveSkill_C
// 0x00B0 (0x0298 - 0x01E8)
class UBP_AJBStickyDiveSkill_C final : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBStickyDiveSkill_C;            // 0x01E8(0x0008)(Transient, DuplicateTransient)
	bool                                          bWaitingReady;                                     // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCompImpact;                                       // 0x01F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBZipper_Base_C*                   TempZipper;                                        // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTime;                                          // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReadyTime;                                         // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactTime;                                        // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DivingTime;                                        // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClearingTime;                                      // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallingLimitTime;                                  // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActivatedSETag;                                    // 0x0218(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ApeearTraceAroundLimitNum;                         // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AppearTraceAroundIncScale;                         // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AppearTraceSkyLimitNum;                            // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           ActivatedSE;                                       // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTraceDebug;                                   // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_StickyDiveCharacter;                            // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_StickyDiveStand;                                // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AppearTraceSkyLimitNumOnStage04;                   // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AppearTraceSkyIncScale;                            // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_StickyWaitCharacter;                            // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_StickyWaitStand;                                // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation_LastDistanceCalculation;             // 0x0268(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveDistanceMeter_Float;                           // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedScaleStealth;                                 // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedScaleStealthOnCritical;                       // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStepHeightStealth;                              // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReservedCancel_Local;                             // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AM_StickyEndCharacter;                             // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkableFloorAngleStealth_Stage03;                 // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBStickyDiveSkill(int32 EntryPoint);
	void MC_SpawnTempZipperAfterPositioning(const struct FVector& Location);
	void FinishMeasuringMoveDistance();
	void StartMeasuringMoveDistance();
	void OnTick_MeasureMoveDistance();
	void MC_ImpactFloor(const struct FVector& Location);
	void ROS_ImpactFloor(const struct FVector& Location);
	void StopMovingSE();
	void ImpactFloor();
	void StateRenaturation_Ready();
	void StateRenaturation_Waiting();
	void OnBeginState_Clearing_OneShot();
	void OnBeginState_Diving_OneShot();
	void MC_StateEnd(bool bCancel);
	void ROS_StateEnd(bool bCancel);
	void StateEnd(bool bCancel);
	void MC_BeginState_Clearing();
	void ROS_BeginState_Clearing();
	void BeginState_Clearing();
	void MC_BeginState_Diving();
	void ROS_BeginState_Diving();
	void BeginState_Diving();
	void MC_BeginState_Ready();
	void ROS_BeginState_Ready();
	void BeginState_Ready();
	void MC_BeginState_Waiting();
	void ROS_BeginState_Waiting();
	void BeginState_Waiting();
	void OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void TickState_Waiting(float DeltaSeconds);
	void OnBeginState_Waiting();
	void StateTick(float DeltaSeconds);
	void TickState_Clearing(float DeltaSeconds);
	void TickState_Diving(float DeltaSeconds);
	void TickState_Ready(float DeltaSeconds);
	void OnStateEnd(bool bCancel);
	void OnBeginState_Clearing();
	void OnBeginState_Diving(bool bRenaturation);
	void OnBeginState_Ready();
	void OnCompleted_7DDD297442D7CC4375E0C99BA75EF29A(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99BA75EF29A(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99BA75EF29A(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99BA75EF29A(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99BA75EF29A(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99BF5865150(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99BF5865150(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99BF5865150(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99BF5865150(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99BF5865150(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B3A9C8903(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B3A9C8903(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B3A9C8903(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B3A9C8903(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B3A9C8903(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BCC52FDA50(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCC52FDA50(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCC52FDA50(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCC52FDA50(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCC52FDA50(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B7FE1D70B(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B7FE1D70B(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B7FE1D70B(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B7FE1D70B(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B7FE1D70B(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BC6C5FB750(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BC6C5FB750(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BC6C5FB750(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BC6C5FB750(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BC6C5FB750(class FName NotifyName);
	void GetImpactInfo(const struct FVector& BaseLocation, struct FVector* Location, struct FVector* Normal);
	void SpawnTempZipper(const struct FVector& BaseLocation);
	void EraseTempZipper();
	void PositioningSafeLocation(struct FVector* AfterPositioningLocation);
	void AroundTrace(float TraceLengthScale, bool* bFindSafeLocation, struct FVector* SafeLocation);
	void GetDebugColor(bool bHit, float Rate, struct FLinearColor* Color);
	void OneDirectionTrace(const struct FVector& Direction, float TraceLengthScale, bool* bFindSafeLocation, struct FVector* SafeLocation);
	void SkyTrace(float TraceLengthScale, bool* bFindSafeLocation, struct FVector* SafeLocation);
	void RemoveStatus();
	void EnableStealth(bool bEnable);
	void TryChangeTorrentialRainEnable(bool bEnable);
	void GetPoliticAppearTraceSkyLimitNum(int32* AppearTraceSkyLimitNum_0);
	void ClearingEndProcessOnCancel(bool bSpawnZipper);
	void OnDisconnected();
	void StateBeginPlay(bool bShouldRestore);
	void OnCancel();
	void OnActive();
	void ReceiveTick(float DeltaSeconds);
	void OnRelatedCharacterBecomeLastSurvivor();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBStickyDiveSkill_C">();
	}
	static class UBP_AJBStickyDiveSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBStickyDiveSkill_C>();
	}
};
static_assert(alignof(UBP_AJBStickyDiveSkill_C) == 0x000008, "Wrong alignment on UBP_AJBStickyDiveSkill_C");
static_assert(sizeof(UBP_AJBStickyDiveSkill_C) == 0x000298, "Wrong size on UBP_AJBStickyDiveSkill_C");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, UberGraphFrame_BP_AJBStickyDiveSkill_C) == 0x0001E8, "Member 'UBP_AJBStickyDiveSkill_C::UberGraphFrame_BP_AJBStickyDiveSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, bWaitingReady) == 0x0001F0, "Member 'UBP_AJBStickyDiveSkill_C::bWaitingReady' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, bCompImpact) == 0x0001F1, "Member 'UBP_AJBStickyDiveSkill_C::bCompImpact' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, TempZipper) == 0x0001F8, "Member 'UBP_AJBStickyDiveSkill_C::TempZipper' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, WaitTime) == 0x000200, "Member 'UBP_AJBStickyDiveSkill_C::WaitTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ReadyTime) == 0x000204, "Member 'UBP_AJBStickyDiveSkill_C::ReadyTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ImpactTime) == 0x000208, "Member 'UBP_AJBStickyDiveSkill_C::ImpactTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, DivingTime) == 0x00020C, "Member 'UBP_AJBStickyDiveSkill_C::DivingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ClearingTime) == 0x000210, "Member 'UBP_AJBStickyDiveSkill_C::ClearingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, FallingLimitTime) == 0x000214, "Member 'UBP_AJBStickyDiveSkill_C::FallingLimitTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ActivatedSETag) == 0x000218, "Member 'UBP_AJBStickyDiveSkill_C::ActivatedSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ApeearTraceAroundLimitNum) == 0x000220, "Member 'UBP_AJBStickyDiveSkill_C::ApeearTraceAroundLimitNum' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AppearTraceAroundIncScale) == 0x000224, "Member 'UBP_AJBStickyDiveSkill_C::AppearTraceAroundIncScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AppearTraceSkyLimitNum) == 0x000228, "Member 'UBP_AJBStickyDiveSkill_C::AppearTraceSkyLimitNum' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, ActivatedSE) == 0x000230, "Member 'UBP_AJBStickyDiveSkill_C::ActivatedSE' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, bShowTraceDebug) == 0x000238, "Member 'UBP_AJBStickyDiveSkill_C::bShowTraceDebug' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AM_StickyDiveCharacter) == 0x000240, "Member 'UBP_AJBStickyDiveSkill_C::AM_StickyDiveCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AM_StickyDiveStand) == 0x000248, "Member 'UBP_AJBStickyDiveSkill_C::AM_StickyDiveStand' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AppearTraceSkyLimitNumOnStage04) == 0x000250, "Member 'UBP_AJBStickyDiveSkill_C::AppearTraceSkyLimitNumOnStage04' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AppearTraceSkyIncScale) == 0x000254, "Member 'UBP_AJBStickyDiveSkill_C::AppearTraceSkyIncScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AM_StickyWaitCharacter) == 0x000258, "Member 'UBP_AJBStickyDiveSkill_C::AM_StickyWaitCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AM_StickyWaitStand) == 0x000260, "Member 'UBP_AJBStickyDiveSkill_C::AM_StickyWaitStand' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, WorldLocation_LastDistanceCalculation) == 0x000268, "Member 'UBP_AJBStickyDiveSkill_C::WorldLocation_LastDistanceCalculation' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, MoveDistanceMeter_Float) == 0x000274, "Member 'UBP_AJBStickyDiveSkill_C::MoveDistanceMeter_Float' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, SpeedScaleStealth) == 0x000278, "Member 'UBP_AJBStickyDiveSkill_C::SpeedScaleStealth' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, SpeedScaleStealthOnCritical) == 0x00027C, "Member 'UBP_AJBStickyDiveSkill_C::SpeedScaleStealthOnCritical' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, MaxStepHeightStealth) == 0x000280, "Member 'UBP_AJBStickyDiveSkill_C::MaxStepHeightStealth' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, bReservedCancel_Local) == 0x000284, "Member 'UBP_AJBStickyDiveSkill_C::bReservedCancel_Local' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, AM_StickyEndCharacter) == 0x000288, "Member 'UBP_AJBStickyDiveSkill_C::AM_StickyEndCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBStickyDiveSkill_C, WalkableFloorAngleStealth_Stage03) == 0x000290, "Member 'UBP_AJBStickyDiveSkill_C::WalkableFloorAngleStealth_Stage03' has a wrong offset!");

}


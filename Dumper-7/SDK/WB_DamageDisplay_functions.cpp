#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DamageDisplay

#include "Basic.hpp"

#include "WB_DamageDisplay_classes.hpp"
#include "WB_DamageDisplay_parameters.hpp"


namespace SDK
{

// Function WB_DamageDisplay.WB_DamageDisplay_C.ExecuteUbergraph_WB_DamageDisplay
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::ExecuteUbergraph_WB_DamageDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "ExecuteUbergraph_WB_DamageDisplay");

	Params::WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_DamageDisplay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "Tick");

	Params::WB_DamageDisplay_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.UpdatePosition
// (BlueprintCallable, BlueprintEvent)

void UWB_DamageDisplay_C::UpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "UpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.OnFinishedAnimation
// (BlueprintCallable, BlueprintEvent)

void UWB_DamageDisplay_C::OnFinishedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "OnFinishedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.GetScaledWidgetSize
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       WidgetSize                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::GetScaledWidgetSize(struct FVector2D* WidgetSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "GetScaledWidgetSize");

	Params::WB_DamageDisplay_C_GetScaledWidgetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WidgetSize != nullptr)
		*WidgetSize = std::move(Parms.WidgetSize);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTargetLocationOnScreen
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       LocationOnScreen                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::GetTargetLocationOnScreen(struct FVector2D* LocationOnScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "GetTargetLocationOnScreen");

	Params::WB_DamageDisplay_C_GetTargetLocationOnScreen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocationOnScreen != nullptr)
		*LocationOnScreen = std::move(Parms.LocationOnScreen);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.IsWithinViewport
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsWithinViewport_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_DamageDisplay_C::IsWithinViewport(const struct FVector2D& Location, bool* IsWithinViewport_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "IsWithinViewport");

	Params::WB_DamageDisplay_C_IsWithinViewport Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (IsWithinViewport_0 != nullptr)
		*IsWithinViewport_0 = Parms.IsWithinViewport_0;
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.MakeOffsetWithRandom
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D*                       Offset_0                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::MakeOffsetWithRandom(struct FVector2D* Offset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "MakeOffsetWithRandom");

	Params::WB_DamageDisplay_C_MakeOffsetWithRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset_0 != nullptr)
		*Offset_0 = std::move(Parms.Offset_0);
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTextType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  TextType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::GetTextType(int32* TextType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "GetTextType");

	Params::WB_DamageDisplay_C_GetTextType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TextType != nullptr)
		*TextType = Parms.TextType;
}


// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTextWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTextBlock**                      TextWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DamageDisplay_C::GetTextWidget(class UTextBlock** TextWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DamageDisplay_C", "GetTextWidget");

	Params::WB_DamageDisplay_C_GetTextWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TextWidget != nullptr)
		*TextWidget = Parms.TextWidget;
}

}


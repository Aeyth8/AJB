#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharaSelectList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharaSelectList.WB_CharaSelectList_C
// 0x0058 (0x02A0 - 0x0248)
class UWB_CharaSelectList_C final : public UAJBUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(Transient, DuplicateTransient)
	class UCanvasPanel*                           CharacterButtonRoot;                               // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_CharaSelectButton_C*>        Buttons;                                           // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UCanvasPanelSlot*>               PanelSlotButtons;                                  // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	ECharacterBattleType                          BattleType;                                        // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnClickedChara;                                    // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnMouseButtonDownOnChracterButton;                 // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WB_CharaSelectList(int32 EntryPoint);
	void OnMouseButtonDownOnChracterButtonEvent();
	void DisableRelaseDecisionableCharacters();
	void Initialize();
	void Construct();
	void CreateButtonWidgets();
	void OnClickedButton(class UAJBButtonWidget* TargetWidget, class UAJBButton* TargetButton);
	void GetAllButtons(TArray<class UWB_CharaSelectButton_C*>* Buttons_0);
	void IsAvailableCharacter(const struct FAJBCharacterInfo& CheckCharacterInfo, bool* bAvailable);
	void GetCharacterInfoByCharaSelectIndex(int32 CharaSelectIndex, bool* bFound, struct FAJBCharacterInfo* CharacterInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharaSelectList_C">();
	}
	static class UWB_CharaSelectList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharaSelectList_C>();
	}
};
static_assert(alignof(UWB_CharaSelectList_C) == 0x000008, "Wrong alignment on UWB_CharaSelectList_C");
static_assert(sizeof(UWB_CharaSelectList_C) == 0x0002A0, "Wrong size on UWB_CharaSelectList_C");
static_assert(offsetof(UWB_CharaSelectList_C, UberGraphFrame) == 0x000248, "Member 'UWB_CharaSelectList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, CharacterButtonRoot) == 0x000250, "Member 'UWB_CharaSelectList_C::CharacterButtonRoot' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, Buttons) == 0x000258, "Member 'UWB_CharaSelectList_C::Buttons' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, PanelSlotButtons) == 0x000268, "Member 'UWB_CharaSelectList_C::PanelSlotButtons' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, BattleType) == 0x000278, "Member 'UWB_CharaSelectList_C::BattleType' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, OnClickedChara) == 0x000280, "Member 'UWB_CharaSelectList_C::OnClickedChara' has a wrong offset!");
static_assert(offsetof(UWB_CharaSelectList_C, OnMouseButtonDownOnChracterButton) == 0x000290, "Member 'UWB_CharaSelectList_C::OnMouseButtonDownOnChracterButton' has a wrong offset!");

}


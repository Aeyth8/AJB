#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameLifeTimeComponentBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlockedToExpiredEvent_IsBlocked;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component1;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeInGame_ElapsedTime;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLifeTimeExpired_HasExpired;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UActorComponent* Component, bool bReset)> K2Node_CreateDelegate_OutputDelegate; // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate1;         // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase) == 0x000008, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase) == 0x000050, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, EntryPoint) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_IsBlockedToExpiredEvent_IsBlocked) == 0x000004, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_IsBlockedToExpiredEvent_IsBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_CustomEvent_Component1) == 0x000008, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_CustomEvent_Component1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_CustomEvent_bReset) == 0x000010, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_GetElapsedTimeInGame_ElapsedTime) == 0x000018, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_GetElapsedTimeInGame_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_HasLifeTimeExpired_HasExpired) == 0x00001C, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_HasLifeTimeExpired_HasExpired' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_CustomEvent_Component) == 0x000020, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, CallFunc_IsActive_ReturnValue) == 0x000028, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase, K2Node_CreateDelegate_OutputDelegate1) == 0x000040, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.OnDeactivated
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated) == 0x000008, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated) == 0x000008, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated, Component) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_OnDeactivated::Component' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.OnActivated
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_OnActivated final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_OnActivated) == 0x000008, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_OnActivated");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_OnActivated) == 0x000010, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_OnActivated");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_OnActivated, Component) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_OnActivated::Component' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_OnActivated, bReset) == 0x000008, "Member 'BP_AJBInGameLifeTimeComponentBase_C_OnActivated::bReset' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.GetElapsedTimeInGame
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetElapsedInGameTimespan_ReturnValue;     // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame) == 0x000008, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame) == 0x000020, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame, ElapsedTime) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame, CallFunc_GetAJBInGameGameState_bIsValid) == 0x000004, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x000008, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame, CallFunc_GetElapsedInGameTimespan_ReturnValue) == 0x000010, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame::CallFunc_GetElapsedInGameTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame, CallFunc_GetTotalSeconds_ReturnValue) == 0x000018, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetElapsedTimeInGame::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.SetLifeTime
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime final
{
public:
	float                                         LifeTime_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime) == 0x000004, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime) == 0x000004, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime, LifeTime_0) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_SetLifeTime::LifeTime_0' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.UpdateRemainingTime
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime final
{
public:
	bool                                          CallFunc_IsTimerPaused_IsPaused;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTimeInGame_ElapsedTime;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime) == 0x000004, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime) == 0x000014, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime, CallFunc_IsTimerPaused_IsPaused) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime::CallFunc_IsTimerPaused_IsPaused' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime, CallFunc_GetElapsedTimeInGame_ElapsedTime) == 0x000004, "Member 'BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime::CallFunc_GetElapsedTimeInGame_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime, CallFunc_FMax_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameLifeTimeComponentBase_C_UpdateRemainingTime::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.GetRemainingLifeTime
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime final
{
public:
	float                                         RemainingLifeTime_0;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime) == 0x000004, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime) == 0x000004, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime, RemainingLifeTime_0) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_GetRemainingLifeTime::RemainingLifeTime_0' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.HasLifeTimeExpired
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired final
{
public:
	bool                                          HasExpired;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired) == 0x000001, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired) == 0x000002, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired, HasExpired) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired::HasExpired' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_AJBInGameLifeTimeComponentBase_C_HasLifeTimeExpired::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.IsBlockedToExpiredEvent
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent final
{
public:
	bool                                          IsBlocked;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTimerPaused_IsPaused;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent) == 0x000001, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent) == 0x000002, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent, IsBlocked) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent::IsBlocked' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent, CallFunc_IsTimerPaused_IsPaused) == 0x000001, "Member 'BP_AJBInGameLifeTimeComponentBase_C_IsBlockedToExpiredEvent::CallFunc_IsTimerPaused_IsPaused' has a wrong offset!");

// Function BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C.IsTimerPaused
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused final
{
public:
	bool                                          IsPaused;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBitesTheDust_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused) == 0x000001, "Wrong alignment on BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused");
static_assert(sizeof(BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused) == 0x000002, "Wrong size on BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused, IsPaused) == 0x000000, "Member 'BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused::IsPaused' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused, CallFunc_CheckActiveBitesTheDust_ReturnValue) == 0x000001, "Member 'BP_AJBInGameLifeTimeComponentBase_C_IsTimerPaused::CallFunc_CheckActiveBitesTheDust_ReturnValue' has a wrong offset!");

}


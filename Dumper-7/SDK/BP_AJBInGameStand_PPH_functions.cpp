#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_PPH

#include "Basic.hpp"

#include "BP_AJBInGameStand_PPH_classes.hpp"
#include "BP_AJBInGameStand_PPH_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ExecuteUbergraph_BP_AJBInGameStand_PPH
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::ExecuteUbergraph_BP_AJBInGameStand_PPH(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ExecuteUbergraph_BP_AJBInGameStand_PPH");

	Params::BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.MC_OnCapsuleIncreased
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AfterCapsuleNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::MC_OnCapsuleIncreased(int32 AfterCapsuleNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "MC_OnCapsuleIncreased");

	Params::BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased Parms{};

	Parms.AfterCapsuleNum = AfterCapsuleNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ROS_OnCapsuleIncreased
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AfterCapsuleNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::ROS_OnCapsuleIncreased(int32 AfterCapsuleNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ROS_OnCapsuleIncreased");

	Params::BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased Parms{};

	Parms.AfterCapsuleNum = AfterCapsuleNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnCapsuleIncreasedCore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AfterCapsuleNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnCapsuleIncreasedCore(int32 AfterCapsuleNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnCapsuleIncreasedCore");

	Params::BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore Parms{};

	Parms.AfterCapsuleNum = AfterCapsuleNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnCapsuleIncreased
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnCapsuleIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnCapsuleIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnStartSelfSpectatorReplicateProperties
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnStartSelfSpectatorReplicateProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnStartSelfSpectatorReplicateProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ROS_ReplicatePropertiesForUI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LeftCapsuleNum_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::ROS_ReplicatePropertiesForUI(int32 LeftCapsuleNum_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ROS_ReplicatePropertiesForUI");

	Params::BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI Parms{};

	Parms.LeftCapsuleNum_0 = LeftCapsuleNum_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReplicatePropertiesForUI
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::ReplicatePropertiesForUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ReplicatePropertiesForUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnPassiveRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              RemoveCondition                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              SecondTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnPassiveRemoved(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnPassiveRemoved");

	Params::BP_AJBInGameStand_PPH_C_OnPassiveRemoved Parms{};

	Parms.RemoveCondition = std::move(RemoveCondition);
	Parms.SecondTag = std::move(SecondTag);
	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.AddVirusTargetCharacterList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::AddVirusTargetCharacterList(class AAJBInGameCharacterBase* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "AddVirusTargetCharacterList");

	Params::BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList Parms{};

	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnReady
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnReturn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnLaunch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnLaunch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC");

	Params::BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC");

	Params::BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC");

	Params::BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC");

	Params::BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC");

	Params::BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReceiveTheWorld
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::ReceiveTheWorld(float Time, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ReceiveTheWorld");

	Params::BP_AJBInGameStand_PPH_C_ReceiveTheWorld Parms{};

	Parms.Time = Time;
	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ReceiveTick");

	Params::BP_AJBInGameStand_PPH_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.PlayAppearMontage
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::PlayAppearMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "PlayAppearMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnRep_(ForSkipOwner)LeftCapsuleNum
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::OnRep__ForSkipOwner_LeftCapsuleNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "OnRep_(ForSkipOwner)LeftCapsuleNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.IncreaseCapsule
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IncreaseNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::IncreaseCapsule(int32 IncreaseNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "IncreaseCapsule");

	Params::BP_AJBInGameStand_PPH_C_IncreaseCapsule Parms{};

	Parms.IncreaseNum = IncreaseNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.DecreaseCapsule
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DecreaseNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::DecreaseCapsule(int32 DecreaseNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "DecreaseCapsule");

	Params::BP_AJBInGameStand_PPH_C_DecreaseCapsule Parms{};

	Parms.DecreaseNum = DecreaseNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.UpdateCapsuleTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::UpdateCapsuleTime(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "UpdateCapsuleTime");

	Params::BP_AJBInGameStand_PPH_C_UpdateCapsuleTime Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ResetCapsuleTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::ResetCapsuleTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ResetCapsuleTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ChangeEnableCapsuleTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::ChangeEnableCapsuleTime(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ChangeEnableCapsuleTime");

	Params::BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.PossibleDecreaseCapsule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DecreaseNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bPossibleDecrease                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::PossibleDecreaseCapsule(int32 DecreaseNum, bool* bPossibleDecrease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "PossibleDecreaseCapsule");

	Params::BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule Parms{};

	Parms.DecreaseNum = DecreaseNum;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleDecrease != nullptr)
		*bPossibleDecrease = Parms.bPossibleDecrease;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ShouldUpdateCapsuleTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bShouldUpdate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::ShouldUpdateCapsuleTime(bool* bShouldUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ShouldUpdateCapsuleTime");

	Params::BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldUpdate != nullptr)
		*bShouldUpdate = Parms.bShouldUpdate;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckCapsuleFull
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCapsuleFull                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::CheckCapsuleFull(bool* bCapsuleFull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "CheckCapsuleFull");

	Params::BP_AJBInGameStand_PPH_C_CheckCapsuleFull Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCapsuleFull != nullptr)
		*bCapsuleFull = Parms.bCapsuleFull;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckCapsuleEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCapsuleEmpty                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::CheckCapsuleEmpty(bool* bCapsuleEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "CheckCapsuleEmpty");

	Params::BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCapsuleEmpty != nullptr)
		*bCapsuleEmpty = Parms.bCapsuleEmpty;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.InitializeCapsule
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::InitializeCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "InitializeCapsule");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CalcCapsuleInterval
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  CapsuleInterval                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::CalcCapsuleInterval(float* CapsuleInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "CalcCapsuleInterval");

	Params::BP_AJBInGameStand_PPH_C_CalcCapsuleInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CapsuleInterval != nullptr)
		*CapsuleInterval = Parms.CapsuleInterval;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.IncreaseCapsuleFull
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::IncreaseCapsuleFull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "IncreaseCapsuleFull");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ChangeEnableShouldUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreActiveCheck                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::ChangeEnableShouldUpdate(class ABP_AJBInGameCharacter_C* CharacterBP, bool bEnable, bool bIgnoreActiveCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ChangeEnableShouldUpdate");

	Params::BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate Parms{};

	Parms.CharacterBP = CharacterBP;
	Parms.bEnable = bEnable;
	Parms.bIgnoreActiveCheck = bIgnoreActiveCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.RemoveVirusInfections
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::RemoveVirusInfections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "RemoveVirusInfections");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetStandAttackOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         StandAttackOffset                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetStandAttackOffset(int32 CloseRangeSkillNo, struct FVector* StandAttackOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetStandAttackOffset");

	Params::BP_AJBInGameStand_PPH_C_GetStandAttackOffset Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (StandAttackOffset != nullptr)
		*StandAttackOffset = std::move(Parms.StandAttackOffset);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  AttackRange                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetAttackRange(int32 CloseRangeSkillNo, float* AttackRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetAttackRange");

	Params::BP_AJBInGameStand_PPH_C_GetAttackRange Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (AttackRange != nullptr)
		*AttackRange = Parms.AttackRange;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackCollisionRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetAttackCollisionRadius(int32 CloseRangeSkillNo, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetAttackCollisionRadius");

	Params::BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetAttackLocation(const struct FVector& TargetLocation, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetAttackLocation");

	Params::BP_AJBInGameStand_PPH_C_GetAttackLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetLaunchedActorHomeLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetLaunchedActorHomeLocation(int32 CloseRangeSkillNo, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetLaunchedActorHomeLocation");

	Params::BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetCloseRangeLaunchedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          LaunchedActor                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetCloseRangeLaunchedActor(int32 CloseRangeSkillNo, class AActor** LaunchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetCloseRangeLaunchedActor");

	Params::BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (LaunchedActor != nullptr)
		*LaunchedActor = Parms.LaunchedActor;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetDamageActorTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetDamageActorTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetDamageActorTargetLocation");

	Params::BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetDummyShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetDummyShotLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetDummyShotLocation");

	Params::BP_AJBInGameStand_PPH_C_GetDummyShotLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ShouldShowNGPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::ShouldShowNGPoint(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "ShouldShowNGPoint");

	Params::BP_AJBInGameStand_PPH_C_ShouldShowNGPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetShutTraceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_PPH_C::GetShutTraceRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetShutTraceRadius");

	Params::BP_AJBInGameStand_PPH_C_GetShutTraceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConsiderCharacterCapsuleRadius                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTag&              SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 Locations                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameStand_PPH_C::GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "GetShotLocation");

	Params::BP_AJBInGameStand_PPH_C_GetShotLocation Parms{};

	Parms.bConsiderCharacterCapsuleRadius = bConsiderCharacterCapsuleRadius;
	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bLocallyControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::CheckLocallyControlled(bool* bLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "CheckLocallyControlled");

	Params::BP_AJBInGameStand_PPH_C_CheckLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocallyControlled != nullptr)
		*bLocallyControlled = Parms.bLocallyControlled;
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_PPH_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.IsContinuousAccompany
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Param_IsContinuousAccompany_0                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_PPH_C::IsContinuousAccompany(bool* Param_IsContinuousAccompany_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_PPH_C", "IsContinuousAccompany");

	Params::BP_AJBInGameStand_PPH_C_IsContinuousAccompany Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsContinuousAccompany_0 != nullptr)
		*Param_IsContinuousAccompany_0 = Parms.Param_IsContinuousAccompany_0;
}

}


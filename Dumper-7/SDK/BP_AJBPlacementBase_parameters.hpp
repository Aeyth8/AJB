#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPlacementBase

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.ExecuteUbergraph_BP_AJBPlacementBase
// 0x0170 (0x0170 - 0x0000)
struct BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds4;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds5;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue1;                    // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue3;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue4;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveState_bActiveState;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWillRessurect;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsLastDefeated;                // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDiedOfKillZ;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue5;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameGameState_bIsValid;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameGameState*                    CallFunc_GetAJBInGameGameState_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_TheWorldInterface_C> CallFunc_NotifyTheWorld_self_CastInput;          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bBitesTheDust;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bWillRessurect, bool bIsLastDefeated, bool bDiedOfKillZ)> K2Node_CreateDelegate_OutputDelegate; // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue6;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bBitesTheDust)>           K2Node_CreateDelegate_OutputDelegate1;             // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue7;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue8;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue9;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_AddCondition;                   // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SecondTag;                      // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FGameplayTag& AddCondition, const struct FGameplayTag& SecondTag)> K2Node_CreateDelegate_OutputDelegate3; // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase) == 0x000008, "Wrong alignment on BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase");
static_assert(sizeof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase) == 0x000170, "Wrong size on BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, EntryPoint) == 0x000000, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds) == 0x000028, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds1) == 0x00002C, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds2) == 0x000030, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds3) == 0x000034, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds4) == 0x000038, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_DeltaSeconds5) == 0x000040, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_DeltaSeconds5' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue) == 0x000048, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, Temp_float_Variable) == 0x00004C, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000051, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000052, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000054, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_Operator) == 0x000058, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_Time) == 0x000060, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_Timing) == 0x000064, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_bEnable) == 0x000065, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_bOperatorIsEmpty) == 0x000066, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue1) == 0x000067, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_BooleanAND_ReturnValue1) == 0x000068, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, Temp_float_Variable1) == 0x00006C, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue2) == 0x000070, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000080, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000088, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x000091, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsValid_ReturnValue) == 0x000092, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue3) == 0x000093, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue4) == 0x000094, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_CheckActiveState_bActiveState) == 0x000095, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_CheckActiveState_bActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_bWillRessurect) == 0x000096, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_bWillRessurect' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_bIsLastDefeated) == 0x000097, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_bDiedOfKillZ) == 0x000098, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_bDiedOfKillZ' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue5) == 0x000099, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GetAJBInGameGameState_bIsValid) == 0x00009A, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GetAJBInGameGameState_bIsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GetAJBInGameGameState_ReturnValue) == 0x0000A0, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GetAJBInGameGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x0000A8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_bSuccess1) == 0x0000B0, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_NotifyTheWorld_self_CastInput) == 0x0000B8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_NotifyTheWorld_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, Temp_bool_Variable) == 0x0000C8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GetOwner_ReturnValue1) == 0x0000D0, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0000D8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_Select_Default) == 0x0000E4, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000E8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_bBitesTheDust) == 0x0000E9, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_bBitesTheDust' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_GetOwner_ReturnValue2) == 0x0000F0, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000F8, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_DynamicCast_bSuccess3) == 0x000100, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue6) == 0x000118, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CreateDelegate_OutputDelegate1) == 0x000120, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue7) == 0x000130, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue8) == 0x000131, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_IsServer_ReturnValue9) == 0x000132, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_IsServer_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_AddCondition) == 0x000138, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CustomEvent_SecondTag) == 0x000140, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CustomEvent_SecondTag' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, CallFunc_MatchesAnyTags_ReturnValue) == 0x000148, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CreateDelegate_OutputDelegate2) == 0x000150, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase, K2Node_CreateDelegate_OutputDelegate3) == 0x000160, "Member 'BP_AJBPlacementBase_C_ExecuteUbergraph_BP_AJBPlacementBase::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.OnPassiveAdded
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPlacementBase_C_OnPassiveAdded final
{
public:
	struct FGameplayTag                           AddCondition;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SecondTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_OnPassiveAdded) == 0x000008, "Wrong alignment on BP_AJBPlacementBase_C_OnPassiveAdded");
static_assert(sizeof(BP_AJBPlacementBase_C_OnPassiveAdded) == 0x000010, "Wrong size on BP_AJBPlacementBase_C_OnPassiveAdded");
static_assert(offsetof(BP_AJBPlacementBase_C_OnPassiveAdded, AddCondition) == 0x000000, "Member 'BP_AJBPlacementBase_C_OnPassiveAdded::AddCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_OnPassiveAdded, SecondTag) == 0x000008, "Member 'BP_AJBPlacementBase_C_OnPassiveAdded::SecondTag' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.OnBecomeLastSurvivor
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPlacementBase_C_OnBecomeLastSurvivor final
{
public:
	bool                                          bBitesTheDust;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_OnBecomeLastSurvivor) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_OnBecomeLastSurvivor");
static_assert(sizeof(BP_AJBPlacementBase_C_OnBecomeLastSurvivor) == 0x000001, "Wrong size on BP_AJBPlacementBase_C_OnBecomeLastSurvivor");
static_assert(offsetof(BP_AJBPlacementBase_C_OnBecomeLastSurvivor, bBitesTheDust) == 0x000000, "Member 'BP_AJBPlacementBase_C_OnBecomeLastSurvivor::bBitesTheDust' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.OnDie_Local
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBPlacementBase_C_OnDie_Local final
{
public:
	bool                                          bWillRessurect;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLastDefeated;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDiedOfKillZ;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_OnDie_Local) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_OnDie_Local");
static_assert(sizeof(BP_AJBPlacementBase_C_OnDie_Local) == 0x000003, "Wrong size on BP_AJBPlacementBase_C_OnDie_Local");
static_assert(offsetof(BP_AJBPlacementBase_C_OnDie_Local, bWillRessurect) == 0x000000, "Member 'BP_AJBPlacementBase_C_OnDie_Local::bWillRessurect' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_OnDie_Local, bIsLastDefeated) == 0x000001, "Member 'BP_AJBPlacementBase_C_OnDie_Local::bIsLastDefeated' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_OnDie_Local, bDiedOfKillZ) == 0x000002, "Member 'BP_AJBPlacementBase_C_OnDie_Local::bDiedOfKillZ' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_ReceiveTick");
static_assert(sizeof(BP_AJBPlacementBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_ReceiveTick");
static_assert(offsetof(BP_AJBPlacementBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick_Clearing
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick_Clearing final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick_Clearing) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick_Clearing");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick_Clearing) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick_Clearing");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick_Clearing, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick_Clearing::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick_Triggering
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick_Triggering final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick_Triggering) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick_Triggering");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick_Triggering) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick_Triggering");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick_Triggering, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick_Triggering::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick_Standby
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick_Standby final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick_Standby) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick_Standby");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick_Standby) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick_Standby");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick_Standby, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick_Standby::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick_Prepare
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick_Prepare final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick_Prepare) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick_Prepare");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick_Prepare) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick_Prepare");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick_Prepare, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick_Prepare::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick_None
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick_None final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick_None) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick_None");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick_None) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick_None");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick_None, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick_None::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.StateTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_StateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPlacementBase_C_StateTick) == 0x000004, "Wrong alignment on BP_AJBPlacementBase_C_StateTick");
static_assert(sizeof(BP_AJBPlacementBase_C_StateTick) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_StateTick");
static_assert(offsetof(BP_AJBPlacementBase_C_StateTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBPlacementBase_C_StateTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPlacementBase_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBPlacementBase_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBPlacementBase_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBPlacementBase_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBPlacementBase_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBPlacementBase_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBPlacementBase_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBPlacementBase_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBPlacementBase_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBPlacementBase_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.ChangeState_Server
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBPlacementBase_C_ChangeState_Server final
{
public:
	EPlacementState                               NextState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_ChangeState_Server) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_ChangeState_Server");
static_assert(sizeof(BP_AJBPlacementBase_C_ChangeState_Server) == 0x000002, "Wrong size on BP_AJBPlacementBase_C_ChangeState_Server");
static_assert(offsetof(BP_AJBPlacementBase_C_ChangeState_Server, NextState) == 0x000000, "Member 'BP_AJBPlacementBase_C_ChangeState_Server::NextState' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_ChangeState_Server, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'BP_AJBPlacementBase_C_ChangeState_Server::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.CheckValidateState
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBPlacementBase_C_CheckValidateState final
{
public:
	bool                                          bValidateState;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_CheckValidateState) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_CheckValidateState");
static_assert(sizeof(BP_AJBPlacementBase_C_CheckValidateState) == 0x000004, "Wrong size on BP_AJBPlacementBase_C_CheckValidateState");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckValidateState, bValidateState) == 0x000000, "Member 'BP_AJBPlacementBase_C_CheckValidateState::bValidateState' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckValidateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBPlacementBase_C_CheckValidateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckValidateState, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BP_AJBPlacementBase_C_CheckValidateState::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckValidateState, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_AJBPlacementBase_C_CheckValidateState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.CheckState
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBPlacementBase_C_CheckState final
{
public:
	EPlacementState                               State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatch;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_CheckState) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_CheckState");
static_assert(sizeof(BP_AJBPlacementBase_C_CheckState) == 0x000003, "Wrong size on BP_AJBPlacementBase_C_CheckState");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckState, State) == 0x000000, "Member 'BP_AJBPlacementBase_C_CheckState::State' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckState, bMatch) == 0x000001, "Member 'BP_AJBPlacementBase_C_CheckState::bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_AJBPlacementBase_C_CheckState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.CheckActiveState
// 0x0006 (0x0006 - 0x0000)
struct BP_AJBPlacementBase_C_CheckActiveState final
{
public:
	bool                                          bActiveState;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_CheckActiveState) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_CheckActiveState");
static_assert(sizeof(BP_AJBPlacementBase_C_CheckActiveState) == 0x000006, "Wrong size on BP_AJBPlacementBase_C_CheckActiveState");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, bActiveState) == 0x000000, "Member 'BP_AJBPlacementBase_C_CheckActiveState::bActiveState' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBPlacementBase_C_CheckActiveState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'BP_AJBPlacementBase_C_CheckActiveState::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000003, "Member 'BP_AJBPlacementBase_C_CheckActiveState::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_AJBPlacementBase_C_CheckActiveState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPlacementBase_C_CheckActiveState, CallFunc_BooleanOR_ReturnValue1) == 0x000005, "Member 'BP_AJBPlacementBase_C_CheckActiveState::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function BP_AJBPlacementBase.BP_AJBPlacementBase_C.OnRep_PlacementState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPlacementBase_C_OnRep_PlacementState final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPlacementBase_C_OnRep_PlacementState) == 0x000001, "Wrong alignment on BP_AJBPlacementBase_C_OnRep_PlacementState");
static_assert(sizeof(BP_AJBPlacementBase_C_OnRep_PlacementState) == 0x000001, "Wrong size on BP_AJBPlacementBase_C_OnRep_PlacementState");
static_assert(offsetof(BP_AJBPlacementBase_C_OnRep_PlacementState, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_AJBPlacementBase_C_OnRep_PlacementState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_AJBFocusingEnemyNotChanged

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTD_AJBFocusingEnemyNotChanged.BTD_AJBFocusingEnemyNotChanged_C.ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged
// 0x0060 (0x0060 - 0x0000)
struct BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatParam_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatParam_Found;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 K2Node_Event_NodeResult;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged) == 0x000008, "Wrong alignment on BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged");
static_assert(sizeof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged) == 0x000060, "Wrong size on BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, EntryPoint) == 0x000000, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_Event_OwnerController1) == 0x000008, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_Event_ControlledPawn1) == 0x000010, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, CallFunc_GetBlackboardKeyName_ReturnValue) == 0x000018, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::CallFunc_GetBlackboardKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, CallFunc_GetRecognition_ReturnValue) == 0x000020, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character) == 0x000030, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, CallFunc_GetFloatParam_ReturnValue) == 0x00003C, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::CallFunc_GetFloatParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, CallFunc_GetFloatParam_Found) == 0x000040, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::CallFunc_GetFloatParam_Found' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_Event_OwnerController) == 0x000048, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_Event_ControlledPawn) == 0x000050, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged, K2Node_Event_NodeResult) == 0x000058, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ExecuteUbergraph_BTD_AJBFocusingEnemyNotChanged::K2Node_Event_NodeResult' has a wrong offset!");

// Function BTD_AJBFocusingEnemyNotChanged.BTD_AJBFocusingEnemyNotChanged_C.ReceiveExecutionFinishAI
// 0x0018 (0x0018 - 0x0000)
struct BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 NodeResult;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI) == 0x000008, "Wrong alignment on BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI");
static_assert(sizeof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI) == 0x000018, "Wrong size on BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI, OwnerController) == 0x000000, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI, ControlledPawn) == 0x000008, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI, NodeResult) == 0x000010, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionFinishAI::NodeResult' has a wrong offset!");

// Function BTD_AJBFocusingEnemyNotChanged.BTD_AJBFocusingEnemyNotChanged_C.ReceiveExecutionStartAI
// 0x0010 (0x0010 - 0x0000)
struct BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI) == 0x000008, "Wrong alignment on BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI");
static_assert(sizeof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI) == 0x000010, "Wrong size on BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI, OwnerController) == 0x000000, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI, ControlledPawn) == 0x000008, "Member 'BTD_AJBFocusingEnemyNotChanged_C_ReceiveExecutionStartAI::ControlledPawn' has a wrong offset!");

// Function BTD_AJBFocusingEnemyNotChanged.BTD_AJBFocusingEnemyNotChanged_C.PerformConditionCheckAI
// 0x0040 (0x0040 - 0x0000)
struct BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNPC_bIsNPC;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI) == 0x000040, "Wrong size on BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_GetBlackboardKeyName_ReturnValue) == 0x000020, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_GetBlackboardKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character) == 0x000030, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000039, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_IsNPC_bIsNPC) == 0x00003A, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_IsNPC_bIsNPC' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BTD_AJBFocusingEnemyNotChanged_C_PerformConditionCheckAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


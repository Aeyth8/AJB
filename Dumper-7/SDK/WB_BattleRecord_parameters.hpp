#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BattleRecord

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_BattleRecord.WB_BattleRecord_C.ExecuteUbergraph_WB_BattleRecord
// 0x02B0 (0x02B0 - 0x0000)
struct WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerWatching_C*                   CallFunc_FindAJBWidgetOfClass_OutWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BattleRecord_Detail_Good_C*         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BattleRecord_Detail_Good_C*         CallFunc_Array_Get_Item1;                          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PairAlertConfirm_C*                 CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget1;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton1;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButtonWidget*                       K2Node_ComponentBoundEvent_OwnerWidget;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             K2Node_ComponentBoundEvent_TargetButton;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess1;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess2;             // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess3;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess4;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAJBConfirmResult Result)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess5;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameDataStorageManager_bIsValid;  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBGameDataStorageManager*             CallFunc_GetAJBInGameDataStorageManager_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStorageValueAsInt_OutValue;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStorageValueAsInt_ReturnValue;         // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAJBBattleResultGood_LivingTime_bReturnValue; // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167[0x1];                                      // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStorageValueAsString_OutValue;         // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStorageValueAsString_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStorageValueAsInt_OutValue1;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStorageValueAsInt_ReturnValue1;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0188(0x0018)()
	bool                                          CallFunc_IsAJBBattleResultGood_GivedDamage_bReturnValue; // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01A8(0x0018)()
	int32                                         CallFunc_GetStorageValueAsInt_OutValue2;           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStorageValueAsInt_ReturnValue2;        // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAJBBattleResultGood_Skill_bReturnValue; // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C6[0x2];                                      // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x01C8(0x0018)()
	int32                                         CallFunc_GetStorageValueAsInt_OutValue3;           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStorageValueAsInt_ReturnValue3;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAJBBattleResultGood_Kill_bReturnValue;  // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x01E8(0x0018)()
	bool                                          CallFunc_CanPlayerWatching_bCan;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBConfirmResult                             K2Node_CustomEvent_Result;                         // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess;  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BattleGameRank;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BattleGameRankWithoutCPU;       // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlivePiarCharacter_bActive;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_BattleRecord_Detail_Good_C*> K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BattleRecord_Detail_Good_C*         CallFunc_Array_Get_Item2;                          // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAJBBattleResultGood_Rank_bReturnValue;  // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAJBBattleResultVeryGood_Rank_bReturnValue; // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_267[0x1];                                      // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0268(0x001C)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 BattleGameRank, int32 BattleGameRankWithoutCPU)> K2Node_CreateDelegate_OutputDelegate2; // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord) == 0x000008, "Wrong alignment on WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord");
static_assert(sizeof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord) == 0x0002B0, "Wrong size on WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, EntryPoint) == 0x000000, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000004, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000008, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_FindAJBWidgetOfClass_OutWidget) == 0x000010, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_FindAJBWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Variable) == 0x00001C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Length_ReturnValue1) == 0x000038, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Add_IntInt_ReturnValue1) == 0x000044, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Array_Index_Variable1) == 0x00004C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Get_Item1) == 0x000058, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Create_ReturnValue) == 0x000068, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_ComponentBoundEvent_OwnerWidget1) == 0x000070, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_ComponentBoundEvent_OwnerWidget1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_ComponentBoundEvent_TargetButton1) == 0x000078, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_ComponentBoundEvent_TargetButton1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_ComponentBoundEvent_OwnerWidget) == 0x000080, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_ComponentBoundEvent_OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_ComponentBoundEvent_TargetButton) == 0x000088, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_ComponentBoundEvent_TargetButton' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000098, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Loop_Counter_Variable1) == 0x0000A4, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess1) == 0x0000A8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1) == 0x0000B0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000B8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess2) == 0x0000BD, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2) == 0x0000C0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess3) == 0x0000C8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess3' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3) == 0x0000D0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD3' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_Event_MyGeometry) == 0x0000D8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_Event_InDeltaTime) == 0x000110, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000114, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess4) == 0x000118, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess4' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4) == 0x000120, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD4' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_FMax_ReturnValue) == 0x000128, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00012C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CreateDelegate_OutputDelegate) == 0x000130, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_bSuccess5) == 0x000140, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_bSuccess5' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5) == 0x000148, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD5' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameDataStorageManager_bIsValid) == 0x000150, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameDataStorageManager_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGameDataStorageManager_ReturnValue) == 0x000158, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGameDataStorageManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_OutValue) == 0x000160, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_OutValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_ReturnValue) == 0x000164, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsValid_ReturnValue1) == 0x000165, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultGood_LivingTime_bReturnValue) == 0x000166, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultGood_LivingTime_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsString_OutValue) == 0x000168, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsString_OutValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsString_ReturnValue) == 0x000178, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_OutValue1) == 0x00017C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_OutValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_ReturnValue1) == 0x000180, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Conv_StringToText_ReturnValue) == 0x000188, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultGood_GivedDamage_bReturnValue) == 0x0001A0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultGood_GivedDamage_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Conv_IntToText_ReturnValue) == 0x0001A8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_OutValue2) == 0x0001C0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_OutValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_ReturnValue2) == 0x0001C4, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultGood_Skill_bReturnValue) == 0x0001C5, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultGood_Skill_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Conv_IntToText_ReturnValue1) == 0x0001C8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_OutValue3) == 0x0001E0, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_OutValue3' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetStorageValueAsInt_ReturnValue3) == 0x0001E4, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetStorageValueAsInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultGood_Kill_bReturnValue) == 0x0001E5, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultGood_Kill_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Conv_IntToText_ReturnValue2) == 0x0001E8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_CanPlayerWatching_bCan) == 0x000200, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_CanPlayerWatching_bCan' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CustomEvent_Result) == 0x000201, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_SwitchEnum_CmpSuccess) == 0x000202, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CreateDelegate_OutputDelegate1) == 0x000208, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess) == 0x000218, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP) == 0x000220, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CustomEvent_BattleGameRank) == 0x000228, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CustomEvent_BattleGameRank' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CustomEvent_BattleGameRankWithoutCPU) == 0x00022C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CustomEvent_BattleGameRankWithoutCPU' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAlivePiarCharacter_bActive) == 0x000230, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAlivePiarCharacter_bActive' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_MakeArray_Array) == 0x000238, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Add_IntInt_ReturnValue2) == 0x000248, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, Temp_int_Variable1) == 0x00024C, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000250, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_RemoveItem_ReturnValue) == 0x000251, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Get_Item2) == 0x000258, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Array_Length_ReturnValue2) == 0x000260, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_Less_IntInt_ReturnValue1) == 0x000264, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultGood_Rank_bReturnValue) == 0x000265, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultGood_Rank_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsAJBBattleResultVeryGood_Rank_bReturnValue) == 0x000266, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsAJBBattleResultVeryGood_Rank_bReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_MakeStruct_WidgetTransform) == 0x000268, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000284, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000288, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x000290, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, K2Node_CreateDelegate_OutputDelegate2) == 0x000298, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord, CallFunc_IsValid_ReturnValue2) == 0x0002A8, "Member 'WB_BattleRecord_C_ExecuteUbergraph_WB_BattleRecord::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnDeterminRank
// 0x0008 (0x0008 - 0x0000)
struct WB_BattleRecord_C_OnDeterminRank final
{
public:
	int32                                         BattleGameRank;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BattleGameRankWithoutCPU;                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_OnDeterminRank) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnDeterminRank");
static_assert(sizeof(WB_BattleRecord_C_OnDeterminRank) == 0x000008, "Wrong size on WB_BattleRecord_C_OnDeterminRank");
static_assert(offsetof(WB_BattleRecord_C_OnDeterminRank, BattleGameRank) == 0x000000, "Member 'WB_BattleRecord_C_OnDeterminRank::BattleGameRank' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnDeterminRank, BattleGameRankWithoutCPU) == 0x000004, "Member 'WB_BattleRecord_C_OnDeterminRank::BattleGameRankWithoutCPU' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnFinishedConfirm
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnFinishedConfirm final
{
public:
	EAJBConfirmResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_OnFinishedConfirm) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnFinishedConfirm");
static_assert(sizeof(WB_BattleRecord_C_OnFinishedConfirm) == 0x000001, "Wrong size on WB_BattleRecord_C_OnFinishedConfirm");
static_assert(offsetof(WB_BattleRecord_C_OnFinishedConfirm, Result) == 0x000000, "Member 'WB_BattleRecord_C_OnFinishedConfirm::Result' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_BattleRecord_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_Tick) == 0x000004, "Wrong alignment on WB_BattleRecord_C_Tick");
static_assert(sizeof(WB_BattleRecord_C_Tick) == 0x00003C, "Wrong size on WB_BattleRecord_C_Tick");
static_assert(offsetof(WB_BattleRecord_C_Tick, MyGeometry) == 0x000000, "Member 'WB_BattleRecord_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_BattleRecord_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_BattleRecord_C_BndEvt__GameEndButton_K2Node_ComponentBoundEvent_55_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature final
{
public:
	class UAJBButtonWidget*                       OwnerWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             TargetButton;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature");
static_assert(sizeof(WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature) == 0x000010, "Wrong size on WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature");
static_assert(offsetof(WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature, OwnerWidget) == 0x000000, "Member 'WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature::OwnerWidget' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature, TargetButton) == 0x000008, "Member 'WB_BattleRecord_C_BndEvt__RetireButton_K2Node_ComponentBoundEvent_46_OnAJBButtonEvent__DelegateSignature::TargetButton' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.CanPlayerWatching
// 0x0020 (0x0020 - 0x0000)
struct WB_BattleRecord_C_CanPlayerWatching final
{
public:
	bool                                          bCan;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishedBattleGame_bFinished;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_CanPlayerWatching) == 0x000008, "Wrong alignment on WB_BattleRecord_C_CanPlayerWatching");
static_assert(sizeof(WB_BattleRecord_C_CanPlayerWatching) == 0x000020, "Wrong size on WB_BattleRecord_C_CanPlayerWatching");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, bCan) == 0x000000, "Member 'WB_BattleRecord_C_CanPlayerWatching::bCan' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_PlayModeEquals_bResult) == 0x000001, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000010, "Member 'WB_BattleRecord_C_CanPlayerWatching::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_BattleRecord_C_CanPlayerWatching::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_IsFinishedBattleGame_bFinished) == 0x000019, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_IsFinishedBattleGame_bFinished' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_CanPlayerWatching, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'WB_BattleRecord_C_CanPlayerWatching::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.IsAlivePiarCharacter
// 0x0058 (0x0058 - 0x0000)
struct WB_BattleRecord_C_IsAlivePiarCharacter final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBControlledInGameCharacter_bIsValid; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    CallFunc_GetAJBControlledInGameCharacter_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBinGameDeathCamera_C*             K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterBehaviorMatches_ReturnValue1;    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_IsAlivePiarCharacter) == 0x000008, "Wrong alignment on WB_BattleRecord_C_IsAlivePiarCharacter");
static_assert(sizeof(WB_BattleRecord_C_IsAlivePiarCharacter) == 0x000058, "Wrong size on WB_BattleRecord_C_IsAlivePiarCharacter");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, bActive) == 0x000000, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::bActive' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_PlayModeIsPair_ReturnValue) == 0x000001, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_GetAJBControlledInGameCharacter_bIsValid) == 0x000010, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_GetAJBControlledInGameCharacter_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_GetAJBControlledInGameCharacter_ReturnValue) == 0x000018, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_GetAJBControlledInGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera) == 0x000028, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_AsBP_AJBin_Game_Death_Camera' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_IsValid_ReturnValue1) == 0x000032, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_IsValid_ReturnValue2) == 0x000033, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000048, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue) == 0x000051, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_IsAlivePiarCharacter, CallFunc_CharacterBehaviorMatches_ReturnValue1) == 0x000052, "Member 'WB_BattleRecord_C_IsAlivePiarCharacter::CallFunc_CharacterBehaviorMatches_ReturnValue1' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.ChangeGameEndButtonDisplay
// 0x0040 (0x0040 - 0x0000)
struct WB_BattleRecord_C_ChangeGameEndButtonDisplay final
{
public:
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsShopCompetition_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButton*                             CallFunc_GetButton_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue1;                   // 0x0024(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAJBButton*                             CallFunc_GetButton_ReturnValue1;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_ChangeGameEndButtonDisplay) == 0x000008, "Wrong alignment on WB_BattleRecord_C_ChangeGameEndButtonDisplay");
static_assert(sizeof(WB_BattleRecord_C_ChangeGameEndButtonDisplay) == 0x000040, "Wrong size on WB_BattleRecord_C_ChangeGameEndButtonDisplay");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_PlayModeEquals_bResult) == 0x000000, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_PlayModeIsShopCompetition_ReturnValue) == 0x000001, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_PlayModeIsShopCompetition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_MakeColor_ReturnValue) == 0x000004, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_GetButton_ReturnValue) == 0x000018, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_GetButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_PlayModeEquals_bResult1) == 0x000020, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_MakeColor_ReturnValue1) == 0x000024, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_MakeColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_BooleanOR_ReturnValue1) == 0x000035, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeGameEndButtonDisplay, CallFunc_GetButton_ReturnValue1) == 0x000038, "Member 'WB_BattleRecord_C_ChangeGameEndButtonDisplay::CallFunc_GetButton_ReturnValue1' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.ChangeWatchingPlayerButtonDisplay
// 0x0038 (0x0038 - 0x0000)
struct WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay final
{
public:
	class UAJBButton*                             CallFunc_GetButton_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAJBButton*                             CallFunc_GetButton_ReturnValue1;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerWatching_bCan;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0014(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue1;                   // 0x0024(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay) == 0x000008, "Wrong alignment on WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay");
static_assert(sizeof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay) == 0x000038, "Wrong size on WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay");
static_assert(offsetof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay, CallFunc_GetButton_ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay::CallFunc_GetButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay, CallFunc_GetButton_ReturnValue1) == 0x000008, "Member 'WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay::CallFunc_GetButton_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay, CallFunc_CanPlayerWatching_bCan) == 0x000010, "Member 'WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay::CallFunc_CanPlayerWatching_bCan' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay, CallFunc_MakeColor_ReturnValue) == 0x000014, "Member 'WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay, CallFunc_MakeColor_ReturnValue1) == 0x000024, "Member 'WB_BattleRecord_C_ChangeWatchingPlayerButtonDisplay::CallFunc_MakeColor_ReturnValue1' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedUp) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedUp");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedUp) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedUp");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedUp, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedUp::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedRight) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedRight");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedRight) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedRight");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedRight, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedRight::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedLeft) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedLeft");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedLeft) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedLeft");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedLeft, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedLeft::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedDown) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedDown");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedDown) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedDown");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedDown, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedDown::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedDecide) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedDecide");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedDecide) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedDecide");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedDecide, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedDecide::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedCancel) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedCancel");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedCancel) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedCancel");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedCancel, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedCancel::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedUp
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedUp) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedUp");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedUp) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedUp");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedUp, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedUp::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedRight
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedRight) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedRight");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedRight) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedRight");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedRight, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedRight::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedLeft
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedLeft) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedLeft");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedLeft) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedLeft");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedLeft, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedLeft::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedDown
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedDown) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedDown");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedDown) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedDown");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedDown, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedDown::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedDecide
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedDecide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedDecide) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedDecide");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedDecide) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedDecide");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedDecide, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedDecide::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedCancel
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedCancel) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedCancel");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedCancel) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedCancel");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedCancel, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedCancel::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.IsModeless
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_IsModeless final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_IsModeless) == 0x000001, "Wrong alignment on WB_BattleRecord_C_IsModeless");
static_assert(sizeof(WB_BattleRecord_C_IsModeless) == 0x000001, "Wrong size on WB_BattleRecord_C_IsModeless");
static_assert(offsetof(WB_BattleRecord_C_IsModeless, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_IsModeless::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputTurnRate
// 0x0008 (0x0008 - 0x0000)
struct WB_BattleRecord_C_OnInputTurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputTurnRate) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnInputTurnRate");
static_assert(sizeof(WB_BattleRecord_C_OnInputTurnRate) == 0x000008, "Wrong size on WB_BattleRecord_C_OnInputTurnRate");
static_assert(offsetof(WB_BattleRecord_C_OnInputTurnRate, Value) == 0x000000, "Member 'WB_BattleRecord_C_OnInputTurnRate::Value' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputTurnRate, ReturnValue) == 0x000004, "Member 'WB_BattleRecord_C_OnInputTurnRate::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputMoveRight
// 0x0008 (0x0008 - 0x0000)
struct WB_BattleRecord_C_OnInputMoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputMoveRight) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnInputMoveRight");
static_assert(sizeof(WB_BattleRecord_C_OnInputMoveRight) == 0x000008, "Wrong size on WB_BattleRecord_C_OnInputMoveRight");
static_assert(offsetof(WB_BattleRecord_C_OnInputMoveRight, Value) == 0x000000, "Member 'WB_BattleRecord_C_OnInputMoveRight::Value' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputMoveRight, ReturnValue) == 0x000004, "Member 'WB_BattleRecord_C_OnInputMoveRight::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputMoveForward
// 0x0008 (0x0008 - 0x0000)
struct WB_BattleRecord_C_OnInputMoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputMoveForward) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnInputMoveForward");
static_assert(sizeof(WB_BattleRecord_C_OnInputMoveForward) == 0x000008, "Wrong size on WB_BattleRecord_C_OnInputMoveForward");
static_assert(offsetof(WB_BattleRecord_C_OnInputMoveForward, Value) == 0x000000, "Member 'WB_BattleRecord_C_OnInputMoveForward::Value' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputMoveForward, ReturnValue) == 0x000004, "Member 'WB_BattleRecord_C_OnInputMoveForward::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputLookupRate
// 0x0008 (0x0008 - 0x0000)
struct WB_BattleRecord_C_OnInputLookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputLookupRate) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnInputLookupRate");
static_assert(sizeof(WB_BattleRecord_C_OnInputLookupRate) == 0x000008, "Wrong size on WB_BattleRecord_C_OnInputLookupRate");
static_assert(offsetof(WB_BattleRecord_C_OnInputLookupRate, Value) == 0x000000, "Member 'WB_BattleRecord_C_OnInputLookupRate::Value' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputLookupRate, ReturnValue) == 0x000004, "Member 'WB_BattleRecord_C_OnInputLookupRate::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedTouch
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedTouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedTouch) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedTouch");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedTouch) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedTouch");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedTouch, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedTouch::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedTouch
// 0x000C (0x000C - 0x0000)
struct WB_BattleRecord_C_OnInputPressedTouch final
{
public:
	float                                         LocationX;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationY;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedTouch) == 0x000004, "Wrong alignment on WB_BattleRecord_C_OnInputPressedTouch");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedTouch) == 0x00000C, "Wrong size on WB_BattleRecord_C_OnInputPressedTouch");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedTouch, LocationX) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedTouch::LocationX' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedTouch, LocationY) == 0x000004, "Member 'WB_BattleRecord_C_OnInputPressedTouch::LocationY' has a wrong offset!");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedTouch, ReturnValue) == 0x000008, "Member 'WB_BattleRecord_C_OnInputPressedTouch::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedR2) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedR2");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedR2) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedR2");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedR2, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedR2::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedR1) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedR1");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedR1) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedR1");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedR1, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedR1::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedL2) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedL2");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedL2) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedL2");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedL2, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedL2::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedL1) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedL1");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedL1) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedL1");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedL1, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedL1::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedR2
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedR2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedR2) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedR2");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedR2) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedR2");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedR2, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedR2::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedR1
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedR1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedR1) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedR1");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedR1) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedR1");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedR1, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedR1::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedL2
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedL2 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedL2) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedL2");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedL2) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedL2");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedL2, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedL2::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedL1
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedL1 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedL1) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedL1");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedL1) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedL1");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedL1, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedL1::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputReleasedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputReleasedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputReleasedL3) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputReleasedL3");
static_assert(sizeof(WB_BattleRecord_C_OnInputReleasedL3) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputReleasedL3");
static_assert(offsetof(WB_BattleRecord_C_OnInputReleasedL3, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputReleasedL3::ReturnValue' has a wrong offset!");

// Function WB_BattleRecord.WB_BattleRecord_C.OnInputPressedL3
// 0x0001 (0x0001 - 0x0000)
struct WB_BattleRecord_C_OnInputPressedL3 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BattleRecord_C_OnInputPressedL3) == 0x000001, "Wrong alignment on WB_BattleRecord_C_OnInputPressedL3");
static_assert(sizeof(WB_BattleRecord_C_OnInputPressedL3) == 0x000001, "Wrong size on WB_BattleRecord_C_OnInputPressedL3");
static_assert(offsetof(WB_BattleRecord_C_OnInputPressedL3, ReturnValue) == 0x000000, "Member 'WB_BattleRecord_C_OnInputPressedL3::ReturnValue' has a wrong offset!");

}


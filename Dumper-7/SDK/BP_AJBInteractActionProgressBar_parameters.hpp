#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInteractActionProgressBar

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.ExecuteUbergraph_BP_AJBInteractActionProgressBar
// 0x000C (0x000C - 0x0000)
struct BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLongPress_bResult;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar) == 0x000004, "Wrong alignment on BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar) == 0x00000C, "Wrong size on BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar, EntryPoint) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar, CallFunc_IsLongPress_bResult) == 0x000004, "Member 'BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar::CallFunc_IsLongPress_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AJBInteractActionProgressBar_C_ExecuteUbergraph_BP_AJBInteractActionProgressBar::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInteractActionProgressBar_C_ReceiveTick");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInteractActionProgressBar_C_ReceiveTick");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.SetupTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_SetupTargetCharacter final
{
public:
	class AAJBInGameCharacter*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_SetupTargetCharacter) == 0x000008, "Wrong alignment on BP_AJBInteractActionProgressBar_C_SetupTargetCharacter");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_SetupTargetCharacter) == 0x000008, "Wrong size on BP_AJBInteractActionProgressBar_C_SetupTargetCharacter");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_SetupTargetCharacter, Character) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_SetupTargetCharacter::Character' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.SetupWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_SetupWidget final
{
public:
	class UWB_InteractProgressBar_C*              InteractProgressBarWidget;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_SetupWidget) == 0x000008, "Wrong alignment on BP_AJBInteractActionProgressBar_C_SetupWidget");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_SetupWidget) == 0x000008, "Wrong size on BP_AJBInteractActionProgressBar_C_SetupWidget");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_SetupWidget, InteractProgressBarWidget) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_SetupWidget::InteractProgressBarWidget' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.IsLongPress
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_IsLongPress final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_IsLongPress) == 0x000008, "Wrong alignment on BP_AJBInteractActionProgressBar_C_IsLongPress");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_IsLongPress) == 0x000018, "Wrong size on BP_AJBInteractActionProgressBar_C_IsLongPress");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, bResult) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, CallFunc_MakeLiteralByte_ReturnValue) == 0x000011, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsLongPress, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_AJBInteractActionProgressBar_C_IsLongPress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.UpdateWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_UpdateWidget final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_UpdateWidget) == 0x000008, "Wrong alignment on BP_AJBInteractActionProgressBar_C_UpdateWidget");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_UpdateWidget) == 0x000020, "Wrong size on BP_AJBInteractActionProgressBar_C_UpdateWidget");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, Delta) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::Delta' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, Temp_byte_Variable) == 0x000005, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, Temp_byte_Variable1) == 0x000006, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_UpdateWidget, K2Node_Select_Default) == 0x000018, "Member 'BP_AJBInteractActionProgressBar_C_UpdateWidget::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInteractActionProgressBar.BP_AJBInteractActionProgressBar_C.IsVisibleProgressBarWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget final
{
public:
	bool                                          bVisibleWidget_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget) == 0x000001, "Wrong alignment on BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget");
static_assert(sizeof(BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget) == 0x000001, "Wrong size on BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget");
static_assert(offsetof(BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget, bVisibleWidget_0) == 0x000000, "Member 'BP_AJBInteractActionProgressBar_C_IsVisibleProgressBarWidget::bVisibleWidget_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPinkDarkFlinch

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.ExecuteUbergraph_BP_AJBPinkDarkFlinch
// 0x0118 (0x0118 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameParticleEffect_C*>  CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_DynamicCast_AsAJBIn_Game_Character_Base1;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_Array_Get_Item1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Causer1;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CauserType;                           // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Causer;                               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch) == 0x000118, "Wrong size on BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, EntryPoint) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_float_Variable) == 0x000004, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_Operator) == 0x000010, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_Time) == 0x000018, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_Timing) == 0x00001C, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_bEnable) == 0x00001D, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_bOperatorIsEmpty) == 0x00001E, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_bTriggeredByStand) == 0x000028, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Map_Values_Values) == 0x000030, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_int_Loop_Counter_Variable1) == 0x000044, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_bool_Variable) == 0x000048, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Add_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Array_Length_ReturnValue1) == 0x000058, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Less_IntInt_ReturnValue1) == 0x00005C, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_HasLocalSharedController_ReturnValue) == 0x00005D, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_IsValid_ReturnValue) == 0x00005E, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000068, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_GetOwner_ReturnValue1) == 0x000078, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000080, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_AsAJBIn_Game_Character_Base) == 0x000088, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_AsAJBIn_Game_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_bSuccess1) == 0x000090, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000098, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_float_Variable1) == 0x0000A0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_IsPlayerController_ReturnValue) == 0x0000A4, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Select_Default) == 0x0000A8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_GetOwner_ReturnValue2) == 0x0000B0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_AsAJBIn_Game_Character_Base1) == 0x0000B8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_AsAJBIn_Game_Character_Base1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_bSuccess2) == 0x0000C0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_HasLocalSharedController_ReturnValue1) == 0x0000C1, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, Temp_int_Array_Index_Variable1) == 0x0000C4, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Array_Get_Item1) == 0x0000C8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_Causer1) == 0x0000D0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_Causer1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_CauserType) == 0x0000D8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_SerialNumber) == 0x0000E0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_AsActor) == 0x0000E8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_bSuccess3) == 0x0000F0, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_Event_Causer) == 0x0000F8, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_GetOwner_ReturnValue3) == 0x000100, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000108, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, K2Node_DynamicCast_bSuccess4) == 0x000110, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000111, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch, CallFunc_Array_AddUnique_ReturnValue) == 0x000114, "Member 'BP_AJBPinkDarkFlinch_C_ExecuteUbergraph_BP_AJBPinkDarkFlinch::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.SetFlinchCustomStencilValue
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue) == 0x000018, "Wrong size on BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBPinkDarkFlinch_C_SetFlinchCustomStencilValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.SetDefaultCustomStencilValue
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue) == 0x000018, "Wrong size on BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_AJBPinkDarkFlinch_C_SetDefaultCustomStencilValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.TryRemoveParticle
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_TryRemoveParticle final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_TryRemoveParticle");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle) == 0x000020, "Wrong size on BP_AJBPinkDarkFlinch_C_TryRemoveParticle");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle, CharacterBP) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_TryRemoveParticle::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_TryRemoveParticle::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_AJBPinkDarkFlinch_C_TryRemoveParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_TryRemoveParticle, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_AJBPinkDarkFlinch_C_TryRemoveParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.PlaySE
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_PlaySE final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_PlaySE) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_PlaySE");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_PlaySE) == 0x000008, "Wrong size on BP_AJBPinkDarkFlinch_C_PlaySE");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_PlaySE, Causer) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_PlaySE::Causer' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.MC_ActivePassive_
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_MC_ActivePassive_ final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_MC_ActivePassive_) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_MC_ActivePassive_");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_MC_ActivePassive_) == 0x000018, "Wrong size on BP_AJBPinkDarkFlinch_C_MC_ActivePassive_");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_MC_ActivePassive_, Causer) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_MC_ActivePassive_::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_MC_ActivePassive_, CauserType) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_MC_ActivePassive_::CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_MC_ActivePassive_, SerialNumber) == 0x000010, "Member 'BP_AJBPinkDarkFlinch_C_MC_ActivePassive_::SerialNumber' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBPinkDarkFlinch_C_OnActionInactivate");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBPinkDarkFlinch_C_OnActionInactivate");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBPinkDarkFlinch.BP_AJBPinkDarkFlinch_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBPinkDarkFlinch_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBPinkDarkFlinch_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBPinkDarkFlinch_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBPinkDarkFlinch_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBPinkDarkFlinch_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBPinkDarkFlinch_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBPinkDarkFlinch_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBPinkDarkFlinch_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBPinkDarkFlinch_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


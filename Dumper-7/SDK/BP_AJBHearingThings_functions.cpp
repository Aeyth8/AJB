#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBHearingThings

#include "Basic.hpp"

#include "BP_AJBHearingThings_classes.hpp"
#include "BP_AJBHearingThings_parameters.hpp"


namespace SDK
{

// Function BP_AJBHearingThings.BP_AJBHearingThings_C.ExecuteUbergraph_BP_AJBHearingThings
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHearingThings_C::ExecuteUbergraph_BP_AJBHearingThings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "ExecuteUbergraph_BP_AJBHearingThings");

	Params::BP_AJBHearingThings_C_ExecuteUbergraph_BP_AJBHearingThings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.ChangeEnable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHearingThings_C::ChangeEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "ChangeEnable");

	Params::BP_AJBHearingThings_C_ChangeEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.MC_RequestEchoGion
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SceneComponentToAttachWwise                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHearingThings_C::MC_RequestEchoGion(const struct FGameplayTag& EffectType, const struct FVector& WorldLocation, class USceneComponent* SceneComponentToAttachWwise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "MC_RequestEchoGion");

	Params::BP_AJBHearingThings_C_MC_RequestEchoGion Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.SceneComponentToAttachWwise = SceneComponentToAttachWwise;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.ROS_RequestEchoGion
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SceneComponentToAttachWwise                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHearingThings_C::ROS_RequestEchoGion(const struct FGameplayTag& EffectType, const struct FVector& WorldLocation, class USceneComponent* SceneComponentToAttachWwise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "ROS_RequestEchoGion");

	Params::BP_AJBHearingThings_C_ROS_RequestEchoGion Parms{};

	Parms.EffectType = std::move(EffectType);
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.SceneComponentToAttachWwise = SceneComponentToAttachWwise;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.ChangeStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHearingThings_C::ChangeStatus(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "ChangeStatus");

	Params::BP_AJBHearingThings_C_ChangeStatus Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBHearingThings_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.PlaySE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBHearingThings_C::PlaySE(class UObject* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "PlaySE");

	Params::BP_AJBHearingThings_C_PlaySE Parms{};

	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.OnActionActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHearingThings_C::OnActionActivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "OnActionActivate");

	Params::BP_AJBHearingThings_C_OnActionActivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBHearingThings.BP_AJBHearingThings_C.OnActionInactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBHearingThings_C::OnActionInactivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBHearingThings_C", "OnActionInactivate");

	Params::BP_AJBHearingThings_C_OnActionInactivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBWaitUntilNormalAttackFiringRange

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BTT_AJBWaitUntilNormalAttackFiringRange.BTT_AJBWaitUntilNormalAttackFiringRange_C.ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange
// 0x00B0 (0x00B0 - 0x0000)
struct BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController2;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn2;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetNormalAttackSkill_ReturnValue;         // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackRangeOfSkill_ReturnValue;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAttackRangeOfSkill_Found;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange) == 0x000008, "Wrong alignment on BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange");
static_assert(sizeof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange) == 0x0000B0, "Wrong size on BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, EntryPoint) == 0x000000, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_OwnerController2) == 0x000008, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_OwnerController2' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_ControlledPawn2) == 0x000010, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_ControlledPawn2' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_OwnerController1) == 0x000018, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_ControlledPawn1) == 0x000020, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000030, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetControllingImaginaryCharacter_ReturnValue1) == 0x000038, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetControllingImaginaryCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetLocation_ReturnValue) == 0x000040, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetNormalAttackSkill_ReturnValue) == 0x000050, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetNormalAttackSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetAttackRangeOfSkill_ReturnValue) == 0x000058, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetAttackRangeOfSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetAttackRangeOfSkill_Found) == 0x00005C, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetAttackRangeOfSkill_Found' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetBlackboardKeyName_ReturnValue) == 0x000060, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetBlackboardKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_Square_ReturnValue) == 0x000068, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetValueAsObject_ReturnValue) == 0x000070, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character) == 0x000078, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_DynamicCast_AsBP_AJBIn_Game_AIImaginary_Character' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_GetLocation_ReturnValue1) == 0x000084, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_AI_VectorDiffSq_ReturnValue) == 0x000090, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_AI_VectorDiffSq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_OwnerController) == 0x000098, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, K2Node_Event_ControlledPawn) == 0x0000A0, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ExecuteUbergraph_BTT_AJBWaitUntilNormalAttackFiringRange::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BTT_AJBWaitUntilNormalAttackFiringRange.BTT_AJBWaitUntilNormalAttackFiringRange_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI");
static_assert(sizeof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_AJBWaitUntilNormalAttackFiringRange.BTT_AJBWaitUntilNormalAttackFiringRange_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI");
static_assert(sizeof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_AJBWaitUntilNormalAttackFiringRange.BTT_AJBWaitUntilNormalAttackFiringRange_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_AJBWaitUntilNormalAttackFiringRange_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


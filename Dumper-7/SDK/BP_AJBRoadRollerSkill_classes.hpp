#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRoadRollerSkill

#include "Basic.hpp"

#include "BP_AJBTheWorldWLDSkill_classes.hpp"
#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBRoadRollerSkill.BP_AJBRoadRollerSkill_C
// 0x01B0 (0x03D0 - 0x0220)
class UBP_AJBRoadRollerSkill_C final : public UBP_AJBTheWorldWLDSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBRoadRollerSkill_C;            // 0x0220(0x0008)(Transient, DuplicateTransient)
	float                                         StateTime_Jumping;                                 // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpingState_JumpTime;                             // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_PreFalling;                              // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_Falling;                                 // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallingState_GroundTime;                           // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_FullAttack;                              // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_Finish;                                  // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_ForceFinish;                             // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinishState_ImpactTime;                            // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinishState_ExitTime;                              // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateTime_Clearing;                                // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           FallingAnimation;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugShowRoadRollerState;                         // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBRoadRollerPreview_C*             RoadRollerPreview;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBRoadRoller_C*                    RoadRoller;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          LandingGuideParticle;                              // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlreadyPassedImpulseGroundTiming;                 // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClearingStateCollisionChangedTime;                 // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStepHeightOnPreview;                            // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStepHeightOnPreviewStage04;                     // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStepHeightOnPreviewStage05;                     // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookupSpeedOnPreview;                              // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSpeedOnPreview;                                // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedOnPreview;                                // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultPitchOnPreview;                             // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndPitchOnPreview;                                 // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RoadRollerRotation;                                // 0x02A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAlreadyCompDisableRRMode;                         // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAlreadyPassedImpactTiming;                        // 0x02B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAlreadyPassedJumpTiming;                          // 0x02B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B7[0x1];                                      // 0x02B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypesCeilingLocation;                        // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      ObjectTypesFloorLocation;                          // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      ObjectTypesPositioning;                            // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      ObjectTypesPositioningStage04;                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         CeilingLocationTraceHeight;                        // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloorLocationTraceHeight;                          // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName_RoadRollerForceFinishParticle;          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName_CharacterForceFinishParticle;           // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlreadyPassedChangedCollisionTiming;              // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAlreadyPassedAdjustForReserveUncrouchTimimg;      // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBDamageImpulseBase_C*             DamageImpulseFinish;                               // 0x0318(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadiusCache;                                // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeightCache;                            // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadiusOnPreview;                            // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadiusOnPreviewStage05;                     // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeightOnPreview;                        // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeightOnPreviewStage05;                 // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScaleOnPreview;                             // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeightDiffCache;                        // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkableFloorAngleOnDirection;                     // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkableFloorAngleCache;                           // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rep_ReserveLocation;                               // 0x0348(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReserveControlRotation_Local;                      // 0x0354(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugDrawCupsuleSizeChanged;                      // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustForReserveUncrouchTime;                      // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterSkyMoveLocationBuffer;                        // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterGroundMoveLocationBuffer;                     // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckGroundMoveTimerHandle;                        // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         CheckGroundMoveTimeSpan;                           // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypesPositioningAfterChangeCollision;        // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDebugShowCameraChange;                            // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           JumpAnimation;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FullAttackAnimation;                               // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FinishAnimation;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ClearingAnimation;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkableFloorAngleOnDirectionStage05;              // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypesPositioningAfterChangeCollisionStage04; // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AJBRoadRollerSkill(int32 EntryPoint);
	void OnJumpTiming();
	void OnBeginCut(uint8 CurrentCut, uint8 BeforeCut);
	void TryBeginStateForceFinish();
	void MC_NotifyTheWorldEnable();
	void TryCheckGroundMoveCore();
	void TryCheckGroundMove();
	void ROC_GroundMoveProcess(const struct FVector& GroundMoveLocation);
	void ROS_GroundMoveProcess(const struct FVector& GroundMoveLocation);
	void StateTick_ForceFinish();
	void MC_BeginState_ForceFinish();
	void ROS_BeginState_ForceFinish();
	void OnBeginState_ForceFinish();
	void BeginState_ForceFinish_Local();
	void StateBegin_Action();
	void MC_EndState();
	void ROS_EndState();
	void EndState_Local();
	void StateTick_PreFalling();
	void MC_BeginState_PreFalling();
	void ROS_BeginState_PreFalling();
	void OnBeginState_PreFalling();
	void BeginState_PreFalling_Local();
	void EndState();
	void StateTick();
	void StateTick_Clearing();
	void MC_BeginState_Clearing();
	void ROS_BeginState_Clearing();
	void StateTick_Finish();
	void MC_BeginState_Finish();
	void ROS_BeginState_Finish();
	void StateTick_FullAttack();
	void MC_BeginState_FullAttack();
	void ROS_BeginState_FullAttack();
	void StateTick_Falling();
	void StateTick_Preview();
	void MC_BeginState_Falling();
	void ROS_BeginState_Falling();
	void MC_BeginState_Preview();
	void ROS_BeginState_Preview();
	void OnBeginState_Clearing();
	void OnBeginState_Finish();
	void OnBeginState_FullAttack();
	void OnBeginState_Falling();
	void OnBeginState_Preview();
	void BeginState_Clearing_Local();
	void BeginState_Finish_Local();
	void BeginState_FullAttack_Local();
	void BeginState_Falling_Local();
	void BeginState_Preview_Local();
	void StateTick_Jumping();
	void MC_BeginState_jumping();
	void ROS_BeginState_Jumping();
	void OnBeginState_Jumping();
	void BeginState_Jumping_Local();
	void StateTick_Action();
	void OnCompleted_7DDD297442D7CC4375E0C99B70B0BFF8(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B70B0BFF8(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B70B0BFF8(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B70B0BFF8(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B70B0BFF8(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B6B9095E6(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B6B9095E6(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B6B9095E6(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B6B9095E6(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B6B9095E6(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B19645DE2(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B19645DE2(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B19645DE2(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B19645DE2(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B19645DE2(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B132D823B(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B132D823B(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B132D823B(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B132D823B(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B132D823B(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B7B529098(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B7B529098(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B7B529098(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B7B529098(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B7B529098(class FName NotifyName);
	void ChangePreviewMode(bool bEnable);
	void ChangeDirectionMode(bool bEnable);
	void TrySpawnPreviewObject();
	void TryDestroyPreviewObject();
	void UpdatePreviewObjectTransform(bool bSpecifyLocation, const struct FVector& SpecifiedLocation);
	void TrySpawnRoadRoller();
	void TryDestroyRoadRoller();
	void SpawnDamageImpulse_Server(class UClass* ImpulseClass, class ABP_AJBDamageImpulseBase_C** SpawnedImpulse);
	void GenerateLandingGuideParticle();
	void ChangeCharacterRRMode(bool bEnable);
	void ChangeCamera(const struct FGameplayTag& NewCamera, const struct FGameplayTag& OldCamera);
	void GenerateForceFinishParticles();
	void TryChangeHearingThingsEnable(bool bEnable);
	void ChangeInvincibleStatus(bool bEnable);
	void ChangeRoadRollerCapsuleSize(bool bEnable);
	void PositioningSafeLocation_RoadRoller(TArray<EObjectTypeQuery>& ObjectTypes, float SmallAmount);
	void ShouldSkyMove(bool* bShouldSkyMove);
	void DebugDrawCurrentCapsuleSize(const struct FRotator& Rotation, const struct FLinearColor& LineColor, float Duration, float Tickness);
	void AdjustForReserveUncrouch();
	void CheckGroundMove(bool* bShouldGroundMove, struct FVector* Location);
	void UpdateLandingParticleTransform(const struct FVector& NewLocation);
	void ChangeCameraOnlyMode(bool bEnable);
	void ChangeEnableShouldUpdateBombing(class ABP_AJBInGameCharacter_C* IngameCharacterBP, bool bEnable, bool bIgnoreActiveCheck);
	void SpawnDamageImpulseOrbitServer();
	void MoveToCeiling(bool bForceMove);
	void StopDirectionsMontage();
	void GetStateTimePreview(float* PreviewTime);
	void ChangeFloorAngle(bool bEnable);
	void TryChangeTorrentialRainVisualEnable(bool bEnable);
	void GetPoliticMaxStepHeightOnPreview(float* MaxStepHeight);
	void GetPoliticObjectTypesPositioning(TArray<EObjectTypeQuery>* ObjectTypes);
	void GetPoliticObjectTypesPositioningAfterChangeCollision(TArray<EObjectTypeQuery>* ObjectTypes);
	void IsCollisionEnableState(bool* bReturn);
	void GetWalkableFloorAngleDirection(float* WalkableFloorAngleOnDirection_0);
	void GetCapsuleRadiusOnPreview(float DefaultValue, float* CapsuleRadius);
	void GetCapsuleHalfHeightOnPreview(float DefaultValue, float* CapsuleHalfHeight);
	void StateBeginPlay(bool bShouldRestore);
	void OnDisconnected();
	void OnCancel();
	void ReceiveTick(float DeltaSeconds);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void InitializeVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBRoadRollerSkill_C">();
	}
	static class UBP_AJBRoadRollerSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBRoadRollerSkill_C>();
	}
};
static_assert(alignof(UBP_AJBRoadRollerSkill_C) == 0x000008, "Wrong alignment on UBP_AJBRoadRollerSkill_C");
static_assert(sizeof(UBP_AJBRoadRollerSkill_C) == 0x0003D0, "Wrong size on UBP_AJBRoadRollerSkill_C");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, UberGraphFrame_BP_AJBRoadRollerSkill_C) == 0x000220, "Member 'UBP_AJBRoadRollerSkill_C::UberGraphFrame_BP_AJBRoadRollerSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_Jumping) == 0x000228, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_Jumping' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, JumpingState_JumpTime) == 0x00022C, "Member 'UBP_AJBRoadRollerSkill_C::JumpingState_JumpTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_PreFalling) == 0x000230, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_PreFalling' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_Falling) == 0x000234, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_Falling' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FallingState_GroundTime) == 0x000238, "Member 'UBP_AJBRoadRollerSkill_C::FallingState_GroundTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_FullAttack) == 0x00023C, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_FullAttack' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_Finish) == 0x000240, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_Finish' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_ForceFinish) == 0x000244, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_ForceFinish' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FinishState_ImpactTime) == 0x000248, "Member 'UBP_AJBRoadRollerSkill_C::FinishState_ImpactTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FinishState_ExitTime) == 0x00024C, "Member 'UBP_AJBRoadRollerSkill_C::FinishState_ExitTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, StateTime_Clearing) == 0x000250, "Member 'UBP_AJBRoadRollerSkill_C::StateTime_Clearing' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FallingAnimation) == 0x000258, "Member 'UBP_AJBRoadRollerSkill_C::FallingAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bDebugShowRoadRollerState) == 0x000260, "Member 'UBP_AJBRoadRollerSkill_C::bDebugShowRoadRollerState' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, RoadRollerPreview) == 0x000268, "Member 'UBP_AJBRoadRollerSkill_C::RoadRollerPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, RoadRoller) == 0x000270, "Member 'UBP_AJBRoadRollerSkill_C::RoadRoller' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, LandingGuideParticle) == 0x000278, "Member 'UBP_AJBRoadRollerSkill_C::LandingGuideParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyPassedImpulseGroundTiming) == 0x000280, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyPassedImpulseGroundTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ClearingStateCollisionChangedTime) == 0x000284, "Member 'UBP_AJBRoadRollerSkill_C::ClearingStateCollisionChangedTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, MaxStepHeightOnPreview) == 0x000288, "Member 'UBP_AJBRoadRollerSkill_C::MaxStepHeightOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, MaxStepHeightOnPreviewStage04) == 0x00028C, "Member 'UBP_AJBRoadRollerSkill_C::MaxStepHeightOnPreviewStage04' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, MaxStepHeightOnPreviewStage05) == 0x000290, "Member 'UBP_AJBRoadRollerSkill_C::MaxStepHeightOnPreviewStage05' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, LookupSpeedOnPreview) == 0x000294, "Member 'UBP_AJBRoadRollerSkill_C::LookupSpeedOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, TurnSpeedOnPreview) == 0x000298, "Member 'UBP_AJBRoadRollerSkill_C::TurnSpeedOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, MoveSpeedOnPreview) == 0x00029C, "Member 'UBP_AJBRoadRollerSkill_C::MoveSpeedOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, DefaultPitchOnPreview) == 0x0002A0, "Member 'UBP_AJBRoadRollerSkill_C::DefaultPitchOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, EndPitchOnPreview) == 0x0002A4, "Member 'UBP_AJBRoadRollerSkill_C::EndPitchOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, RoadRollerRotation) == 0x0002A8, "Member 'UBP_AJBRoadRollerSkill_C::RoadRollerRotation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyCompDisableRRMode) == 0x0002B4, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyCompDisableRRMode' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyPassedImpactTiming) == 0x0002B5, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyPassedImpactTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyPassedJumpTiming) == 0x0002B6, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyPassedJumpTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesCeilingLocation) == 0x0002B8, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesCeilingLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesFloorLocation) == 0x0002C8, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesFloorLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesPositioning) == 0x0002D8, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesPositioning' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesPositioningStage04) == 0x0002E8, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesPositioningStage04' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CeilingLocationTraceHeight) == 0x0002F8, "Member 'UBP_AJBRoadRollerSkill_C::CeilingLocationTraceHeight' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FloorLocationTraceHeight) == 0x0002FC, "Member 'UBP_AJBRoadRollerSkill_C::FloorLocationTraceHeight' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, SocketName_RoadRollerForceFinishParticle) == 0x000300, "Member 'UBP_AJBRoadRollerSkill_C::SocketName_RoadRollerForceFinishParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, SocketName_CharacterForceFinishParticle) == 0x000308, "Member 'UBP_AJBRoadRollerSkill_C::SocketName_CharacterForceFinishParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyPassedChangedCollisionTiming) == 0x000310, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyPassedChangedCollisionTiming' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bAlreadyPassedAdjustForReserveUncrouchTimimg) == 0x000311, "Member 'UBP_AJBRoadRollerSkill_C::bAlreadyPassedAdjustForReserveUncrouchTimimg' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, DamageImpulseFinish) == 0x000318, "Member 'UBP_AJBRoadRollerSkill_C::DamageImpulseFinish' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleRadiusCache) == 0x000320, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleRadiusCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleHalfHeightCache) == 0x000324, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleHalfHeightCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleRadiusOnPreview) == 0x000328, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleRadiusOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleRadiusOnPreviewStage05) == 0x00032C, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleRadiusOnPreviewStage05' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleHalfHeightOnPreview) == 0x000330, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleHalfHeightOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleHalfHeightOnPreviewStage05) == 0x000334, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleHalfHeightOnPreviewStage05' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, GravityScaleOnPreview) == 0x000338, "Member 'UBP_AJBRoadRollerSkill_C::GravityScaleOnPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CapsuleHalfHeightDiffCache) == 0x00033C, "Member 'UBP_AJBRoadRollerSkill_C::CapsuleHalfHeightDiffCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, WalkableFloorAngleOnDirection) == 0x000340, "Member 'UBP_AJBRoadRollerSkill_C::WalkableFloorAngleOnDirection' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, WalkableFloorAngleCache) == 0x000344, "Member 'UBP_AJBRoadRollerSkill_C::WalkableFloorAngleCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, Rep_ReserveLocation) == 0x000348, "Member 'UBP_AJBRoadRollerSkill_C::Rep_ReserveLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ReserveControlRotation_Local) == 0x000354, "Member 'UBP_AJBRoadRollerSkill_C::ReserveControlRotation_Local' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bDebugDrawCupsuleSizeChanged) == 0x000360, "Member 'UBP_AJBRoadRollerSkill_C::bDebugDrawCupsuleSizeChanged' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, AdjustForReserveUncrouchTime) == 0x000364, "Member 'UBP_AJBRoadRollerSkill_C::AdjustForReserveUncrouchTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, AfterSkyMoveLocationBuffer) == 0x000368, "Member 'UBP_AJBRoadRollerSkill_C::AfterSkyMoveLocationBuffer' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, AfterGroundMoveLocationBuffer) == 0x00036C, "Member 'UBP_AJBRoadRollerSkill_C::AfterGroundMoveLocationBuffer' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CheckGroundMoveTimerHandle) == 0x000370, "Member 'UBP_AJBRoadRollerSkill_C::CheckGroundMoveTimerHandle' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, CheckGroundMoveTimeSpan) == 0x000378, "Member 'UBP_AJBRoadRollerSkill_C::CheckGroundMoveTimeSpan' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesPositioningAfterChangeCollision) == 0x000380, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesPositioningAfterChangeCollision' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, bDebugShowCameraChange) == 0x000390, "Member 'UBP_AJBRoadRollerSkill_C::bDebugShowCameraChange' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, JumpAnimation) == 0x000398, "Member 'UBP_AJBRoadRollerSkill_C::JumpAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FullAttackAnimation) == 0x0003A0, "Member 'UBP_AJBRoadRollerSkill_C::FullAttackAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, FinishAnimation) == 0x0003A8, "Member 'UBP_AJBRoadRollerSkill_C::FinishAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ClearingAnimation) == 0x0003B0, "Member 'UBP_AJBRoadRollerSkill_C::ClearingAnimation' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, WalkableFloorAngleOnDirectionStage05) == 0x0003B8, "Member 'UBP_AJBRoadRollerSkill_C::WalkableFloorAngleOnDirectionStage05' has a wrong offset!");
static_assert(offsetof(UBP_AJBRoadRollerSkill_C, ObjectTypesPositioningAfterChangeCollisionStage04) == 0x0003C0, "Member 'UBP_AJBRoadRollerSkill_C::ObjectTypesPositioningAfterChangeCollisionStage04' has a wrong offset!");

}


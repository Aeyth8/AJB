#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectileVirusCapsule

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBInGameProjectile_Straight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C
// 0x0068 (0x0540 - 0x04D8)
class ABP_AJBInGameProjectileVirusCapsule_C final : public ABP_AJBInGameProjectile_Straight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameProjectileVirusCapsule_C; // 0x04D8(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_PPH_KillerHaze_CapsuleRupture;                  // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PassiveSkillTime;                                  // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveTime;                                        // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CrackGionTag;                                      // 0x04F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActivateVirusGionTag;                              // 0x0500(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CapsuleDeltaRotation;                              // 0x0508(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CrackSETag;                                        // 0x0518(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActivateVirusSETag;                                // 0x0520(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveTimeDarkPlace;                               // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleOnFerocious;                                  // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverridedScale;                                    // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseMultipleLocations;                             // 0x0534(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayTimeFromAvoidSkill;                           // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameProjectileVirusCapsule(int32 EntryPoint);
	void CalcActiveTime(float* ActiveTime_0);
	void AddGravityScale(bool bResetGravityScale);
	void ReceiveTick(float DeltaSeconds);
	void OnMC_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, bool bHeadShot, EPhysicalSurface SurfaceType, bool bDisableDamage, float CuttingRate, bool bBlockedByAAP, bool bReflect);
	void OnProjectileHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult, bool bHeadShot, bool bPenetrate_0, bool bFirstHit);
	void OnROS_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, bool bHeadShot, bool bPenetrate_0, bool bFirstHit, float CuttingRate, bool bDisableDamage, bool bReflect, const struct FRotator& ReflectRotation, bool bBlocking, const struct FGameplayTag& ReflectSkillTag_0, bool bAvoidSkill);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameProjectileVirusCapsule_C">();
	}
	static class ABP_AJBInGameProjectileVirusCapsule_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameProjectileVirusCapsule_C>();
	}
};
static_assert(alignof(ABP_AJBInGameProjectileVirusCapsule_C) == 0x000008, "Wrong alignment on ABP_AJBInGameProjectileVirusCapsule_C");
static_assert(sizeof(ABP_AJBInGameProjectileVirusCapsule_C) == 0x000540, "Wrong size on ABP_AJBInGameProjectileVirusCapsule_C");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, UberGraphFrame_BP_AJBInGameProjectileVirusCapsule_C) == 0x0004D8, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::UberGraphFrame_BP_AJBInGameProjectileVirusCapsule_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, PS_PPH_KillerHaze_CapsuleRupture) == 0x0004E0, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::PS_PPH_KillerHaze_CapsuleRupture' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, GravityScale) == 0x0004E8, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::GravityScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, PassiveSkillTime) == 0x0004EC, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::PassiveSkillTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, ActiveTime) == 0x0004F0, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::ActiveTime' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, CrackGionTag) == 0x0004F8, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::CrackGionTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, ActivateVirusGionTag) == 0x000500, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::ActivateVirusGionTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, CapsuleDeltaRotation) == 0x000508, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::CapsuleDeltaRotation' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, CrackSETag) == 0x000518, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::CrackSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, ActivateVirusSETag) == 0x000520, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::ActivateVirusSETag' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, ActiveTimeDarkPlace) == 0x000528, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::ActiveTimeDarkPlace' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, ScaleOnFerocious) == 0x00052C, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::ScaleOnFerocious' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, OverridedScale) == 0x000530, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::OverridedScale' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, bUseMultipleLocations) == 0x000534, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::bUseMultipleLocations' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameProjectileVirusCapsule_C, DelayTimeFromAvoidSkill) == 0x000538, "Member 'ABP_AJBInGameProjectileVirusCapsule_C::DelayTimeFromAvoidSkill' has a wrong offset!");

}


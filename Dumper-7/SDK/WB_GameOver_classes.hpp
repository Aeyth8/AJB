#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GameOver

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_GameOver.WB_GameOver_C
// 0x0100 (0x03C0 - 0x02C0)
class UWB_GameOver_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              GameOver;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              GameOver_Glow1;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              GameOver_Glow2;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         GotoTitleWaitTime;                                 // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnGotoTitleDispatcher;                             // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsPlayOpenSE;                                     // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LogoutRetryCount;                                  // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LogoutRetryMax;                                    // 0x0308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPPhasBeenPurchased;                               // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNoGameOverLogout;                                 // 0x030D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E[0x2];                                      // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnFinishedLogout;                                  // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FAJBLogoutReward                       CacheReward;                                       // 0x0320(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_GameOver(int32 EntryPoint);
	void RequestLogout();
	void OnClosingWindow();
	void OnOpeningWindow();
	void OnSuccess_CD362A60495F46D7C810B980F1978547(EAJBNetAPIResult Result, const struct FAJBLogoutReward& Reward);
	void OnFailed_CD362A60495F46D7C810B980F1978547(EAJBNetAPIResult Result, const struct FAJBLogoutReward& Reward);
	void GetHttpObject(class UNetHttp** HTTP);
	void SetWhetherPPHaveBeenPurchased(bool bPurchased);
	void GetCacheReward(struct FAJBLogoutReward* CacheReward_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_GameOver_C">();
	}
	static class UWB_GameOver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_GameOver_C>();
	}
};
static_assert(alignof(UWB_GameOver_C) == 0x000008, "Wrong alignment on UWB_GameOver_C");
static_assert(sizeof(UWB_GameOver_C) == 0x0003C0, "Wrong size on UWB_GameOver_C");
static_assert(offsetof(UWB_GameOver_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_GameOver_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, Appear) == 0x0002C8, "Member 'UWB_GameOver_C::Appear' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, GameOver) == 0x0002D0, "Member 'UWB_GameOver_C::GameOver' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, GameOver_Glow1) == 0x0002D8, "Member 'UWB_GameOver_C::GameOver_Glow1' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, GameOver_Glow2) == 0x0002E0, "Member 'UWB_GameOver_C::GameOver_Glow2' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, GotoTitleWaitTime) == 0x0002E8, "Member 'UWB_GameOver_C::GotoTitleWaitTime' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, OnGotoTitleDispatcher) == 0x0002F0, "Member 'UWB_GameOver_C::OnGotoTitleDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, bIsPlayOpenSE) == 0x000300, "Member 'UWB_GameOver_C::bIsPlayOpenSE' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, LogoutRetryCount) == 0x000304, "Member 'UWB_GameOver_C::LogoutRetryCount' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, LogoutRetryMax) == 0x000308, "Member 'UWB_GameOver_C::LogoutRetryMax' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, bPPhasBeenPurchased) == 0x00030C, "Member 'UWB_GameOver_C::bPPhasBeenPurchased' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, bNoGameOverLogout) == 0x00030D, "Member 'UWB_GameOver_C::bNoGameOverLogout' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, OnFinishedLogout) == 0x000310, "Member 'UWB_GameOver_C::OnFinishedLogout' has a wrong offset!");
static_assert(offsetof(UWB_GameOver_C, CacheReward) == 0x000320, "Member 'UWB_GameOver_C::CacheReward' has a wrong offset!");

}


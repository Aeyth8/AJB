#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCollectMdBuff

#include "Basic.hpp"

#include "BP_AJBCollectMdBuff_classes.hpp"
#include "BP_AJBCollectMdBuff_parameters.hpp"


namespace SDK
{

// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ExecuteUbergraph_BP_AJBCollectMdBuff
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::ExecuteUbergraph_BP_AJBCollectMdBuff(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ExecuteUbergraph_BP_AJBCollectMdBuff");

	Params::BP_AJBCollectMdBuff_C_ExecuteUbergraph_BP_AJBCollectMdBuff Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ResetBuff
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBCollectMdBuff_C::ResetBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ResetBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.RequestBuff
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBSkillType                           SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<struct FST_CollectMdTargetInfo>&TargetList                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   WBIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::RequestBuff(EAJBSkillType SkillType, const TArray<struct FST_CollectMdTargetInfo>& TargetList, int32 WBIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "RequestBuff");

	Params::BP_AJBCollectMdBuff_C_RequestBuff Parms{};

	Parms.SkillType = SkillType;
	Parms.TargetList = std::move(TargetList);
	Parms.WBIndex = WBIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ApplyBuff
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_CollectMdTargetInfo>& TargetList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   WBIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::ApplyBuff(TArray<struct FST_CollectMdTargetInfo>& TargetList, int32 WBIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ApplyBuff");

	Params::BP_AJBCollectMdBuff_C_ApplyBuff Parms{};

	Parms.TargetList = std::move(TargetList);
	Parms.WBIndex = WBIndex;

	UObject::ProcessEvent(Func, &Parms);

	TargetList = std::move(Parms.TargetList);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ConvertBattleTypeForIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterBattleType                    BattleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ApplyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::ConvertBattleTypeForIndex(ECharacterBattleType BattleType, int32* ApplyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ConvertBattleTypeForIndex");

	Params::BP_AJBCollectMdBuff_C_ConvertBattleTypeForIndex Parms{};

	Parms.BattleType = BattleType;

	UObject::ProcessEvent(Func, &Parms);

	if (ApplyIndex != nullptr)
		*ApplyIndex = Parms.ApplyIndex;
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.CalcFighterParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  TotalParam                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  DiffParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::CalcFighterParameter(int32 Phase, float* TotalParam, float* DiffParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "CalcFighterParameter");

	Params::BP_AJBCollectMdBuff_C_CalcFighterParameter Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalParam != nullptr)
		*TotalParam = Parms.TotalParam;

	if (DiffParam != nullptr)
		*DiffParam = Parms.DiffParam;
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.CalcGunnerParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  TotalParam                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  DiffParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::CalcGunnerParameter(int32 Phase, float* TotalParam, float* DiffParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "CalcGunnerParameter");

	Params::BP_AJBCollectMdBuff_C_CalcGunnerParameter Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalParam != nullptr)
		*TotalParam = Parms.TotalParam;

	if (DiffParam != nullptr)
		*DiffParam = Parms.DiffParam;
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.CalcDisturbParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  TotalParam                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  DiffParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::CalcDisturbParameter(int32 Phase, float* TotalParam, float* DiffParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "CalcDisturbParameter");

	Params::BP_AJBCollectMdBuff_C_CalcDisturbParameter Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalParam != nullptr)
		*TotalParam = Parms.TotalParam;

	if (DiffParam != nullptr)
		*DiffParam = Parms.DiffParam;
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.CalcHamonParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOnSeparate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  TotalParam                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  DiffParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::CalcHamonParameter(int32 Phase, bool bOnSeparate, float* TotalParam, float* DiffParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "CalcHamonParameter");

	Params::BP_AJBCollectMdBuff_C_CalcHamonParameter Parms{};

	Parms.Phase = Phase;
	Parms.bOnSeparate = bOnSeparate;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalParam != nullptr)
		*TotalParam = Parms.TotalParam;

	if (DiffParam != nullptr)
		*DiffParam = Parms.DiffParam;
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ResetCurrentPhaseList
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBCollectMdBuff_C::ResetCurrentPhaseList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ResetCurrentPhaseList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ActiveContinuedParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActiveForOwner                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bActiveForMovableStand                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBCollectMdBuff_C::ActiveContinuedParticle(bool bActiveForOwner, bool bActiveForMovableStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ActiveContinuedParticle");

	Params::BP_AJBCollectMdBuff_C_ActiveContinuedParticle Parms{};

	Parms.bActiveForOwner = bActiveForOwner;
	Parms.bActiveForMovableStand = bActiveForMovableStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBCollectMdBuff_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBCollectMdBuff_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBCollectMdBuff_C", "ReceiveTick");

	Params::BP_AJBCollectMdBuff_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}


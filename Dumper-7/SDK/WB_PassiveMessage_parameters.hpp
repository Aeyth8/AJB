#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PassiveMessage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_PassiveMessage.WB_PassiveMessage_C.ExecuteUbergraph_WB_PassiveMessage
// 0x0178 (0x0178 - 0x0000)
struct WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0030(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_IntegerValue1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D0(0x0008)(NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PassiveTag1;                    // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FloatValue;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue2;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue3;          // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Key;                            // 0x0110(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Key1;                           // 0x0118(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Value;                          // 0x0120(0x0018)(ConstParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue1;            // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PassiveTag;                     // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_IntegerValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue4;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage");
static_assert(sizeof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage) == 0x000178, "Wrong size on WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, EntryPoint) == 0x000000, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Map_Find_Value) == 0x000030, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_IsVisible_ReturnValue) == 0x000051, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_IntegerValue1) == 0x000054, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_IntegerValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_MakeArray_Array) == 0x000098, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Length_ReturnValue1) == 0x0000A8, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D0, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x0000D8, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Length_ReturnValue2) == 0x0000DC, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x0000E0, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000E1, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, Temp_int_Variable) == 0x0000E4, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_PassiveTag1) == 0x0000E8, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_PassiveTag1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_FloatValue) == 0x0000F0, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_FloatValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_FTrunc_ReturnValue) == 0x0000F8, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Get_Item) == 0x000100, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_MatchesTag_ReturnValue) == 0x000108, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_IsValidIndex_ReturnValue2) == 0x000109, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_IsValidIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_BooleanAND_ReturnValue) == 0x00010A, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_IsValidIndex_ReturnValue3) == 0x00010B, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_IsValidIndex_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_Key) == 0x000110, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_Key1) == 0x000118, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_Key1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_Value) == 0x000120, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Find_ReturnValue) == 0x000138, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x00013C, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_AddUnique_ReturnValue) == 0x000140, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_RemoveItem_ReturnValue) == 0x000144, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_RemoveItem_ReturnValue1) == 0x000145, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_RemoveItem_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Map_Remove_ReturnValue) == 0x000146, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_PassiveTag) == 0x000148, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_PassiveTag' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CustomEvent_IntegerValue) == 0x000150, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CustomEvent_IntegerValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Get_Item1) == 0x000158, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, K2Node_CreateDelegate_OutputDelegate2) == 0x000160, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_MatchesTag_ReturnValue1) == 0x000170, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_IsValidIndex_ReturnValue4) == 0x000171, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_IsValidIndex_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_BooleanAND_ReturnValue1) == 0x000172, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Array_Contains_ReturnValue) == 0x000173, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000174, "Member 'WB_PassiveMessage_C_ExecuteUbergraph_WB_PassiveMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.TryUpdatePhase
// 0x0010 (0x0010 - 0x0000)
struct WB_PassiveMessage_C_TryUpdatePhase final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         IntegerValue;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PassiveMessage_C_TryUpdatePhase) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_TryUpdatePhase");
static_assert(sizeof(WB_PassiveMessage_C_TryUpdatePhase) == 0x000010, "Wrong size on WB_PassiveMessage_C_TryUpdatePhase");
static_assert(offsetof(WB_PassiveMessage_C_TryUpdatePhase, PassiveTag) == 0x000000, "Member 'WB_PassiveMessage_C_TryUpdatePhase::PassiveTag' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_TryUpdatePhase, IntegerValue) == 0x000008, "Member 'WB_PassiveMessage_C_TryUpdatePhase::IntegerValue' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.TryUpdateLeftTime
// 0x0010 (0x0010 - 0x0000)
struct WB_PassiveMessage_C_TryUpdateLeftTime final
{
public:
	struct FGameplayTag                           PassiveTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         FloatValue;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PassiveMessage_C_TryUpdateLeftTime) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_TryUpdateLeftTime");
static_assert(sizeof(WB_PassiveMessage_C_TryUpdateLeftTime) == 0x000010, "Wrong size on WB_PassiveMessage_C_TryUpdateLeftTime");
static_assert(offsetof(WB_PassiveMessage_C_TryUpdateLeftTime, PassiveTag) == 0x000000, "Member 'WB_PassiveMessage_C_TryUpdateLeftTime::PassiveTag' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_TryUpdateLeftTime, FloatValue) == 0x000008, "Member 'WB_PassiveMessage_C_TryUpdateLeftTime::FloatValue' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.UpdatePassiveTextByInteger
// 0x0004 (0x0004 - 0x0000)
struct WB_PassiveMessage_C_UpdatePassiveTextByInteger final
{
public:
	int32                                         IntegerValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PassiveMessage_C_UpdatePassiveTextByInteger) == 0x000004, "Wrong alignment on WB_PassiveMessage_C_UpdatePassiveTextByInteger");
static_assert(sizeof(WB_PassiveMessage_C_UpdatePassiveTextByInteger) == 0x000004, "Wrong size on WB_PassiveMessage_C_UpdatePassiveTextByInteger");
static_assert(offsetof(WB_PassiveMessage_C_UpdatePassiveTextByInteger, IntegerValue) == 0x000000, "Member 'WB_PassiveMessage_C_UpdatePassiveTextByInteger::IntegerValue' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.RemoveMessage
// 0x0008 (0x0008 - 0x0000)
struct WB_PassiveMessage_C_RemoveMessage final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PassiveMessage_C_RemoveMessage) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_RemoveMessage");
static_assert(sizeof(WB_PassiveMessage_C_RemoveMessage) == 0x000008, "Wrong size on WB_PassiveMessage_C_RemoveMessage");
static_assert(offsetof(WB_PassiveMessage_C_RemoveMessage, Key) == 0x000000, "Member 'WB_PassiveMessage_C_RemoveMessage::Key' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.AddMessage
// 0x0020 (0x0020 - 0x0000)
struct WB_PassiveMessage_C_AddMessage final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   Value;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_PassiveMessage_C_AddMessage) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_AddMessage");
static_assert(sizeof(WB_PassiveMessage_C_AddMessage) == 0x000020, "Wrong size on WB_PassiveMessage_C_AddMessage");
static_assert(offsetof(WB_PassiveMessage_C_AddMessage, Key) == 0x000000, "Member 'WB_PassiveMessage_C_AddMessage::Key' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_AddMessage, Value) == 0x000008, "Member 'WB_PassiveMessage_C_AddMessage::Value' has a wrong offset!");

// Function WB_PassiveMessage.WB_PassiveMessage_C.UpdateTextMaterial
// 0x00D0 (0x00D0 - 0x0000)
struct WB_PassiveMessage_C_UpdateTextMaterial final
{
public:
	struct FGameplayTag                           CurrentPassiveTag;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0030(0x0050)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo1;                  // 0x0080(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(WB_PassiveMessage_C_UpdateTextMaterial) == 0x000008, "Wrong alignment on WB_PassiveMessage_C_UpdateTextMaterial");
static_assert(sizeof(WB_PassiveMessage_C_UpdateTextMaterial) == 0x0000D0, "Wrong size on WB_PassiveMessage_C_UpdateTextMaterial");
static_assert(offsetof(WB_PassiveMessage_C_UpdateTextMaterial, CurrentPassiveTag) == 0x000000, "Member 'WB_PassiveMessage_C_UpdateTextMaterial::CurrentPassiveTag' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_UpdateTextMaterial, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'WB_PassiveMessage_C_UpdateTextMaterial::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_UpdateTextMaterial, CallFunc_HasTag_ReturnValue) == 0x000028, "Member 'WB_PassiveMessage_C_UpdateTextMaterial::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_UpdateTextMaterial, K2Node_MakeStruct_SlateFontInfo) == 0x000030, "Member 'WB_PassiveMessage_C_UpdateTextMaterial::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WB_PassiveMessage_C_UpdateTextMaterial, K2Node_MakeStruct_SlateFontInfo1) == 0x000080, "Member 'WB_PassiveMessage_C_UpdateTextMaterial::K2Node_MakeStruct_SlateFontInfo1' has a wrong offset!");

}


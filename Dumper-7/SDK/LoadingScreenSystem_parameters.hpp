#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingScreenSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LoadingScreenSystem.LoadingScreenManager.Initialize
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenManager_Initialize final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenManager_Initialize) == 0x000008, "Wrong alignment on LoadingScreenManager_Initialize");
static_assert(sizeof(LoadingScreenManager_Initialize) == 0x000008, "Wrong size on LoadingScreenManager_Initialize");
static_assert(offsetof(LoadingScreenManager_Initialize, GameInstance) == 0x000000, "Member 'LoadingScreenManager_Initialize::GameInstance' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.CreateManager
// 0x0018 (0x0018 - 0x0000)
struct LoadingScreenSystemBPLibrary_CreateManager final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULoadingScreenManager>      LoadingScreenManagerClass;                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadingScreenManager*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenSystemBPLibrary_CreateManager) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_CreateManager");
static_assert(sizeof(LoadingScreenSystemBPLibrary_CreateManager) == 0x000018, "Wrong size on LoadingScreenSystemBPLibrary_CreateManager");
static_assert(offsetof(LoadingScreenSystemBPLibrary_CreateManager, GameInstance) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_CreateManager::GameInstance' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_CreateManager, LoadingScreenManagerClass) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_CreateManager::LoadingScreenManagerClass' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_CreateManager, ReturnValue) == 0x000010, "Member 'LoadingScreenSystemBPLibrary_CreateManager::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetCacheFloat
// 0x000C (0x000C - 0x0000)
struct LoadingScreenSystemBPLibrary_GetCacheFloat final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetCacheFloat) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_GetCacheFloat");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetCacheFloat) == 0x00000C, "Wrong size on LoadingScreenSystemBPLibrary_GetCacheFloat");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheFloat, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetCacheFloat::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheFloat, OutValue) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_GetCacheFloat::OutValue' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheFloat, ReturnValue) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_GetCacheFloat::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetCacheInteger
// 0x000C (0x000C - 0x0000)
struct LoadingScreenSystemBPLibrary_GetCacheInteger final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetCacheInteger) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_GetCacheInteger");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetCacheInteger) == 0x00000C, "Wrong size on LoadingScreenSystemBPLibrary_GetCacheInteger");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheInteger, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetCacheInteger::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheInteger, OutValue) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_GetCacheInteger::OutValue' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheInteger, ReturnValue) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_GetCacheInteger::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetCacheRotator
// 0x0014 (0x0014 - 0x0000)
struct LoadingScreenSystemBPLibrary_GetCacheRotator final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               OutValue;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetCacheRotator) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_GetCacheRotator");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetCacheRotator) == 0x000014, "Wrong size on LoadingScreenSystemBPLibrary_GetCacheRotator");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheRotator, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetCacheRotator::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheRotator, OutValue) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_GetCacheRotator::OutValue' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheRotator, ReturnValue) == 0x000010, "Member 'LoadingScreenSystemBPLibrary_GetCacheRotator::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetCacheString
// 0x0020 (0x0020 - 0x0000)
struct LoadingScreenSystemBPLibrary_GetCacheString final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetCacheString) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_GetCacheString");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetCacheString) == 0x000020, "Wrong size on LoadingScreenSystemBPLibrary_GetCacheString");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheString, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetCacheString::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheString, OutValue) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_GetCacheString::OutValue' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheString, ReturnValue) == 0x000018, "Member 'LoadingScreenSystemBPLibrary_GetCacheString::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetCacheVector
// 0x0014 (0x0014 - 0x0000)
struct LoadingScreenSystemBPLibrary_GetCacheVector final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutValue;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetCacheVector) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_GetCacheVector");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetCacheVector) == 0x000014, "Wrong size on LoadingScreenSystemBPLibrary_GetCacheVector");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheVector, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetCacheVector::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheVector, OutValue) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_GetCacheVector::OutValue' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetCacheVector, ReturnValue) == 0x000010, "Member 'LoadingScreenSystemBPLibrary_GetCacheVector::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetLoadingScreenWidget
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenSystemBPLibrary_GetLoadingScreenWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetLoadingScreenWidget) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_GetLoadingScreenWidget");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetLoadingScreenWidget) == 0x000008, "Wrong size on LoadingScreenSystemBPLibrary_GetLoadingScreenWidget");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetLoadingScreenWidget, ReturnValue) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetLoadingScreenWidget::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.GetManager
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenSystemBPLibrary_GetManager final
{
public:
	class ULoadingScreenManager*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenSystemBPLibrary_GetManager) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_GetManager");
static_assert(sizeof(LoadingScreenSystemBPLibrary_GetManager) == 0x000008, "Wrong size on LoadingScreenSystemBPLibrary_GetManager");
static_assert(offsetof(LoadingScreenSystemBPLibrary_GetManager, ReturnValue) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_GetManager::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetCacheFloat
// 0x000C (0x000C - 0x0000)
struct LoadingScreenSystemBPLibrary_SetCacheFloat final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetCacheFloat) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_SetCacheFloat");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetCacheFloat) == 0x00000C, "Wrong size on LoadingScreenSystemBPLibrary_SetCacheFloat");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheFloat, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetCacheFloat::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheFloat, Value) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_SetCacheFloat::Value' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheFloat, ReturnValue) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_SetCacheFloat::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetCacheInteger
// 0x000C (0x000C - 0x0000)
struct LoadingScreenSystemBPLibrary_SetCacheInteger final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetCacheInteger) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_SetCacheInteger");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetCacheInteger) == 0x00000C, "Wrong size on LoadingScreenSystemBPLibrary_SetCacheInteger");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheInteger, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetCacheInteger::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheInteger, Value) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_SetCacheInteger::Value' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheInteger, ReturnValue) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_SetCacheInteger::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetCacheRotator
// 0x0014 (0x0014 - 0x0000)
struct LoadingScreenSystemBPLibrary_SetCacheRotator final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Value;                                             // 0x0004(0x000C)(ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetCacheRotator) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_SetCacheRotator");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetCacheRotator) == 0x000014, "Wrong size on LoadingScreenSystemBPLibrary_SetCacheRotator");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheRotator, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetCacheRotator::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheRotator, Value) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_SetCacheRotator::Value' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheRotator, ReturnValue) == 0x000010, "Member 'LoadingScreenSystemBPLibrary_SetCacheRotator::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetCacheString
// 0x0020 (0x0020 - 0x0000)
struct LoadingScreenSystemBPLibrary_SetCacheString final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetCacheString) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_SetCacheString");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetCacheString) == 0x000020, "Wrong size on LoadingScreenSystemBPLibrary_SetCacheString");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheString, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetCacheString::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheString, Value) == 0x000008, "Member 'LoadingScreenSystemBPLibrary_SetCacheString::Value' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheString, ReturnValue) == 0x000018, "Member 'LoadingScreenSystemBPLibrary_SetCacheString::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetCacheVector
// 0x0014 (0x0014 - 0x0000)
struct LoadingScreenSystemBPLibrary_SetCacheVector final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0004(0x000C)(ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetCacheVector) == 0x000004, "Wrong alignment on LoadingScreenSystemBPLibrary_SetCacheVector");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetCacheVector) == 0x000014, "Wrong size on LoadingScreenSystemBPLibrary_SetCacheVector");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheVector, Index_0) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetCacheVector::Index_0' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheVector, Value) == 0x000004, "Member 'LoadingScreenSystemBPLibrary_SetCacheVector::Value' has a wrong offset!");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetCacheVector, ReturnValue) == 0x000010, "Member 'LoadingScreenSystemBPLibrary_SetCacheVector::ReturnValue' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.SetupLoadingScreenWidgetClass
// 0x0008 (0x0008 - 0x0000)
struct LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass final
{
public:
	TSubclassOf<class UUserWidget>                NewWidgetClass;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass) == 0x000008, "Wrong alignment on LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass");
static_assert(sizeof(LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass) == 0x000008, "Wrong size on LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass");
static_assert(offsetof(LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass, NewWidgetClass) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_SetupLoadingScreenWidgetClass::NewWidgetClass' has a wrong offset!");

// Function LoadingScreenSystem.LoadingScreenSystemBPLibrary.StartManualLoadingScreen
// 0x0001 (0x0001 - 0x0000)
struct LoadingScreenSystemBPLibrary_StartManualLoadingScreen final
{
public:
	bool                                          bIgnoreInputLoadingScreen;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadingScreenSystemBPLibrary_StartManualLoadingScreen) == 0x000001, "Wrong alignment on LoadingScreenSystemBPLibrary_StartManualLoadingScreen");
static_assert(sizeof(LoadingScreenSystemBPLibrary_StartManualLoadingScreen) == 0x000001, "Wrong size on LoadingScreenSystemBPLibrary_StartManualLoadingScreen");
static_assert(offsetof(LoadingScreenSystemBPLibrary_StartManualLoadingScreen, bIgnoreInputLoadingScreen) == 0x000000, "Member 'LoadingScreenSystemBPLibrary_StartManualLoadingScreen::bIgnoreInputLoadingScreen' has a wrong offset!");

}


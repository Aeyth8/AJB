#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBSkillBase

#include "Basic.hpp"

#include "BP_AJBSkillBase_classes.hpp"
#include "BP_AJBSkillBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ExecuteUbergraph_BP_AJBSkillBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ExecuteUbergraph_BP_AJBSkillBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ExecuteUbergraph_BP_AJBSkillBase");

	Params::BP_AJBSkillBase_C_ExecuteUbergraph_BP_AJBSkillBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_FinishSkillAnimation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ROS_FinishSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_FinishSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.MC_FinishSkillAnimation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::MC_FinishSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "MC_FinishSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_CancelSkillAnimation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ROS_CancelSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_CancelSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.MC_CancelSkillAnimation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::MC_CancelSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "MC_CancelSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestPowerDown
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestPowerDown(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestPowerDown");

	Params::BP_AJBSkillBase_C_ROS_RequestPowerDown Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestPowerDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestPowerDown(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestPowerDown");

	Params::BP_AJBSkillBase_C_RequestPowerDown Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestTimeRewind
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestTimeRewind(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestTimeRewind");

	Params::BP_AJBSkillBase_C_ROS_RequestTimeRewind Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestTimeRewind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestTimeRewind(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestTimeRewind");

	Params::BP_AJBSkillBase_C_RequestTimeRewind Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestDecrease
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestDecrease(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestDecrease");

	Params::BP_AJBSkillBase_C_ROS_RequestDecrease Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestDecrease
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestDecrease(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestDecrease");

	Params::BP_AJBSkillBase_C_RequestDecrease Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Lock_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::Lock_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Lock_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.FinishSkillAnimation_Local
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::FinishSkillAnimation_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "FinishSkillAnimation_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.FinishSkillAnimation_All
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::FinishSkillAnimation_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "FinishSkillAnimation_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CancelSkillAnimation_Local
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::CancelSkillAnimation_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CancelSkillAnimation_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CancelSkillAnimation_All
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::CancelSkillAnimation_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CancelSkillAnimation_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestPowerUp
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestPowerUp(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestPowerUp");

	Params::BP_AJBSkillBase_C_ROS_RequestPowerUp Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestPowerUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestPowerUp(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestPowerUp");

	Params::BP_AJBSkillBase_C_RequestPowerUp Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Unlock_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::Unlock_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Unlock_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRep_bActive
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRep_bActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRep_bActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnDisconnected
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::StateBeginPlay(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "StateBeginPlay");

	Params::BP_AJBSkillBase_C_StateBeginPlay Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnSetViewTargetToNewSpectatorForSkillFlowState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnSetViewTargetToNewSpectatorForSkillFlowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnSetViewTargetToNewSpectatorForSkillFlowState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CheckSkillFlowState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldRestore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::CheckSkillFlowState(bool bShouldRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CheckSkillFlowState");

	Params::BP_AJBSkillBase_C_CheckSkillFlowState Parms{};

	Parms.bShouldRestore = bShouldRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.MC_ReadySkill
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::MC_ReadySkill(class UBP_AJBSkillBase_C* ReadySkill_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "MC_ReadySkill");

	Params::BP_AJBSkillBase_C_MC_ReadySkill Parms{};

	Parms.ReadySkill_0 = ReadySkill_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_ReadySkill
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AJBSkillBase_C*               ReadySkill_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_ReadySkill(class UBP_AJBSkillBase_C* ReadySkill_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_ReadySkill");

	Params::BP_AJBSkillBase_C_ROS_ReadySkill Parms{};

	Parms.ReadySkill_0 = ReadySkill_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.InitializeComponentBP
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::InitializeComponentBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "InitializeComponentBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestSetLeftUseNum
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestSetLeftUseNum(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestSetLeftUseNum");

	Params::BP_AJBSkillBase_C_RequestSetLeftUseNum Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestIncrease
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestIncrease(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestIncrease");

	Params::BP_AJBSkillBase_C_ROS_RequestIncrease Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_RequestTimeExtension
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ROS_RequestTimeExtension(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_RequestTimeExtension");

	Params::BP_AJBSkillBase_C_ROS_RequestTimeExtension Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestIncrease
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestIncrease(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestIncrease");

	Params::BP_AJBSkillBase_C_RequestIncrease Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RequestTimeExtension
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RequestTimeExtension(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RequestTimeExtension");

	Params::BP_AJBSkillBase_C_RequestTimeExtension Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnStartSelfSpectatorReplicateProperties
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnStartSelfSpectatorReplicateProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnStartSelfSpectatorReplicateProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ROS_ReplicatePropertiesForUI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LeftUseNum_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     GameplayTagContainer_0                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AJBSkillBase_C::ROS_ReplicatePropertiesForUI(int32 LeftUseNum_0, const struct FGameplayTagContainer& GameplayTagContainer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ROS_ReplicatePropertiesForUI");

	Params::BP_AJBSkillBase_C_ROS_ReplicatePropertiesForUI Parms{};

	Parms.LeftUseNum_0 = LeftUseNum_0;
	Parms.GameplayTagContainer_0 = std::move(GameplayTagContainer_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ReplicatePropertiesForUI
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ReplicatePropertiesForUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ReplicatePropertiesForUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.InactiveWidget
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::InactiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "InactiveWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ActiveWidget
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ActiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ActiveWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ReceiveTick");

	Params::BP_AJBSkillBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.RemoveGameplayTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::RemoveGameplayTag(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "RemoveGameplayTag");

	Params::BP_AJBSkillBase_C_RemoveGameplayTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.AddGameplayTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::AddGameplayTag(const struct FGameplayTag& Tag, class UObject* Operator, class UObject* Target, const struct FGameplayTag& CauserType, int32 SerialNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "AddGameplayTag");

	Params::BP_AJBSkillBase_C_AddGameplayTag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Operator = Operator;
	Parms.Target = Target;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber_0 = SerialNumber_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnReady
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBSkillBase_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRelatedCharacterBecomeLastSurvivor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRelatedCharacterBecomeLastSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRelatedCharacterBecomeLastSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "NotifyTheWorld");

	Params::BP_AJBSkillBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.AddGameplayTagWithFloat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   FloatValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::AddGameplayTagWithFloat(const struct FGameplayTag& Tag, float FloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "AddGameplayTagWithFloat");

	Params::BP_AJBSkillBase_C_AddGameplayTagWithFloat Parms{};

	Parms.Tag = std::move(Tag);
	Parms.FloatValue = FloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CanUseSkill
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer*           TagContainer                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBSkillBase_C::CanUseSkill(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CanUseSkill");

	Params::BP_AJBSkillBase_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);

	return Parms.ReturnValue;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.UseMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ConsumptionMP_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::UseMP(float ConsumptionMP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "UseMP");

	Params::BP_AJBSkillBase_C_UseMP Parms{};

	Parms.ConsumptionMP_0 = ConsumptionMP_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.PhaseUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::PhaseUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "PhaseUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ConsumeSkill
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ConsumeSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ConsumeSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.IsSatisfiedLeftNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsSatisfied                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::IsSatisfiedLeftNum(bool* IsSatisfied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "IsSatisfiedLeftNum");

	Params::BP_AJBSkillBase_C_IsSatisfiedLeftNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSatisfied != nullptr)
		*IsSatisfied = Parms.IsSatisfied;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NextState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ChangeState(uint8 NextState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ChangeState");

	Params::BP_AJBSkillBase_C_ChangeState Parms{};

	Parms.NextState = NextState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.UnLock
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::UnLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "UnLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CheckSkillState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bMatch                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::CheckSkillState(uint8 State, bool* bMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CheckSkillState");

	Params::BP_AJBSkillBase_C_CheckSkillState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (bMatch != nullptr)
		*bMatch = Parms.bMatch;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Increase_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::Increase_Local(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Increase_Local");

	Params::BP_AJBSkillBase_C_Increase_Local Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ReserveInactive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ReserveInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ReserveInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.InitializeVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.UnreserveInactive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::UnreserveInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "UnreserveInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CheckSkillAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBSkillBase_C::CheckSkillAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CheckSkillAction");

	Params::BP_AJBSkillBase_C_CheckSkillAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CheckPossibleInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bPossibleInteract                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::CheckPossibleInteract(bool* bPossibleInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CheckPossibleInteract");

	Params::BP_AJBSkillBase_C_CheckPossibleInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossibleInteract != nullptr)
		*bPossibleInteract = Parms.bPossibleInteract;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.DuringTheWorld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::DuringTheWorld(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "DuringTheWorld");

	Params::BP_AJBSkillBase_C_DuringTheWorld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRep_(ForSkipOwner)LeftUseNum
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRep__ForSkipOwner_LeftUseNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRep_(ForSkipOwner)LeftUseNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRep_(ForSkipOwner)GamePlayTagContainer
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRep__ForSkipOwner_GamePlayTagContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRep_(ForSkipOwner)GamePlayTagContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.TryToSpeakVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              VoiceTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// E_VoiceProcessType                      VoiceProcessType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpeakEvenIfNotAlive                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpeakEvenIfDuringTheWorld                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSpeakEvenIfNotLocalEnv                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAlsoSpeakOnPairEnv                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreIfDuringTheWorld                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   bWillBeSpoken                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::TryToSpeakVoice(const struct FGameplayTag& VoiceTag, E_VoiceProcessType VoiceProcessType, bool bSpeakEvenIfNotAlive, bool bSpeakEvenIfDuringTheWorld, bool bSpeakEvenIfNotLocalEnv, bool bAlsoSpeakOnPairEnv, bool bIgnoreIfDuringTheWorld, bool* bWillBeSpoken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "TryToSpeakVoice");

	Params::BP_AJBSkillBase_C_TryToSpeakVoice Parms{};

	Parms.VoiceTag = std::move(VoiceTag);
	Parms.VoiceProcessType = VoiceProcessType;
	Parms.bSpeakEvenIfNotAlive = bSpeakEvenIfNotAlive;
	Parms.bSpeakEvenIfDuringTheWorld = bSpeakEvenIfDuringTheWorld;
	Parms.bSpeakEvenIfNotLocalEnv = bSpeakEvenIfNotLocalEnv;
	Parms.bAlsoSpeakOnPairEnv = bAlsoSpeakOnPairEnv;
	Parms.bIgnoreIfDuringTheWorld = bIgnoreIfDuringTheWorld;

	UObject::ProcessEvent(Func, &Parms);

	if (bWillBeSpoken != nullptr)
		*bWillBeSpoken = Parms.bWillBeSpoken;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ReserveBreakVoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              VoiceEventTagToStop                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::ReserveBreakVoice(const struct FGameplayTag& VoiceEventTagToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ReserveBreakVoice");

	Params::BP_AJBSkillBase_C_ReserveBreakVoice Parms{};

	Parms.VoiceEventTagToStop = std::move(VoiceEventTagToStop);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.AddMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RecoveryMP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::AddMP(float RecoveryMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "AddMP");

	Params::BP_AJBSkillBase_C_AddMP Parms{};

	Parms.RecoveryMP = RecoveryMP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ChangeEnableSeal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::ChangeEnableSeal(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ChangeEnableSeal");

	Params::BP_AJBSkillBase_C_ChangeEnableSeal Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.AggregateEffectiveCountWithEffectiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::AggregateEffectiveCountWithEffectiveState(uint8 NewState, uint8 PreState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "AggregateEffectiveCountWithEffectiveState");

	Params::BP_AJBSkillBase_C_AggregateEffectiveCountWithEffectiveState Parms{};

	Parms.NewState = NewState;
	Parms.PreState = PreState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GenerateSerialNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  SerialNumber_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GenerateSerialNumber(int32* SerialNumber_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GenerateSerialNumber");

	Params::BP_AJBSkillBase_C_GenerateSerialNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SerialNumber_0 != nullptr)
		*SerialNumber_0 = Parms.SerialNumber_0;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.TimeExtension_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::TimeExtension_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "TimeExtension_Server");

	Params::BP_AJBSkillBase_C_TimeExtension_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Increase_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::Increase_Server(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Increase_Server");

	Params::BP_AJBSkillBase_C_Increase_Server Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.SetLeftUseNum_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLeftUseNum                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::SetLeftUseNum_Local(int32 NewLeftUseNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "SetLeftUseNum_Local");

	Params::BP_AJBSkillBase_C_SetLeftUseNum_Local Parms{};

	Parms.NewLeftUseNum = NewLeftUseNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ApplySkillParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ApplySkillParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ApplySkillParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRep_RepSkillState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRep_RepSkillState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRep_RepSkillState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.OnRep_RepSkillFlowState
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::OnRep_RepSkillFlowState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "OnRep_RepSkillFlowState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.CheckStateCanAccompany
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCanAccompany                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::CheckStateCanAccompany(bool* bCanAccompany)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "CheckStateCanAccompany");

	Params::BP_AJBSkillBase_C_CheckStateCanAccompany Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanAccompany != nullptr)
		*bCanAccompany = Parms.bCanAccompany;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.MPUpdateSettingOnActivate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::MPUpdateSettingOnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "MPUpdateSettingOnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.PowerUpServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::PowerUpServer(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "PowerUpServer");

	Params::BP_AJBSkillBase_C_PowerUpServer Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetSkillTypeAsName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            Name_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetSkillTypeAsName(class FName* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetSkillTypeAsName");

	Params::BP_AJBSkillBase_C_GetSkillTypeAsName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = Parms.Name_0;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.TryNotifyUltimateSkillUsedServer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::TryNotifyUltimateSkillUsedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "TryNotifyUltimateSkillUsedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetPoliticConsumptionMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  ConsumptionMP_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetPoliticConsumptionMP(float* ConsumptionMP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetPoliticConsumptionMP");

	Params::BP_AJBSkillBase_C_GetPoliticConsumptionMP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ConsumptionMP_0 != nullptr)
		*ConsumptionMP_0 = Parms.ConsumptionMP_0;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ShouldCancelOnLandingStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bShouldCancel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBSkillBase_C::ShouldCancelOnLandingStop(bool* bShouldCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ShouldCancelOnLandingStop");

	Params::BP_AJBSkillBase_C_ShouldCancelOnLandingStop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldCancel != nullptr)
		*bShouldCancel = Parms.bShouldCancel;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.s)
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Param_s__0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::s__0(float* Param_s__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "s)");

	Params::BP_AJBSkillBase_C_s__0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_s__0 != nullptr)
		*Param_s__0 = Parms.Param_s__0;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Lock
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Lock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Decrease_Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::Decrease_Local(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Decrease_Local");

	Params::BP_AJBSkillBase_C_Decrease_Local Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetPossibleUseCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NecessaryCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PossibleUseCount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetPossibleUseCount(int32 NecessaryCount, int32* PossibleUseCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetPossibleUseCount");

	Params::BP_AJBSkillBase_C_GetPossibleUseCount Parms{};

	Parms.NecessaryCount = NecessaryCount;

	UObject::ProcessEvent(Func, &Parms);

	if (PossibleUseCount != nullptr)
		*PossibleUseCount = Parms.PossibleUseCount;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.Decrease_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::Decrease_Server(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "Decrease_Server");

	Params::BP_AJBSkillBase_C_Decrease_Server Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.TimeRewind_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::TimeRewind_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "TimeRewind_Server");

	Params::BP_AJBSkillBase_C_TimeRewind_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.PowerDown_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::PowerDown_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "PowerDown_Server");

	Params::BP_AJBSkillBase_C_PowerDown_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.ResetUseCount
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBSkillBase_C::ResetUseCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "ResetUseCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetGameplayTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer*           TagContainerCopy                                       (Parm, OutParm)

void UBP_AJBSkillBase_C::GetGameplayTags(struct FGameplayTagContainer* TagContainerCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetGameplayTags");

	Params::BP_AJBSkillBase_C_GetGameplayTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainerCopy != nullptr)
		*TagContainerCopy = std::move(Parms.TagContainerCopy);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetPassiveSkillTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    PassiveSkillTag_0                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetPassiveSkillTag(struct FGameplayTag* PassiveSkillTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetPassiveSkillTag");

	Params::BP_AJBSkillBase_C_GetPassiveSkillTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveSkillTag_0 != nullptr)
		*PassiveSkillTag_0 = std::move(Parms.PassiveSkillTag_0);
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetDuration");

	Params::BP_AJBSkillBase_C_GetDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.GetCauserOwnerCharacterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C**        CharacterBP                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBSkillBase_C::GetCauserOwnerCharacterBP(class ABP_AJBInGameCharacter_C** CharacterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "GetCauserOwnerCharacterBP");

	Params::BP_AJBSkillBase_C_GetCauserOwnerCharacterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterBP != nullptr)
		*CharacterBP = Parms.CharacterBP;
}


// Function BP_AJBSkillBase.BP_AJBSkillBase_C.IsInPreview
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBSkillBase_C::IsInPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBSkillBase_C", "IsInPreview");

	Params::BP_AJBSkillBase_C_IsInPreview Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


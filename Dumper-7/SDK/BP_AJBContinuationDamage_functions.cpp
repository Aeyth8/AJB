#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBContinuationDamage

#include "Basic.hpp"

#include "BP_AJBContinuationDamage_classes.hpp"
#include "BP_AJBContinuationDamage_parameters.hpp"


namespace SDK
{

// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.ExecuteUbergraph_BP_AJBContinuationDamage
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::ExecuteUbergraph_BP_AJBContinuationDamage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "ExecuteUbergraph_BP_AJBContinuationDamage");

	Params::BP_AJBContinuationDamage_C_ExecuteUbergraph_BP_AJBContinuationDamage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.UpdateStandDamageDisplayVisibility (Server)
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBContinuationDamage_C::UpdateStandDamageDisplayVisibility__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "UpdateStandDamageDisplayVisibility (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.MC_ApplyDamage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_AJBContinuationDamage_C::MC_ApplyDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "MC_ApplyDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.UpdateIntervalTimeServer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  DamageCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::UpdateIntervalTimeServer(float DeltaSeconds, int32* DamageCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "UpdateIntervalTimeServer");

	Params::BP_AJBContinuationDamage_C_UpdateIntervalTimeServer Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (DamageCount != nullptr)
		*DamageCount = Parms.DamageCount;
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.TryApplyDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::TryApplyDamage(int32 DamageCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "TryApplyDamage");

	Params::BP_AJBContinuationDamage_C_TryApplyDamage Parms{};

	Parms.DamageCount = DamageCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.PrintStringDamageInterval
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bPrintToScreen                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPrintToLog                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FLinearColor&              TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::PrintStringDamageInterval(const class FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "PrintStringDamageInterval");

	Params::BP_AJBContinuationDamage_C_PrintStringDamageInterval Parms{};

	Parms.inString = std::move(inString);
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = std::move(TextColor);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.MakeDamageDisplayProperty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAJBDamageDisplayProperty*       CharacterDamageDisplayProperty                         (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_AJBContinuationDamage_C::MakeDamageDisplayProperty(struct FAJBDamageDisplayProperty* CharacterDamageDisplayProperty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "MakeDamageDisplayProperty");

	Params::BP_AJBContinuationDamage_C_MakeDamageDisplayProperty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterDamageDisplayProperty != nullptr)
		*CharacterDamageDisplayProperty = std::move(Parms.CharacterDamageDisplayProperty);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.OnMC_ActivePassive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              CauserType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::OnMC_ActivePassive(class UObject* Causer, const struct FGameplayTag& CauserType, int32 SerialNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "OnMC_ActivePassive");

	Params::BP_AJBContinuationDamage_C_OnMC_ActivePassive Parms{};

	Parms.Causer = Causer;
	Parms.CauserType = std::move(CauserType);
	Parms.SerialNumber = SerialNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.OnActionInactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBContinuationDamage_C::OnActionInactivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "OnActionInactivate");

	Params::BP_AJBContinuationDamage_C_OnActionInactivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.OnActionActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBContinuationDamage_C::OnActionActivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "OnActionActivate");

	Params::BP_AJBContinuationDamage_C_OnActionActivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.ChangeParticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBContinuationDamage_C::ChangeParticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "ChangeParticleVisibility");

	Params::BP_AJBContinuationDamage_C_ChangeParticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBContinuationDamage_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "ReceiveTick");

	Params::BP_AJBContinuationDamage_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBContinuationDamage.BP_AJBContinuationDamage_C.TryChangeParticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBContinuationDamage_C::TryChangeParticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBContinuationDamage_C", "TryChangeParticleVisibility");

	Params::BP_AJBContinuationDamage_C_TryChangeParticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}

}


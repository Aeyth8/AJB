#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBMovement_Paramed

#include "Basic.hpp"

#include "BTS_AJBMovement_Paramed_classes.hpp"
#include "BTS_AJBMovement_Paramed_parameters.hpp"


namespace SDK
{

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ExecuteUbergraph_BTS_AJBMovement_Paramed
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovement_Paramed_C::ExecuteUbergraph_BTS_AJBMovement_Paramed(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "ExecuteUbergraph_BTS_AJBMovement_Paramed");

	Params::BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.UpdateInput
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::UpdateInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "UpdateInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveDeactivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovement_Paramed_C::ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "ReceiveDeactivationAI");

	Params::BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.InputMovementOnFixedDirection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::InputMovementOnFixedDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "InputMovementOnFixedDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.InputMovementLookingForDir
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::InputMovementLookingForDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "InputMovementLookingForDir");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.InputMovementLookingAtTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovement_Paramed_C::InputMovementLookingAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "InputMovementLookingAtTarget");

	Params::BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.InputMovementDefault
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::InputMovementDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "InputMovementDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveActivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovement_Paramed_C::ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "ReceiveActivationAI");

	Params::BTS_AJBMovement_Paramed_C_ReceiveActivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovement_Paramed_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "ReceiveTickAI");

	Params::BTS_AJBMovement_Paramed_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.CloseGateOpenDoorIfInteractable
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::CloseGateOpenDoorIfInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "CloseGateOpenDoorIfInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.OpenGateOpenDoorIfInteractable
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::OpenGateOpenDoorIfInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "OpenGateOpenDoorIfInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.OpenDoorIfInteractable
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::OpenDoorIfInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "OpenDoorIfInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.CloseGateErrorCorrection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::CloseGateErrorCorrection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "CloseGateErrorCorrection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.AvoidCollision
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::AvoidCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "AvoidCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.OpenGateErrorCorrection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::OpenGateErrorCorrection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "OpenGateErrorCorrection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.TestRandomInput
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::TestRandomInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "TestRandomInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.RequestToCorrectErrors
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovement_Paramed_C::RequestToCorrectErrors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "RequestToCorrectErrors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedDefault
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    DestinationKey                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetYawDiffNormalizedDefault(const struct FBlackboardKeySelector& DestinationKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetYawDiffNormalizedDefault");

	Params::BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault Parms{};

	Parms.DestinationKey = std::move(DestinationKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedLookAtTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetYawDiffNormalizedLookAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetYawDiffNormalizedLookAtTarget");

	Params::BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedLookAtDir
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    LookAtDirKey                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetYawDiffNormalizedLookAtDir(const struct FBlackboardKeySelector& LookAtDirKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetYawDiffNormalizedLookAtDir");

	Params::BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir Parms{};

	Parms.LookAtDirKey = std::move(LookAtDirKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedForward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetPitchDiffNormalizedForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetPitchDiffNormalizedForward");

	Params::BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedLookAtTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetPitchDiffNormalizedLookAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetPitchDiffNormalizedLookAtTarget");

	Params::BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedLookAtDir
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    LookAtDirKey                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovement_Paramed_C::GetPitchDiffNormalizedLookAtDir(const struct FBlackboardKeySelector& LookAtDirKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovement_Paramed_C", "GetPitchDiffNormalizedLookAtDir");

	Params::BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir Parms{};

	Parms.LookAtDirKey = std::move(LookAtDirKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


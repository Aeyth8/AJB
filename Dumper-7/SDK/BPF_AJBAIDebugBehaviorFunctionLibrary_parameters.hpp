#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBAIDebugBehaviorFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetAIDebugComponent
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIDebugComponent_C*              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent) == 0x000030, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, __WorldContext) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, ReturnValue) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, Exists) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetAIDebugComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.IfDebugDrawOnTask
// 0x0028 (0x0028 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetAIDebugComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAIDebugComponent_Exists;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfDebugDrawCurrentTask_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask) == 0x000028, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, __WorldContext) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, ReturnValue) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, CallFunc_GetAIDebugComponent_ReturnValue) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::CallFunc_GetAIDebugComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, CallFunc_GetAIDebugComponent_Exists) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::CallFunc_GetAIDebugComponent_Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask, CallFunc_IfDebugDrawCurrentTask_ReturnValue) == 0x000021, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_IfDebugDrawOnTask::CallFunc_IfDebugDrawCurrentTask_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDrawLineBox
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox final
{
public:
	bool                                          bDebugDrawFlag;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LineStart;                                         // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineEnd;                                           // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x001C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0028(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FLinearColor                           LineColor;                                         // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineThickness;                                     // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoxThickness;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox) == 0x000058, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, bDebugDrawFlag) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::bDebugDrawFlag' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, LineStart) == 0x000004, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::LineStart' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, LineEnd) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::LineEnd' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, BoxExtent) == 0x00001C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, BoxRotation) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, LineColor) == 0x000034, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::LineColor' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, Duration) == 0x000044, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::Duration' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, LineThickness) == 0x000048, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::LineThickness' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, BoxThickness) == 0x00004C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::BoxThickness' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox, __WorldContext) == 0x000050, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawLineBox::__WorldContext' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDrawPathPointLineBox
// 0x00A0 (0x00A0 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox final
{
public:
	class UNavigationPath*                        NavigationPath;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDrawFlag;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoxExtent;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FLinearColor                           ColorOnTheWay;                                     // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorDestination;                                  // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineThickness;                                     // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoxThickness;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastLocation;                                      // 0x0058(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0090(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox) == 0x0000A0, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, NavigationPath) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::NavigationPath' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, bDebugDrawFlag) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::bDebugDrawFlag' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, BoxExtent) == 0x00000C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, BoxRotation) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, ColorOnTheWay) == 0x000024, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::ColorOnTheWay' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, ColorDestination) == 0x000034, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::ColorDestination' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, Duration) == 0x000044, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::Duration' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, LineThickness) == 0x000048, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::LineThickness' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, BoxThickness) == 0x00004C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::BoxThickness' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, __WorldContext) == 0x000050, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, LastLocation) == 0x000058, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::LastLocation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Array_LastIndex_ReturnValue) == 0x000068, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, Temp_bool_Variable) == 0x00007C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Array_Get_Item) == 0x000080, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_Less_IntInt_ReturnValue1) == 0x00008C, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008D, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox, K2Node_Select_Default) == 0x000090, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDrawPathPointLineBox::K2Node_Select_Default' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForMovement
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Status;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetAIDebugComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAIDebugComponent_Exists;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement) == 0x000058, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, Status) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::Status' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, __WorldContext) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, CallFunc_GetAIDebugComponent_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::CallFunc_GetAIDebugComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, CallFunc_GetAIDebugComponent_Exists) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::CallFunc_GetAIDebugComponent_Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, CallFunc_Concat_StrStr_ReturnValue1) == 0x000040, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForAction
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Status;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetAIDebugComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAIDebugComponent_Exists;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction) == 0x000058, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, Status) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::Status' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, __WorldContext) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, CallFunc_GetAIDebugComponent_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::CallFunc_GetAIDebugComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, CallFunc_GetAIDebugComponent_Exists) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::CallFunc_GetAIDebugComponent_Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, CallFunc_Concat_StrStr_ReturnValue1) == 0x000040, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugSetNodeStatusForLastError
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Status;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetAIDebugComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAIDebugComponent_Exists;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError) == 0x000058, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, Status) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::Status' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, __WorldContext) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, CallFunc_GetAIDebugComponent_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::CallFunc_GetAIDebugComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, CallFunc_GetAIDebugComponent_Exists) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::CallFunc_GetAIDebugComponent_Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, CallFunc_Concat_StrStr_ReturnValue1) == 0x000040, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugSetNodeStatusForLastError::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugGetStringFromGameplayTagContainer
// 0x0138 (0x0138 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer final
{
public:
	struct FGameplayTagContainer                  Container;                                         // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 ReplaceFrom;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReplaceTo;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue1;                     // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue2;                     // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue3;                     // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue4;                     // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue5;                     // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue6;                     // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue7;                     // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue8;                     // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue9;                     // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue10;                    // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue11;                    // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer) == 0x000138, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, Container) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::Container' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, ReplaceFrom) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::ReplaceFrom' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, ReplaceTo) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::ReplaceTo' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, __WorldContext) == 0x000040, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, ReturnValue) == 0x000048, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, Result) == 0x000058, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::Result' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue) == 0x000068, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue) == 0x000078, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue1) == 0x000088, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue2) == 0x000098, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue3) == 0x0000A8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue4) == 0x0000B8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue5) == 0x0000C8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue6) == 0x0000D8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue7) == 0x0000E8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue8) == 0x0000F8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue9) == 0x000108, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue10) == 0x000118, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer, CallFunc_Replace_ReturnValue11) == 0x000128, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugGetStringFromGameplayTagContainer::CallFunc_Replace_ReturnValue11' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_GetLogColor
// 0x00D8 (0x00D8 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor final
{
public:
	struct FGameplayTag                           AI_Log_Color;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, struct FLinearColor> ColorConstants;                                   // 0x0020(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<struct FGameplayTag, struct FLinearColor> K2Node_MakeVariable_MakeVariableOutput;           // 0x0070(0x0050)(ZeroConstructor)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x00C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor) == 0x0000D8, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, AI_Log_Color) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::AI_Log_Color' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, __WorldContext) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, ReturnValue) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, ColorConstants) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::ColorConstants' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000070, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_GetLogColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.AI_DebugDiluteColor
// 0x00E8 (0x00E8 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FLinearColor>        Colors;                                            // 0x0028(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<class FName, struct FLinearColor>        K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)(ZeroConstructor)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x00C8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor) == 0x0000E8, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, Color) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::Color' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, __WorldContext) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, ReturnValue) == 0x000018, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, Colors) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::Colors' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x0000C8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor, K2Node_MakeStruct_LinearColor) == 0x0000D8, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_AI_DebugDiluteColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetDebugAICaption
// 0x0040 (0x0040 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption final
{
public:
	class AAIController*                          AI_Controller;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class UBP_AJBAIDebugComponent_C*              CallFunc_GetAIDebugComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAIDebugComponent_Exists;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStatusCaption_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption) == 0x000040, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, __WorldContext) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, ReturnValue) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, CallFunc_GetAIDebugComponent_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::CallFunc_GetAIDebugComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, CallFunc_GetAIDebugComponent_Exists) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::CallFunc_GetAIDebugComponent_Exists' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption, CallFunc_GetStatusCaption_ReturnValue) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaption::CallFunc_GetStatusCaption_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIDebugBehaviorFunctionLibrary.BPF_AJBAIDebugBehaviorFunctionLibrary_C.GetDebugAICaptionFromComponent
// 0x0048 (0x0048 - 0x0000)
struct BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent final
{
public:
	class UActorComponent*                        Component_On_AI_Controller;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugAICaption_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent) == 0x000008, "Wrong alignment on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent");
static_assert(sizeof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent) == 0x000048, "Wrong size on BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, Component_On_AI_Controller) == 0x000000, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::Component_On_AI_Controller' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, __WorldContext) == 0x000008, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, ReturnValue) == 0x000010, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, K2Node_DynamicCast_AsAIController) == 0x000028, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent, CallFunc_GetDebugAICaption_ReturnValue) == 0x000038, "Member 'BPF_AJBAIDebugBehaviorFunctionLibrary_C_GetDebugAICaptionFromComponent::CallFunc_GetDebugAICaption_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTeleportationSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTeleportationSkill.BP_AJBTeleportationSkill_C
// 0x0150 (0x0338 - 0x01E8)
class UBP_AJBTeleportationSkill_C : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBTeleportationSkill_C;         // 0x01E8(0x0008)(Transient, DuplicateTransient)
	float                                         WaitingTime;                                       // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClearingTime;                                      // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistance;                                  // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           BeforeTeleportationParticleTag;                    // 0x0200(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AfterTeleportationParticleTag;                     // 0x0208(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempBeforeLocation;                                // 0x0210(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           StandWaitingMontage;                               // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PostProcessIndex;                                  // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBGlimpseOfForceEffect_C*          EffectActor;                                       // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PreviewObjectClass;                                // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 EffectClass;                                       // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActionGionTag;                                     // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StandClearingMontage;                              // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CharacterWaitingMontage;                           // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CharacterClearingMontage;                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceStartHeightBuffer_cm_;                        // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceEndHeightBuffer_cm_;                          // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedLocation;                                    // 0x0270(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedDirection;                                   // 0x027C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedLength;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedAngle;                                       // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedDefaultDirection;                            // 0x0290(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlopeTraceForwardBuffer_cm_;                       // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle_Debug;                                 // 0x02A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                CachedSlopeDirection;                              // 0x02A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedFirstFlatland;                              // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReserveWaiting;                                   // 0x02B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PreviewObject;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalDecidedLocation;                              // 0x02C0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurnSpeed;                                   // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraLookupSpeed;                                 // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLowerLimit_cm_;                               // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviewObjectTraceBuffer_cm_;                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TempSidingRemovedFactorTag;                        // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TempSidingRemovedFactorValue;                      // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PreviewParticleTag;                                // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          PreviewParticle;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviewParticleTraceBuffer_cm_;                    // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SETag;                                             // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableGroundingTrace;                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundingTraceUnderBuffer_cm_;                     // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection_StandClearingMontage;              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InputCameraOnlyFactorTag_TeleportationSkill;       // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSelf_LocalOnly;                             // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreCharacter;                                  // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x2];                                      // 0x032A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovementDistanceScale;                             // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalMovementDistance;                        // 0x0330(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBTeleportationSkill(int32 EntryPoint);
	void DestroyPreviewObject_Local();
	void SpawnPreviewObject_Local();
	void Debug_DrawTargetLocation_Impl();
	void Debug_DrawTargetLocation(bool bEnable);
	void UpdateStandMeshTransform();
	void MC_BeginState_Ready();
	void ROS_BeginState_Ready();
	void OnBeginState_Ready_OneShot();
	void BeginState_Ready();
	void OnBeginState_Action_OneShot(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void OnBeginState_Waiting_OneShot();
	void MC_StateEnd_Server(bool bCancel);
	void StateEnd_Server(bool bCancel);
	void TickState_Ready();
	void OnBeginState_Ready();
	void MC_BeginState_Waiting();
	void ROS_BeginState_Waiting();
	void BeginState_Waiting();
	void MC_StateEnd(bool bCancel);
	void ROS_StateEnd(bool bCancel);
	void OnBeginState_Clearing();
	void OnStateEnd(bool bCancel);
	void StateEnd(bool bCancel);
	void TickState_Clearing();
	void TickState_Waiting();
	void OnBeginState_Action();
	void BeginState_Action();
	void MC_Teleportation(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void ROS_Teleportation(const struct FVector& BeforeLocation, const struct FVector& AfterLocation);
	void OnBeginState_Waiting();
	void StateTick(float DeltaSeconds);
	void ChangeMovementDistanceScale(float Value);
	void ChangeCharacterMoveSpeedByStand(float Value);
	void ChangeStandLaunchVelocityScale(float Value);
	void ChangeStandMovementDistanceScale(float Value);
	void OnCompleted_7B45FB9D406D5826C78546BCC2D70BE3(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCC2D70BE3(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCC2D70BE3(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCC2D70BE3(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCC2D70BE3(class FName NotifyName);
	void OnCompleted_7B45FB9D406D5826C78546BCC331AC50(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BCC331AC50(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BCC331AC50(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BCC331AC50(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BCC331AC50(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99BA8805AA7(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99BA8805AA7(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99BA8805AA7(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99BA8805AA7(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99BA8805AA7(class FName NotifyName);
	void OnCompleted_7DDD297442D7CC4375E0C99B1AB82E8A(class FName NotifyName);
	void OnBlendOut_7DDD297442D7CC4375E0C99B1AB82E8A(class FName NotifyName);
	void OnInterrupted_7DDD297442D7CC4375E0C99B1AB82E8A(class FName NotifyName);
	void OnNotifyBegin_7DDD297442D7CC4375E0C99B1AB82E8A(class FName NotifyName);
	void OnNotifyEnd_7DDD297442D7CC4375E0C99B1AB82E8A(class FName NotifyName);
	void CalcLocation(const struct FVector& StartLocation, const struct FVector& Direction, struct FVector* Location);
	void Teleportation(const struct FVector& NewLocation);
	void FirePostProcess();
	void TraceFlatland(const struct FVector& StartLocation, const struct FVector& Direction, float Length, float Angle, bool* bContinue, struct FVector* NewLocation, struct FVector* NewDirection, float* NewLength, float* NewAngle);
	void TraceSlope(const struct FVector& StartLocation, const struct FVector& Direction, float Length, struct FVector* NewLocation, struct FVector* NewDirection, float* NewLength);
	void UpdateTempInfo(const struct FVector& StartLocation, const struct FVector& Direction, float Length, float Angle);
	void GetObjectTypes(TArray<EObjectTypeQuery>* ObjectTypes);
	void TraceLanding(const struct FVector& StartLocation, struct FVector* NewLocation);
	void TraceHover(const struct FVector& Start, bool* bContinue);
	void ReserveWaiting();
	struct FTransform CalcLocalDecidedTransform();
	void ProcessingPreview(const struct FVector& Location, float PreviewTraceBuffer, struct FVector* NewLocation);
	void CalcLocation_Server(const struct FVector& BeforeLocation, const struct FVector& AfterLocation, struct FVector* NewLocation);
	void TraceGrounding(const struct FVector& StartLocation, const struct FVector& DefaultDirection, bool bShouldSpace, struct FVector* NewLocation);
	void SetPreviewVisibility(bool NewVisibility);
	void GetPoliticMovementDistance(float* MovementDistance_0);
	void UpdatePreviewObjectsTransform();
	void TraceSpacing(const struct FVector& Start, const struct FVector& DefaultDirection, bool* bCanSpace);
	void CheckPossibleTeleport_Server(bool* bPossible);
	void DebugDrawFlatland(const struct FVector& NewLocation, const struct FVector& ImpactNormal, const struct FVector& CurrentDirection, const struct FVector& NewDirection, float ConsumeAngle);
	void CancelSkillSelf();
	void CheckCharacterCondition(class ABP_AJBInGameCharacter_C* CharacterBP, bool* bIgnore);
	void OnDisconnected();
	void StateBeginPlay(bool bShouldRestore);
	void OnCancel();
	void OnActive();
	void OnReady();
	void ReceiveTick(float DeltaSeconds);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void PowerUpServer(float Value);
	void PowerDown_Server(float Value);

	bool IsInPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTeleportationSkill_C">();
	}
	static class UBP_AJBTeleportationSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBTeleportationSkill_C>();
	}
};
static_assert(alignof(UBP_AJBTeleportationSkill_C) == 0x000008, "Wrong alignment on UBP_AJBTeleportationSkill_C");
static_assert(sizeof(UBP_AJBTeleportationSkill_C) == 0x000338, "Wrong size on UBP_AJBTeleportationSkill_C");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, UberGraphFrame_BP_AJBTeleportationSkill_C) == 0x0001E8, "Member 'UBP_AJBTeleportationSkill_C::UberGraphFrame_BP_AJBTeleportationSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, WaitingTime) == 0x0001F0, "Member 'UBP_AJBTeleportationSkill_C::WaitingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, ClearingTime) == 0x0001F4, "Member 'UBP_AJBTeleportationSkill_C::ClearingTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, MovementDistance) == 0x0001F8, "Member 'UBP_AJBTeleportationSkill_C::MovementDistance' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, BeforeTeleportationParticleTag) == 0x000200, "Member 'UBP_AJBTeleportationSkill_C::BeforeTeleportationParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, AfterTeleportationParticleTag) == 0x000208, "Member 'UBP_AJBTeleportationSkill_C::AfterTeleportationParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TempBeforeLocation) == 0x000210, "Member 'UBP_AJBTeleportationSkill_C::TempBeforeLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, StandWaitingMontage) == 0x000220, "Member 'UBP_AJBTeleportationSkill_C::StandWaitingMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PostProcessIndex) == 0x000228, "Member 'UBP_AJBTeleportationSkill_C::PostProcessIndex' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, EffectActor) == 0x000230, "Member 'UBP_AJBTeleportationSkill_C::EffectActor' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewObjectClass) == 0x000238, "Member 'UBP_AJBTeleportationSkill_C::PreviewObjectClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, EffectClass) == 0x000240, "Member 'UBP_AJBTeleportationSkill_C::EffectClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, ActionGionTag) == 0x000248, "Member 'UBP_AJBTeleportationSkill_C::ActionGionTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, StandClearingMontage) == 0x000250, "Member 'UBP_AJBTeleportationSkill_C::StandClearingMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CharacterWaitingMontage) == 0x000258, "Member 'UBP_AJBTeleportationSkill_C::CharacterWaitingMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CharacterClearingMontage) == 0x000260, "Member 'UBP_AJBTeleportationSkill_C::CharacterClearingMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TraceStartHeightBuffer_cm_) == 0x000268, "Member 'UBP_AJBTeleportationSkill_C::TraceStartHeightBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TraceEndHeightBuffer_cm_) == 0x00026C, "Member 'UBP_AJBTeleportationSkill_C::TraceEndHeightBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedLocation) == 0x000270, "Member 'UBP_AJBTeleportationSkill_C::CachedLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedDirection) == 0x00027C, "Member 'UBP_AJBTeleportationSkill_C::CachedDirection' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedLength) == 0x000288, "Member 'UBP_AJBTeleportationSkill_C::CachedLength' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedAngle) == 0x00028C, "Member 'UBP_AJBTeleportationSkill_C::CachedAngle' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedDefaultDirection) == 0x000290, "Member 'UBP_AJBTeleportationSkill_C::CachedDefaultDirection' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, SlopeTraceForwardBuffer_cm_) == 0x00029C, "Member 'UBP_AJBTeleportationSkill_C::SlopeTraceForwardBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TimerHandle_Debug) == 0x0002A0, "Member 'UBP_AJBTeleportationSkill_C::TimerHandle_Debug' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CachedSlopeDirection) == 0x0002A8, "Member 'UBP_AJBTeleportationSkill_C::CachedSlopeDirection' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, bCachedFirstFlatland) == 0x0002B4, "Member 'UBP_AJBTeleportationSkill_C::bCachedFirstFlatland' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, bReserveWaiting) == 0x0002B5, "Member 'UBP_AJBTeleportationSkill_C::bReserveWaiting' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewObject) == 0x0002B8, "Member 'UBP_AJBTeleportationSkill_C::PreviewObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, LocalDecidedLocation) == 0x0002C0, "Member 'UBP_AJBTeleportationSkill_C::LocalDecidedLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CameraTurnSpeed) == 0x0002CC, "Member 'UBP_AJBTeleportationSkill_C::CameraTurnSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, CameraLookupSpeed) == 0x0002D0, "Member 'UBP_AJBTeleportationSkill_C::CameraLookupSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TraceLowerLimit_cm_) == 0x0002D4, "Member 'UBP_AJBTeleportationSkill_C::TraceLowerLimit_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewObjectTraceBuffer_cm_) == 0x0002D8, "Member 'UBP_AJBTeleportationSkill_C::PreviewObjectTraceBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TempSidingRemovedFactorTag) == 0x0002E0, "Member 'UBP_AJBTeleportationSkill_C::TempSidingRemovedFactorTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, TempSidingRemovedFactorValue) == 0x0002E8, "Member 'UBP_AJBTeleportationSkill_C::TempSidingRemovedFactorValue' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewParticleTag) == 0x0002F0, "Member 'UBP_AJBTeleportationSkill_C::PreviewParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewParticle) == 0x0002F8, "Member 'UBP_AJBTeleportationSkill_C::PreviewParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, PreviewParticleTraceBuffer_cm_) == 0x000300, "Member 'UBP_AJBTeleportationSkill_C::PreviewParticleTraceBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, SETag) == 0x000308, "Member 'UBP_AJBTeleportationSkill_C::SETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, bEnableGroundingTrace) == 0x000310, "Member 'UBP_AJBTeleportationSkill_C::bEnableGroundingTrace' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, GroundingTraceUnderBuffer_cm_) == 0x000314, "Member 'UBP_AJBTeleportationSkill_C::GroundingTraceUnderBuffer_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, StartingSection_StandClearingMontage) == 0x000318, "Member 'UBP_AJBTeleportationSkill_C::StartingSection_StandClearingMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, InputCameraOnlyFactorTag_TeleportationSkill) == 0x000320, "Member 'UBP_AJBTeleportationSkill_C::InputCameraOnlyFactorTag_TeleportationSkill' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, bCancelSelf_LocalOnly) == 0x000328, "Member 'UBP_AJBTeleportationSkill_C::bCancelSelf_LocalOnly' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, bIgnoreCharacter) == 0x000329, "Member 'UBP_AJBTeleportationSkill_C::bIgnoreCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, MovementDistanceScale) == 0x00032C, "Member 'UBP_AJBTeleportationSkill_C::MovementDistanceScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBTeleportationSkill_C, AdditionalMovementDistance) == 0x000330, "Member 'UBP_AJBTeleportationSkill_C::AdditionalMovementDistance' has a wrong offset!");

}


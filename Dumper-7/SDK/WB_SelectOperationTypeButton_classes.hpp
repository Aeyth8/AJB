#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SelectOperationTypeButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_SelectOperationTypeButton.WB_SelectOperationTypeButton_C
// 0x0070 (0x0310 - 0x02A0)
class UWB_SelectOperationTypeButton_C final : public UAJBButtonWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Pressed;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBRetainerBox*                        AJBRetainerBox_2;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBRetainerBox*                        AJBRetainerBox_Activater;                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBButton*                             Button;                                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_SwitchBelt;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_Biginner;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Txt_Normal;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Label;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Activater;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnButtonScale;                                // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleValue;                                        // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleInterpSpeed;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPrevButtonActive;                               // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsUntouchableWhenDeactive;                        // 0x0305(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsPlaySE;                                         // 0x0306(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bIsPlayCancelSE;                                   // 0x0307(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               DMI_CurrentOperationTypeSwitch;                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_SelectOperationTypeButton(int32 EntryPoint);
	void ResetClickAnimation();
	void SetButtonActive(bool bIsActive, bool PlayActiveSE);
	void OnButtonPressedAnimation();
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonCancelledEvent__DelegateSignature();
	void OnButtonReleasedAnimation();
	void PlayClickAnimation();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	class UAJBButton* GetButton();
	void Update_EasyOperationTypeSwitch(bool IsEasyOperation);

	void IsTouchable(bool* bReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_SelectOperationTypeButton_C">();
	}
	static class UWB_SelectOperationTypeButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_SelectOperationTypeButton_C>();
	}
};
static_assert(alignof(UWB_SelectOperationTypeButton_C) == 0x000008, "Wrong alignment on UWB_SelectOperationTypeButton_C");
static_assert(sizeof(UWB_SelectOperationTypeButton_C) == 0x000310, "Wrong size on UWB_SelectOperationTypeButton_C");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, UberGraphFrame) == 0x0002A0, "Member 'UWB_SelectOperationTypeButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Anim_Pressed) == 0x0002A8, "Member 'UWB_SelectOperationTypeButton_C::Anim_Pressed' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, AJBRetainerBox_2) == 0x0002B0, "Member 'UWB_SelectOperationTypeButton_C::AJBRetainerBox_2' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, AJBRetainerBox_Activater) == 0x0002B8, "Member 'UWB_SelectOperationTypeButton_C::AJBRetainerBox_Activater' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Button) == 0x0002C0, "Member 'UWB_SelectOperationTypeButton_C::Button' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Img_SwitchBelt) == 0x0002C8, "Member 'UWB_SelectOperationTypeButton_C::Img_SwitchBelt' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Overlay_0) == 0x0002D0, "Member 'UWB_SelectOperationTypeButton_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Txt_Biginner) == 0x0002D8, "Member 'UWB_SelectOperationTypeButton_C::Txt_Biginner' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, Txt_Normal) == 0x0002E0, "Member 'UWB_SelectOperationTypeButton_C::Txt_Normal' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, WidgetSwitcher_Label) == 0x0002E8, "Member 'UWB_SelectOperationTypeButton_C::WidgetSwitcher_Label' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, DMI_Activater) == 0x0002F0, "Member 'UWB_SelectOperationTypeButton_C::DMI_Activater' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, bReturnButtonScale) == 0x0002F8, "Member 'UWB_SelectOperationTypeButton_C::bReturnButtonScale' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, ScaleValue) == 0x0002FC, "Member 'UWB_SelectOperationTypeButton_C::ScaleValue' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, ScaleInterpSpeed) == 0x000300, "Member 'UWB_SelectOperationTypeButton_C::ScaleInterpSpeed' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, bIsPrevButtonActive) == 0x000304, "Member 'UWB_SelectOperationTypeButton_C::bIsPrevButtonActive' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, bIsUntouchableWhenDeactive) == 0x000305, "Member 'UWB_SelectOperationTypeButton_C::bIsUntouchableWhenDeactive' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, bIsPlaySE) == 0x000306, "Member 'UWB_SelectOperationTypeButton_C::bIsPlaySE' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, bIsPlayCancelSE) == 0x000307, "Member 'UWB_SelectOperationTypeButton_C::bIsPlayCancelSE' has a wrong offset!");
static_assert(offsetof(UWB_SelectOperationTypeButton_C, DMI_CurrentOperationTypeSwitch) == 0x000308, "Member 'UWB_SelectOperationTypeButton_C::DMI_CurrentOperationTypeSwitch' has a wrong offset!");

}


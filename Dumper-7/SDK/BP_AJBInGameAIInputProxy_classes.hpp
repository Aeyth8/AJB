#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameAIInputProxy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameAIInputProxy.BP_AJBInGameAIInputProxy_C
// 0x0040 (0x0158 - 0x0118)
class UBP_AJBInGameAIInputProxy_C final : public UAJBInGameAIInputProxyComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0118(0x0008)(Transient, DuplicateTransient)
	float                                         PressingTimeForTrigger;                            // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLockingTrigger;                                 // 0x0124(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPressingL2;                                     // 0x0125(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPressingR2;                                     // 0x0126(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PressingTimeForTriggerJump;                        // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPressingR1;                                     // 0x012C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPressingLongInteract;                           // 0x012D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PressingTimeForLongTrigger;                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugTriggeringButton;                             // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   BeforeParentTick;                                  // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_AJBInGameAIInputProxy(int32 EntryPoint);
	void ClearInput();
	void CancelSkillR1();
	void StartSkillR1();
	void LongTriggerSkillR1();
	void CancelLongInteract();
	void StartLongInteract();
	void ResumeUpdate();
	void SuspendUpdate();
	void ReceiveTick(float DeltaSeconds);
	void SetupInput(class ABP_AJBInGameCharacter_C* ValidCharacter);
	void TriggerSkillR2();
	void TriggerEmote();
	void TriggerCrouch();
	void CancelSkillR2();
	void StartSkillR2();
	void CancelSkillL2();
	void StartSkillL2();
	void TriggerSkillR1();
	void TriggerSkillL1();
	void TriggerInteract();
	void TriggerJump();
	void ReceiveBeginPlay();
	bool IsPressingL2();
	bool IsPressingR2();
	class FString DebugGetInputStatusString();
	bool IsInputMoveClear();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameAIInputProxy_C">();
	}
	static class UBP_AJBInGameAIInputProxy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInGameAIInputProxy_C>();
	}
};
static_assert(alignof(UBP_AJBInGameAIInputProxy_C) == 0x000008, "Wrong alignment on UBP_AJBInGameAIInputProxy_C");
static_assert(sizeof(UBP_AJBInGameAIInputProxy_C) == 0x000158, "Wrong size on UBP_AJBInGameAIInputProxy_C");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, UberGraphFrame) == 0x000118, "Member 'UBP_AJBInGameAIInputProxy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, PressingTimeForTrigger) == 0x000120, "Member 'UBP_AJBInGameAIInputProxy_C::PressingTimeForTrigger' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, bIsLockingTrigger) == 0x000124, "Member 'UBP_AJBInGameAIInputProxy_C::bIsLockingTrigger' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, bIsPressingL2) == 0x000125, "Member 'UBP_AJBInGameAIInputProxy_C::bIsPressingL2' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, bIsPressingR2) == 0x000126, "Member 'UBP_AJBInGameAIInputProxy_C::bIsPressingR2' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, PressingTimeForTriggerJump) == 0x000128, "Member 'UBP_AJBInGameAIInputProxy_C::PressingTimeForTriggerJump' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, bIsPressingR1) == 0x00012C, "Member 'UBP_AJBInGameAIInputProxy_C::bIsPressingR1' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, bIsPressingLongInteract) == 0x00012D, "Member 'UBP_AJBInGameAIInputProxy_C::bIsPressingLongInteract' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, PressingTimeForLongTrigger) == 0x000130, "Member 'UBP_AJBInGameAIInputProxy_C::PressingTimeForLongTrigger' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, DebugTriggeringButton) == 0x000138, "Member 'UBP_AJBInGameAIInputProxy_C::DebugTriggeringButton' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameAIInputProxy_C, BeforeParentTick) == 0x000148, "Member 'UBP_AJBInGameAIInputProxy_C::BeforeParentTick' has a wrong offset!");

}


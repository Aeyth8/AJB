#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBKeepDistanceInBattle

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_AJBKeepDistanceInBattle.BTS_AJBKeepDistanceInBattle_C
// 0x0108 (0x01A0 - 0x0098)
class UBTS_AJBKeepDistanceInBattle_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetCharacterKey;                                // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 RO_PathForTargetKey;                               // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	class ABP_AJBInGameAIImaginaryCharacter_C*    TargetCharacter;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrivedDistanceThresh;                             // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 ArrivedDestinationKey;                             // 0x0100(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 DestinationKey;                                    // 0x0128(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GetBackDistanceThresh;                             // 0x015C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          MyAIController;                                    // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventTagLocker*                        MoveContextLocker;                                 // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBAIPathController_C*              PathController;                                    // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttackRangeRatio;                                  // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRangeRatioParam;                             // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WarnDistanceIfTargetIsNotInSightSqParam;           // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBeingDamaged;                                     // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProbabilityToMoveAsideOnDamaged;                   // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIgnoredObservation;                              // 0x0198(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BTS_AJBKeepDistanceInBattle(int32 EntryPoint);
	void Update();
	void OnDamaged(const struct FGameplayTag& DamageType, class AActor* DamageCauser);
	void MoveAside();
	void OnTrapAdded(class AActor* Trap);
	void DebugDrawOnHead(const struct FLinearColor& Color);
	void OnExecutionFinish(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult NodeResult);
	void OnExecutionStart(class AAIController* OwnerController, class APawn* ControlledPawn);
	void MoveAsideOrModifyDistance();
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_AJBKeepDistanceInBattle_C">();
	}
	static class UBTS_AJBKeepDistanceInBattle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_AJBKeepDistanceInBattle_C>();
	}
};
static_assert(alignof(UBTS_AJBKeepDistanceInBattle_C) == 0x000008, "Wrong alignment on UBTS_AJBKeepDistanceInBattle_C");
static_assert(sizeof(UBTS_AJBKeepDistanceInBattle_C) == 0x0001A0, "Wrong size on UBTS_AJBKeepDistanceInBattle_C");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, UberGraphFrame) == 0x000098, "Member 'UBTS_AJBKeepDistanceInBattle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, TargetCharacterKey) == 0x0000A0, "Member 'UBTS_AJBKeepDistanceInBattle_C::TargetCharacterKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, RO_PathForTargetKey) == 0x0000C8, "Member 'UBTS_AJBKeepDistanceInBattle_C::RO_PathForTargetKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, TargetCharacter) == 0x0000F0, "Member 'UBTS_AJBKeepDistanceInBattle_C::TargetCharacter' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, ArrivedDistanceThresh) == 0x0000F8, "Member 'UBTS_AJBKeepDistanceInBattle_C::ArrivedDistanceThresh' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, ArrivedDestinationKey) == 0x000100, "Member 'UBTS_AJBKeepDistanceInBattle_C::ArrivedDestinationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, DestinationKey) == 0x000128, "Member 'UBTS_AJBKeepDistanceInBattle_C::DestinationKey' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, Recognition) == 0x000150, "Member 'UBTS_AJBKeepDistanceInBattle_C::Recognition' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, AttackRange) == 0x000158, "Member 'UBTS_AJBKeepDistanceInBattle_C::AttackRange' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, GetBackDistanceThresh) == 0x00015C, "Member 'UBTS_AJBKeepDistanceInBattle_C::GetBackDistanceThresh' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, bInitialized) == 0x000160, "Member 'UBTS_AJBKeepDistanceInBattle_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, MyAIController) == 0x000168, "Member 'UBTS_AJBKeepDistanceInBattle_C::MyAIController' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, MoveContextLocker) == 0x000170, "Member 'UBTS_AJBKeepDistanceInBattle_C::MoveContextLocker' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, PathController) == 0x000178, "Member 'UBTS_AJBKeepDistanceInBattle_C::PathController' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, AttackRangeRatio) == 0x000180, "Member 'UBTS_AJBKeepDistanceInBattle_C::AttackRangeRatio' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, AttackRangeRatioParam) == 0x000188, "Member 'UBTS_AJBKeepDistanceInBattle_C::AttackRangeRatioParam' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, WarnDistanceIfTargetIsNotInSightSqParam) == 0x00018C, "Member 'UBTS_AJBKeepDistanceInBattle_C::WarnDistanceIfTargetIsNotInSightSqParam' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, bBeingDamaged) == 0x000190, "Member 'UBTS_AJBKeepDistanceInBattle_C::bBeingDamaged' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, ProbabilityToMoveAsideOnDamaged) == 0x000194, "Member 'UBTS_AJBKeepDistanceInBattle_C::ProbabilityToMoveAsideOnDamaged' has a wrong offset!");
static_assert(offsetof(UBTS_AJBKeepDistanceInBattle_C, IsIgnoredObservation) == 0x000198, "Member 'UBTS_AJBKeepDistanceInBattle_C::IsIgnoredObservation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_AJBPvE_GameDifficultyText

#include "Basic.hpp"

#include "EPvEGameDifficulty_structs.hpp"


namespace SDK
{

// UserDefinedStruct ST_AJBPvE_GameDifficultyText.ST_AJBPvE_GameDifficultyText
// 0x0038 (0x0038 - 0x0000)
struct FST_AJBPvE_GameDifficultyText final
{
public:
	EPvEGameDifficulty                            Difficulty_2_00FBE3D643A71B06E77B96BB8BC1AA7D;     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title_7_C4FA719A421241CAF97DC0A7C353DB56;          // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   Level_8_C2EE6ED340F87961B0514CAF19A79232;          // 0x0020(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(FST_AJBPvE_GameDifficultyText) == 0x000008, "Wrong alignment on FST_AJBPvE_GameDifficultyText");
static_assert(sizeof(FST_AJBPvE_GameDifficultyText) == 0x000038, "Wrong size on FST_AJBPvE_GameDifficultyText");
static_assert(offsetof(FST_AJBPvE_GameDifficultyText, Difficulty_2_00FBE3D643A71B06E77B96BB8BC1AA7D) == 0x000000, "Member 'FST_AJBPvE_GameDifficultyText::Difficulty_2_00FBE3D643A71B06E77B96BB8BC1AA7D' has a wrong offset!");
static_assert(offsetof(FST_AJBPvE_GameDifficultyText, Title_7_C4FA719A421241CAF97DC0A7C353DB56) == 0x000008, "Member 'FST_AJBPvE_GameDifficultyText::Title_7_C4FA719A421241CAF97DC0A7C353DB56' has a wrong offset!");
static_assert(offsetof(FST_AJBPvE_GameDifficultyText, Level_8_C2EE6ED340F87961B0514CAF19A79232) == 0x000020, "Member 'FST_AJBPvE_GameDifficultyText::Level_8_C2EE6ED340F87961B0514CAF19A79232' has a wrong offset!");

}


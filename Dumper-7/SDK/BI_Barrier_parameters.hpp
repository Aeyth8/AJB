#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_Barrier

#include "Basic.hpp"


namespace SDK::Params
{

// Function BI_Barrier.BI_Barrier_C.IsIgnitionBySpecialProjectile
// 0x0001 (0x0001 - 0x0000)
struct BI_Barrier_C_IsIgnitionBySpecialProjectile final
{
public:
	bool                                          bIgnition;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_Barrier_C_IsIgnitionBySpecialProjectile) == 0x000001, "Wrong alignment on BI_Barrier_C_IsIgnitionBySpecialProjectile");
static_assert(sizeof(BI_Barrier_C_IsIgnitionBySpecialProjectile) == 0x000001, "Wrong size on BI_Barrier_C_IsIgnitionBySpecialProjectile");
static_assert(offsetof(BI_Barrier_C_IsIgnitionBySpecialProjectile, bIgnition) == 0x000000, "Member 'BI_Barrier_C_IsIgnitionBySpecialProjectile::bIgnition' has a wrong offset!");

// Function BI_Barrier.BI_Barrier_C.IsIgnoreImpulseVoice
// 0x0001 (0x0001 - 0x0000)
struct BI_Barrier_C_IsIgnoreImpulseVoice final
{
public:
	bool                                          bInclude;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_Barrier_C_IsIgnoreImpulseVoice) == 0x000001, "Wrong alignment on BI_Barrier_C_IsIgnoreImpulseVoice");
static_assert(sizeof(BI_Barrier_C_IsIgnoreImpulseVoice) == 0x000001, "Wrong size on BI_Barrier_C_IsIgnoreImpulseVoice");
static_assert(offsetof(BI_Barrier_C_IsIgnoreImpulseVoice, bInclude) == 0x000000, "Member 'BI_Barrier_C_IsIgnoreImpulseVoice::bInclude' has a wrong offset!");

// Function BI_Barrier.BI_Barrier_C.IsStopPenetrateProjectile
// 0x0001 (0x0001 - 0x0000)
struct BI_Barrier_C_IsStopPenetrateProjectile final
{
public:
	bool                                          bStop;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_Barrier_C_IsStopPenetrateProjectile) == 0x000001, "Wrong alignment on BI_Barrier_C_IsStopPenetrateProjectile");
static_assert(sizeof(BI_Barrier_C_IsStopPenetrateProjectile) == 0x000001, "Wrong size on BI_Barrier_C_IsStopPenetrateProjectile");
static_assert(offsetof(BI_Barrier_C_IsStopPenetrateProjectile, bStop) == 0x000000, "Member 'BI_Barrier_C_IsStopPenetrateProjectile::bStop' has a wrong offset!");

// Function BI_Barrier.BI_Barrier_C.IsHitPenetrateAttack
// 0x0001 (0x0001 - 0x0000)
struct BI_Barrier_C_IsHitPenetrateAttack final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_Barrier_C_IsHitPenetrateAttack) == 0x000001, "Wrong alignment on BI_Barrier_C_IsHitPenetrateAttack");
static_assert(sizeof(BI_Barrier_C_IsHitPenetrateAttack) == 0x000001, "Wrong size on BI_Barrier_C_IsHitPenetrateAttack");
static_assert(offsetof(BI_Barrier_C_IsHitPenetrateAttack, bHit) == 0x000000, "Member 'BI_Barrier_C_IsHitPenetrateAttack::bHit' has a wrong offset!");

// Function BI_Barrier.BI_Barrier_C.IsStopDirectAttackGuide
// 0x0010 (0x0010 - 0x0000)
struct BI_Barrier_C_IsStopDirectAttackGuide final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsStop;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_Barrier_C_IsStopDirectAttackGuide) == 0x000008, "Wrong alignment on BI_Barrier_C_IsStopDirectAttackGuide");
static_assert(sizeof(BI_Barrier_C_IsStopDirectAttackGuide) == 0x000010, "Wrong size on BI_Barrier_C_IsStopDirectAttackGuide");
static_assert(offsetof(BI_Barrier_C_IsStopDirectAttackGuide, Owner) == 0x000000, "Member 'BI_Barrier_C_IsStopDirectAttackGuide::Owner' has a wrong offset!");
static_assert(offsetof(BI_Barrier_C_IsStopDirectAttackGuide, bIsStop) == 0x000008, "Member 'BI_Barrier_C_IsStopDirectAttackGuide::bIsStop' has a wrong offset!");

// Function BI_Barrier.BI_Barrier_C.DamageLocal
// 0x0004 (0x0004 - 0x0000)
struct BI_Barrier_C_DamageLocal final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_Barrier_C_DamageLocal) == 0x000004, "Wrong alignment on BI_Barrier_C_DamageLocal");
static_assert(sizeof(BI_Barrier_C_DamageLocal) == 0x000004, "Wrong size on BI_Barrier_C_DamageLocal");
static_assert(offsetof(BI_Barrier_C_DamageLocal, Damage) == 0x000000, "Member 'BI_Barrier_C_DamageLocal::Damage' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameSeparateStand

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.ExecuteUbergraph_BP_AJBInGameSeparateStand
// 0x0380 (0x0380 - 0x0000)
struct BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue5;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X1;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x0180(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue6;                    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue7;                    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character6;     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character7;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue8;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character8;     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentRate;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue9;                    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character9;     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESeparateStandFlyingState                     K2Node_CustomEvent_NewState1;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESeparateStandFlyingState                     K2Node_CustomEvent_NewState;                       // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue10;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character10;    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue11;                   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character11;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_CustomEvent_TargetCharacter;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_OldBehavior;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      K2Node_CustomEvent_NextBehavior;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSpecialBreakDown;              // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x5];                                      // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AAJBInGameCharacter* TargetCharacter, ECharacterActiveBehavior OldBehavior, ECharacterActiveBehavior NextBehavior, bool bSpecialBreakDown)> K2Node_CreateDelegate_OutputDelegate2; // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x02EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF[0x1];                                      // 0x02EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0308(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0318(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue12;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character12;    // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_AJBInGameStand_C*                   K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1;         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand) == 0x000380, "Wrong size on BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, EntryPoint) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NotifyName4) == 0x000008, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue2) == 0x000040, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000048, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000058, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess2) == 0x000060, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_HasLocalSharedController_ReturnValue) == 0x000079, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue3) == 0x000080, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue4) == 0x000088, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000090, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess3) == 0x000098, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0000A0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess4) == 0x0000A8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue5) == 0x0000B0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0000B8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess5) == 0x0000C0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_X) == 0x0000C4, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_Z) == 0x0000CC, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000E0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_X1) == 0x000168, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_Y1) == 0x00016C, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BreakVector_Z1) == 0x000170, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_MakeVector_ReturnValue1) == 0x000174, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x000180, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue6) == 0x000208, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue7) == 0x000210, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character6) == 0x000218, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess6) == 0x000220, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character7) == 0x000228, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess7) == 0x000230, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue8) == 0x000238, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character8) == 0x000240, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess8) == 0x000248, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_Event_DeltaSeconds) == 0x00024C, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsDedicatedServer_ReturnValue) == 0x000250, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_Event_CurrentRate) == 0x000254, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_Event_CurrentRate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NotifyName3) == 0x000258, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue9) == 0x000260, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character9) == 0x000268, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess9) == 0x000270, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NewState1) == 0x000271, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NewState1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000272, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NewState) == 0x000273, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue) == 0x000274, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000275, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue10) == 0x000278, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character10) == 0x000280, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess10) == 0x000288, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue1) == 0x000289, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand) == 0x000290, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess11) == 0x000298, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue2) == 0x000299, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetAnimInstance_ReturnValue) == 0x0002A0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0002A8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue3) == 0x0002A9, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_SwitchEnum_CmpSuccess) == 0x0002AA, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue11) == 0x0002B0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character11) == 0x0002B8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character11' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess12) == 0x0002C0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_TargetCharacter) == 0x0002C8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_OldBehavior) == 0x0002D0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NextBehavior) == 0x0002D1, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_bSpecialBreakDown) == 0x0002D2, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_bSpecialBreakDown' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate2) == 0x0002D8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x0002E8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x0002E9, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x0002EA, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0002EB, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BooleanAND_ReturnValue) == 0x0002EC, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BooleanAND_ReturnValue1) == 0x0002ED, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_BooleanAND_ReturnValue2) == 0x0002EE, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, Temp_name_Variable) == 0x0002F0, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NotifyName) == 0x0002F8, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NotifyName1) == 0x000300, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate3) == 0x000308, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate4) == 0x000318, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CustomEvent_NotifyName2) == 0x000328, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_GetOwner_ReturnValue12) == 0x000330, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_GetOwner_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Character12) == 0x000338, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Character12' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess13) == 0x000340, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_CreateDelegate_OutputDelegate5) == 0x000348, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1) == 0x000358, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, K2Node_DynamicCast_bSuccess14) == 0x000360, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue4) == 0x000361, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000368, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_IsValid_ReturnValue5) == 0x000370, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000378, "Member 'BP_AJBInGameSeparateStand_C_ExecuteUbergraph_BP_AJBInGameSeparateStand::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnCharacterActiveBehaviorChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged final
{
public:
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      OldBehavior;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterActiveBehavior                      NextBehavior;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialBreakDown;                                 // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged) == 0x000010, "Wrong size on BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged, TargetCharacter) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged, OldBehavior) == 0x000008, "Member 'BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged::OldBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged, NextBehavior) == 0x000009, "Member 'BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged::NextBehavior' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged, bSpecialBreakDown) == 0x00000A, "Member 'BP_AJBInGameSeparateStand_C_OnCharacterActiveBehaviorChanged::bSpecialBreakDown' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.ROS_ChangeSeparateFlyingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState final
{
public:
	ESeparateStandFlyingState                     NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState) == 0x000001, "Wrong alignment on BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState) == 0x000001, "Wrong size on BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState, NewState) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_ROS_ChangeSeparateFlyingState::NewState' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.ChangeSeparateFlyingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState final
{
public:
	ESeparateStandFlyingState                     NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState) == 0x000001, "Wrong alignment on BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState) == 0x000001, "Wrong size on BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState, NewState) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_ChangeSeparateFlyingState::NewState' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnCompleted_BB2764CB4B4D868CA76405BD4FA20046
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046, NotifyName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnCompleted_BB2764CB4B4D868CA76405BD4FA20046::NotifyName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046, NotifyName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnBlendOut_BB2764CB4B4D868CA76405BD4FA20046::NotifyName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046, NotifyName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnInterrupted_BB2764CB4B4D868CA76405BD4FA20046::NotifyName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046, NotifyName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnNotifyBegin_BB2764CB4B4D868CA76405BD4FA20046::NotifyName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046, NotifyName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnNotifyEnd_BB2764CB4B4D868CA76405BD4FA20046::NotifyName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.CheckGravityLoadReceived
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0030(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived) == 0x000058, "Wrong size on BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, ReturnValue) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, CallFunc_GetGameplayTags_self_CastInput) == 0x000020, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000030, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived, CallFunc_HasTag_ReturnValue) == 0x000050, "Member 'BP_AJBInGameSeparateStand_C_CheckGravityLoadReceived::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnRep_(ForSkipOwner)SeparateFlyingState
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState final
{
public:
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState) == 0x000001, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState) == 0x000001, "Wrong size on BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState, CallFunc_HasLocalSharedController_ReturnValue) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnRep__ForSkipOwner_SeparateFlyingState::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.OnChangeSeparateFlyingState
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState final
{
public:
	ESeparateStandFlyingState                     NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESeparateStandFlyingState                     Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESeparateStandFlyingState                     Temp_byte_Variable1;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState) == 0x000004, "Wrong alignment on BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState) == 0x000018, "Wrong size on BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, NewState) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::NewState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, Temp_byte_Variable) == 0x000002, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, Temp_float_Variable) == 0x000004, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, Temp_float_Variable1) == 0x000008, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, K2Node_Select_Default) == 0x00000C, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, Temp_byte_Variable1) == 0x000010, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState, K2Node_Select1_Default) == 0x000014, "Member 'BP_AJBInGameSeparateStand_C_OnChangeSeparateFlyingState::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameSeparateStand_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameSeparateStand_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameSeparateStand_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.UpdateTransparence
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameSeparateStand_C_UpdateTransparence final
{
public:
	float                                         CurrentRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_UpdateTransparence) == 0x000004, "Wrong alignment on BP_AJBInGameSeparateStand_C_UpdateTransparence");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_UpdateTransparence) == 0x000004, "Wrong size on BP_AJBInGameSeparateStand_C_UpdateTransparence");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateTransparence, CurrentRate) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_UpdateTransparence::CurrentRate' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.GetCollisionProfileName
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameSeparateStand_C_GetCollisionProfileName final
{
public:
	class FName                                   ProfileName;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_GetCollisionProfileName) == 0x000008, "Wrong alignment on BP_AJBInGameSeparateStand_C_GetCollisionProfileName");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_GetCollisionProfileName) == 0x000008, "Wrong size on BP_AJBInGameSeparateStand_C_GetCollisionProfileName");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_GetCollisionProfileName, ProfileName) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_GetCollisionProfileName::ProfileName' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.UpdateMovementForwardInput
// 0x007C (0x007C - 0x0000)
struct BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldDirection;                                    // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleValue;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue1;       // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput) == 0x000004, "Wrong alignment on BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput) == 0x00007C, "Wrong size on BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, Value) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, WorldDirection) == 0x000004, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, ScaleValue) == 0x000010, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::ScaleValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, Temp_bool_Variable) == 0x000020, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_Less_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000023, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_GetControlRotation_ReturnValue) == 0x000024, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_GetActorForwardVector_ReturnValue1) == 0x00004C, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_GetActorForwardVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000058, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, K2Node_Select_Default) == 0x000064, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BP_AJBInGameSeparateStand_C_UpdateMovementForwardInput::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameSeparateStand.BP_AJBInGameSeparateStand_C.CheckChangeableSpeed
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameSeparateStand_C_CheckChangeableSpeed final
{
public:
	bool                                          bChangeable;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameSeparateStand_C_CheckChangeableSpeed) == 0x000001, "Wrong alignment on BP_AJBInGameSeparateStand_C_CheckChangeableSpeed");
static_assert(sizeof(BP_AJBInGameSeparateStand_C_CheckChangeableSpeed) == 0x000002, "Wrong size on BP_AJBInGameSeparateStand_C_CheckChangeableSpeed");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckChangeableSpeed, bChangeable) == 0x000000, "Member 'BP_AJBInGameSeparateStand_C_CheckChangeableSpeed::bChangeable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameSeparateStand_C_CheckChangeableSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_AJBInGameSeparateStand_C_CheckChangeableSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}


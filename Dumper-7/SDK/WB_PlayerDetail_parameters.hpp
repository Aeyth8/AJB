#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerDetail

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_PlayerDetail.WB_PlayerDetail_C.ExecuteUbergraph_WB_PlayerDetail
// 0x0178 (0x0178 - 0x0000)
struct WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    K2Node_CustomEvent_MatchingInfo;                   // 0x0008(0x0088)(ConstParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelfMatchingInfo_bSelfInfo;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue1;           // 0x00D0(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayHostPlayersDetails_ReturnValue; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_IconID;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerLevel;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_PlayerName;                     // 0x00F8(0x0018)()
	class FText                                   K2Node_CustomEvent_PlayerTitle;                    // 0x0110(0x0018)()
	bool                                          K2Node_CustomEvent_IsSelf;                         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsHost;                         // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x0130(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlurOffset;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPairMatchingInfo_bPairInfo;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select3_Default;                            // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelfMatchingInfo_bSelfInfo1;            // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0160(0x0018)()
};
static_assert(alignof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail) == 0x000008, "Wrong alignment on WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail");
static_assert(sizeof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail) == 0x000178, "Wrong size on WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, EntryPoint) == 0x000000, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_bool_Variable) == 0x000004, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_MatchingInfo) == 0x000008, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_MatchingInfo' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable) == 0x000090, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_IsSelfMatchingInfo_bSelfInfo) == 0x000091, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_IsSelfMatchingInfo_bSelfInfo' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Len_ReturnValue) == 0x000094, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000098, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable1) == 0x000099, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B8, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Conv_StringToText_ReturnValue1) == 0x0000D0, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Conv_StringToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_Event_IsDesignTime) == 0x0000E8, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_ShouldDisplayHostPlayersDetails_ReturnValue) == 0x0000E9, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_ShouldDisplayHostPlayersDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_IconID) == 0x0000EC, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_IconID' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_PlayerLevel) == 0x0000F0, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_PlayerLevel' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_PlayerName) == 0x0000F8, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_PlayerTitle) == 0x000110, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_PlayerTitle' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_IsSelf) == 0x000128, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_IsSelf' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_IsHost) == 0x000129, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_IsHost' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Conv_IntToText_ReturnValue1) == 0x000130, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000148, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_bool_Variable1) == 0x000149, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_Select_Default) == 0x00014A, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable2) == 0x00014B, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable3) == 0x00014C, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_bool_Variable2) == 0x00014D, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_Select1_Default) == 0x00014E, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable4) == 0x00014F, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable5) == 0x000150, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_bool_Variable3) == 0x000151, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable6) == 0x000152, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_Select2_Default) == 0x000153, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_CustomEvent_BlurOffset) == 0x000154, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_CustomEvent_BlurOffset' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_IsPairMatchingInfo_bPairInfo) == 0x000158, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_IsPairMatchingInfo_bPairInfo' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, Temp_byte_Variable7) == 0x000159, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, K2Node_Select3_Default) == 0x00015A, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_IsSelfMatchingInfo_bSelfInfo1) == 0x00015B, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_IsSelfMatchingInfo_bSelfInfo1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail, CallFunc_Conv_StringToText_ReturnValue2) == 0x000160, "Member 'WB_PlayerDetail_C_ExecuteUbergraph_WB_PlayerDetail::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.UpdateIconBlurOffset
// 0x0004 (0x0004 - 0x0000)
struct WB_PlayerDetail_C_UpdateIconBlurOffset final
{
public:
	float                                         BlurOffset_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerDetail_C_UpdateIconBlurOffset) == 0x000004, "Wrong alignment on WB_PlayerDetail_C_UpdateIconBlurOffset");
static_assert(sizeof(WB_PlayerDetail_C_UpdateIconBlurOffset) == 0x000004, "Wrong size on WB_PlayerDetail_C_UpdateIconBlurOffset");
static_assert(offsetof(WB_PlayerDetail_C_UpdateIconBlurOffset, BlurOffset_0) == 0x000000, "Member 'WB_PlayerDetail_C_UpdateIconBlurOffset::BlurOffset_0' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.ManualUpdateDisplay
// 0x0040 (0x0040 - 0x0000)
struct WB_PlayerDetail_C_ManualUpdateDisplay final
{
public:
	int32                                         IconID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerLevel_0;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName_0;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   PlayerTitle;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsSelf;                                            // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHost;                                            // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerDetail_C_ManualUpdateDisplay) == 0x000008, "Wrong alignment on WB_PlayerDetail_C_ManualUpdateDisplay");
static_assert(sizeof(WB_PlayerDetail_C_ManualUpdateDisplay) == 0x000040, "Wrong size on WB_PlayerDetail_C_ManualUpdateDisplay");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, IconID) == 0x000000, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::IconID' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, PlayerLevel_0) == 0x000004, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::PlayerLevel_0' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, PlayerName_0) == 0x000008, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::PlayerName_0' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, PlayerTitle) == 0x000020, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::PlayerTitle' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, IsSelf) == 0x000038, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::IsSelf' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ManualUpdateDisplay, IsHost) == 0x000039, "Member 'WB_PlayerDetail_C_ManualUpdateDisplay::IsHost' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_PlayerDetail_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerDetail_C_PreConstruct) == 0x000001, "Wrong alignment on WB_PlayerDetail_C_PreConstruct");
static_assert(sizeof(WB_PlayerDetail_C_PreConstruct) == 0x000001, "Wrong size on WB_PlayerDetail_C_PreConstruct");
static_assert(offsetof(WB_PlayerDetail_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_PlayerDetail_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.UpdateDisplay
// 0x0088 (0x0088 - 0x0000)
struct WB_PlayerDetail_C_UpdateDisplay final
{
public:
	struct FMatchingPlayerInfo                    MatchingInfo;                                      // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_PlayerDetail_C_UpdateDisplay) == 0x000008, "Wrong alignment on WB_PlayerDetail_C_UpdateDisplay");
static_assert(sizeof(WB_PlayerDetail_C_UpdateDisplay) == 0x000088, "Wrong size on WB_PlayerDetail_C_UpdateDisplay");
static_assert(offsetof(WB_PlayerDetail_C_UpdateDisplay, MatchingInfo) == 0x000000, "Member 'WB_PlayerDetail_C_UpdateDisplay::MatchingInfo' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.IsSelfMatchingInfo
// 0x0018 (0x0018 - 0x0000)
struct WB_PlayerDetail_C_IsSelfMatchingInfo final
{
public:
	bool                                          bSelfInfo;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerDetail_C_IsSelfMatchingInfo) == 0x000008, "Wrong alignment on WB_PlayerDetail_C_IsSelfMatchingInfo");
static_assert(sizeof(WB_PlayerDetail_C_IsSelfMatchingInfo) == 0x000018, "Wrong size on WB_PlayerDetail_C_IsSelfMatchingInfo");
static_assert(offsetof(WB_PlayerDetail_C_IsSelfMatchingInfo, bSelfInfo) == 0x000000, "Member 'WB_PlayerDetail_C_IsSelfMatchingInfo::bSelfInfo' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsSelfMatchingInfo, CallFunc_GetAJBGameInstance_bSuccess) == 0x000001, "Member 'WB_PlayerDetail_C_IsSelfMatchingInfo::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsSelfMatchingInfo, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'WB_PlayerDetail_C_IsSelfMatchingInfo::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsSelfMatchingInfo, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000010, "Member 'WB_PlayerDetail_C_IsSelfMatchingInfo::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.ShouldDisplayHostPlayersDetails
// 0x0005 (0x0005 - 0x0000)
struct WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeEquals_bResult1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails) == 0x000001, "Wrong alignment on WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails");
static_assert(sizeof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails) == 0x000005, "Wrong size on WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails");
static_assert(offsetof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails, ReturnValue) == 0x000000, "Member 'WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails, CallFunc_PlayModeEquals_bResult) == 0x000001, "Member 'WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails::CallFunc_PlayModeEquals_bResult' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails, CallFunc_PlayModeEquals_bResult1) == 0x000002, "Member 'WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails::CallFunc_PlayModeEquals_bResult1' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WB_PlayerDetail_C_ShouldDisplayHostPlayersDetails::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_PlayerDetail.WB_PlayerDetail_C.IsPairMatchingInfo
// 0x00A8 (0x00A8 - 0x0000)
struct WB_PlayerDetail_C_IsPairMatchingInfo final
{
public:
	bool                                          bPairInfo;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetMyPairMatchingPlayerInfo_bIsValid;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetMyPairMatchingPlayerInfo_bIsRoomHost; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingPlayerInfo                    CallFunc_TryGetMyPairMatchingPlayerInfo_Out;       // 0x0018(0x0088)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerDetail_C_IsPairMatchingInfo) == 0x000008, "Wrong alignment on WB_PlayerDetail_C_IsPairMatchingInfo");
static_assert(sizeof(WB_PlayerDetail_C_IsPairMatchingInfo) == 0x0000A8, "Wrong size on WB_PlayerDetail_C_IsPairMatchingInfo");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, bPairInfo) == 0x000000, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::bPairInfo' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_GetAJBGameInstance_bSuccess) == 0x000001, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_TryGetMyPairMatchingPlayerInfo_bIsValid) == 0x000010, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_TryGetMyPairMatchingPlayerInfo_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_TryGetMyPairMatchingPlayerInfo_bIsRoomHost) == 0x000011, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_TryGetMyPairMatchingPlayerInfo_bIsRoomHost' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_TryGetMyPairMatchingPlayerInfo_Out) == 0x000018, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_TryGetMyPairMatchingPlayerInfo_Out' has a wrong offset!");
static_assert(offsetof(WB_PlayerDetail_C_IsPairMatchingInfo, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A0, "Member 'WB_PlayerDetail_C_IsPairMatchingInfo::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

}


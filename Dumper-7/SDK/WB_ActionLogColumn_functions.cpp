#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ActionLogColumn

#include "Basic.hpp"

#include "WB_ActionLogColumn_classes.hpp"
#include "WB_ActionLogColumn_parameters.hpp"


namespace SDK
{

// Function WB_ActionLogColumn.WB_ActionLogColumn_C.UpdateText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText&                            MessageBase                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32&                                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32&                                  Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32&                                  Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ActionLogColumn_C::UpdateText(class FText& MessageBase, int32& Type, int32& Value1, int32& Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "UpdateText");

	Params::WB_ActionLogColumn_C_UpdateText Parms{};

	Parms.MessageBase = std::move(MessageBase);
	Parms.Type = Type;
	Parms.Value1 = Value1;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);

	MessageBase = std::move(Parms.MessageBase);
	Type = Parms.Type;
	Value1 = Parms.Value1;
	Value2 = Parms.Value2;
}


// Function WB_ActionLogColumn.WB_ActionLogColumn_C.InvisibleText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ActionLogColumn_C::InvisibleText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "InvisibleText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ActionLogColumn.WB_ActionLogColumn_C.IsUsedText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bUsed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ActionLogColumn_C::IsUsedText(bool* bUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "IsUsedText");

	Params::WB_ActionLogColumn_C_IsUsedText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bUsed != nullptr)
		*bUsed = Parms.bUsed;
}


// Function WB_ActionLogColumn.WB_ActionLogColumn_C.SetVisibleTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ActionLogColumn_C::SetVisibleTimer(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "SetVisibleTimer");

	Params::WB_ActionLogColumn_C_SetVisibleTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ActionLogColumn.WB_ActionLogColumn_C.GetVisibleTimerElapsedTime 
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_ActionLogColumn_C::GetVisibleTimerElapsedTime_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "GetVisibleTimerElapsedTime ");

	Params::WB_ActionLogColumn_C_GetVisibleTimerElapsedTime_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_ActionLogColumn.WB_ActionLogColumn_C.IsRadioChatLog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32&                                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bRadioChat                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ActionLogColumn_C::IsRadioChatLog(int32& Type, bool* bRadioChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ActionLogColumn_C", "IsRadioChatLog");

	Params::WB_ActionLogColumn_C_IsRadioChatLog Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	Type = Parms.Type;

	if (bRadioChat != nullptr)
		*bRadioChat = Parms.bRadioChat;
}

}


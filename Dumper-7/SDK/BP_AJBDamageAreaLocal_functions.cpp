#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaLocal

#include "Basic.hpp"

#include "BP_AJBDamageAreaLocal_classes.hpp"
#include "BP_AJBDamageAreaLocal_parameters.hpp"


namespace SDK
{

// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.ExecuteUbergraph_BP_AJBDamageAreaLocal
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::ExecuteUbergraph_BP_AJBDamageAreaLocal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "ExecuteUbergraph_BP_AJBDamageAreaLocal");

	Params::BP_AJBDamageAreaLocal_C_ExecuteUbergraph_BP_AJBDamageAreaLocal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnIntervalSetupCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableReduction                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaLocal_C::OnIntervalSetupCompleted(float BaseRadius, const struct FVector& BaseLocation, bool DisableReduction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "OnIntervalSetupCompleted");

	Params::BP_AJBDamageAreaLocal_C_OnIntervalSetupCompleted Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);
	Parms.DisableReduction = DisableReduction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnRestart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BaseRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::OnRestart(float BaseRadius, const struct FVector& BaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "OnRestart");

	Params::BP_AJBDamageAreaLocal_C_OnRestart Parms{};

	Parms.BaseRadius = BaseRadius;
	Parms.BaseLocation = std::move(BaseLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnStart
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnStop
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::OnStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "OnStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.StartTickInterval
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::StartTickInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "StartTickInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.StopTickInterval
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::StopTickInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "StopTickInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.Vanish
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::Vanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "Vanish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.PlayEmergencySE
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::PlayEmergencySE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "PlayEmergencySE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.OnIntervalCompleted
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::OnIntervalCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "OnIntervalCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.CompleteReduction
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::CompleteReduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "CompleteReduction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "ReceiveTick");

	Params::BP_AJBDamageAreaLocal_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AJBDamageAreaLocal_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.InDamageArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LocationOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::InDamageArea(const struct FVector& Location, float LocationOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "InDamageArea");

	Params::BP_AJBDamageAreaLocal_C_InDamageArea Parms{};

	Parms.Location = std::move(Location);
	Parms.LocationOffset = LocationOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetCurrentSafeArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::GetCurrentSafeArea(float* Radius, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetCurrentSafeArea");

	Params::BP_AJBDamageAreaLocal_C_GetCurrentSafeArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTargetSafeArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::GetTargetSafeArea(float* Radius, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetTargetSafeArea");

	Params::BP_AJBDamageAreaLocal_C_GetTargetSafeArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetCurrentDamageValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBDamageAreaLocal_C::GetCurrentDamageValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetCurrentDamageValue");

	Params::BP_AJBDamageAreaLocal_C_GetCurrentDamageValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetIntervalTimeOfApplyingDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_AJBDamageAreaLocal_C::GetIntervalTimeOfApplyingDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetIntervalTimeOfApplyingDamage");

	Params::BP_AJBDamageAreaLocal_C_GetIntervalTimeOfApplyingDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.DamageAreaAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::DamageAreaAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "DamageAreaAvailable");

	Params::BP_AJBDamageAreaLocal_C_DamageAreaAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsProceedingReduction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::IsProceedingReduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IsProceedingReduction");

	Params::BP_AJBDamageAreaLocal_C_IsProceedingReduction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsUntilStartReduction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::GetTimeSecondsUntilStartReduction(int32* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetTimeSecondsUntilStartReduction");

	Params::BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilStartReduction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsUntilCompleteReduction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::GetTimeSecondsUntilCompleteReduction(int32* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetTimeSecondsUntilCompleteReduction");

	Params::BP_AJBDamageAreaLocal_C_GetTimeSecondsUntilCompleteReduction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsAllReductionCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::IsAllReductionCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IsAllReductionCompleted");

	Params::BP_AJBDamageAreaLocal_C_IsAllReductionCompleted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetTimeSecondsTotalInterval
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBDamageAreaLocal_C::GetTimeSecondsTotalInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetTimeSecondsTotalInterval");

	Params::BP_AJBDamageAreaLocal_C_GetTimeSecondsTotalInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsNotPreAnnounced
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::IsNotPreAnnounced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IsNotPreAnnounced");

	Params::BP_AJBDamageAreaLocal_C_IsNotPreAnnounced Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.InTargetArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LocationOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::InTargetArea(const struct FVector& Location, float LocationOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "InTargetArea");

	Params::BP_AJBDamageAreaLocal_C_InTargetArea Parms{};

	Parms.Location = std::move(Location);
	Parms.LocationOffset = LocationOffset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.Exists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bExists                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaLocal_C::Exists(bool* bExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "Exists");

	Params::BP_AJBDamageAreaLocal_C_Exists Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExists != nullptr)
		*bExists = Parms.bExists;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IntervalIndexCurrentTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  CurrentIntervalIndex_CurrentTiming_0                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::IntervalIndexCurrentTiming(int32* CurrentIntervalIndex_CurrentTiming_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IntervalIndexCurrentTiming");

	Params::BP_AJBDamageAreaLocal_C_IntervalIndexCurrentTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentIntervalIndex_CurrentTiming_0 != nullptr)
		*CurrentIntervalIndex_CurrentTiming_0 = Parms.CurrentIntervalIndex_CurrentTiming_0;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.RestOfIntervalCountCurrentTiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AJBDamageAreaLocal_C::RestOfIntervalCountCurrentTiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "RestOfIntervalCountCurrentTiming");

	Params::BP_AJBDamageAreaLocal_C_RestOfIntervalCountCurrentTiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsDamageAreaActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AJBDamageAreaLocal_C::IsDamageAreaActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IsDamageAreaActive");

	Params::BP_AJBDamageAreaLocal_C_IsDamageAreaActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.IsVanished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsVanished_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBDamageAreaLocal_C::IsVanished(bool* bIsVanished_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "IsVanished");

	Params::BP_AJBDamageAreaLocal_C_IsVanished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsVanished_0 != nullptr)
		*bIsVanished_0 = Parms.bIsVanished_0;
}


// Function BP_AJBDamageAreaLocal.BP_AJBDamageAreaLocal_C.GetAdvanceSafeArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bExistAdvanceSafeArea                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBDamageAreaLocal_C::GetAdvanceSafeArea(bool* bExistAdvanceSafeArea, float* Radius, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBDamageAreaLocal_C", "GetAdvanceSafeArea");

	Params::BP_AJBDamageAreaLocal_C_GetAdvanceSafeArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExistAdvanceSafeArea != nullptr)
		*bExistAdvanceSafeArea = Parms.bExistAdvanceSafeArea;

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}

}


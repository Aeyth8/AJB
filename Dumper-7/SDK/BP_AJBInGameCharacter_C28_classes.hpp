#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_C28

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBInGameCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameCharacter_C28.BP_AJBInGameCharacter_C28_C
// 0x0030 (0x17E0 - 0x17B0)
class ABP_AJBInGameCharacter_C28_C final : public ABP_AJBInGameCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBInGameCharacter_C28_C;        // 0x17A8(0x0008)(Transient, DuplicateTransient)
	class UBP_AJBCollectMd_C*                     BP_AJBCollectMd;                                   // 0x17B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRobMdSkill_C*                    BP_AJBRobMdSkill;                                  // 0x17B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRobSdSkill_C*                    BP_AJBRobSdSkill;                                  // 0x17C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRushS28Skill_C*                  BP_AJBRushS28Skill;                                // 0x17C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBSeparateS28Skill_C*              BP_AJBSeparateS28Skill;                            // 0x17D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameCharacter_C28(int32 EntryPoint);
	void EndSpecialBreakDown();
	void StartSpecialBreakDown();
	void ReceiveTick(float DeltaSeconds);
	void PressedButton_ActiveSpecial();
	void PressedButton_ActiveBase();
	void ReleasedButton_Basic();
	void ReleasedButton_Ultimate();
	void PressedButton_Ultimate();
	void PressedButton_Basic();
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);
	void UserConstructionScript();
	void SetupActionSkillInfo();
	void OnBeforeInteract(bool* bShouldInteract);
	void SetMoveSpeedOnCriticalness();
	void CheckErrorConditionOperator(class AActor* InteractActor, bool* bErrorCondition, uint8* ErrorType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameCharacter_C28_C">();
	}
	static class ABP_AJBInGameCharacter_C28_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBInGameCharacter_C28_C>();
	}
};
static_assert(alignof(ABP_AJBInGameCharacter_C28_C) == 0x000010, "Wrong alignment on ABP_AJBInGameCharacter_C28_C");
static_assert(sizeof(ABP_AJBInGameCharacter_C28_C) == 0x0017E0, "Wrong size on ABP_AJBInGameCharacter_C28_C");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, UberGraphFrame_BP_AJBInGameCharacter_C28_C) == 0x0017A8, "Member 'ABP_AJBInGameCharacter_C28_C::UberGraphFrame_BP_AJBInGameCharacter_C28_C' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, BP_AJBCollectMd) == 0x0017B0, "Member 'ABP_AJBInGameCharacter_C28_C::BP_AJBCollectMd' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, BP_AJBRobMdSkill) == 0x0017B8, "Member 'ABP_AJBInGameCharacter_C28_C::BP_AJBRobMdSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, BP_AJBRobSdSkill) == 0x0017C0, "Member 'ABP_AJBInGameCharacter_C28_C::BP_AJBRobSdSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, BP_AJBRushS28Skill) == 0x0017C8, "Member 'ABP_AJBInGameCharacter_C28_C::BP_AJBRushS28Skill' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameCharacter_C28_C, BP_AJBSeparateS28Skill) == 0x0017D0, "Member 'ABP_AJBInGameCharacter_C28_C::BP_AJBSeparateS28Skill' has a wrong offset!");

}


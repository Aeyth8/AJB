#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tutorial

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ETutorialType_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK::Params
{

// Function WB_Tutorial.WB_Tutorial_C.ExecuteUbergraph_WB_Tutorial
// 0x0088 (0x0088 - 0x0000)
struct WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ETutorialType                                 K2Node_CustomEvent_Type;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_DisplayText;                    // 0x0020(0x0018)()
	float                                         K2Node_CustomEvent_DisplayTime;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnablPadIcon;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBPadIconType                               K2Node_CustomEvent_PadIconType;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnableReticleArrow;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0040(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial) == 0x000008, "Wrong alignment on WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial");
static_assert(sizeof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial) == 0x000088, "Wrong size on WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, EntryPoint) == 0x000000, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, CallFunc_BuildString_Float_ReturnValue) == 0x000008, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_Type) == 0x000018, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_DisplayText) == 0x000020, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_DisplayText' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_DisplayTime) == 0x000038, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_DisplayTime' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_bEnablPadIcon) == 0x00003C, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_bEnablPadIcon' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_PadIconType) == 0x00003D, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_PadIconType' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_CustomEvent_bEnableReticleArrow) == 0x00003E, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_CustomEvent_bEnableReticleArrow' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_SwitchEnum_CmpSuccess) == 0x00003F, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_Event_MyGeometry) == 0x000040, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, K2Node_Event_InDeltaTime) == 0x000078, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000084, "Member 'WB_Tutorial_C_ExecuteUbergraph_WB_Tutorial::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");

// Function WB_Tutorial.WB_Tutorial_C.Show
// 0x0028 (0x0028 - 0x0000)
struct WB_Tutorial_C_Show final
{
public:
	ETutorialType                                 Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayText;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         DisplayTime_0;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnablPadIcon;                                     // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBPadIconType                               PadIconType;                                       // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableReticleArrow;                               // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Tutorial_C_Show) == 0x000008, "Wrong alignment on WB_Tutorial_C_Show");
static_assert(sizeof(WB_Tutorial_C_Show) == 0x000028, "Wrong size on WB_Tutorial_C_Show");
static_assert(offsetof(WB_Tutorial_C_Show, Type) == 0x000000, "Member 'WB_Tutorial_C_Show::Type' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Show, DisplayText) == 0x000008, "Member 'WB_Tutorial_C_Show::DisplayText' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Show, DisplayTime_0) == 0x000020, "Member 'WB_Tutorial_C_Show::DisplayTime_0' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Show, bEnablPadIcon) == 0x000024, "Member 'WB_Tutorial_C_Show::bEnablPadIcon' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Show, PadIconType) == 0x000025, "Member 'WB_Tutorial_C_Show::PadIconType' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Show, bEnableReticleArrow) == 0x000026, "Member 'WB_Tutorial_C_Show::bEnableReticleArrow' has a wrong offset!");

// Function WB_Tutorial.WB_Tutorial_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Tutorial_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tutorial_C_Tick) == 0x000004, "Wrong alignment on WB_Tutorial_C_Tick");
static_assert(sizeof(WB_Tutorial_C_Tick) == 0x00003C, "Wrong size on WB_Tutorial_C_Tick");
static_assert(offsetof(WB_Tutorial_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Tutorial_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Tutorial_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Tutorial.WB_Tutorial_C.OverrideFontMaterial
// 0x0060 (0x0060 - 0x0000)
struct WB_Tutorial_C_OverrideFontMaterial final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Font_Material;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(WB_Tutorial_C_OverrideFontMaterial) == 0x000008, "Wrong alignment on WB_Tutorial_C_OverrideFontMaterial");
static_assert(sizeof(WB_Tutorial_C_OverrideFontMaterial) == 0x000060, "Wrong size on WB_Tutorial_C_OverrideFontMaterial");
static_assert(offsetof(WB_Tutorial_C_OverrideFontMaterial, TextWidget) == 0x000000, "Member 'WB_Tutorial_C_OverrideFontMaterial::TextWidget' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_OverrideFontMaterial, Font_Material) == 0x000008, "Member 'WB_Tutorial_C_OverrideFontMaterial::Font_Material' has a wrong offset!");
static_assert(offsetof(WB_Tutorial_C_OverrideFontMaterial, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'WB_Tutorial_C_OverrideFontMaterial::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}


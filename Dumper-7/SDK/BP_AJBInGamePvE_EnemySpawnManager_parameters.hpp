#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGamePvE_EnemySpawnManager

#include "Basic.hpp"

#include "EPvEGameDifficulty_structs.hpp"
#include "ST_AJBInGamePvE_EnemyInfo_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AJB_structs.hpp"
#include "ST_AJBInGamePvE_BossSpawnTableRow_structs.hpp"
#include "ST_AJBInGamePvE_BossInfo_structs.hpp"
#include "E_AJBInGamePvE_GamePhase_structs.hpp"
#include "ST_AJBInGamePvE_EnemySpawnTableRow_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager
// 0x0308 (0x0308 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Temp_wildcard_Variable;                            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_BossSpawnTableRow     CallFunc_Array_Get_Item;                           // 0x007C(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPvERemainingTimeInPhase_RemainingTimeInPhase; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_BossID;                         // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_AJBInGamePvE_BossInfo              CallFunc_FindBossDataByID_BossData;                // 0x00A8(0x0038)(HasGetValueTypeHash)
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    CallFunc_GetRandomSpawnArea_SpawnArea;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_EnemyInfo             CallFunc_ConvertBossDataToEnemyData_EnemyInfo;     // 0x00E8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPvEGameDifficulty                            CallFunc_GetPvEDifficulty_Difficulty;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPvECurrentWaveIndex_WaveIndex;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableToSpawnEnemies_IsEnableToSpawnEnemies; // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping; // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> K2Node_CustomEvent_AreaTargets;               // 0x0158(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_SpawnCounts;                    // 0x0168(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FST_AJBInGamePvE_EnemySpawnTableRow    CallFunc_GetCurrentSpawnSetCache_CurrentSpawnSet;  // 0x0178(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ConvertSpawnSetToArray_SpawnAmountsInRow; // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FST_AJBInGamePvE_EnemyInfo>     CallFunc_SelectRandomEnemiesWithoutDuplication_RandomEnemies; // 0x01B0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    CallFunc_Array_Get_Item2;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnabledToRespawnEnemies_IsEnabledToRespawn; // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0200(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBPvEGameState_IsValid;               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBPvEGameState_C*                  CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState;  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchingPlayerInfo                    K2Node_MakeStruct_MatchingPlayerInfo;              // 0x0250(0x0088)()
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item3;                          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping1; // 0x02F0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager) == 0x000308, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, EntryPoint) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_Operator) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_Time) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_Timing) == 0x000014, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_bEnable) == 0x000015, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_bOperatorIsEmpty) == 0x000016, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_Variable) == 0x000017, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_Has_Been_Initd_Variable) == 0x000019, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_int_Variable) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Add_IntInt_ReturnValue1) == 0x00004C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_wildcard_Variable) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_IsServer_ReturnValue) == 0x000074, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Length_ReturnValue1) == 0x000078, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Get_Item) == 0x00007C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Length_ReturnValue2) == 0x000090, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetPvERemainingTimeInPhase_RemainingTimeInPhase) == 0x000098, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetPvERemainingTimeInPhase_RemainingTimeInPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_CustomEvent_BossID) == 0x0000A0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_CustomEvent_BossID' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_FindBossDataByID_BossData) == 0x0000A8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_FindBossDataByID_BossData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetRandomSpawnArea_SpawnArea) == 0x0000E0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetRandomSpawnArea_SpawnArea' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_ConvertBossDataToEnemyData_EnemyInfo) == 0x0000E8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_ConvertBossDataToEnemyData_EnemyInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000118, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetPvEDifficulty_Difficulty) == 0x000119, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetPvEDifficulty_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetPvECurrentWaveIndex_WaveIndex) == 0x00011C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetPvECurrentWaveIndex_WaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000120, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000121, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_BooleanAND_ReturnValue) == 0x000122, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_int_Loop_Counter_Variable1) == 0x000138, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Subtract_IntInt_ReturnValue1) == 0x00013C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_Has_Been_Initd_Variable1) == 0x000141, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_IsClosed_Variable1) == 0x000142, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_IsEnableToSpawnEnemies_IsEnableToSpawnEnemies) == 0x000143, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_IsEnableToSpawnEnemies_IsEnableToSpawnEnemies' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping) == 0x000148, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_CustomEvent_AreaTargets) == 0x000158, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_CustomEvent_AreaTargets' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_CustomEvent_SpawnCounts) == 0x000168, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_CustomEvent_SpawnCounts' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetCurrentSpawnSetCache_CurrentSpawnSet) == 0x000178, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetCurrentSpawnSetCache_CurrentSpawnSet' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Get_Item1) == 0x000198, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_ConvertSpawnSetToArray_SpawnAmountsInRow) == 0x0001A0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_ConvertSpawnSetToArray_SpawnAmountsInRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_SelectRandomEnemiesWithoutDuplication_RandomEnemies) == 0x0001B0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_SelectRandomEnemiesWithoutDuplication_RandomEnemies' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Length_ReturnValue3) == 0x0001C0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Get_Item2) == 0x0001C8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Length_ReturnValue4) == 0x0001D0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Min_ReturnValue) == 0x0001D4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Subtract_IntInt_ReturnValue2) == 0x0001D8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001DC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_IsEnabledToRespawnEnemies_IsEnabledToRespawn) == 0x0001DD, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_IsEnabledToRespawnEnemies_IsEnabledToRespawn' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_BooleanAND_ReturnValue1) == 0x0001DE, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_IsEditor_ReturnValue) == 0x0001DF, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetAJBGameInstance_bSuccess) == 0x0001E0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0001E8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_Has_Been_Initd_Variable2) == 0x0001F0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Map_Length_ReturnValue) == 0x0001F4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Add_IntInt_ReturnValue2) == 0x0001F8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_MakeLiteralText_ReturnValue) == 0x000200, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Conv_TextToString_ReturnValue) == 0x000218, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Conv_IntToByte_ReturnValue) == 0x000228, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_MakeLiteralString_ReturnValue) == 0x000230, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetAJBPvEGameState_IsValid) == 0x000240, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetAJBPvEGameState_IsValid' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState) == 0x000248, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_GetAJBPvEGameState_BP_AJB_PvE_GameState' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_MakeStruct_MatchingPlayerInfo) == 0x000250, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_MakeStruct_MatchingPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_int_Array_Index_Variable1) == 0x0002D8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_Array_Get_Item3) == 0x0002DC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_float_Variable) == 0x0002E0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_float_Variable1) == 0x0002E4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Select_Default) == 0x0002E8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, K2Node_Event_DeltaSeconds) == 0x0002EC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping1) == 0x0002F0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager, Temp_bool_IsClosed_Variable2) == 0x000300, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ExecuteUbergraph_BP_AJBInGamePvE_EnemySpawnManager::Temp_bool_IsClosed_Variable2' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.SpawnEnemies
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies final
{
public:
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> AreaTargets;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int32>                                 SpawnCounts;                                       // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies) == 0x000020, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies, AreaTargets) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies::AreaTargets' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies, SpawnCounts) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SpawnEnemies::SpawnCounts' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.SpawnBoss
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss final
{
public:
	int32                                         BossID;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss) == 0x000004, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss, BossID) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SpawnBoss::BossID' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.ShuffleSpawnAreaMapping
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping final
{
public:
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> ShuffledSpawnAreaMapping;                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_GetAllActorsOfClass_OutActors;       // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping) == 0x000040, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, ShuffledSpawnAreaMapping) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::ShuffledSpawnAreaMapping' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_Add_IntInt_ReturnValue1) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_IsEditor_ReturnValue) == 0x00002D, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ShuffleSpawnAreaMapping::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.GetShuffledSpawnAreaMap
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap final
{
public:
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> ShuffledSpawnAreaMap_0;                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap) == 0x000028, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap, ShuffledSpawnAreaMap_0) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap::ShuffledSpawnAreaMap_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap, CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap::CallFunc_ShuffleSpawnAreaMapping_ShuffledSpawnAreaMapping' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetShuffledSpawnAreaMap::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.ConvertSpawnSetToArray
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray final
{
public:
	struct FST_AJBInGamePvE_EnemySpawnTableRow    Row;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<int32>                                 SpawnAmountsInRow;                                 // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<int32>                                 ReturnValue;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray) == 0x000058, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, Row) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::Row' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, SpawnAmountsInRow) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::SpawnAmountsInRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, ReturnValue) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue1) == 0x000044, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue2) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue3) == 0x00004C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue4) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray, CallFunc_Array_Add_ReturnValue5) == 0x000054, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertSpawnSetToArray::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.CollectSpawnSetsChunk
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk final
{
public:
	EPvEGameDifficulty                            Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaveIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> SpawnSetsChunk;                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> Ret;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_AJBInGamePvE_EnemySpawnTableRow    CallFunc_GetDataTableRowFromName_OutRow;           // 0x005C(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk) == 0x000088, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, Difficulty) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, WaveIndex) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::WaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, SpawnSetsChunk) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::SpawnSetsChunk' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, Ret) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::Ret' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_GetDataTableRowFromName_OutRow) == 0x00005C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00007C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000085, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk, CallFunc_BooleanAND_ReturnValue) == 0x000086, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectSpawnSetsChunk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.GetCurrentSpawnSetsChunkCache
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache final
{
public:
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> CurrentSpawnSetsChunk_0;                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache) == 0x000010, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache, CurrentSpawnSetsChunk_0) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetsChunkCache::CurrentSpawnSetsChunk_0' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.GetCurrentSpawnSetCache
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache final
{
public:
	struct FST_AJBInGamePvE_EnemySpawnTableRow    CurrentSpawnSet;                                   // 0x0000(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk; // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	struct FST_AJBInGamePvE_EnemySpawnTableRow    CallFunc_Array_Get_Item;                           // 0x0030(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache) == 0x000050, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache, CurrentSpawnSet) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache::CurrentSpawnSet' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache, CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache::CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetCurrentSpawnSetCache::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.IncrementSpawnSet
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk; // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet) == 0x0000A0, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk) == 0x000058, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_GetCurrentSpawnSetsChunkCache_CurrentSpawnSetsChunk' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Format_ReturnValue) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet, CallFunc_Min_ReturnValue) == 0x00009C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IncrementSpawnSet::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.RefreshCurrentSpawnSetsChunkCache
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache final
{
public:
	int32                                         CallFunc_GetPvECurrentWaveIndex_WaveIndex;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPvEGameDifficulty                            CallFunc_GetPvEDifficulty_Difficulty;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_AJBInGamePvE_EnemySpawnTableRow> CallFunc_CollectSpawnSetsChunk_SpawnSetsChunk; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache) == 0x000018, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache, CallFunc_GetPvECurrentWaveIndex_WaveIndex) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache::CallFunc_GetPvECurrentWaveIndex_WaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache, CallFunc_GetPvEDifficulty_Difficulty) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache::CallFunc_GetPvEDifficulty_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache, CallFunc_CollectSpawnSetsChunk_SpawnSetsChunk) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshCurrentSpawnSetsChunkCache::CallFunc_CollectSpawnSetsChunk_SpawnSetsChunk' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.OnEnemyDied
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied) == 0x000048, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, DamageType) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, DeadActor) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, DamageCauser) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_Find_ReturnValue1) == 0x000034, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_Find_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_Length_ReturnValue1) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemyDied::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.RefreshLivingEnemies
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies final
{
public:
	TArray<class ABP_AJBInGameCharacter_C*>       ItemToRemove;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item2;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item3;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue1;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies) == 0x0000B8, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, ItemToRemove) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::ItemToRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Array_Index_Variable1) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Loop_Counter_Variable2) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Add_IntInt_ReturnValue2) == 0x00002C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Array_Index_Variable2) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Array_Index_Variable3) == 0x000034, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Find_ReturnValue) == 0x00004C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue1) == 0x000054, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue2) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_IsDeathAndEnd_ReturnValue) == 0x000070, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_BooleanOR_ReturnValue) == 0x000073, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue3) == 0x000074, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000078, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Get_Item2) == 0x000080, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Find_ReturnValue1) == 0x000088, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Find_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue4) == 0x00008C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Less_IntInt_ReturnValue1) == 0x000090, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x000091, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, Temp_int_Loop_Counter_Variable3) == 0x000094, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Get_Item3) == 0x000098, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Length_ReturnValue5) == 0x0000A0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Array_Add_ReturnValue1) == 0x0000A4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Less_IntInt_ReturnValue2) == 0x0000A8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_IsDeathAndEnd_ReturnValue1) == 0x0000A9, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_IsDeathAndEnd_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_IsValid_ReturnValue1) == 0x0000AA, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Less_IntInt_ReturnValue3) == 0x0000AB, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Not_PreBool_ReturnValue1) == 0x0000AC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_BooleanOR_ReturnValue1) == 0x0000AD, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies, CallFunc_Add_IntInt_ReturnValue3) == 0x0000B0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshLivingEnemies::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.IsEnableToSpawnEnemies
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies final
{
public:
	bool                                          IsEnableToSpawnEnemies_0;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePvE_PhaseManager_C*        CallFunc_GetPvEPhaseManager_PhaseManager;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AJBInGamePvE_GamePhase                      CallFunc_GetCurrentPhase_CurrentPhase;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRemainingTimeInPhase_RemainingTimeInPhase; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies) == 0x000020, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, IsEnableToSpawnEnemies_0) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::IsEnableToSpawnEnemies_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_GetPvEPhaseManager_PhaseManager) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_GetPvEPhaseManager_PhaseManager' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_GetCurrentPhase_CurrentPhase) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_GetCurrentPhase_CurrentPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_GetRemainingTimeInPhase_RemainingTimeInPhase) == 0x000014, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_GetRemainingTimeInPhase_RemainingTimeInPhase' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnableToSpawnEnemies::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.OnBeginWave
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave final
{
public:
	int32                                         NewWaveIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewWaveDuration;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_CollectAvailableCharacters_AvailableCharacters; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave) == 0x000020, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave, NewWaveIndex) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave::NewWaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave, NewWaveDuration) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave::NewWaveDuration' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave, CallFunc_CollectAvailableCharacters_AvailableCharacters) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnBeginWave::CallFunc_CollectAvailableCharacters_AvailableCharacters' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.OnEnemySpawned
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned final
{
public:
	struct FGameplayTag                           SpawnType;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIController_C*            EnemyController;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               SpawnedEnemy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate; // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned) == 0x000038, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, SpawnType) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::SpawnType' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, EnemyController) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::EnemyController' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, SpawnedEnemy) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned, CallFunc_Array_Add_ReturnValue1) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_OnEnemySpawned::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.InitDelegates
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewWaveIndex, float NewWaveDuration)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGamePvE_PhaseManager_C*> CallFunc_GetAllActorsOfClass_OutActors;           // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGamePvE_PhaseManager_C*        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& SpawnType, class ABP_AJBInGameAIController_C* EnemyController, class ABP_AJBInGameCharacter_C* SpawnedEnemy)> K2Node_CreateDelegate_OutputDelegate1; // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_GetAllActorsOfClass_OutActors1;      // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    CallFunc_Array_Get_Item1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates) == 0x000070, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, Temp_int_Variable) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_GetAllActorsOfClass_OutActors1) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_GetAllActorsOfClass_OutActors1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_InitDelegates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.CollectBossTable
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable final
{
public:
	EPvEGameDifficulty                            Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaveIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_AJBInGamePvE_BossSpawnTableRow> BossSpawnTable;                                // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FST_AJBInGamePvE_BossSpawnTableRow> Ret;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_BossSpawnTableRow     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0054(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable) == 0x000070, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, Difficulty) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, WaveIndex) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::WaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, BossSpawnTable) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::BossSpawnTable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, Ret) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::Ret' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000054, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000064, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000066, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000067, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectBossTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.RefreshBossTableCache
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache final
{
public:
	EPvEGameDifficulty                            CallFunc_GetPvEDifficulty_Difficulty;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPvECurrentWaveIndex_WaveIndex;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_AJBInGamePvE_BossSpawnTableRow> CallFunc_CollectBossTable_BossSpawnTable;      // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache) == 0x000018, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache, CallFunc_GetPvEDifficulty_Difficulty) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache::CallFunc_GetPvEDifficulty_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache, CallFunc_GetPvECurrentWaveIndex_WaveIndex) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache::CallFunc_GetPvECurrentWaveIndex_WaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache, CallFunc_CollectBossTable_BossSpawnTable) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_RefreshBossTableCache::CallFunc_CollectBossTable_BossSpawnTable' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.GetRandomSpawnArea
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea final
{
public:
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    SpawnArea;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBInGamePvE_EnemySpawnVolume_C*> CallFunc_GetShuffledSpawnAreaMap_ShuffledSpawnAreaMap; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePvE_EnemySpawnVolume_C*    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea) == 0x000028, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea, SpawnArea) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea::SpawnArea' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea, CallFunc_GetShuffledSpawnAreaMap_ShuffledSpawnAreaMap) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea::CallFunc_GetShuffledSpawnAreaMap_ShuffledSpawnAreaMap' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea, CallFunc_RandomInteger_ReturnValue) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_GetRandomSpawnArea::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.ConvertBossDataToEnemyData
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData final
{
public:
	struct FST_AJBInGamePvE_BossInfo              BossInfo;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_EnemyInfo             EnemyInfo;                                         // 0x0038(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	struct FST_AJBInGamePvE_EnemyInfo             K2Node_MakeStruct_ST_AJBInGamePvE_EnemyInfo;       // 0x0068(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData) == 0x000098, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData, BossInfo) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData::BossInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData, EnemyInfo) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData::EnemyInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData, K2Node_MakeStruct_ST_AJBInGamePvE_EnemyInfo) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_ConvertBossDataToEnemyData::K2Node_MakeStruct_ST_AJBInGamePvE_EnemyInfo' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.CollectAvailableCharacters
// 0x0290 (0x0290 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters final
{
public:
	TArray<struct FGameplayTag>                   AvailableCharacters;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TSet<struct FGameplayTag>                     BannedCharacters;                                  // 0x0010(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          IsAddibleCharacter;                                // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   Ret;                                               // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FAJBCharacterInfo>              CharactersCache;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   Temp_struct_Variable;                              // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FAJBCharacterInfo>              CallFunc_CollectCharacterTags_CharacterInfoArray;  // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPvELastWaveIndex_LastWaveIndex;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPvEGameDifficulty                            CallFunc_GetPvEDifficulty_Difficulty;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_AJBInGamePvE_BossSpawnTableRow> CallFunc_CollectBossTable_BossSpawnTable;      // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	struct FST_AJBInGamePvE_BossSpawnTableRow     CallFunc_Array_Get_Item;                           // 0x0110(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_AJBInGamePvE_BossInfo              CallFunc_FindBossDataByID_BossData;                // 0x0128(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Set_ToArray_Result;                       // 0x0170(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item2;                          // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_Array_Get_Item3;                          // 0x0198(0x00E8)()
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters) == 0x000290, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, AvailableCharacters) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::AvailableCharacters' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, BannedCharacters) == 0x000010, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::BannedCharacters' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, IsAddibleCharacter) == 0x000060, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::IsAddibleCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Ret) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Ret' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CharactersCache) == 0x000078, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CharactersCache' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Array_Index_Variable1) == 0x00009C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Loop_Counter_Variable1) == 0x0000A0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Add_IntInt_ReturnValue1) == 0x0000A4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Array_Index_Variable2) == 0x0000A8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_struct_Variable) == 0x0000B0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_CollectCharacterTags_CharacterInfoArray) == 0x0000C0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_CollectCharacterTags_CharacterInfoArray' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Loop_Counter_Variable2) == 0x0000D0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Add_IntInt_ReturnValue2) == 0x0000D4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Loop_Counter_Variable3) == 0x0000E0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Add_IntInt_ReturnValue3) == 0x0000E4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_GetPvELastWaveIndex_LastWaveIndex) == 0x0000E8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_GetPvELastWaveIndex_LastWaveIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_GetPvEDifficulty_Difficulty) == 0x0000EC, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_GetPvEDifficulty_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_IsEditor_ReturnValue) == 0x0000ED, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_IsShipping_ReturnValue) == 0x0000EE, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Not_PreBool_ReturnValue1) == 0x0000EF, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Length_ReturnValue1) == 0x0000F0, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Variable) == 0x0000F4, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_CollectBossTable_BossSpawnTable) == 0x000100, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_CollectBossTable_BossSpawnTable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Length_ReturnValue2) == 0x000120, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Less_IntInt_ReturnValue1) == 0x000124, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_FindBossDataByID_BossData) == 0x000128, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_FindBossDataByID_BossData' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Add_IntInt_ReturnValue4) == 0x000164, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, Temp_int_Array_Index_Variable3) == 0x000168, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Set_ToArray_Result) == 0x000170, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Get_Item1) == 0x000180, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Get_Item2) == 0x000188, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Length_ReturnValue3) == 0x000190, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Less_IntInt_ReturnValue2) == 0x000194, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_BooleanAND_ReturnValue) == 0x000195, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Get_Item3) == 0x000198, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Length_ReturnValue4) == 0x000280, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Less_IntInt_ReturnValue3) == 0x000284, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_Array_Add_ReturnValue) == 0x000288, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00028C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectAvailableCharacters::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.IsEnabledToRespawnEnemies
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies final
{
public:
	bool                                          IsEnabledToRespawn;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNoLivingNormalEnemies_IsNoLivingEnemies; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies) == 0x000001, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies) == 0x000002, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies, IsEnabledToRespawn) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies::IsEnabledToRespawn' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies, CallFunc_IsNoLivingNormalEnemies_IsNoLivingEnemies) == 0x000001, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsEnabledToRespawnEnemies::CallFunc_IsNoLivingNormalEnemies_IsNoLivingEnemies' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.IsNoLivingNormalEnemies
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies final
{
public:
	bool                                          IsNoLivingEnemies;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies) == 0x00000C, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies, IsNoLivingEnemies) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies::IsNoLivingEnemies' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingNormalEnemies::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.IsNoLivingOtherEnemies
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies final
{
public:
	bool                                          IsNoLivingEnemies;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies) == 0x00000C, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies, IsNoLivingEnemies) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies::IsNoLivingEnemies' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_IsNoLivingOtherEnemies::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.HasAllBossesSpawned
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned final
{
public:
	bool                                          HasAllBossesSpawned_0;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned) == 0x000004, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned) == 0x00000C, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned, HasAllBossesSpawned_0) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned::HasAllBossesSpawned_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_HasAllBossesSpawned::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.CollectCharacterTags
// 0x0170 (0x0170 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags final
{
public:
	bool                                          IsWithoutCache;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAJBCharacterInfo>              CharacterInfoArray;                                // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	class UDataTable*                             DT_CharacterInfo;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForNegotiations_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAvailableAllCharacters_ReturnValue;    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAJBCharacterInfo>              K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAJBCharacterInfo>              Temp_wildcard_Variable;                            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x00E8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags) == 0x000170, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, IsWithoutCache) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::IsWithoutCache' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CharacterInfoArray) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CharacterInfoArray' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, DT_CharacterInfo) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::DT_CharacterInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_IsShipping_ReturnValue) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_IsForNegotiations_ReturnValue) == 0x000021, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_IsForNegotiations_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_GetAvailableAllCharacters_ReturnValue) == 0x000022, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_GetAvailableAllCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, Temp_wildcard_Variable) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000158, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Less_IntInt_ReturnValue) == 0x000159, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Array_Add_ReturnValue) == 0x00015C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Not_PreBool_ReturnValue1) == 0x000160, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanAND_ReturnValue) == 0x000161, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanOR_ReturnValue) == 0x000162, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Not_PreBool_ReturnValue2) == 0x000163, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanAND_ReturnValue1) == 0x000164, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanAND_ReturnValue2) == 0x000165, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_Array_Length_ReturnValue1) == 0x000168, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanOR_ReturnValue1) == 0x00016C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00016D, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags, CallFunc_BooleanOR_ReturnValue2) == 0x00016E, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_CollectCharacterTags::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");

// Function BP_AJBInGamePvE_EnemySpawnManager.BP_AJBInGamePvE_EnemySpawnManager_C.SelectRandomEnemiesWithoutDuplication
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication final
{
public:
	int32                                         EnemiesCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_AJBInGamePvE_EnemyInfo>     RandomEnemies;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_AJBInGamePvE_EnemyInfo>     Temp_wildcard_Variable;                            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_wildcard_Variable1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_AJBInGamePvE_EnemyInfo             CallFunc_MakePvEEnemyInfoByTag_PvEEnemyInfo;       // 0x0058(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_AJBInGamePvE_EnemyInfo>     K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication) == 0x000008, "Wrong alignment on BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication");
static_assert(sizeof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication) == 0x0000A0, "Wrong size on BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, EnemiesCount) == 0x000000, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::EnemiesCount' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, RandomEnemies) == 0x000008, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::RandomEnemies' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, Temp_int_Variable) == 0x000018, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_RandomInteger_ReturnValue) == 0x000020, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, Temp_wildcard_Variable) == 0x000030, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, Temp_wildcard_Variable1) == 0x000040, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::Temp_wildcard_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_Array_Length_ReturnValue1) == 0x000044, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000050, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_MakePvEEnemyInfoByTag_PvEEnemyInfo) == 0x000058, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_MakePvEEnemyInfoByTag_PvEEnemyInfo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_AJBInGamePvE_EnemySpawnManager_C_SelectRandomEnemiesWithoutDuplication::K2Node_MakeArray_Array' has a wrong offset!");

}


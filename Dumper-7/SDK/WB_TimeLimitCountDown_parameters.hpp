#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TimeLimitCountDown

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_TimeLimitCountDown.WB_TimeLimitCountDown_C.ExecuteUbergraph_WB_TimeLimitCountDown
// 0x0068 (0x0068 - 0x0000)
struct WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown) == 0x000008, "Wrong alignment on WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown");
static_assert(sizeof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown) == 0x000068, "Wrong size on WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, EntryPoint) == 0x000000, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x000018, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, K2Node_CustomEvent_Value) == 0x000020, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, K2Node_CustomEvent_MaxValue) == 0x000024, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::K2Node_CustomEvent_MaxValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000028, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000048, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_FCeil_ReturnValue) == 0x000050, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_IsValid_ReturnValue) == 0x00005E, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005F, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown, CallFunc_BooleanAND_ReturnValue1) == 0x000060, "Member 'WB_TimeLimitCountDown_C_ExecuteUbergraph_WB_TimeLimitCountDown::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function WB_TimeLimitCountDown.WB_TimeLimitCountDown_C.SetTextNum
// 0x0008 (0x0008 - 0x0000)
struct WB_TimeLimitCountDown_C_SetTextNum final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TimeLimitCountDown_C_SetTextNum) == 0x000004, "Wrong alignment on WB_TimeLimitCountDown_C_SetTextNum");
static_assert(sizeof(WB_TimeLimitCountDown_C_SetTextNum) == 0x000008, "Wrong size on WB_TimeLimitCountDown_C_SetTextNum");
static_assert(offsetof(WB_TimeLimitCountDown_C_SetTextNum, Value) == 0x000000, "Member 'WB_TimeLimitCountDown_C_SetTextNum::Value' has a wrong offset!");
static_assert(offsetof(WB_TimeLimitCountDown_C_SetTextNum, MaxValue) == 0x000004, "Member 'WB_TimeLimitCountDown_C_SetTextNum::MaxValue' has a wrong offset!");

}


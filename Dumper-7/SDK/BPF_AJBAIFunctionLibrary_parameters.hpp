#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBAIFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.HasDestinationToGo
// 0x0078 (0x0078 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_HasDestinationToGo final
{
public:
	class UBlackboardComponent*                   Blackboard;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 DestinationKey;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBlackboardKeySelector                 ArrivedDestinationKey;                             // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetValueAsVector_ReturnValue;             // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidAILocation_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_HasDestinationToGo");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo) == 0x000078, "Wrong size on BPF_AJBAIFunctionLibrary_C_HasDestinationToGo");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, Blackboard) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::Blackboard' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, DestinationKey) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::DestinationKey' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, ArrivedDestinationKey) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::ArrivedDestinationKey' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, __WorldContext) == 0x000058, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, ReturnValue) == 0x000060, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, CallFunc_GetValueAsBool_ReturnValue) == 0x000061, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, CallFunc_GetValueAsVector_ReturnValue) == 0x000064, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::CallFunc_GetValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_HasDestinationToGo, CallFunc_IsValidAILocation_ReturnValue) == 0x000070, "Member 'BPF_AJBAIFunctionLibrary_C_HasDestinationToGo::CallFunc_IsValidAILocation_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.GetRecognition
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_GetRecognition final
{
public:
	class AAIController*                          AIController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_GetRecognition) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_GetRecognition");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_GetRecognition) == 0x000020, "Wrong size on BPF_AJBAIFunctionLibrary_C_GetRecognition");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetRecognition, AIController) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_GetRecognition::AIController' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetRecognition, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_GetRecognition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetRecognition, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_GetRecognition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetRecognition, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_GetRecognition::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.GetInput
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_GetInput final
{
public:
	class AAIController*                          AIController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_GetInput) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_GetInput");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_GetInput) == 0x000020, "Wrong size on BPF_AJBAIFunctionLibrary_C_GetInput");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetInput, AIController) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_GetInput::AIController' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetInput, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_GetInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetInput, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_GetInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetInput, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_GetInput::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.PathPointCompleted
// 0x0028 (0x0028 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_PathPointCompleted final
{
public:
	class UNavigationPath*                        NavigationPath;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPathIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_PathPointCompleted");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted) == 0x000028, "Wrong size on BPF_AJBAIFunctionLibrary_C_PathPointCompleted");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, NavigationPath) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::NavigationPath' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, CurrentPathIndex) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::CurrentPathIndex' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_PathPointCompleted, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_PathPointCompleted::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.CurrentPathPoint
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_CurrentPathPoint final
{
public:
	class UNavigationPath*                        NavigationPath;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPathIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_CurrentPathPoint");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint) == 0x000030, "Wrong size on BPF_AJBAIFunctionLibrary_C_CurrentPathPoint");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint, NavigationPath) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_CurrentPathPoint::NavigationPath' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint, CurrentPathIndex) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_CurrentPathPoint::CurrentPathIndex' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_CurrentPathPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint, ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_CurrentPathPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_CurrentPathPoint, CallFunc_Array_Get_Item) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_CurrentPathPoint::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.IsProbablyPropByBounds
// 0x0048 (0x0048 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds) == 0x000048, "Wrong size on BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, PrimitiveComponent) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_GetComponentBounds_Origin) == 0x000014, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_GetComponentBounds_SphereRadius) == 0x00002C, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_BreakVector_X) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_BreakVector_Y) == 0x000034, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_BreakVector_Z) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_Less_FloatFloat_ReturnValue1) == 0x00003D, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_Less_FloatFloat_ReturnValue2) == 0x00003E, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_BooleanOR_ReturnValue) == 0x00003F, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_IsProbablyPropByBounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.LocationOfOppositeSide
// 0x0098 (0x0098 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyRadius_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FarthestPointOnBoxKeepZ_ReturnValue;      // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide) == 0x000098, "Wrong size on BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, HitComponent) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::HitComponent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, Character) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::Character' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_GetComponentBounds_Origin) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_GetComponentBounds_BoxExtent) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_GetComponentBounds_SphereRadius) == 0x00003C, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_GetBodyRadius_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_GetBodyRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_GetLocation_ReturnValue) == 0x000044, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_FarthestPointOnBoxKeepZ_ReturnValue) == 0x000068, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_FarthestPointOnBoxKeepZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_Normal_ReturnValue) == 0x000074, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BPF_AJBAIFunctionLibrary_C_LocationOfOppositeSide::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.LineBoxIntersection
// 0x00B8 (0x00B8 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_LineBoxIntersection final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxOrigin;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x004C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0094(0x001C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LineAabbIntersection_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_LineBoxIntersection");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection) == 0x0000B8, "Wrong size on BPF_AJBAIFunctionLibrary_C_LineBoxIntersection");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, Start) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::Start' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, End) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::End' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, BoxOrigin) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::BoxOrigin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, BoxExtent) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, BoxRotation) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, __WorldContext) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_NegateRotator_ReturnValue) == 0x00004C, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000058, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x000064, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x000070, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_MakeBox_ReturnValue) == 0x000094, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_LineBoxIntersection, CallFunc_LineAabbIntersection_ReturnValue) == 0x0000B0, "Member 'BPF_AJBAIFunctionLibrary_C_LineBoxIntersection::CallFunc_LineAabbIntersection_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.ClosestPointOnBox
// 0x00B8 (0x00B8 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxOrigin;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0038(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0080(0x001C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetClosestPointOnAabb_ReturnValue;        // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox) == 0x0000B8, "Wrong size on BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, Point) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::Point' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, BoxOrigin) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::BoxOrigin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, BoxExtent) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, BoxRotation) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, __WorldContext) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, ReturnValue) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_NegateRotator_ReturnValue) == 0x000044, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x00005C, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_MakeBox_ReturnValue) == 0x000080, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_GetClosestPointOnAabb_ReturnValue) == 0x00009C, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_GetClosestPointOnAabb_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x0000A8, "Member 'BPF_AJBAIFunctionLibrary_C_ClosestPointOnBox::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.FarthestPointOnBoxKeepZ
// 0x0108 (0x0108 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxOrigin;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0038(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0080(0x001C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetClosestPointOnAabb_ReturnValue;        // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ) == 0x000108, "Wrong size on BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, Point) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::Point' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, BoxOrigin) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::BoxOrigin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, BoxExtent) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, BoxRotation) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, __WorldContext) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, ReturnValue) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_NegateRotator_ReturnValue) == 0x000044, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x00005C, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_MakeBox_ReturnValue) == 0x000080, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_GetClosestPointOnAabb_ReturnValue) == 0x00009C, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_GetClosestPointOnAabb_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Add_VectorVector_ReturnValue1) == 0x0000A8, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B4, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0000C0, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_BreakVector_X) == 0x0000CC, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_BreakVector_Z) == 0x0000D4, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000DC, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_Add_VectorVector_ReturnValue2) == 0x0000EC, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x0000F8, "Member 'BPF_AJBAIFunctionLibrary_C_FarthestPointOnBoxKeepZ::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.AITraceObjectTypesWithoutPlayers
// 0x0038 (0x0038 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<EObjectTypeQuery>                      Types;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers) == 0x000038, "Wrong size on BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers, __WorldContext) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers, ReturnValue) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers, Types) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers::Types' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers, K2Node_MakeArray_Array) == 0x000028, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithoutPlayers::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.AIIfCharacterPossiblySeeMe
// 0x0128 (0x0128 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe final
{
public:
	class ABP_AJBInGameAIImaginaryCharacter_C*    SelfCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    Others;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe) == 0x000128, "Wrong size on BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, SelfCharacter) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::SelfCharacter' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, Others) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::Others' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, Temp_object_Variable) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_GetLocation_ReturnValue) == 0x00004C, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_GetLocation_ReturnValue1) == 0x000064, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_DegCos_ReturnValue) == 0x000070, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000078, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000100, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000104, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Normal_ReturnValue1) == 0x000114, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Dot_VectorVector_ReturnValue) == 0x000120, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_Less_FloatFloat_ReturnValue) == 0x000124, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'BPF_AJBAIFunctionLibrary_C_AIIfCharacterPossiblySeeMe::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.RequestAIGion
// 0x0048 (0x0048 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_RequestAIGion final
{
public:
	struct FGameplayTag                           GionEffectType;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 GionOwner;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIMessenger_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_RequestAIGion) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_RequestAIGion");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_RequestAIGion) == 0x000048, "Wrong size on BPF_AJBAIFunctionLibrary_C_RequestAIGion");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, GionEffectType) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::GionEffectType' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, GionOwner) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::GionOwner' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, Location) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, __WorldContext) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000028, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_RequestAIGion, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_RequestAIGion::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.GetBTExtension
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_GetBTExtension final
{
public:
	class AAIController*                          AIController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIBTExtension_C*                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIBTExtension_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_GetBTExtension) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_GetBTExtension");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_GetBTExtension) == 0x000020, "Wrong size on BPF_AJBAIFunctionLibrary_C_GetBTExtension");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetBTExtension, AIController) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_GetBTExtension::AIController' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetBTExtension, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_GetBTExtension::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetBTExtension, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_GetBTExtension::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetBTExtension, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_GetBTExtension::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.AITraceObjectTypesWithPlayers
// 0x0038 (0x0038 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<EObjectTypeQuery>                      Types;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers) == 0x000038, "Wrong size on BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers, __WorldContext) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers, ReturnValue) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers, Types) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers::Types' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers, K2Node_MakeArray_Array) == 0x000028, "Member 'BPF_AJBAIFunctionLibrary_C_AITraceObjectTypesWithPlayers::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.IsOutOfNavMesh
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh final
{
public:
	class ABP_AJBInGameAIImaginaryCharacter_C*    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh) == 0x000058, "Wrong size on BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, Character) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::Character' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_GetLocation_ReturnValue) == 0x000014, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_GetForwardVector_ReturnValue) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.IsOutOfNavMeshByLocation
// 0x0050 (0x0050 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation) == 0x000050, "Wrong size on BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, Location) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BPF_AJBAIFunctionLibrary_C_IsOutOfNavMeshByLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.FindIndoorHouseInfoRaw
// 0x0210 (0x0210 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw final
{
public:
	class UBP_AJBInGameAIRecognition_C*           Recognition;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    ImaginaryCharacter;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBAIInGameCharacterHandle_C*       CharacterHandle;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBAIHouseInfo_C*                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HouseInfoCount;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBAIHouseInfo_C*                   HouseInfo;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 House;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetIndoorHouseRaw_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00F0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0138(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetCharacterRef_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0190(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAJBAIEnvironmentBlock*>         CallFunc_GetEnvironmentBlockWithBlocksAround_ReturnValue; // 0x01B8(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x01C8(0x0010)(ZeroConstructor, ReferenceParm)
	class UAJBAIEnvironmentBlock*                 CallFunc_Array_Get_Item;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x01E0(0x0018)()
	class ABP_AJBAIHouseInfo_C*                   CallFunc_FindHouseInfoInEnvironmentBlock_AsHouseInfo; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw) == 0x000210, "Wrong size on BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, Recognition) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::Recognition' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, ImaginaryCharacter) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::ImaginaryCharacter' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CharacterHandle) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CharacterHandle' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, __WorldContext) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, ReturnValue) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, HouseInfoCount) == 0x000028, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::HouseInfoCount' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, HouseInfo) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::HouseInfo' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, House) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::House' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_IsShipping_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_GetIndoorHouseRaw_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_GetIndoorHouseRaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, Temp_bool_True_if_break_was_hit_Variable) == 0x00005C, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Not_PreBool_ReturnValue) == 0x00005E, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_GetObjectName_ReturnValue) == 0x000070, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_BreakVector_X) == 0x000080, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_BreakVector_Y) == 0x000084, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_BreakVector_Z) == 0x000088, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_FTrunc_ReturnValue) == 0x0000A8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, K2Node_MakeStruct_FormatArgumentData1) == 0x0000F0, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_FTrunc_ReturnValue1) == 0x000130, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, K2Node_MakeStruct_FormatArgumentData2) == 0x000138, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, K2Node_MakeArray_Array) == 0x000178, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_GetCharacterRef_ReturnValue) == 0x000188, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_GetCharacterRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Format_ReturnValue) == 0x000190, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0001A8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_GetEnvironmentBlockWithBlocksAround_ReturnValue) == 0x0001B8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_GetEnvironmentBlockWithBlocksAround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, K2Node_MakeArray_Array1) == 0x0001C8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Format_ReturnValue1) == 0x0001E0, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_FindHouseInfoInEnvironmentBlock_AsHouseInfo) == 0x0001F8, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_FindHouseInfoInEnvironmentBlock_AsHouseInfo' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_IsValid_ReturnValue1) == 0x000200, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Array_Length_ReturnValue) == 0x000204, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw, CallFunc_BooleanAND_ReturnValue) == 0x000209, "Member 'BPF_AJBAIFunctionLibrary_C_FindIndoorHouseInfoRaw::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.GetIndoorHouseRaw
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw final
{
public:
	class UBP_AJBAIInGameCharacterHandle_C*       CharacterHandle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetCharacterRef_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_GetOverlapVolumes_OverlapVolume;          // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw) == 0x000058, "Wrong size on BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CharacterHandle) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CharacterHandle' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, __WorldContext) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, ReturnValue) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_GetCharacterRef_ReturnValue) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_GetCharacterRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_GetOverlapVolumes_OverlapVolume) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_GetOverlapVolumes_OverlapVolume' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_Array_Get_Item) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw, CallFunc_GetParentActor_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_GetIndoorHouseRaw::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.BoxContainsPoint
// 0x0098 (0x0098 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_BoxContainsPoint final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxOrigin;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BoxRotation;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x003C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue1; // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0078(0x001C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AabbContainsPoint_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_BoxContainsPoint");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint) == 0x000098, "Wrong size on BPF_AJBAIFunctionLibrary_C_BoxContainsPoint");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, Point) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::Point' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, BoxOrigin) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::BoxOrigin' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, BoxExtent) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, BoxRotation) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::BoxRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, __WorldContext) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, ReturnValue) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_NegateRotator_ReturnValue) == 0x00003C, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue1) == 0x000054, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_MakeBox_ReturnValue) == 0x000078, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_BoxContainsPoint, CallFunc_AabbContainsPoint_ReturnValue) == 0x000094, "Member 'BPF_AJBAIFunctionLibrary_C_BoxContainsPoint::CallFunc_AabbContainsPoint_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.FindDoorEntranceLocation
// 0x0090 (0x0090 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation final
{
public:
	class AActor*                                 Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetLength;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                A;                                                 // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x0024(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue1;             // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation) == 0x000090, "Wrong size on BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, Door) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::Door' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, OffsetLength) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::OffsetLength' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, __WorldContext) == 0x000010, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, A) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::A' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, B) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::B' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_RotateAngleAxis_ReturnValue1) == 0x000054, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_RotateAngleAxis_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x00006C, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x000084, "Member 'BPF_AJBAIFunctionLibrary_C_FindDoorEntranceLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.FindNearFarDoorEntranceLocation
// 0x0060 (0x0060 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation final
{
public:
	class AActor*                                 Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Near;                                              // 0x0020(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Far;                                               // 0x002C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindDoorEntranceLocation_A;               // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindDoorEntranceLocation_B;               // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation) == 0x000060, "Wrong size on BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, Door) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::Door' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, Offset) == 0x000008, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::Offset' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, Location) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, __WorldContext) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, Near) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::Near' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, Far) == 0x00002C, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::Far' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, CallFunc_FindDoorEntranceLocation_A) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::CallFunc_FindDoorEntranceLocation_A' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, CallFunc_FindDoorEntranceLocation_B) == 0x000044, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::CallFunc_FindDoorEntranceLocation_B' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, CallFunc_AI_VectorDiffSq_ReturnValue) == 0x000050, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::CallFunc_AI_VectorDiffSq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, CallFunc_AI_VectorDiffSq_ReturnValue1) == 0x000054, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::CallFunc_AI_VectorDiffSq_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'BPF_AJBAIFunctionLibrary_C_FindNearFarDoorEntranceLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPF_AJBAIFunctionLibrary.BPF_AJBAIFunctionLibrary_C.SumDiffAbsXYZ
// 0x0050 (0x0050 - 0x0000)
struct BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ final
{
public:
	struct FVector                                v1;                                                // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                v2;                                                // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ) == 0x000008, "Wrong alignment on BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ");
static_assert(sizeof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ) == 0x000050, "Wrong size on BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, v1) == 0x000000, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::v1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, v2) == 0x00000C, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::v2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, __WorldContext) == 0x000018, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, ReturnValue) == 0x000020, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_BreakVector_X) == 0x000030, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_BreakVector_Y) == 0x000034, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_BreakVector_Z) == 0x000038, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Abs_ReturnValue) == 0x00003C, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Abs_ReturnValue1) == 0x000040, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Abs_ReturnValue2) == 0x000044, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00004C, "Member 'BPF_AJBAIFunctionLibrary_C_SumDiffAbsXYZ::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

}


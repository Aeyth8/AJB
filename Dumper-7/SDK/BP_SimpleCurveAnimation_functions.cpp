#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SimpleCurveAnimation

#include "Basic.hpp"

#include "BP_SimpleCurveAnimation_classes.hpp"
#include "BP_SimpleCurveAnimation_parameters.hpp"


namespace SDK
{

// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.ExecuteUbergraph_BP_SimpleCurveAnimation
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleCurveAnimation_C::ExecuteUbergraph_BP_SimpleCurveAnimation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "ExecuteUbergraph_BP_SimpleCurveAnimation");

	Params::BP_SimpleCurveAnimation_C_ExecuteUbergraph_BP_SimpleCurveAnimation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.ReversAnim
// (BlueprintCallable, BlueprintEvent)

void UBP_SimpleCurveAnimation_C::ReversAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "ReversAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.PlayAnim
// (BlueprintCallable, BlueprintEvent)

void UBP_SimpleCurveAnimation_C::PlayAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "PlayAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleCurveAnimation_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "ReceiveTick");

	Params::BP_SimpleCurveAnimation_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_SimpleCurveAnimation_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.UpdateAnimation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleCurveAnimation_C::UpdateAnimation(float DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "UpdateAnimation");

	Params::BP_SimpleCurveAnimation_C_UpdateAnimation Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleCurveAnimation.BP_SimpleCurveAnimation_C.GetUseAnimCurve
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCurveFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UCurveFloat* UBP_SimpleCurveAnimation_C::GetUseAnimCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleCurveAnimation_C", "GetUseAnimCurve");

	Params::BP_SimpleCurveAnimation_C_GetUseAnimCurve Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


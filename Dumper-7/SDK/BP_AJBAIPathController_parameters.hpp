#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAIPathController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.ExecuteUbergraph_BP_AJBAIPathController
// 0x0248 (0x0248 - 0x0000)
struct BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PathPointCompleted_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue1;                 // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue1;           // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue;               // 0x0074(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue1;              // 0x0084(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue2;              // 0x0094(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_DebugDiluteColor_ReturnValue;          // 0x00A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_GetLogColor_ReturnValue3;              // 0x00B4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_AI_DebugDiluteColor_ReturnValue1;         // 0x00C4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        K2Node_CustomEvent_Path;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPath_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PathPointCompleted_ReturnValue1;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue2;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CurrentPathPoint_ReturnValue;             // 0x0100(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPath_ReturnValue1;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PathPointCompleted_ReturnValue2;          // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue3;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue4;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_WillCollideToWall_IsEnabled;    // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue1;   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue5;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue2;                 // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPath_ReturnValue2;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetInput_ReturnValue;                     // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue2;   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue3;                 // 0x01B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x01BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue1;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_MakeBoundingBoxFromLocations_OutBox;      // 0x01D0(0x001C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_AI_AddZ_ReturnValue;                      // 0x01EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CurrentPathPoint_ReturnValue1;            // 0x01F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_AddZ_ReturnValue1;                     // 0x0204(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0210(0x001C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue6;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlackboardKeyName_ReturnValue7;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController");
static_assert(sizeof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController) == 0x000248, "Wrong size on BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, EntryPoint) == 0x000000, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, Temp_bool_Variable) == 0x00001C, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_PathPointCompleted_ReturnValue) == 0x00001D, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_PathPointCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue) == 0x000020, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000028, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetLocation_ReturnValue) == 0x000030, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue1) == 0x000040, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetControllingImaginaryCharacter_ReturnValue1) == 0x000048, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetControllingImaginaryCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetLocation_ReturnValue1) == 0x000050, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00005C, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000068, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IfDebugDrawOnTask_ReturnValue) == 0x00006A, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IfDebugDrawOnTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IfDebugDrawOnTask_ReturnValue1) == 0x00006B, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IfDebugDrawOnTask_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsValid_ReturnValue1) == 0x00006C, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Add_IntInt_ReturnValue1) == 0x000070, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_GetLogColor_ReturnValue) == 0x000074, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_GetLogColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_GetLogColor_ReturnValue1) == 0x000084, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_GetLogColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_GetLogColor_ReturnValue2) == 0x000094, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_GetLogColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_DebugDiluteColor_ReturnValue) == 0x0000A4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_DebugDiluteColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_GetLogColor_ReturnValue3) == 0x0000B4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_GetLogColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_DebugDiluteColor_ReturnValue1) == 0x0000C4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_DebugDiluteColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_Event_DeltaSeconds) == 0x0000D4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_CustomEvent_Path) == 0x0000D8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_CustomEvent_Path' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsValidPath_ReturnValue) == 0x0000E0, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsValidPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, Temp_int_Variable) == 0x0000E4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Add_IntInt_ReturnValue2) == 0x0000E8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, Temp_bool_Variable1) == 0x0000EC, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Add_IntInt_ReturnValue3) == 0x0000F0, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_PathPointCompleted_ReturnValue1) == 0x0000F4, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_PathPointCompleted_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue2) == 0x0000F8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_CurrentPathPoint_ReturnValue) == 0x000100, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_CurrentPathPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsValidPath_ReturnValue1) == 0x00010C, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsValidPath_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_PathPointCompleted_ReturnValue2) == 0x00010D, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_PathPointCompleted_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue3) == 0x000110, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue4) == 0x000118, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, Temp_bool_Variable2) == 0x000120, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetImaginaryCharacterBody_ReturnValue) == 0x000128, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetImaginaryCharacterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000130, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_CustomEvent_DestroyedActor) == 0x000138, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsEnabled_WillCollideToWall_IsEnabled) == 0x000144, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsEnabled_WillCollideToWall_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_Select_Default) == 0x000145, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_Select1_Default) == 0x000148, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetImaginaryCharacterBody_ReturnValue1) == 0x000150, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetImaginaryCharacterBody_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue5) == 0x000158, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetLocation_ReturnValue2) == 0x000160, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00016C, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_VSizeXY_ReturnValue) == 0x000178, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, K2Node_CreateDelegate_OutputDelegate1) == 0x000180, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Less_FloatFloat_ReturnValue) == 0x000190, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_BooleanOR_ReturnValue) == 0x000191, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, Temp_int_Variable1) == 0x000194, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_IsValidPath_ReturnValue2) == 0x000198, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_IsValidPath_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetInput_ReturnValue) == 0x0001A0, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetImaginaryCharacterBody_ReturnValue2) == 0x0001A8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetImaginaryCharacterBody_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetLocation_ReturnValue3) == 0x0001B0, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x0001BC, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_VSizeXY_ReturnValue1) == 0x0001C8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_VSizeXY_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0001CC, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_MakeBoundingBoxFromLocations_OutBox) == 0x0001D0, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_MakeBoundingBoxFromLocations_OutBox' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_AddZ_ReturnValue) == 0x0001EC, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_AddZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_CurrentPathPoint_ReturnValue1) == 0x0001F8, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_CurrentPathPoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_AI_AddZ_ReturnValue1) == 0x000204, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_AI_AddZ_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_MakeBox_ReturnValue) == 0x000210, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue6) == 0x000230, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetBlackboardKeyName_ReturnValue7) == 0x000238, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetBlackboardKeyName_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController, CallFunc_GetValueAsBool_ReturnValue) == 0x000240, "Member 'BP_AJBAIPathController_C_ExecuteUbergraph_BP_AJBAIPathController::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.OnOwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBAIPathController_C_OnOwnerDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIPathController_C_OnOwnerDestroyed) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_OnOwnerDestroyed");
static_assert(sizeof(BP_AJBAIPathController_C_OnOwnerDestroyed) == 0x000008, "Wrong size on BP_AJBAIPathController_C_OnOwnerDestroyed");
static_assert(offsetof(BP_AJBAIPathController_C_OnOwnerDestroyed, DestroyedActor) == 0x000000, "Member 'BP_AJBAIPathController_C_OnOwnerDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.ResetPath
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBAIPathController_C_ResetPath final
{
public:
	class UNavigationPath*                        Path_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIPathController_C_ResetPath) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_ResetPath");
static_assert(sizeof(BP_AJBAIPathController_C_ResetPath) == 0x000008, "Wrong size on BP_AJBAIPathController_C_ResetPath");
static_assert(offsetof(BP_AJBAIPathController_C_ResetPath, Path_0) == 0x000000, "Member 'BP_AJBAIPathController_C_ResetPath::Path_0' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBAIPathController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIPathController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBAIPathController_C_ReceiveTick");
static_assert(sizeof(BP_AJBAIPathController_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBAIPathController_C_ReceiveTick");
static_assert(offsetof(BP_AJBAIPathController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBAIPathController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.IsValidPath
// 0x0003 (0x0003 - 0x0000)
struct BP_AJBAIPathController_C_IsValidPath final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_IsValidPath) == 0x000001, "Wrong alignment on BP_AJBAIPathController_C_IsValidPath");
static_assert(sizeof(BP_AJBAIPathController_C_IsValidPath) == 0x000003, "Wrong size on BP_AJBAIPathController_C_IsValidPath");
static_assert(offsetof(BP_AJBAIPathController_C_IsValidPath, ReturnValue) == 0x000000, "Member 'BP_AJBAIPathController_C_IsValidPath::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsValidPath, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AJBAIPathController_C_IsValidPath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsValidPath, CallFunc_IsValid_ReturnValue1) == 0x000002, "Member 'BP_AJBAIPathController_C_IsValidPath::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.IsArrivedPathEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBAIPathController_C_IsArrivedPathEnd final
{
public:
	bool                                          bArrivedPathEnd_0;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_IsArrivedPathEnd) == 0x000001, "Wrong alignment on BP_AJBAIPathController_C_IsArrivedPathEnd");
static_assert(sizeof(BP_AJBAIPathController_C_IsArrivedPathEnd) == 0x000001, "Wrong size on BP_AJBAIPathController_C_IsArrivedPathEnd");
static_assert(offsetof(BP_AJBAIPathController_C_IsArrivedPathEnd, bArrivedPathEnd_0) == 0x000000, "Member 'BP_AJBAIPathController_C_IsArrivedPathEnd::bArrivedPathEnd_0' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.IsNavigating
// 0x0005 (0x0005 - 0x0000)
struct BP_AJBAIPathController_C_IsNavigating final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsArrivedPathEnd_bArrivedPathEnd;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidPath_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_IsNavigating) == 0x000001, "Wrong alignment on BP_AJBAIPathController_C_IsNavigating");
static_assert(sizeof(BP_AJBAIPathController_C_IsNavigating) == 0x000005, "Wrong size on BP_AJBAIPathController_C_IsNavigating");
static_assert(offsetof(BP_AJBAIPathController_C_IsNavigating, ReturnValue) == 0x000000, "Member 'BP_AJBAIPathController_C_IsNavigating::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsNavigating, CallFunc_IsArrivedPathEnd_bArrivedPathEnd) == 0x000001, "Member 'BP_AJBAIPathController_C_IsNavigating::CallFunc_IsArrivedPathEnd_bArrivedPathEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsNavigating, CallFunc_IsValidPath_ReturnValue) == 0x000002, "Member 'BP_AJBAIPathController_C_IsNavigating::CallFunc_IsValidPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsNavigating, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_AJBAIPathController_C_IsNavigating::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsNavigating, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_AJBAIPathController_C_IsNavigating::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.FixWayToNextPointIfNeeded
// 0x02A0 (0x02A0 - 0x0000)
struct BP_AJBAIPathController_C_FixWayToNextPointIfNeeded final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PathPointCompleted_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetBodyHalfHeight_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyRadius_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyRadius_ReturnValue1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue;                 // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetBodyJumpHeight_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_WillCollideToWall_IsEnabled;    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable1;                             // 0x00A0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x01E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x01F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0200(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0210(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_FixWayToNextPointIfNeeded");
static_assert(sizeof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded) == 0x0002A0, "Wrong size on BP_AJBAIPathController_C_FixWayToNextPointIfNeeded");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_PathPointCompleted_ReturnValue) == 0x000004, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_PathPointCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetBodyHalfHeight_ReturnValue) == 0x000020, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetBodyHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetBodyRadius_ReturnValue) == 0x000024, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetBodyRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000028, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetLocation_ReturnValue) == 0x000044, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetBodyRadius_ReturnValue1) == 0x000050, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetBodyRadius_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, K2Node_MathExpression_ReturnValue) == 0x000054, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetControllingImaginaryCharacter_ReturnValue1) == 0x000060, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetControllingImaginaryCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue) == 0x000068, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_GetBodyJumpHeight_ReturnValue) == 0x000078, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_GetBodyJumpHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_IsEnabled_WillCollideToWall_IsEnabled) == 0x00007C, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_IsEnabled_WillCollideToWall_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, Temp_object_Variable) == 0x000090, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, Temp_object_Variable1) == 0x0000A0, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x0000B0, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x000138, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_bBlockingHit) == 0x000139, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013A, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_Location) == 0x000144, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_Normal) == 0x00015C, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_FaceIndex) == 0x00019C, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakHitResult_TraceEnd) == 0x0001AC, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Add_VectorVector_ReturnValue1) == 0x0001B8, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakVector_X) == 0x0001C4, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakVector_Y) == 0x0001C8, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_BreakVector_Z) == 0x0001CC, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_MakeVector_ReturnValue1) == 0x0001D0, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Normal_ReturnValue1) == 0x0001DC, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Add_VectorVector_ReturnValue2) == 0x0001E8, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0001F4, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_Add_VectorVector_ReturnValue3) == 0x000200, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000210, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_FixWayToNextPointIfNeeded, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000298, "Member 'BP_AJBAIPathController_C_FixWayToNextPointIfNeeded::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.GetPath
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBAIPathController_C_GetPath final
{
public:
	class UNavigationPath*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIPathController_C_GetPath) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_GetPath");
static_assert(sizeof(BP_AJBAIPathController_C_GetPath) == 0x000008, "Wrong size on BP_AJBAIPathController_C_GetPath");
static_assert(offsetof(BP_AJBAIPathController_C_GetPath, ReturnValue) == 0x000000, "Member 'BP_AJBAIPathController_C_GetPath::ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.GetCurrentPathIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBAIPathController_C_GetCurrentPathIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIPathController_C_GetCurrentPathIndex) == 0x000004, "Wrong alignment on BP_AJBAIPathController_C_GetCurrentPathIndex");
static_assert(sizeof(BP_AJBAIPathController_C_GetCurrentPathIndex) == 0x000004, "Wrong size on BP_AJBAIPathController_C_GetCurrentPathIndex");
static_assert(offsetof(BP_AJBAIPathController_C_GetCurrentPathIndex, ReturnValue) == 0x000000, "Member 'BP_AJBAIPathController_C_GetCurrentPathIndex::ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.IfObstacleMayBeOnThePath
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBAIPathController_C_IfObstacleMayBeOnThePath final
{
public:
	class AActor*                                 Obstacle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorBounds_Origin1;                   // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent1;                // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetImaginaryCharacterBody_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineBoxIntersection_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item1;                          // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineBoxIntersection_ReturnValue1;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AabbContainsPoint_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNavigating_ReturnValue;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_IfObstacleMayBeOnThePath");
static_assert(sizeof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath) == 0x0000B8, "Wrong size on BP_AJBAIPathController_C_IfObstacleMayBeOnThePath");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, Obstacle) == 0x000000, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::Obstacle' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, ReturnValue) == 0x000008, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetActorBounds_Origin) == 0x000018, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetActorBounds_BoxExtent) == 0x000024, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x000030, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetActorBounds_Origin1) == 0x00003C, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetActorBounds_Origin1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetActorBounds_BoxExtent1) == 0x000048, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetActorBounds_BoxExtent1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetImaginaryCharacterBody_ReturnValue) == 0x000058, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetImaginaryCharacterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, Temp_int_Variable) == 0x000060, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_GetLocation_ReturnValue) == 0x000064, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_LineBoxIntersection_ReturnValue) == 0x00007C, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_LineBoxIntersection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Array_Get_Item1) == 0x000084, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Add_IntInt_ReturnValue1) == 0x000090, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_LineBoxIntersection_ReturnValue1) == 0x000094, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_LineBoxIntersection_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_AabbContainsPoint_ReturnValue) == 0x0000A4, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_AabbContainsPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Array_LastIndex_ReturnValue) == 0x0000A8, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_Add_IntInt_ReturnValue2) == 0x0000B0, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IfObstacleMayBeOnThePath, CallFunc_IsNavigating_ReturnValue) == 0x0000B5, "Member 'BP_AJBAIPathController_C_IfObstacleMayBeOnThePath::CallFunc_IsNavigating_ReturnValue' has a wrong offset!");

// Function BP_AJBAIPathController.BP_AJBAIPathController_C.IsEnabled_WillCollideToWall
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBAIPathController_C_IsEnabled_WillCollideToWall final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaTypeID_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageIDByAreaType_StageID;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetRawBodyActor_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPvEPlayMode_IsPvEPlayMode;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_SHA_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall) == 0x000008, "Wrong alignment on BP_AJBAIPathController_C_IsEnabled_WillCollideToWall");
static_assert(sizeof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall) == 0x000048, "Wrong size on BP_AJBAIPathController_C_IsEnabled_WillCollideToWall");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, IsEnabled) == 0x000000, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetAJBGameInstance_bSuccess) == 0x000001, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000008, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetAreaTypeID_ReturnValue) == 0x000010, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetAreaTypeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetStageIDByAreaType_StageID) == 0x000014, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetStageIDByAreaType_StageID' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000020, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_GetRawBodyActor_ReturnValue) == 0x000028, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_GetRawBodyActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, CallFunc_IsPvEPlayMode_IsPvEPlayMode) == 0x000030, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::CallFunc_IsPvEPlayMode_IsPvEPlayMode' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA) == 0x000038, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_SHA' has a wrong offset!");
static_assert(offsetof(BP_AJBAIPathController_C_IsEnabled_WillCollideToWall, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBAIPathController_C_IsEnabled_WillCollideToWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBOverrun

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBOverrun.BP_AJBOverrun_C.ExecuteUbergraph_BP_AJBOverrun
// 0x0210 (0x0210 - 0x0000)
struct BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEnabled;                            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue2;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue3;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue1;      // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue2;      // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_Event_HitComponent;                         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Hit_Location;                         // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SerialNumber;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CuttingRate;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue2;      // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetKnockbackBasePower_BasePower;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBKnockbackManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue4;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBKnockbackStrategy                         Temp_byte_Variable;                                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue5;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MathExpression_ReturnValue1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_MathExpression_ReturnValue2;                // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select1_Default;                            // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestKnockback_Server_Success;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun) == 0x000008, "Wrong alignment on BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun");
static_assert(sizeof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun) == 0x000210, "Wrong size on BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, EntryPoint) == 0x000000, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000010, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000040, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_IsEnabled) == 0x000051, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue1) == 0x000058, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000060, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess2) == 0x000068, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1) == 0x000070, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess3) == 0x000080, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue2) == 0x000088, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000090, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess4) == 0x000098, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2) == 0x0000A0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess5) == 0x0000B0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_CustomEvent_IsEnabled) == 0x0000B1, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000B8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue3) == 0x0000C0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_MakeLiteralGameplayTag_ReturnValue1) == 0x0000C8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_MakeLiteralGameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x0000D0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess6) == 0x0000D8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3) == 0x0000E0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface3' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess7) == 0x0000F0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_MakeLiteralGameplayTag_ReturnValue2) == 0x0000F8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_MakeLiteralGameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_HitActor) == 0x000100, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_HitComponent) == 0x000108, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_Hit_Location) == 0x000110, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_HitNormal) == 0x00011C, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_SerialNumber) == 0x000128, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_SerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Event_CuttingRate) == 0x00012C, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Event_CuttingRate' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000130, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_MathExpression_ReturnValue) == 0x00013C, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_ProjectVectorOnToPlane_ReturnValue2) == 0x000140, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_ProjectVectorOnToPlane_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetKnockbackBasePower_BasePower) == 0x00014C, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetKnockbackBasePower_BasePower' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetComponentByClass_ReturnValue) == 0x000150, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue4) == 0x000158, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x000168, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess8) == 0x000170, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4) == 0x000178, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface4' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess9) == 0x000188, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, Temp_byte_Variable) == 0x000189, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_GetOwnerCharacter_ReturnValue5) == 0x000190, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_GetOwnerCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, Temp_struct_Variable) == 0x000198, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x0001A8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess10) == 0x0001B0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5) == 0x0001B8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface5' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_DynamicCast_bSuccess11) == 0x0001C8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Select_Default) == 0x0001CC, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, Temp_bool_Variable) == 0x0001D8, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001DC, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_MathExpression_ReturnValue1) == 0x0001E0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_MathExpression_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_MathExpression_ReturnValue2) == 0x0001E4, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_MathExpression_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, K2Node_Select1_Default) == 0x0001F0, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_Add_VectorVector_ReturnValue1) == 0x0001FC, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun, CallFunc_RequestKnockback_Server_Success) == 0x000208, "Member 'BP_AJBOverrun_C_ExecuteUbergraph_BP_AJBOverrun::CallFunc_RequestKnockback_Server_Success' has a wrong offset!");

// Function BP_AJBOverrun.BP_AJBOverrun_C.ApplySprintDamage_Server
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBOverrun_C_ApplySprintDamage_Server final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CuttingRate;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBOverrun_C_ApplySprintDamage_Server) == 0x000008, "Wrong alignment on BP_AJBOverrun_C_ApplySprintDamage_Server");
static_assert(sizeof(BP_AJBOverrun_C_ApplySprintDamage_Server) == 0x000030, "Wrong size on BP_AJBOverrun_C_ApplySprintDamage_Server");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, HitActor) == 0x000000, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, HitComponent) == 0x000008, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, Hit_Location) == 0x000010, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, HitNormal) == 0x00001C, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, SerialNumber_0) == 0x000028, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_ApplySprintDamage_Server, CuttingRate) == 0x00002C, "Member 'BP_AJBOverrun_C_ApplySprintDamage_Server::CuttingRate' has a wrong offset!");

// Function BP_AJBOverrun.BP_AJBOverrun_C.SetOverrunBuff
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBOverrun_C_SetOverrunBuff final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBOverrun_C_SetOverrunBuff) == 0x000001, "Wrong alignment on BP_AJBOverrun_C_SetOverrunBuff");
static_assert(sizeof(BP_AJBOverrun_C_SetOverrunBuff) == 0x000001, "Wrong size on BP_AJBOverrun_C_SetOverrunBuff");
static_assert(offsetof(BP_AJBOverrun_C_SetOverrunBuff, IsEnabled) == 0x000000, "Member 'BP_AJBOverrun_C_SetOverrunBuff::IsEnabled' has a wrong offset!");

// Function BP_AJBOverrun.BP_AJBOverrun_C.SetSkillMovementMode
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBOverrun_C_SetSkillMovementMode final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBOverrun_C_SetSkillMovementMode) == 0x000001, "Wrong alignment on BP_AJBOverrun_C_SetSkillMovementMode");
static_assert(sizeof(BP_AJBOverrun_C_SetSkillMovementMode) == 0x000001, "Wrong size on BP_AJBOverrun_C_SetSkillMovementMode");
static_assert(offsetof(BP_AJBOverrun_C_SetSkillMovementMode, IsEnabled) == 0x000000, "Member 'BP_AJBOverrun_C_SetSkillMovementMode::IsEnabled' has a wrong offset!");

// Function BP_AJBOverrun.BP_AJBOverrun_C.GetKnockbackBasePower
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AJBOverrun_C_GetKnockbackBasePower final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BasePower;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KnockbackBasePower;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharacterTarget;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBKnockbackResist_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AJBPassiveSkillBase_C*>      CallFunc_GetComponentsByClass_ReturnValue;         // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class UBP_AJBHamonMode_C*                     CallFunc_GetComponentByClass_ReturnValue1;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBPassiveSkillBase_C*              CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBOverrun_C_GetKnockbackBasePower) == 0x000008, "Wrong alignment on BP_AJBOverrun_C_GetKnockbackBasePower");
static_assert(sizeof(BP_AJBOverrun_C_GetKnockbackBasePower) == 0x0000A8, "Wrong size on BP_AJBOverrun_C_GetKnockbackBasePower");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, TargetActor) == 0x000000, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, BasePower) == 0x000008, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::BasePower' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, KnockbackBasePower) == 0x00000C, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::KnockbackBasePower' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, IsCharacterTarget) == 0x000010, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::IsCharacterTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_ClassIsChildOf_ReturnValue) == 0x000038, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetOwner_ReturnValue1) == 0x000048, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_GetComponentByClass_ReturnValue1) == 0x000060, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_CheckActive_bActive) == 0x00006D, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, Temp_bool_True_if_break_was_hit_Variable) == 0x000074, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Not_PreBool_ReturnValue) == 0x000076, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_BooleanAND_ReturnValue) == 0x000077, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, Temp_int_Variable) == 0x00007C, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_CheckActive_bActive1) == 0x000090, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_CheckActive_bActive1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_MatchesTag_ReturnValue) == 0x000091, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_IsValid_ReturnValue1) == 0x000092, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_BooleanAND_ReturnValue1) == 0x000093, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_BooleanAND_ReturnValue2) == 0x000094, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, Temp_float_Variable) == 0x000098, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, K2Node_Select_Default) == 0x00009C, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBOverrun_C_GetKnockbackBasePower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_AJBOverrun_C_GetKnockbackBasePower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}


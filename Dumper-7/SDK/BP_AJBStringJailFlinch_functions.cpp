#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBStringJailFlinch

#include "Basic.hpp"

#include "BP_AJBStringJailFlinch_classes.hpp"
#include "BP_AJBStringJailFlinch_parameters.hpp"


namespace SDK
{

// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.ExecuteUbergraph_BP_AJBStringJailFlinch
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBStringJailFlinch_C::ExecuteUbergraph_BP_AJBStringJailFlinch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "ExecuteUbergraph_BP_AJBStringJailFlinch");

	Params::BP_AJBStringJailFlinch_C_ExecuteUbergraph_BP_AJBStringJailFlinch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.StopContinuousGion
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBStringJailFlinch_C::StopContinuousGion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "StopContinuousGion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.BeginContinuousGion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TriggeredByStand                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::BeginContinuousGion(bool TriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "BeginContinuousGion");

	Params::BP_AJBStringJailFlinch_C_BeginContinuousGion Parms{};

	Parms.TriggeredByStand = TriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.MC_SetShouldUpdateLectActiveTime
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldUpdateLeftActiveTime                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::MC_SetShouldUpdateLectActiveTime(bool bShouldUpdateLeftActiveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "MC_SetShouldUpdateLectActiveTime");

	Params::BP_AJBStringJailFlinch_C_MC_SetShouldUpdateLectActiveTime Parms{};

	Parms.bShouldUpdateLeftActiveTime = bShouldUpdateLeftActiveTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.OnActionInactivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::OnActionInactivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "OnActionInactivate");

	Params::BP_AJBStringJailFlinch_C_OnActionInactivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.OnActionActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggeredByStand                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::OnActionActivate(bool bTriggeredByStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "OnActionActivate");

	Params::BP_AJBStringJailFlinch_C_OnActionActivate Parms{};

	Parms.bTriggeredByStand = bTriggeredByStand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.ChangeParticleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::ChangeParticleVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "ChangeParticleVisibility");

	Params::BP_AJBStringJailFlinch_C_ChangeParticleVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBStringJailFlinch.BP_AJBStringJailFlinch_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBStringJailFlinch_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBStringJailFlinch_C", "NotifyTheWorld");

	Params::BP_AJBStringJailFlinch_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_PassThruInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BI_PassThruInterface.BI_PassThruInterface_C.LocationEnterFrom
// 0x0018 (0x0018 - 0x0000)
struct BI_PassThruInterface_C_LocationEnterFrom final
{
public:
	class ABP_AJBInGameCharacter_C*               Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOriginToCounterpart;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_PassThruInterface_C_LocationEnterFrom) == 0x000008, "Wrong alignment on BI_PassThruInterface_C_LocationEnterFrom");
static_assert(sizeof(BI_PassThruInterface_C_LocationEnterFrom) == 0x000018, "Wrong size on BI_PassThruInterface_C_LocationEnterFrom");
static_assert(offsetof(BI_PassThruInterface_C_LocationEnterFrom, Character) == 0x000000, "Member 'BI_PassThruInterface_C_LocationEnterFrom::Character' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_LocationEnterFrom, bOriginToCounterpart) == 0x000008, "Member 'BI_PassThruInterface_C_LocationEnterFrom::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_LocationEnterFrom, ReturnValue) == 0x00000C, "Member 'BI_PassThruInterface_C_LocationEnterFrom::ReturnValue' has a wrong offset!");

// Function BI_PassThruInterface.BI_PassThruInterface_C.LocationEnterTo
// 0x0010 (0x0010 - 0x0000)
struct BI_PassThruInterface_C_LocationEnterTo final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_PassThruInterface_C_LocationEnterTo) == 0x000004, "Wrong alignment on BI_PassThruInterface_C_LocationEnterTo");
static_assert(sizeof(BI_PassThruInterface_C_LocationEnterTo) == 0x000010, "Wrong size on BI_PassThruInterface_C_LocationEnterTo");
static_assert(offsetof(BI_PassThruInterface_C_LocationEnterTo, bOriginToCounterpart) == 0x000000, "Member 'BI_PassThruInterface_C_LocationEnterTo::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_LocationEnterTo, ReturnValue) == 0x000004, "Member 'BI_PassThruInterface_C_LocationEnterTo::ReturnValue' has a wrong offset!");

// Function BI_PassThruInterface.BI_PassThruInterface_C.LocationExitFrom
// 0x0010 (0x0010 - 0x0000)
struct BI_PassThruInterface_C_LocationExitFrom final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_PassThruInterface_C_LocationExitFrom) == 0x000004, "Wrong alignment on BI_PassThruInterface_C_LocationExitFrom");
static_assert(sizeof(BI_PassThruInterface_C_LocationExitFrom) == 0x000010, "Wrong size on BI_PassThruInterface_C_LocationExitFrom");
static_assert(offsetof(BI_PassThruInterface_C_LocationExitFrom, bOriginToCounterpart) == 0x000000, "Member 'BI_PassThruInterface_C_LocationExitFrom::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_LocationExitFrom, ReturnValue) == 0x000004, "Member 'BI_PassThruInterface_C_LocationExitFrom::ReturnValue' has a wrong offset!");

// Function BI_PassThruInterface.BI_PassThruInterface_C.LocationExitTo
// 0x0010 (0x0010 - 0x0000)
struct BI_PassThruInterface_C_LocationExitTo final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_PassThruInterface_C_LocationExitTo) == 0x000004, "Wrong alignment on BI_PassThruInterface_C_LocationExitTo");
static_assert(sizeof(BI_PassThruInterface_C_LocationExitTo) == 0x000010, "Wrong size on BI_PassThruInterface_C_LocationExitTo");
static_assert(offsetof(BI_PassThruInterface_C_LocationExitTo, bOriginToCounterpart) == 0x000000, "Member 'BI_PassThruInterface_C_LocationExitTo::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_LocationExitTo, ReturnValue) == 0x000004, "Member 'BI_PassThruInterface_C_LocationExitTo::ReturnValue' has a wrong offset!");

// Function BI_PassThruInterface.BI_PassThruInterface_C.NormalOfEntrance
// 0x0010 (0x0010 - 0x0000)
struct BI_PassThruInterface_C_NormalOfEntrance final
{
public:
	bool                                          bOriginToCounterpart;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_PassThruInterface_C_NormalOfEntrance) == 0x000004, "Wrong alignment on BI_PassThruInterface_C_NormalOfEntrance");
static_assert(sizeof(BI_PassThruInterface_C_NormalOfEntrance) == 0x000010, "Wrong size on BI_PassThruInterface_C_NormalOfEntrance");
static_assert(offsetof(BI_PassThruInterface_C_NormalOfEntrance, bOriginToCounterpart) == 0x000000, "Member 'BI_PassThruInterface_C_NormalOfEntrance::bOriginToCounterpart' has a wrong offset!");
static_assert(offsetof(BI_PassThruInterface_C_NormalOfEntrance, ReturnValue) == 0x000004, "Member 'BI_PassThruInterface_C_NormalOfEntrance::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRobMdSkill

#include "Basic.hpp"

#include "BP_AJBRobMdSkill_classes.hpp"
#include "BP_AJBRobMdSkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.ExecuteUbergraph_BP_AJBRobMdSkill
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::ExecuteUbergraph_BP_AJBRobMdSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "ExecuteUbergraph_BP_AJBRobMdSkill");

	Params::BP_AJBRobMdSkill_C_ExecuteUbergraph_BP_AJBRobMdSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.TryDisableMDMove
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::TryDisableMDMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "TryDisableMDMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.RewindMDMoveLocal
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::RewindMDMoveLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "RewindMDMoveLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.ROC_RewindMDMove
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::ROC_RewindMDMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "ROC_RewindMDMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.CancelMDMoveServer
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::CancelMDMoveServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "CancelMDMoveServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.OnCheckSpawnObjectServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::OnCheckSpawnObjectServer(const struct FTransform& Transform, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "OnCheckSpawnObjectServer");

	Params::BP_AJBRobMdSkill_C_OnCheckSpawnObjectServer Parms{};

	Parms.Transform = std::move(Transform);
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.OnSpawnObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlacement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::OnSpawnObject(bool bPlacement, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "OnSpawnObject");

	Params::BP_AJBRobMdSkill_C_OnSpawnObject Parms{};

	Parms.bPlacement = bPlacement;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.SpawnNewObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::SpawnNewObject(const struct FTransform& Transform, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "SpawnNewObject");

	Params::BP_AJBRobMdSkill_C_SpawnNewObject Parms{};

	Parms.Transform = std::move(Transform);
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.ShouldAddPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacterBase*          DamagedCharacterBase                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bShouldAddPassive                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobMdSkill_C::ShouldAddPassive(class AAJBInGameCharacterBase* DamagedCharacterBase, class AActor* DamageCauser, bool* bShouldAddPassive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "ShouldAddPassive");

	Params::BP_AJBRobMdSkill_C_ShouldAddPassive Parms{};

	Parms.DamagedCharacterBase = DamagedCharacterBase;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldAddPassive != nullptr)
		*bShouldAddPassive = Parms.bShouldAddPassive;
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.CheckAnyExclusionPassiveActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobMdSkill_C::CheckAnyExclusionPassiveActive(class AActor* Target, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "CheckAnyExclusionPassiveActive");

	Params::BP_AJBRobMdSkill_C_CheckAnyExclusionPassiveActive Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.EndAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::EndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "EndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.SpawnObject
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::SpawnObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "SpawnObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.TickState_Action
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::TickState_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "TickState_Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.BeginState_ActionCore
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::BeginState_ActionCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "BeginState_ActionCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.OnStateEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobMdSkill_C::OnStateEnd(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "OnStateEnd");

	Params::BP_AJBRobMdSkill_C_OnStateEnd Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.CheckPairStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bPairStand                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobMdSkill_C::CheckPairStand(class AActor* Target, bool* bPairStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "CheckPairStand");

	Params::BP_AJBRobMdSkill_C_CheckPairStand Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (bPairStand != nullptr)
		*bPairStand = Parms.bPairStand;
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.TraceObjectTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bPossiblePlacement_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform*                      Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)
// class AActor**                          TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::TraceObjectTransform(bool* bPossiblePlacement_0, struct FTransform* Transform, class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "TraceObjectTransform");

	Params::BP_AJBRobMdSkill_C_TraceObjectTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossiblePlacement_0 != nullptr)
		*bPossiblePlacement_0 = Parms.bPossiblePlacement_0;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.ChangePreviewUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPossiblePlacement_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBRobMdSkill_C::ChangePreviewUI(bool bPossiblePlacement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "ChangePreviewUI");

	Params::BP_AJBRobMdSkill_C_ChangePreviewUI Parms{};

	Parms.bPossiblePlacement_0 = bPossiblePlacement_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.ChangeVisual
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBRobMdSkill_C::ChangeVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "ChangeVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.CalcTraceDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bGravityLoad                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSeparate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  TraceDistance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::CalcTraceDistance(bool bGravityLoad, bool bSeparate, float* TraceDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "CalcTraceDistance");

	Params::BP_AJBRobMdSkill_C_CalcTraceDistance Parms{};

	Parms.bGravityLoad = bGravityLoad;
	Parms.bSeparate = bSeparate;

	UObject::ProcessEvent(Func, &Parms);

	if (TraceDistance != nullptr)
		*TraceDistance = Parms.TraceDistance;
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.PowerUpServer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::PowerUpServer(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "PowerUpServer");

	Params::BP_AJBRobMdSkill_C_PowerUpServer Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBRobMdSkill.BP_AJBRobMdSkill_C.PowerDown_Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBRobMdSkill_C::PowerDown_Server(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBRobMdSkill_C", "PowerDown_Server");

	Params::BP_AJBRobMdSkill_C_PowerDown_Server Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}


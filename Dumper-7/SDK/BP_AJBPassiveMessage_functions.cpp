#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPassiveMessage

#include "Basic.hpp"

#include "BP_AJBPassiveMessage_classes.hpp"
#include "BP_AJBPassiveMessage_parameters.hpp"


namespace SDK
{

// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ExecuteUbergraph_BP_AJBPassiveMessage
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPassiveMessage_C::ExecuteUbergraph_BP_AJBPassiveMessage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "ExecuteUbergraph_BP_AJBPassiveMessage");

	Params::BP_AJBPassiveMessage_C_ExecuteUbergraph_BP_AJBPassiveMessage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPassiveMessage_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "ReceiveTick");

	Params::BP_AJBPassiveMessage_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.OnEndUltSkillAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPassiveMessage_C::OnEndUltSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "OnEndUltSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.OnStartUltSkillAnimation
// (BlueprintCallable, BlueprintEvent)

void UBP_AJBPassiveMessage_C::OnStartUltSkillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "OnStartUltSkillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.RequestAddMessageByGameplayTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPassiveMessage_C::RequestAddMessageByGameplayTag(const struct FGameplayTag& Tag, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "RequestAddMessageByGameplayTag");

	Params::BP_AJBPassiveMessage_C_RequestAddMessageByGameplayTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.SetupMessageWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_PassiveMessage_C*             MessageWidget_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_AbilityActivateMessage_C*     AbilityActiveMessageWidget                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPassiveMessage_C::SetupMessageWidget(class UWB_PassiveMessage_C* MessageWidget_0, class UWB_AbilityActivateMessage_C* AbilityActiveMessageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "SetupMessageWidget");

	Params::BP_AJBPassiveMessage_C_SetupMessageWidget Parms{};

	Parms.MessageWidget_0 = MessageWidget_0;
	Parms.AbilityActiveMessageWidget = AbilityActiveMessageWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.RequestRemoveMessageByGameplayTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPassiveMessage_C::RequestRemoveMessageByGameplayTag(const struct FGameplayTag& Tag, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "RequestRemoveMessageByGameplayTag");

	Params::BP_AJBPassiveMessage_C_RequestRemoveMessageByGameplayTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              TargetCharacter_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBPassiveMessage_C::Initialize(class AAJBInGameCharacter* TargetCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "Initialize");

	Params::BP_AJBPassiveMessage_C_Initialize Parms{};

	Parms.TargetCharacter_0 = TargetCharacter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.CheckTickEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBPassiveMessage_C::CheckTickEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "CheckTickEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ResetTickEnabledFactor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AJBPassiveMessage_C::ResetTickEnabledFactor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "ResetTickEnabledFactor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBPassiveMessage.BP_AJBPassiveMessage_C.ChangeTickEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bByUltAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bByOtherUpdate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBPassiveMessage_C::ChangeTickEnable(bool bEnable, bool bByUltAnimation, bool bByOtherUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBPassiveMessage_C", "ChangeTickEnable");

	Params::BP_AJBPassiveMessage_C_ChangeTickEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.bByUltAnimation = bByUltAnimation;
	Parms.bByOtherUpdate = bByOtherUpdate;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Fade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Fade.WB_Fade_C
// 0x0030 (0x02F0 - 0x02C0)
class UWB_Fade_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              Fade_Add;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Fade_Translucent;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeA;                                             // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeB;                                             // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinishedFade;                                     // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_Fade(int32 EntryPoint);
	void FadeIn(float Time);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void FadeOut(float Time);
	void UpdateColor();
	void GetAJBHUD(bool* bSuccess, class AAJBHUDBase** AsAJBHUDBase);
	void GetCurrentFadeAlpha(float* Alpha_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Fade_C">();
	}
	static class UWB_Fade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Fade_C>();
	}
};
static_assert(alignof(UWB_Fade_C) == 0x000008, "Wrong alignment on UWB_Fade_C");
static_assert(sizeof(UWB_Fade_C) == 0x0002F0, "Wrong size on UWB_Fade_C");
static_assert(offsetof(UWB_Fade_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Fade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, Fade_Add) == 0x0002C8, "Member 'UWB_Fade_C::Fade_Add' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, Fade_Translucent) == 0x0002D0, "Member 'UWB_Fade_C::Fade_Translucent' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, FadeTime) == 0x0002D8, "Member 'UWB_Fade_C::FadeTime' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, Alpha) == 0x0002DC, "Member 'UWB_Fade_C::Alpha' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, ElapsedTime) == 0x0002E0, "Member 'UWB_Fade_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, FadeA) == 0x0002E4, "Member 'UWB_Fade_C::FadeA' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, FadeB) == 0x0002E8, "Member 'UWB_Fade_C::FadeB' has a wrong offset!");
static_assert(offsetof(UWB_Fade_C, bFinishedFade) == 0x0002EC, "Member 'UWB_Fade_C::bFinishedFade' has a wrong offset!");

}


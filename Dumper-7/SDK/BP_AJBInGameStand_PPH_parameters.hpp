#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_PPH

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ExecuteUbergraph_BP_AJBInGameStand_PPH
// 0x0218 (0x0218 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacterBase*                K2Node_CustomEvent_TargetCharacter;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_RemoveCondition;                // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SecondTag;                      // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_CharacterBP;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& RemoveCondition, const struct FGameplayTag& SecondTag, class ABP_AJBInGameCharacter_C* CharacterBP)> K2Node_CreateDelegate_OutputDelegate3; // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LeftCapsuleNum;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AfterCapsuleNum2;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AfterCapsuleNum1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AfterCapsuleNum;                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess1;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance1;    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue1;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character4;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item1;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Time;                                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character5;     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH) == 0x000218, "Wrong size on BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsServer_ReturnValue) == 0x000009, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_NotifyName4) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_HasLocalSharedController_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetOwner_ReturnValue1) == 0x000048, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000050, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000060, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000078, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate1) == 0x000080, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_Event_DeltaSeconds) == 0x000094, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_NotifyName3) == 0x000098, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_TargetCharacter) == 0x0000A0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0000A8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess2) == 0x0000B0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_RemoveCondition) == 0x0000B8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_RemoveCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_SecondTag) == 0x0000C0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_SecondTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_CharacterBP) == 0x0000C8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate2) == 0x0000D0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_MatchesTag_ReturnValue) == 0x0000E0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, Temp_name_Variable) == 0x0000E8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_Find_ReturnValue) == 0x000104, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_RemoveItem_ReturnValue) == 0x000109, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_BooleanAND_ReturnValue) == 0x00010A, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_LeftCapsuleNum) == 0x00010C, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_LeftCapsuleNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_NotifyName) == 0x000110, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate4) == 0x000120, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetOwner_ReturnValue2) == 0x000130, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000138, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess3) == 0x000140, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_AfterCapsuleNum2) == 0x000144, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_AfterCapsuleNum2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000148, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Subtract_IntInt_ReturnValue) == 0x00014C, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_AfterCapsuleNum1) == 0x000150, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_AfterCapsuleNum1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_NotifyName1) == 0x000158, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_AfterCapsuleNum) == 0x000160, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_AfterCapsuleNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetAJBGameInstance_bSuccess) == 0x000164, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000168, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsPlayingReplay_ReturnValue) == 0x000170, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate5) == 0x000178, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetAJBGameInstance_bSuccess1) == 0x000188, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetAJBGameInstance_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetAJBGameInstance_AJB_Game_Instance1) == 0x000190, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetAJBGameInstance_AJB_Game_Instance1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsPlayingReplay_ReturnValue1) == 0x000198, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsPlayingReplay_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetOwner_ReturnValue3) == 0x0001A0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Not_PreBool_ReturnValue) == 0x0001A8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character4) == 0x0001B0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess4) == 0x0001B8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_IsValid_ReturnValue1) == 0x0001B9, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Array_Get_Item1) == 0x0001C0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x0001C8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CustomEvent_NotifyName2) == 0x0001D0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_CreateDelegate_OutputDelegate6) == 0x0001E0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_Event_Time) == 0x0001F0, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_Event_bEnable) == 0x0001F4, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_GetOwner_ReturnValue4) == 0x0001F8, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_Not_PreBool_ReturnValue1) == 0x000200, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_AsBP_AJBIn_Game_Character5) == 0x000208, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_AsBP_AJBIn_Game_Character5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, K2Node_DynamicCast_bSuccess5) == 0x000210, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH, CallFunc_HasLocalSharedController_ReturnValue3) == 0x000211, "Member 'BP_AJBInGameStand_PPH_C_ExecuteUbergraph_BP_AJBInGameStand_PPH::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.MC_OnCapsuleIncreased
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased final
{
public:
	int32                                         AfterCapsuleNum;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased, AfterCapsuleNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_MC_OnCapsuleIncreased::AfterCapsuleNum' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ROS_OnCapsuleIncreased
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased final
{
public:
	int32                                         AfterCapsuleNum;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased, AfterCapsuleNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ROS_OnCapsuleIncreased::AfterCapsuleNum' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnCapsuleIncreasedCore
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore final
{
public:
	int32                                         AfterCapsuleNum;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore, AfterCapsuleNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnCapsuleIncreasedCore::AfterCapsuleNum' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ROS_ReplicatePropertiesForUI
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI final
{
public:
	int32                                         LeftCapsuleNum_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI, LeftCapsuleNum_0) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ROS_ReplicatePropertiesForUI::LeftCapsuleNum_0' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnPassiveRemoved
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBInGameStand_PPH_C_OnPassiveRemoved final
{
public:
	struct FGameplayTag                           RemoveCondition;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SecondTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnPassiveRemoved) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnPassiveRemoved");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnPassiveRemoved) == 0x000018, "Wrong size on BP_AJBInGameStand_PPH_C_OnPassiveRemoved");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnPassiveRemoved, RemoveCondition) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnPassiveRemoved::RemoveCondition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnPassiveRemoved, SecondTag) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_OnPassiveRemoved::SecondTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnPassiveRemoved, CharacterBP) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_OnPassiveRemoved::CharacterBP' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.AddVirusTargetCharacterList
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList final
{
public:
	class AAJBInGameCharacterBase*                TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList, TargetCharacter) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_AddVirusTargetCharacterList::TargetCharacter' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnCompleted_EC2D9FAB43A3B565C434509B253BEDCC::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnBlendOut_EC2D9FAB43A3B565C434509B253BEDCC::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnInterrupted_EC2D9FAB43A3B565C434509B253BEDCC::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnNotifyBegin_EC2D9FAB43A3B565C434509B253BEDCC::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnNotifyEnd_EC2D9FAB43A3B565C434509B253BEDCC::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReceiveTheWorld
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ReceiveTheWorld final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ReceiveTheWorld) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_ReceiveTheWorld");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ReceiveTheWorld) == 0x000008, "Wrong size on BP_AJBInGameStand_PPH_C_ReceiveTheWorld");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ReceiveTheWorld, Time) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ReceiveTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ReceiveTheWorld, bEnable) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_ReceiveTheWorld::bEnable' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.OnRep_(ForSkipOwner)LeftCapsuleNum
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum) == 0x000028, "Wrong size on BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, CallFunc_HasLocalSharedController_ReturnValue) == 0x000011, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, CallFunc_GetAJBGameInstance_bSuccess) == 0x000012, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum, CallFunc_IsPlayingReplay_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_OnRep__ForSkipOwner_LeftCapsuleNum::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.IncreaseCapsule
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameStand_PPH_C_IncreaseCapsule final
{
public:
	int32                                         IncreaseNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftCapsuleNum;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_IncreaseCapsule) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_IncreaseCapsule");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_IncreaseCapsule) == 0x000068, "Wrong size on BP_AJBInGameStand_PPH_C_IncreaseCapsule");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, IncreaseNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::IncreaseNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, TempLeftCapsuleNum) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::TempLeftCapsuleNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Conv_IntToString_ReturnValue1) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Concat_StrStr_ReturnValue1) == 0x000040, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Concat_StrStr_ReturnValue2) == 0x000050, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IncreaseCapsule, CallFunc_Min_ReturnValue) == 0x000064, "Member 'BP_AJBInGameStand_PPH_C_IncreaseCapsule::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.DecreaseCapsule
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameStand_PPH_C_DecreaseCapsule final
{
public:
	int32                                         DecreaseNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempLeftCapsuleNum;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_DecreaseCapsule) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_DecreaseCapsule");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_DecreaseCapsule) == 0x000068, "Wrong size on BP_AJBInGameStand_PPH_C_DecreaseCapsule");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, DecreaseNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::DecreaseNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, TempLeftCapsuleNum) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::TempLeftCapsuleNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Conv_IntToString_ReturnValue1) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Concat_StrStr_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Concat_StrStr_ReturnValue2) == 0x000048, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_DecreaseCapsule, CallFunc_Max_ReturnValue) == 0x000060, "Member 'BP_AJBInGameStand_PPH_C_DecreaseCapsule::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.UpdateCapsuleTime
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_PPH_C_UpdateCapsuleTime final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateCapsuleTime_bShouldUpdate;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCapsuleInterval_CapsuleInterval;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_UpdateCapsuleTime");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime) == 0x000038, "Wrong size on BP_AJBInGameStand_PPH_C_UpdateCapsuleTime");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_ShouldUpdateCapsuleTime_bShouldUpdate) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_ShouldUpdateCapsuleTime_bShouldUpdate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_CalcCapsuleInterval_CapsuleInterval) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_CalcCapsuleInterval_CapsuleInterval' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_UpdateCapsuleTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_UpdateCapsuleTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ChangeEnableCapsuleTime
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime) == 0x000001, "Wrong alignment on BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime) == 0x000001, "Wrong size on BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime, bEnable) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableCapsuleTime::bEnable' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.PossibleDecreaseCapsule
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule final
{
public:
	int32                                         DecreaseNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPossibleDecrease;                                 // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNPCEasy_bIsNPCEasy;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule) == 0x000028, "Wrong size on BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, DecreaseNum) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::DecreaseNum' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, bPossibleDecrease) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::bPossibleDecrease' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_IsNPCEasy_bIsNPCEasy) == 0x000019, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_IsNPCEasy_bIsNPCEasy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000021, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_AJBInGameStand_PPH_C_PossibleDecreaseCapsule::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ShouldUpdateCapsuleTime
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime final
{
public:
	bool                                          bShouldUpdate;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempStandProhibition;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCapsuleFull_bCapsuleFull;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBStandProhibition_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime) == 0x000030, "Wrong size on BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, bShouldUpdate) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::bShouldUpdate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, bTempStandProhibition) == 0x000001, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::bTempStandProhibition' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_CheckCapsuleFull_bCapsuleFull) == 0x000019, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_CheckCapsuleFull_bCapsuleFull' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_Not_PreBool_ReturnValue1) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_CheckActive_bActive) == 0x00002A, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime, CallFunc_BooleanAND_ReturnValue1) == 0x00002C, "Member 'BP_AJBInGameStand_PPH_C_ShouldUpdateCapsuleTime::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckCapsuleFull
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_PPH_C_CheckCapsuleFull final
{
public:
	bool                                          bCapsuleFull;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_CheckCapsuleFull) == 0x000001, "Wrong alignment on BP_AJBInGameStand_PPH_C_CheckCapsuleFull");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_CheckCapsuleFull) == 0x000002, "Wrong size on BP_AJBInGameStand_PPH_C_CheckCapsuleFull");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckCapsuleFull, bCapsuleFull) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_CheckCapsuleFull::bCapsuleFull' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckCapsuleFull, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_AJBInGameStand_PPH_C_CheckCapsuleFull::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckCapsuleEmpty
// 0x0002 (0x0002 - 0x0000)
struct BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty final
{
public:
	bool                                          bCapsuleEmpty;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty) == 0x000001, "Wrong alignment on BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty) == 0x000002, "Wrong size on BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty, bCapsuleEmpty) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty::bCapsuleEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_AJBInGameStand_PPH_C_CheckCapsuleEmpty::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CalcCapsuleInterval
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameStand_PPH_C_CalcCapsuleInterval final
{
public:
	float                                         CapsuleInterval;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_GetGameplayTags_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0038(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_CalcCapsuleInterval");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval) == 0x000060, "Wrong size on BP_AJBInGameStand_PPH_C_CalcCapsuleInterval");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, CapsuleInterval) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::CapsuleInterval' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, Temp_bool_Variable) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, CallFunc_GetGameplayTags_self_CastInput) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::CallFunc_GetGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000038, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, CallFunc_MatchesAnyTags_ReturnValue) == 0x000058, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CalcCapsuleInterval, K2Node_Select_Default) == 0x00005C, "Member 'BP_AJBInGameStand_PPH_C_CalcCapsuleInterval::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ChangeEnableShouldUpdate
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIgnoreActiveCheck;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBVirusInfection_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_bActive;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate) == 0x000020, "Wrong size on BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, CharacterBP) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, bEnable) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, bIgnoreActiveCheck) == 0x000009, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::bIgnoreActiveCheck' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, Temp_bool_Variable) == 0x00000A, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, Temp_bool_Variable1) == 0x00000B, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, CallFunc_CheckActive_bActive) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::CallFunc_CheckActive_bActive' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, K2Node_Select_Default) == 0x00001A, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_AJBInGameStand_PPH_C_ChangeEnableShouldUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.RemoveVirusInfections
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_PPH_C_RemoveVirusInfections final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> CallFunc_RemoveGameplayTag_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_RemoveVirusInfections");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections) == 0x000030, "Wrong size on BP_AJBInGameStand_PPH_C_RemoveVirusInfections");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_RemoveVirusInfections, CallFunc_RemoveGameplayTag_self_CastInput) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_RemoveVirusInfections::CallFunc_RemoveGameplayTag_self_CastInput' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetStandAttackOffset
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset) == 0x000038, "Wrong size on BP_AJBInGameStand_PPH_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetStandAttackOffset, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_GetStandAttackOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackRange
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetAttackRange) == 0x000040, "Wrong size on BP_AJBInGameStand_PPH_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00003C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackCollisionRadius
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius) == 0x000030, "Wrong size on BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetAttackLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetAttackLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetAttackLocation) == 0x000068, "Wrong size on BP_AJBInGameStand_PPH_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_GetFixedLocation_Location) == 0x00002C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetAttackLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameStand_PPH_C_GetAttackLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetLaunchedActorHomeLocation
// 0x001C (0x001C - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation) == 0x00001C, "Wrong size on BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation, CallFunc_GetFixedLocation_Location) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetLaunchedActorHomeLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetCloseRangeLaunchedActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor) == 0x000010, "Wrong size on BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetDamageActorTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation) == 0x00000C, "Wrong size on BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetDamageActorTargetLocation::Location' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetDummyShotLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetDummyShotLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetShotLocation_Locations;                // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetDummyShotLocation");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation) == 0x000030, "Wrong size on BP_AJBInGameStand_PPH_C_GetDummyShotLocation");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetDummyShotLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation, CallFunc_GetShotLocation_Locations) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetDummyShotLocation::CallFunc_GetShotLocation_Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetDummyShotLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetDummyShotLocation, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_AJBInGameStand_PPH_C_GetDummyShotLocation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.ShouldShowNGPoint
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBInGameStand_PPH_C_ShouldShowNGPoint final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_ShouldShowNGPoint) == 0x000001, "Wrong alignment on BP_AJBInGameStand_PPH_C_ShouldShowNGPoint");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_ShouldShowNGPoint) == 0x000001, "Wrong size on BP_AJBInGameStand_PPH_C_ShouldShowNGPoint");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_ShouldShowNGPoint, bResult) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_ShouldShowNGPoint::bResult' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetShutTraceRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetShutTraceRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetShutTraceRadius) == 0x000004, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetShutTraceRadius");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetShutTraceRadius) == 0x000004, "Wrong size on BP_AJBInGameStand_PPH_C_GetShutTraceRadius");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShutTraceRadius, Radius) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetShutTraceRadius::Radius' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.GetShotLocation
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBInGameStand_PPH_C_GetShotLocation final
{
public:
	bool                                          bConsiderCharacterCapsuleRadius;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SkillTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locations;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<struct FVector>                        TempReturnLocations;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USceneComponent*>                TempComponents;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_GetShotLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_GetShotLocation");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_GetShotLocation) == 0x000080, "Wrong size on BP_AJBInGameStand_PPH_C_GetShotLocation");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, bConsiderCharacterCapsuleRadius) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::bConsiderCharacterCapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, SkillTag) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::SkillTag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, Locations) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::Locations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, TempReturnLocations) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::TempReturnLocations' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, TempComponents) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::TempComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_GetShotLocation, CallFunc_GetComponentsByTag_ReturnValue) == 0x000070, "Member 'BP_AJBInGameStand_PPH_C_GetShotLocation::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.CheckLocallyControlled
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameStand_PPH_C_CheckLocallyControlled final
{
public:
	bool                                          bLocallyControlled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerController_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_CheckLocallyControlled");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled) == 0x000038, "Wrong size on BP_AJBInGameStand_PPH_C_CheckLocallyControlled");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, bLocallyControlled) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::bLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, CallFunc_GetOwner_ReturnValue1) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000028, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, CallFunc_HasLocalSharedController_ReturnValue) == 0x000031, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_CheckLocallyControlled, CallFunc_IsPlayerController_ReturnValue) == 0x000032, "Member 'BP_AJBInGameStand_PPH_C_CheckLocallyControlled::CallFunc_IsPlayerController_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_PPH.BP_AJBInGameStand_PPH_C.IsContinuousAccompany
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBInGameStand_PPH_C_IsContinuousAccompany final
{
public:
	bool                                          Param_IsContinuousAccompany_0;                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OwnerFlag;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_FGO_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Character_FGO;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContinuousAccompany_IsContinuousAccompany; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany) == 0x000008, "Wrong alignment on BP_AJBInGameStand_PPH_C_IsContinuousAccompany");
static_assert(sizeof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany) == 0x000020, "Wrong size on BP_AJBInGameStand_PPH_C_IsContinuousAccompany");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, Param_IsContinuousAccompany_0) == 0x000000, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::Param_IsContinuousAccompany_0' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, OwnerFlag) == 0x000001, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::OwnerFlag' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, K2Node_DynamicCast_AsBP_AJBIn_Game_Character_FGO) == 0x000010, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::K2Node_DynamicCast_AsBP_AJBIn_Game_Character_FGO' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, CallFunc_IsContinuousAccompany_IsContinuousAccompany) == 0x000019, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::CallFunc_IsContinuousAccompany_IsContinuousAccompany' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_PPH_C_IsContinuousAccompany, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_AJBInGameStand_PPH_C_IsContinuousAccompany::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


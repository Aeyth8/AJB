#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBUIMapManager

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.ExecuteUbergraph_BP_AJBUIMapManager
// 0x06E0 (0x06E0 - 0x0000)
struct BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location1;      // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinTag1;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcMapNormalizePosition_NormalizePosition; // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 K2Node_CustomEvent_SignalPinActor;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsIntention1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0078(0x0020)()
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinType2;                 // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPair1;                       // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsLocalOnly;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsIntention;                   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TryTracePinPosition_Location;             // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_TryTracePinPosition_SignalPinType;        // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00F8(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCountOwningItemPin_ItemPinNum;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSignalPinBase_C*                 CallFunc_GetOldestItemlPin_OldestItemPin;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TryTraceCautionPosition_Location;         // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Pair1;                          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location2;      // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinTag2;                  // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRemove1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSound1;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue1;              // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue2;      // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15F[0x1];                                      // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetSignalPinActorFromTag_ReturnActor;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue1;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent;     // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinType1;                 // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinType;                  // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag1_CmpSuccess;  // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent1;    // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent2;    // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent3;    // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent4;    // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventOnLocal_AkComponent5;    // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue1;                    // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_SignalTypeTag1;                 // 0x0220(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPair2;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsIntention2;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array1;                           // 0x0238(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector2D                              K2Node_CustomEvent_SignalPinlocation;              // 0x0248(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalTypeTag2;                 // 0x0250(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPair3;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0270(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0280(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBLineTraceByChannel_OutHit;             // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceByChannel_ReturnValue;        // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x1];                                      // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0324(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0330(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x033C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0380(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x038C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor1;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAJBCharacterPropertyType                     CallFunc_GetPropertyType_PropertyType;             // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1; // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bInstant;                       // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess;  // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B[0x5];                                      // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWatcherCameraControlled_bResult;        // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanStickNewPin_ReturnValue;               // 0x041F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInClickableArea_bIsClickable;           // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x2];                                      // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item2;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored; // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBSignalPinBase_C*>         Temp_wildcard_Variable;                            // 0x0458(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor2;      // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item3;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue3;      // 0x04B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameSeparateStand_C*           K2Node_DynamicCast_AsBP_AJBIn_Game_Separate_Stand; // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable5;                    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item4;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBSignalPinBase_C*>         K2Node_MakeArray_Array2;                           // 0x04F8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable5;                   // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item5;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored1; // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable6;                    // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item6;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue1;            // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ControlledCharacter;            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Pair;                           // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x054C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalPinTag;                   // 0x0558(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsRemove;                      // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bWithSound;                     // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_562[0x6];                                      // 0x0562(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetSignalPinActorFromTag_ReturnActor1;    // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0570(0x0030)(IsPlainOldData, NoDestructor)
	EAJBSwitchPlayerKindOutPin                    CallFunc_SwitchPlayerKind_Impl_OutBranches;        // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_FinishSpawningActor_ReturnValue1;         // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable6;                   // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable7;                    // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item7;                          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue2;            // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable7;                   // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue7;                 // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition2;            // 0x05F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  K2Node_CustomEvent_MapWidget2;                     // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalTypeTag;                  // 0x0600(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPair;                        // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_FromMap1;                       // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A[0x6];                                      // 0x060A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalTypeTag, bool FromMap)> K2Node_CreateDelegate_OutputDelegate; // 0x0610(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_GetPositionFromNormalizePosition_ReturnValue; // 0x0620(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& NormalizedPosition, class UWB_LandmarkableMap_C* MapWidget, const struct FGameplayTag& SignalTypeTag)> K2Node_CreateDelegate_OutputDelegate1; // 0x0628(0x0010)(ZeroConstructor, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBBattleGameState_C*               K2Node_DynamicCast_AsBP_AJBBattle_Game_State;      // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishedBattleGame_bFinished;           // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x064A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x064B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition1;            // 0x064C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LandmarkableMap_C*                  K2Node_CustomEvent_MapWidget1;                     // 0x0658(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag1;                           // 0x0660(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromMap;                        // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0670(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition;             // 0x0680(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  K2Node_CustomEvent_MapWidget;                      // 0x0688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Tag;                            // 0x0690(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBHUDBase*                            K2Node_DynamicCast_AsAJBHUDBase;                   // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess1; // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B2[0x6];                                      // 0x06B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP1; // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor3;      // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager) == 0x000010, "Wrong alignment on BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager");
static_assert(sizeof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager) == 0x0006E0, "Wrong size on BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, EntryPoint) == 0x000000, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Spawn_Transform_Location1) == 0x000004, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Spawn_Transform_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinTag1) == 0x000010, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_CalcMapNormalizePosition_NormalizePosition) == 0x000018, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_CalcMapNormalizePosition_NormalizePosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable1) == 0x00002C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinActor) == 0x000038, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsIntention1) == 0x000040, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsIntention1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000056, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable1) == 0x000064, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000078, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinType2) == 0x000098, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinType2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Location) == 0x0000A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsPair1) == 0x0000AC, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsPair1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsLocalOnly) == 0x0000AD, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsLocalOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsIntention) == 0x0000AE, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsIntention' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item1) == 0x0000B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue1) == 0x0000B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue1) == 0x0000BC, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsValid_ReturnValue1) == 0x0000BD, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0000C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000CD, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue) == 0x0000CE, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000CF, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue1) == 0x0000D0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue1) == 0x0000D1, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable2) == 0x0000D4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_TryTracePinPosition_Location) == 0x0000D8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_TryTracePinPosition_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_TryTracePinPosition_SignalPinType) == 0x0000E8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_TryTracePinPosition_SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue2) == 0x0000F0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x0000F4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000F8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MatchesAnyTags_ReturnValue) == 0x000118, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetCountOwningItemPin_ItemPinNum) == 0x00011C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetCountOwningItemPin_ItemPinNum' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetOldestItemlPin_OldestItemPin) == 0x000120, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetOldestItemlPin_OldestItemPin' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000128, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Greater_IntInt_ReturnValue) == 0x00012C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_TryTraceCautionPosition_Location) == 0x000130, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_TryTraceCautionPosition_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Pair1) == 0x00013C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Pair1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Spawn_Transform_Location2) == 0x000140, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Spawn_Transform_Location2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinTag2) == 0x000150, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsRemove1) == 0x000158, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsRemove1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bWithSound1) == 0x000159, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bWithSound1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue2) == 0x00015A, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MatchesAnyTags_ReturnValue1) == 0x00015B, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MatchesAnyTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x00015C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_GameplayTag_ReturnValue2) == 0x00015D, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_GameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanOR_ReturnValue) == 0x00015E, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetSignalPinActorFromTag_ReturnActor) == 0x000160, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetSignalPinActorFromTag_ReturnActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MatchesTag_ReturnValue) == 0x000168, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MatchesTag_ReturnValue1) == 0x000169, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MatchesTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue3) == 0x0001A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001A8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue2) == 0x0001B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue3) == 0x0001C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue) == 0x0001C4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue4) == 0x0001C8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent) == 0x0001D0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinType1) == 0x0001D8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinType1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinType) == 0x0001E0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001E8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, GameplayTagsK2Node_SwitchGameplayTag1_CmpSuccess) == 0x0001E9, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::GameplayTagsK2Node_SwitchGameplayTag1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent1) == 0x0001F0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent2) == 0x0001F8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent3) == 0x000200, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent4) == 0x000208, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_RequestWwiseEventOnLocal_AkComponent5) == 0x000210, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_RequestWwiseEventOnLocal_AkComponent5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsEditor_ReturnValue) == 0x000218, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanOR_ReturnValue1) == 0x000219, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsEditor_ReturnValue1) == 0x00021A, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsEditor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanOR_ReturnValue2) == 0x00021B, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalTypeTag1) == 0x000220, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalTypeTag1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsPair2) == 0x000228, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsPair2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsIntention2) == 0x000229, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsIntention2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue2) == 0x00022C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue5) == 0x000230, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_MakeArray_Array1) == 0x000238, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinlocation) == 0x000248, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinlocation' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalTypeTag2) == 0x000250, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalTypeTag2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsPair3) == 0x000258, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsPair3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakVector2D_X) == 0x00025C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakVector2D_Y) == 0x000260, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000268, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MakeVector_ReturnValue) == 0x000270, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable3) == 0x00027C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_VectorVector_ReturnValue) == 0x000280, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue2) == 0x00028C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_AJBLineTraceByChannel_OutHit) == 0x000290, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_AJBLineTraceByChannel_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_AJBLineTraceByChannel_ReturnValue) == 0x000318, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_AJBLineTraceByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_bBlockingHit) == 0x000319, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_bInitialOverlap) == 0x00031A, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_Time) == 0x00031C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_Distance) == 0x000320, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_Location) == 0x000324, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_ImpactPoint) == 0x000330, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_Normal) == 0x00033C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_ImpactNormal) == 0x000348, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_PhysMat) == 0x000358, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_HitActor) == 0x000360, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_HitComponent) == 0x000368, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_HitBoneName) == 0x000370, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_HitItem) == 0x000378, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_FaceIndex) == 0x00037C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_TraceStart) == 0x000380, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BreakHitResult_TraceEnd) == 0x00038C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue3) == 0x000398, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetViewTargetActor_ViewTargetActor1) == 0x0003A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetViewTargetActor_ViewTargetActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBGameInstance_bSuccess) == 0x0003A8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x0003B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x0003B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess) == 0x0003C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_PlayModeIsPair_ReturnValue) == 0x0003C1, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x0003C8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess1) == 0x0003D8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetPropertyType_PropertyType) == 0x0003D9, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetPropertyType_PropertyType' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1) == 0x0003E0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess2) == 0x0003F0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x0003F8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000400, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bInstant) == 0x000401, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bInstant' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue3) == 0x000404, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000408, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue3) == 0x000409, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess) == 0x00040A, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP) == 0x000410, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable2) == 0x000418, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsWatcherCameraControlled_bResult) == 0x00041C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsWatcherCameraControlled_bResult' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue6) == 0x00041D, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue4) == 0x00041E, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_CanStickNewPin_ReturnValue) == 0x00041F, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_CanStickNewPin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsInClickableArea_bIsClickable) == 0x000420, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsInClickableArea_bIsClickable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue5) == 0x000421, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable4) == 0x000424, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable3) == 0x000428, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item2) == 0x000430, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored) == 0x000438, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue4) == 0x00043C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue4) == 0x000440, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_bool_Has_Been_Initd_Variable) == 0x000444, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue5) == 0x000448, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue1) == 0x00044C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue6) == 0x000450, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_wildcard_Variable) == 0x000458, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue2) == 0x000468, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue3) == 0x00046C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetViewTargetActor_ViewTargetActor2) == 0x000470, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetViewTargetActor_ViewTargetActor2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable4) == 0x000478, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000480, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess3) == 0x000488, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item3) == 0x000490, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetOwner_ReturnValue) == 0x000498, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue4) == 0x0004A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x0004A8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess4) == 0x0004B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsValid_ReturnValue2) == 0x0004B1, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0004B2, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_EqualEqual_GameplayTag_ReturnValue3) == 0x0004B3, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_EqualEqual_GameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BooleanAND_ReturnValue6) == 0x0004B4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Separate_Stand) == 0x0004B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Separate_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess5) == 0x0004C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetOwner_ReturnValue1) == 0x0004C8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable5) == 0x0004D0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x0004D8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess6) == 0x0004E0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item4) == 0x0004E8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_RemoveItem_ReturnValue) == 0x0004F0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_MakeArray_Array2) == 0x0004F8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable5) == 0x000508, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue4) == 0x00050C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue5) == 0x000510, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_bool_IsClosed_Variable) == 0x000514, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item5) == 0x000518, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored1) == 0x000520, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_ShouldRestoreOnSwitchingViewer_ShouldRestored1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Length_ReturnValue7) == 0x000524, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable6) == 0x000528, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue5) == 0x00052C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item6) == 0x000530, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_RemoveItem_ReturnValue1) == 0x000538, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_RemoveItem_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_ControlledCharacter) == 0x000540, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_ControlledCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Pair) == 0x000548, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Pair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Spawn_Transform_Location) == 0x00054C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalPinTag) == 0x000558, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalPinTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsRemove) == 0x000560, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bWithSound) == 0x000561, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bWithSound' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetSignalPinActorFromTag_ReturnActor1) == 0x000568, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetSignalPinActorFromTag_ReturnActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_MakeTransform_ReturnValue1) == 0x000570, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_SwitchPlayerKind_Impl_OutBranches) == 0x0005A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_SwitchPlayerKind_Impl_OutBranches' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x0005A8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_SwitchEnum_CmpSuccess) == 0x0005B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_FinishSpawningActor_ReturnValue1) == 0x0005B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable6) == 0x0005C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Add_ReturnValue5) == 0x0005C4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue6) == 0x0005C8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue6) == 0x0005CC, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Array_Index_Variable7) == 0x0005D0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Array_Index_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_Get_Item7) == 0x0005D8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Array_RemoveItem_ReturnValue2) == 0x0005E0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Array_RemoveItem_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, Temp_int_Loop_Counter_Variable7) == 0x0005E4, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::Temp_int_Loop_Counter_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Less_IntInt_ReturnValue7) == 0x0005E8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Less_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Add_IntInt_ReturnValue7) == 0x0005EC, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_NormalizedPosition2) == 0x0005F0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_NormalizedPosition2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_MapWidget2) == 0x0005F8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_MapWidget2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_SignalTypeTag) == 0x000600, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_SignalTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_bIsPair) == 0x000608, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_bIsPair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_FromMap1) == 0x000609, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_FromMap1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CreateDelegate_OutputDelegate) == 0x000610, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetPositionFromNormalizePosition_ReturnValue) == 0x000620, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetPositionFromNormalizePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CreateDelegate_OutputDelegate1) == 0x000628, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetGameState_ReturnValue) == 0x000638, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsBP_AJBBattle_Game_State) == 0x000640, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsBP_AJBBattle_Game_State' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess7) == 0x000648, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_IsFinishedBattleGame_bFinished) == 0x000649, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_IsFinishedBattleGame_bFinished' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_Not_PreBool_ReturnValue7) == 0x00064A, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x00064B, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_NormalizedPosition1) == 0x00064C, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_NormalizedPosition1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_MapWidget1) == 0x000658, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_MapWidget1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Tag1) == 0x000660, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Tag1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_FromMap) == 0x000668, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_FromMap' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CreateDelegate_OutputDelegate2) == 0x000670, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_NormalizedPosition) == 0x000680, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_MapWidget) == 0x000688, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_MapWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_CustomEvent_Tag) == 0x000690, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetPlayerController_ReturnValue) == 0x000698, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetHUD_ReturnValue) == 0x0006A0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_AsAJBHUDBase) == 0x0006A8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_AsAJBHUDBase' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, K2Node_DynamicCast_bSuccess8) == 0x0006B0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess1) == 0x0006B1, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP1) == 0x0006B8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetViewTargetActor_ViewTargetActor3) == 0x0006C0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetViewTargetActor_ViewTargetActor3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x0006C8, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x0006D0, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0006D1, "Member 'BP_AJBUIMapManager_C_ExecuteUbergraph_BP_AJBUIMapManager::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMaker_Pair
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBUIMapManager_C_OnStickedMaker_Pair final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  MapWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_OnStickedMaker_Pair) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_OnStickedMaker_Pair");
static_assert(sizeof(BP_AJBUIMapManager_C_OnStickedMaker_Pair) == 0x000018, "Wrong size on BP_AJBUIMapManager_C_OnStickedMaker_Pair");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Pair, NormalizedPosition) == 0x000000, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Pair::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Pair, MapWidget) == 0x000008, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Pair::MapWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Pair, Tag) == 0x000010, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Pair::Tag' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMaker_Owner
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBUIMapManager_C_OnStickedMaker_Owner final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  MapWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          FromMap;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_OnStickedMaker_Owner) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_OnStickedMaker_Owner");
static_assert(sizeof(BP_AJBUIMapManager_C_OnStickedMaker_Owner) == 0x000020, "Wrong size on BP_AJBUIMapManager_C_OnStickedMaker_Owner");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Owner, NormalizedPosition) == 0x000000, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Owner::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Owner, MapWidget) == 0x000008, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Owner::MapWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Owner, Tag) == 0x000010, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Owner::Tag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMaker_Owner, FromMap) == 0x000018, "Member 'BP_AJBUIMapManager_C_OnStickedMaker_Owner::FromMap' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.OnStickedMarker_Event
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBUIMapManager_C_OnStickedMarker_Event final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  MapWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPair;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FromMap;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_OnStickedMarker_Event) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_OnStickedMarker_Event");
static_assert(sizeof(BP_AJBUIMapManager_C_OnStickedMarker_Event) == 0x000020, "Wrong size on BP_AJBUIMapManager_C_OnStickedMarker_Event");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMarker_Event, NormalizedPosition) == 0x000000, "Member 'BP_AJBUIMapManager_C_OnStickedMarker_Event::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMarker_Event, MapWidget) == 0x000008, "Member 'BP_AJBUIMapManager_C_OnStickedMarker_Event::MapWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMarker_Event, SignalTypeTag) == 0x000010, "Member 'BP_AJBUIMapManager_C_OnStickedMarker_Event::SignalTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMarker_Event, bIsPair) == 0x000018, "Member 'BP_AJBUIMapManager_C_OnStickedMarker_Event::bIsPair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_OnStickedMarker_Event, FromMap) == 0x000019, "Member 'BP_AJBUIMapManager_C_OnStickedMarker_Event::FromMap' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPinForSpecifiedPlayer
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer final
{
public:
	class AActor*                                 ControlledCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pair;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Spawn_Transform_Location;                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalPinTag;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRemove;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSound;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer");
static_assert(sizeof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer) == 0x000028, "Wrong size on BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, ControlledCharacter) == 0x000000, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::ControlledCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, Pair) == 0x000008, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::Pair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, Spawn_Transform_Location) == 0x00000C, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, SignalPinTag) == 0x000018, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::SignalPinTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, bIsRemove) == 0x000020, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer, bWithSound) == 0x000021, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinForSpecifiedPlayer::bWithSound' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroyAllSignalPin_Local
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBUIMapManager_C_DestroyAllSignalPin_Local final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_DestroyAllSignalPin_Local) == 0x000001, "Wrong alignment on BP_AJBUIMapManager_C_DestroyAllSignalPin_Local");
static_assert(sizeof(BP_AJBUIMapManager_C_DestroyAllSignalPin_Local) == 0x000001, "Wrong size on BP_AJBUIMapManager_C_DestroyAllSignalPin_Local");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroyAllSignalPin_Local, bInstant) == 0x000000, "Member 'BP_AJBUIMapManager_C_DestroyAllSignalPin_Local::bInstant' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.PlaySignalPinDestroySound
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBUIMapManager_C_PlaySignalPinDestroySound final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_PlaySignalPinDestroySound) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_PlaySignalPinDestroySound");
static_assert(sizeof(BP_AJBUIMapManager_C_PlaySignalPinDestroySound) == 0x000008, "Wrong size on BP_AJBUIMapManager_C_PlaySignalPinDestroySound");
static_assert(offsetof(BP_AJBUIMapManager_C_PlaySignalPinDestroySound, SignalPinType) == 0x000000, "Member 'BP_AJBUIMapManager_C_PlaySignalPinDestroySound::SignalPinType' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.PlaySignalPinSpawnSound
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBUIMapManager_C_PlaySignalPinSpawnSound final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_PlaySignalPinSpawnSound) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_PlaySignalPinSpawnSound");
static_assert(sizeof(BP_AJBUIMapManager_C_PlaySignalPinSpawnSound) == 0x000008, "Wrong size on BP_AJBUIMapManager_C_PlaySignalPinSpawnSound");
static_assert(offsetof(BP_AJBUIMapManager_C_PlaySignalPinSpawnSound, SignalPinType) == 0x000000, "Member 'BP_AJBUIMapManager_C_PlaySignalPinSpawnSound::SignalPinType' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPin
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBUIMapManager_C_DestroySignalPin final
{
public:
	struct FGameplayTag                           SignalPinType;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPair;                                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLocalOnly;                                      // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsIntention;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_DestroySignalPin) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_DestroySignalPin");
static_assert(sizeof(BP_AJBUIMapManager_C_DestroySignalPin) == 0x000018, "Wrong size on BP_AJBUIMapManager_C_DestroySignalPin");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPin, SignalPinType) == 0x000000, "Member 'BP_AJBUIMapManager_C_DestroySignalPin::SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPin, Location) == 0x000008, "Member 'BP_AJBUIMapManager_C_DestroySignalPin::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPin, bIsPair) == 0x000014, "Member 'BP_AJBUIMapManager_C_DestroySignalPin::bIsPair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPin, bIsLocalOnly) == 0x000015, "Member 'BP_AJBUIMapManager_C_DestroySignalPin::bIsLocalOnly' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPin, bIsIntention) == 0x000016, "Member 'BP_AJBUIMapManager_C_DestroySignalPin::bIsIntention' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPinFromActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBUIMapManager_C_DestroySignalPinFromActor final
{
public:
	class ABP_AJBSignalPinBase_C*                 SignalPinActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsIntention;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_DestroySignalPinFromActor) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_DestroySignalPinFromActor");
static_assert(sizeof(BP_AJBUIMapManager_C_DestroySignalPinFromActor) == 0x000010, "Wrong size on BP_AJBUIMapManager_C_DestroySignalPinFromActor");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPinFromActor, SignalPinActor) == 0x000000, "Member 'BP_AJBUIMapManager_C_DestroySignalPinFromActor::SignalPinActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPinFromActor, bIsIntention) == 0x000008, "Member 'BP_AJBUIMapManager_C_DestroySignalPinFromActor::bIsIntention' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPinFromDisplayTap
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SignalPinTag;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap");
static_assert(sizeof(BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap) == 0x000018, "Wrong size on BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap, Spawn_Transform_Location) == 0x000000, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap, SignalPinTag) == 0x000010, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinFromDisplayTap::SignalPinTag' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPin
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBUIMapManager_C_SpawnSignalPin final
{
public:
	bool                                          Pair;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Spawn_Transform_Location;                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalPinTag;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRemove;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSound;                                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_SpawnSignalPin) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_SpawnSignalPin");
static_assert(sizeof(BP_AJBUIMapManager_C_SpawnSignalPin) == 0x000020, "Wrong size on BP_AJBUIMapManager_C_SpawnSignalPin");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPin, Pair) == 0x000000, "Member 'BP_AJBUIMapManager_C_SpawnSignalPin::Pair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPin, Spawn_Transform_Location) == 0x000004, "Member 'BP_AJBUIMapManager_C_SpawnSignalPin::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPin, SignalPinTag) == 0x000010, "Member 'BP_AJBUIMapManager_C_SpawnSignalPin::SignalPinTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPin, bIsRemove) == 0x000018, "Member 'BP_AJBUIMapManager_C_SpawnSignalPin::bIsRemove' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPin, bWithSound) == 0x000019, "Member 'BP_AJBUIMapManager_C_SpawnSignalPin::bWithSound' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.DestroySignalPinType
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBUIMapManager_C_DestroySignalPinType final
{
public:
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPair;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsIntention;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_DestroySignalPinType) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_DestroySignalPinType");
static_assert(sizeof(BP_AJBUIMapManager_C_DestroySignalPinType) == 0x000010, "Wrong size on BP_AJBUIMapManager_C_DestroySignalPinType");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPinType, SignalTypeTag) == 0x000000, "Member 'BP_AJBUIMapManager_C_DestroySignalPinType::SignalTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPinType, bIsPair) == 0x000008, "Member 'BP_AJBUIMapManager_C_DestroySignalPinType::bIsPair' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_DestroySignalPinType, bIsIntention) == 0x000009, "Member 'BP_AJBUIMapManager_C_DestroySignalPinType::bIsIntention' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.SpawnSignalPinFromMap
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBUIMapManager_C_SpawnSignalPinFromMap final
{
public:
	struct FVector2D                              SignalPinlocation;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPair;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_SpawnSignalPinFromMap) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_SpawnSignalPinFromMap");
static_assert(sizeof(BP_AJBUIMapManager_C_SpawnSignalPinFromMap) == 0x000018, "Wrong size on BP_AJBUIMapManager_C_SpawnSignalPinFromMap");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinFromMap, SignalPinlocation) == 0x000000, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinFromMap::SignalPinlocation' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinFromMap, SignalTypeTag) == 0x000008, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinFromMap::SignalTypeTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_SpawnSignalPinFromMap, bIsPair) == 0x000010, "Member 'BP_AJBUIMapManager_C_SpawnSignalPinFromMap::bIsPair' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetSignalPinActorFromTag
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBUIMapManager_C_GetSignalPinActorFromTag final
{
public:
	struct FGameplayTag                           SignalPinTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReturnActor;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetSignalPinActorFromTag) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetSignalPinActorFromTag");
static_assert(sizeof(BP_AJBUIMapManager_C_GetSignalPinActorFromTag) == 0x000018, "Wrong size on BP_AJBUIMapManager_C_GetSignalPinActorFromTag");
static_assert(offsetof(BP_AJBUIMapManager_C_GetSignalPinActorFromTag, SignalPinTag) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetSignalPinActorFromTag::SignalPinTag' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetSignalPinActorFromTag, ReturnActor) == 0x000008, "Member 'BP_AJBUIMapManager_C_GetSignalPinActorFromTag::ReturnActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetSignalPinActorFromTag, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetSignalPinActorFromTag::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.TryTracePinPosition
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AJBUIMapManager_C_TryTracePinPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SignalPinType;                                     // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActor_Local;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllWindowActors_WindowActors;          // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllIgnoredOtherActors_IgnoredActors;   // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit;            // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameItem_C*                    K2Node_DynamicCast_AsBP_AJBIn_Game_Item;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_TryTracePinPosition) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_TryTracePinPosition");
static_assert(sizeof(BP_AJBUIMapManager_C_TryTracePinPosition) == 0x0001E0, "Wrong size on BP_AJBUIMapManager_C_TryTracePinPosition");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, Location) == 0x000000, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, SignalPinType) == 0x000010, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::SignalPinType' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, IgnoreActor_Local) == 0x000018, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::IgnoreActor_Local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetAllWindowActors_WindowActors) == 0x000028, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetAllWindowActors_WindowActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000038, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetMousePosition_LocationX) == 0x00004C, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetMousePosition_LocationY) == 0x000050, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetMousePosition_ReturnValue) == 0x000054, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_GetAllIgnoredOtherActors_IgnoredActors) == 0x000060, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_GetAllIgnoredOtherActors_IgnoredActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x000070, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x00007C, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x000088, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00008C, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_AJBLineTraceForObjects_OutHit) == 0x0000B8, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_AJBLineTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_AJBLineTraceForObjects_ReturnValue) == 0x000140, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_AJBLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_bBlockingHit) == 0x000141, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_bInitialOverlap) == 0x000142, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_FaceIndex) == 0x0001A4, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_BreakHitResult_TraceEnd) == 0x0001B4, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, K2Node_DynamicCast_AsBP_AJBIn_Game_Item) == 0x0001C0, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::K2Node_DynamicCast_AsBP_AJBIn_Game_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001CC, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTracePinPosition, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001D8, "Member 'BP_AJBUIMapManager_C_TryTracePinPosition::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.CalcMapNormalizePosition
// 0x003C (0x003C - 0x0000)
struct BP_AJBUIMapManager_C_CalcMapNormalizePosition final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalizePosition;                                 // 0x000C(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStageMaxSize_MaxSize;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_CalcMapNormalizePosition) == 0x000004, "Wrong alignment on BP_AJBUIMapManager_C_CalcMapNormalizePosition");
static_assert(sizeof(BP_AJBUIMapManager_C_CalcMapNormalizePosition) == 0x00003C, "Wrong size on BP_AJBUIMapManager_C_CalcMapNormalizePosition");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, Position) == 0x000000, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::Position' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, NormalizePosition) == 0x00000C, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::NormalizePosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_GetStageMaxSize_MaxSize) == 0x000014, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_GetStageMaxSize_MaxSize' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_BreakVector_Y) == 0x00001C, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_BreakVector_Z) == 0x000020, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00002C, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CalcMapNormalizePosition, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000034, "Member 'BP_AJBUIMapManager_C_CalcMapNormalizePosition::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetCountOwningItemPin
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBUIMapManager_C_GetCountOwningItemPin final
{
public:
	int32                                         ItemPinNum;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemPinNum_local;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetCountOwningItemPin) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetCountOwningItemPin");
static_assert(sizeof(BP_AJBUIMapManager_C_GetCountOwningItemPin) == 0x000030, "Wrong size on BP_AJBUIMapManager_C_GetCountOwningItemPin");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, ItemPinNum) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::ItemPinNum' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, ItemPinNum_local) == 0x000004, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::ItemPinNum_local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, Temp_int_Variable) == 0x000014, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_Add_IntInt_ReturnValue1) == 0x000028, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_MatchesTag_ReturnValue) == 0x00002C, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetCountOwningItemPin, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BP_AJBUIMapManager_C_GetCountOwningItemPin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetOldestItemlPin
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBUIMapManager_C_GetOldestItemlPin final
{
public:
	class ABP_AJBSignalPinBase_C*                 OldestItemPin;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBSignalPinBase_C*                 OldestItemPin_local;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBSignalPinBase_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue1;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetOldestItemlPin) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetOldestItemlPin");
static_assert(sizeof(BP_AJBUIMapManager_C_GetOldestItemlPin) == 0x000040, "Wrong size on BP_AJBUIMapManager_C_GetOldestItemlPin");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, OldestItemPin) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::OldestItemPin' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, OldestItemPin_local) == 0x000008, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::OldestItemPin_local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000018, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_GetGameTimeSinceCreation_ReturnValue1) == 0x000030, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_GetGameTimeSinceCreation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_MatchesTag_ReturnValue) == 0x000035, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetOldestItemlPin, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'BP_AJBUIMapManager_C_GetOldestItemlPin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetAllWindowActors
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBUIMapManager_C_GetAllWindowActors final
{
public:
	TArray<class AActor*>                         WindowActors;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class ABP_AJBInGameWindow_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetAllWindowActors) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetAllWindowActors");
static_assert(sizeof(BP_AJBUIMapManager_C_GetAllWindowActors) == 0x000020, "Wrong size on BP_AJBUIMapManager_C_GetAllWindowActors");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllWindowActors, WindowActors) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetAllWindowActors::WindowActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllWindowActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetAllWindowActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.TryTraceCautionPosition
// 0x0310 (0x0310 - 0x0000)
struct BP_AJBUIMapManager_C_TryTraceCautionPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoreActor_Local;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetAllIgnoreCharacter_IgnoreCharacters;   // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameCharacter*                    K2Node_DynamicCast_AsAJBIn_Game_Character;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0078(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllWindowActors_WindowActors;          // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAllIgnoredOtherActors_IgnoredActors;   // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit;            // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue;       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_AJBLineTraceForObjects_OutHit1;           // 0x0208(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_AJBLineTraceForObjects_ReturnValue1;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x1];                                      // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x029C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x02A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x02B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x02C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x02F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0304(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBUIMapManager_C_TryTraceCautionPosition) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_TryTraceCautionPosition");
static_assert(sizeof(BP_AJBUIMapManager_C_TryTraceCautionPosition) == 0x000310, "Wrong size on BP_AJBUIMapManager_C_TryTraceCautionPosition");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, Location) == 0x000000, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, IgnoreActor_Local) == 0x000010, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::IgnoreActor_Local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetAllIgnoreCharacter_IgnoreCharacters) == 0x000020, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetAllIgnoreCharacter_IgnoreCharacters' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000030, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000038, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000040, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_HasTag_ReturnValue) == 0x000058, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetViewTargetActor_ViewTargetActor1) == 0x000060, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetViewTargetActor_ViewTargetActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, K2Node_DynamicCast_AsAJBIn_Game_Character) == 0x000068, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::K2Node_DynamicCast_AsAJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, K2Node_MakeArray_Array1) == 0x000078, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_Array_Add_ReturnValue1) == 0x00008C, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetAllWindowActors_WindowActors) == 0x000090, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetAllWindowActors_WindowActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetAllIgnoredOtherActors_IgnoredActors) == 0x0000A0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetAllIgnoredOtherActors_IgnoredActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetMousePosition_LocationX) == 0x0000B8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetMousePosition_LocationY) == 0x0000BC, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_GetMousePosition_ReturnValue) == 0x0000C0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000C4, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x0000CC, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x0000D8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x0000E4, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F4, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_AJBLineTraceForObjects_OutHit) == 0x000100, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_AJBLineTraceForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_AJBLineTraceForObjects_ReturnValue) == 0x000188, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_AJBLineTraceForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_bBlockingHit) == 0x000189, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018A, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Time) == 0x00018C, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Distance) == 0x000190, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Location) == 0x000194, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Normal) == 0x0001AC, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitItem) == 0x0001E8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_FaceIndex) == 0x0001EC, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_TraceEnd) == 0x0001FC, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_AJBLineTraceForObjects_OutHit1) == 0x000208, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_AJBLineTraceForObjects_OutHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_AJBLineTraceForObjects_ReturnValue1) == 0x000290, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_AJBLineTraceForObjects_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_bBlockingHit1) == 0x000291, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000292, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Time1) == 0x000294, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Distance1) == 0x000298, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Location1) == 0x00029C, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_ImpactPoint1) == 0x0002A8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_Normal1) == 0x0002B4, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_ImpactNormal1) == 0x0002C0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_PhysMat1) == 0x0002D0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitActor1) == 0x0002D8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitComponent1) == 0x0002E0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitBoneName1) == 0x0002E8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_HitItem1) == 0x0002F0, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_FaceIndex1) == 0x0002F4, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_TraceStart1) == 0x0002F8, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_TryTraceCautionPosition, CallFunc_BreakHitResult_TraceEnd1) == 0x000304, "Member 'BP_AJBUIMapManager_C_TryTraceCautionPosition::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.CanStickNewPin
// 0x0070 (0x0070 - 0x0000)
struct BP_AJBUIMapManager_C_CanStickNewPin final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShopCompetitionWatcherMode_bDisplayWatcherMode; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0030(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGamePlayerControllerBP_bSuccess;  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGamePlayerController_C*        CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentFlowState_FlowState;            // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_CanStickNewPin) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_CanStickNewPin");
static_assert(sizeof(BP_AJBUIMapManager_C_CanStickNewPin) == 0x000070, "Wrong size on BP_AJBUIMapManager_C_CanStickNewPin");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, ReturnValue) == 0x000000, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, Temp_bool_Variable) == 0x000001, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, Temp_bool_Variable1) == 0x000002, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000008, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000019, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000020, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_IsShopCompetitionWatcherMode_bDisplayWatcherMode) == 0x000028, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_IsShopCompetitionWatcherMode_bDisplayWatcherMode' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_IsDeathAndEnd_ReturnValue) == 0x000029, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, K2Node_Select_Default) == 0x00002B, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000030, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_Not_PreBool_ReturnValue1) == 0x000050, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetAJBInGamePlayerControllerBP_bSuccess) == 0x000051, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetAJBInGamePlayerControllerBP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP) == 0x000058, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetAJBInGamePlayerControllerBP_In_Game_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_GetCurrentFlowState_FlowState) == 0x000060, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_GetCurrentFlowState_FlowState' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_HasTag_ReturnValue) == 0x000068, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_CanStickNewPin, CallFunc_BooleanAND_ReturnValue1) == 0x00006A, "Member 'BP_AJBUIMapManager_C_CanStickNewPin::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.IsInClickableArea
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBUIMapManager_C_IsInClickableArea final
{
public:
	bool                                          bIsClickable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsClickable_local;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LTargetValue;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LHalfViewportSize;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosY;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPosX;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue1;             // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue2;             // 0x0040(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X4;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X5;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue3;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_IsInClickableArea) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_IsInClickableArea");
static_assert(sizeof(BP_AJBUIMapManager_C_IsInClickableArea) == 0x0000A0, "Wrong size on BP_AJBUIMapManager_C_IsInClickableArea");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, bIsClickable) == 0x000000, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::bIsClickable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, bIsClickable_local) == 0x000001, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::bIsClickable_local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, LTargetValue) == 0x000004, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::LTargetValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, LHalfViewportSize) == 0x000008, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::LHalfViewportSize' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, LPosY) == 0x000010, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::LPosY' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, LPosX) == 0x000014, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::LPosX' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000020, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetViewportSize_ReturnValue1) == 0x000028, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetViewportSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X1) == 0x000038, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y1) == 0x00003C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetViewportSize_ReturnValue2) == 0x000040, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetViewportSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X2) == 0x000048, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y2) == 0x00004C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X3) == 0x000050, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y3) == 0x000054, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X4) == 0x00005C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y4) == 0x000060, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_MapRangeClamped_ReturnValue) == 0x000064, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_MapRangeClamped_ReturnValue1) == 0x00006C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000070, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_MapRangeClamped_ReturnValue2) == 0x000074, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000078, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_X5) == 0x00007C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_BreakVector2D_Y5) == 0x000080, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_MapRangeClamped_ReturnValue3) == 0x000090, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_MapRangeClamped_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetMousePosition_LocationX) == 0x000094, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetMousePosition_LocationY) == 0x000098, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_IsInClickableArea, CallFunc_GetMousePosition_ReturnValue) == 0x00009C, "Member 'BP_AJBUIMapManager_C_IsInClickableArea::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetAllIgnoreCharacter
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBUIMapManager_C_GetAllIgnoreCharacter final
{
public:
	TArray<class ABP_AJBInGameCharacter_C*>       IgnoreCharacters;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class ABP_AJBInGameCharacter_C*>       IgnoreCharacters_local;                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathAndEnd_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleDetection_bPossibleDetection; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetAllIgnoreCharacter");
static_assert(sizeof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter) == 0x000060, "Wrong size on BP_AJBUIMapManager_C_GetAllIgnoreCharacter");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, IgnoreCharacters) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::IgnoreCharacters' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, IgnoreCharacters_local) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::IgnoreCharacters_local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_IsDeathAndEnd_ReturnValue) == 0x000058, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_IsDeathAndEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoreCharacter, CallFunc_CheckPossibleDetection_bPossibleDetection) == 0x000059, "Member 'BP_AJBUIMapManager_C_GetAllIgnoreCharacter::CallFunc_CheckPossibleDetection_bPossibleDetection' has a wrong offset!");

// Function BP_AJBUIMapManager.BP_AJBUIMapManager_C.GetAllIgnoredOtherActors
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBUIMapManager_C_GetAllIgnoredOtherActors final
{
public:
	TArray<class AActor*>                         IgnoredActors;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                         IgnoreCharacters_local;                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class ABP_AJBInGameItem_SoulBubble_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AJBUIMapManager_C_GetAllIgnoredOtherActors) == 0x000008, "Wrong alignment on BP_AJBUIMapManager_C_GetAllIgnoredOtherActors");
static_assert(sizeof(BP_AJBUIMapManager_C_GetAllIgnoredOtherActors) == 0x000030, "Wrong size on BP_AJBUIMapManager_C_GetAllIgnoredOtherActors");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoredOtherActors, IgnoredActors) == 0x000000, "Member 'BP_AJBUIMapManager_C_GetAllIgnoredOtherActors::IgnoredActors' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoredOtherActors, IgnoreCharacters_local) == 0x000010, "Member 'BP_AJBUIMapManager_C_GetAllIgnoredOtherActors::IgnoreCharacters_local' has a wrong offset!");
static_assert(offsetof(BP_AJBUIMapManager_C_GetAllIgnoredOtherActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_AJBUIMapManager_C_GetAllIgnoredOtherActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBDebugAIMonitor

#include "Basic.hpp"

#include "WB_AJBDebugAIMonitor_classes.hpp"
#include "WB_AJBDebugAIMonitor_parameters.hpp"


namespace SDK
{

// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.ExecuteUbergraph_WB_AJBDebugAIMonitor
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBDebugAIMonitor_C::ExecuteUbergraph_WB_AJBDebugAIMonitor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "ExecuteUbergraph_WB_AJBDebugAIMonitor");

	Params::WB_AJBDebugAIMonitor_C_ExecuteUbergraph_WB_AJBDebugAIMonitor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.CloseGateOfCancelMonitoring
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::CloseGateOfCancelMonitoring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "CloseGateOfCancelMonitoring");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.OpenGateOfCancelMonitoring
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::OpenGateOfCancelMonitoring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "OpenGateOfCancelMonitoring");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.CancelMonitorCurrentPawn
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::CancelMonitorCurrentPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "CancelMonitorCurrentPawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.Monitor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            TargetPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBDebugAIMonitor_C::Monitor(class APawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "Monitor");

	Params::WB_AJBDebugAIMonitor_C_Monitor Parms{};

	Parms.TargetPawn = TargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.Deactivate
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.Activate
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.CancelMonitoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            TargetPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBDebugAIMonitor_C::CancelMonitoring(class APawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "CancelMonitoring");

	Params::WB_AJBDebugAIMonitor_C_CancelMonitoring Parms{};

	Parms.TargetPawn = TargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.RequestMonitoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            TargetPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBDebugAIMonitor_C::RequestMonitoring(class APawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "RequestMonitoring");

	Params::WB_AJBDebugAIMonitor_C_RequestMonitoring Parms{};

	Parms.TargetPawn = TargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBDebugAIMonitor_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "Tick");

	Params::WB_AJBDebugAIMonitor_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_AJBDebugAIMonitor_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "PreConstruct");

	Params::WB_AJBDebugAIMonitor_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_AJBDebugAIMonitor_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.IsMonitoring
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_AJBDebugAIMonitor_C::IsMonitoring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "IsMonitoring");

	Params::WB_AJBDebugAIMonitor_C_IsMonitoring Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_AJBDebugAIMonitor.WB_AJBDebugAIMonitor_C.GetMonitoringPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class APawn* UWB_AJBDebugAIMonitor_C::GetMonitoringPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBDebugAIMonitor_C", "GetMonitoringPawn");

	Params::WB_AJBDebugAIMonitor_C_GetMonitoringPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


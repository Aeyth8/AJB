#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRescueBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.ExecuteUbergraph_BP_AJBRescueBase
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_InteractCharacterBP;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSuccess;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bForceCancel;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractActor;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFlag01;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameParticleEffect_C*          CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue1;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RevivePair_bSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character2;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue2;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character3;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue3;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase");
static_assert(sizeof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase) == 0x0000C8, "Wrong size on BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, EntryPoint) == 0x000000, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_CustomEvent_InteractCharacterBP) == 0x000008, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_CustomEvent_InteractCharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_HasLocalSharedController_ReturnValue) == 0x000018, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_Event_bSuccess) == 0x000019, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_Event_bForceCancel) == 0x00001A, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_Event_bForceCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_Event_InteractActor) == 0x000020, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_Event_InteractActor' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_Event_bFlag01) == 0x000028, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_Event_bFlag01' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect) == 0x000040, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_RequestParticleEffectAttachedOnLocal_ParticleEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character1) == 0x000050, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_GetOwner_ReturnValue1) == 0x000060, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_HasLocalSharedController_ReturnValue1) == 0x000068, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_HasLocalSharedController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_RevivePair_bSuccess) == 0x000069, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_RevivePair_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_IsServer_ReturnValue) == 0x00006A, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character2) == 0x000070, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character2' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_bSuccess2) == 0x000078, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_HasLocalSharedController_ReturnValue2) == 0x000079, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_HasLocalSharedController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_GetOwner_ReturnValue2) == 0x000080, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_BooleanOR_ReturnValue) == 0x000088, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_AsBP_AJBIn_Game_Character3) == 0x000090, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_AsBP_AJBIn_Game_Character3' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, K2Node_DynamicCast_bSuccess3) == 0x000098, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x0000A0, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_HasLocalSharedController_ReturnValue3) == 0x0000A8, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_HasLocalSharedController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000AC, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_BooleanOR_ReturnValue1) == 0x0000B8, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x0000C0, "Member 'BP_AJBRescueBase_C_ExecuteUbergraph_BP_AJBRescueBase::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.MC_OnLongPressInteractEnded
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBRescueBase_C_MC_OnLongPressInteractEnded final
{
public:
	class ABP_AJBInGameCharacter_C*               InteractCharacterBP;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRescueBase_C_MC_OnLongPressInteractEnded) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_MC_OnLongPressInteractEnded");
static_assert(sizeof(BP_AJBRescueBase_C_MC_OnLongPressInteractEnded) == 0x000008, "Wrong size on BP_AJBRescueBase_C_MC_OnLongPressInteractEnded");
static_assert(offsetof(BP_AJBRescueBase_C_MC_OnLongPressInteractEnded, InteractCharacterBP) == 0x000000, "Member 'BP_AJBRescueBase_C_MC_OnLongPressInteractEnded::InteractCharacterBP' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.CalcTimeToRevive
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBRescueBase_C_CalcTimeToRevive final
{
public:
	class ABP_AJBInGameCharacter_C*               CharacterBP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToRevive;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTheWorldOperator_bOperator;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBTheWorldSkill_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRescueBase_C_CalcTimeToRevive) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_CalcTimeToRevive");
static_assert(sizeof(BP_AJBRescueBase_C_CalcTimeToRevive) == 0x000028, "Wrong size on BP_AJBRescueBase_C_CalcTimeToRevive");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, CharacterBP) == 0x000000, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, TimeToRevive) == 0x000008, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::TimeToRevive' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, Temp_bool_Variable) == 0x00000C, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, Temp_bool_Variable1) == 0x00000D, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, CallFunc_CheckTheWorldOperator_bOperator) == 0x00000E, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::CallFunc_CheckTheWorldOperator_bOperator' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, K2Node_Select_Default) == 0x00001C, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CalcTimeToRevive, K2Node_Select1_Default) == 0x000020, "Member 'BP_AJBRescueBase_C_CalcTimeToRevive::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.OnLongPressInteractEnded
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBRescueBase_C_OnLongPressInteractEnded final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForceCancel;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractActor_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlag01;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRescueBase_C_OnLongPressInteractEnded) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_OnLongPressInteractEnded");
static_assert(sizeof(BP_AJBRescueBase_C_OnLongPressInteractEnded) == 0x000018, "Wrong size on BP_AJBRescueBase_C_OnLongPressInteractEnded");
static_assert(offsetof(BP_AJBRescueBase_C_OnLongPressInteractEnded, bSuccess) == 0x000000, "Member 'BP_AJBRescueBase_C_OnLongPressInteractEnded::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_OnLongPressInteractEnded, bForceCancel) == 0x000001, "Member 'BP_AJBRescueBase_C_OnLongPressInteractEnded::bForceCancel' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_OnLongPressInteractEnded, InteractActor_0) == 0x000008, "Member 'BP_AJBRescueBase_C_OnLongPressInteractEnded::InteractActor_0' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_OnLongPressInteractEnded, bFlag01) == 0x000010, "Member 'BP_AJBRescueBase_C_OnLongPressInteractEnded::bFlag01' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.BeginInteract
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBRescueBase_C_BeginInteract final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRescueBase_C_BeginInteract) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_BeginInteract");
static_assert(sizeof(BP_AJBRescueBase_C_BeginInteract) == 0x000020, "Wrong size on BP_AJBRescueBase_C_BeginInteract");
static_assert(offsetof(BP_AJBRescueBase_C_BeginInteract, bSuccess) == 0x000000, "Member 'BP_AJBRescueBase_C_BeginInteract::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_BeginInteract, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBRescueBase_C_BeginInteract::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_BeginInteract, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBRescueBase_C_BeginInteract::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_BeginInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBRescueBase_C_BeginInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.GetTraceLength
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBRescueBase_C_GetTraceLength final
{
public:
	float                                         TraceLength_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRescueBase_C_GetTraceLength) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_GetTraceLength");
static_assert(sizeof(BP_AJBRescueBase_C_GetTraceLength) == 0x000020, "Wrong size on BP_AJBRescueBase_C_GetTraceLength");
static_assert(offsetof(BP_AJBRescueBase_C_GetTraceLength, TraceLength_0) == 0x000000, "Member 'BP_AJBRescueBase_C_GetTraceLength::TraceLength_0' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetTraceLength, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBRescueBase_C_GetTraceLength::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetTraceLength, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000010, "Member 'BP_AJBRescueBase_C_GetTraceLength::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetTraceLength, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AJBRescueBase_C_GetTraceLength::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBRescueBase_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRescueBase_C_GetPriority) == 0x000004, "Wrong alignment on BP_AJBRescueBase_C_GetPriority");
static_assert(sizeof(BP_AJBRescueBase_C_GetPriority) == 0x000004, "Wrong size on BP_AJBRescueBase_C_GetPriority");
static_assert(offsetof(BP_AJBRescueBase_C_GetPriority, Priority) == 0x000000, "Member 'BP_AJBRescueBase_C_GetPriority::Priority' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.GetText
// 0x0020 (0x0020 - 0x0000)
struct BP_AJBRescueBase_C_GetText final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_AJBRescueBase_C_GetText) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_GetText");
static_assert(sizeof(BP_AJBRescueBase_C_GetText) == 0x000020, "Wrong size on BP_AJBRescueBase_C_GetText");
static_assert(offsetof(BP_AJBRescueBase_C_GetText, bSuccess) == 0x000000, "Member 'BP_AJBRescueBase_C_GetText::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetText, Text) == 0x000008, "Member 'BP_AJBRescueBase_C_GetText::Text' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.CheckInteractable
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBRescueBase_C_CheckInteractable final
{
public:
	class ABP_AJBInGameCharacter_C*               OperatorCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseTraceLength;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteractable;                                     // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableParent;                           // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableOperator;                         // 0x0016(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTempInteractableTarget;                           // 0x0017(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInteractable_bInteractable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCritical_IsCritical;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPossibleInteract_bPossibleInteract;  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRescueBase_C_CheckInteractable) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_CheckInteractable");
static_assert(sizeof(BP_AJBRescueBase_C_CheckInteractable) == 0x000040, "Wrong size on BP_AJBRescueBase_C_CheckInteractable");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, OperatorCharacter) == 0x000000, "Member 'BP_AJBRescueBase_C_CheckInteractable::OperatorCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, TargetActor) == 0x000008, "Member 'BP_AJBRescueBase_C_CheckInteractable::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, BaseTraceLength) == 0x000010, "Member 'BP_AJBRescueBase_C_CheckInteractable::BaseTraceLength' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, bInteractable) == 0x000014, "Member 'BP_AJBRescueBase_C_CheckInteractable::bInteractable' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, bTempInteractableParent) == 0x000015, "Member 'BP_AJBRescueBase_C_CheckInteractable::bTempInteractableParent' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, bTempInteractableOperator) == 0x000016, "Member 'BP_AJBRescueBase_C_CheckInteractable::bTempInteractableOperator' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, bTempInteractableTarget) == 0x000017, "Member 'BP_AJBRescueBase_C_CheckInteractable::bTempInteractableTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_CheckInteractable_bInteractable) == 0x000018, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_CheckInteractable_bInteractable' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBRescueBase_C_CheckInteractable::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBRescueBase_C_CheckInteractable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_IsCritical_IsCritical) == 0x000029, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_IsCritical_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_CheckPossibleInteract_bPossibleInteract) == 0x00002A, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_CheckPossibleInteract_bPossibleInteract' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue1) == 0x00003A, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_BooleanAND_ReturnValue2) == 0x00003B, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_CheckInteractable, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_AJBRescueBase_C_CheckInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBRescueBase.BP_AJBRescueBase_C.GetDeltaSecondsRate
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBRescueBase_C_GetDeltaSecondsRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSecondsRate_Rate;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcTimeToRevive_TimeToRevive;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRescueBase_C_GetDeltaSecondsRate) == 0x000008, "Wrong alignment on BP_AJBRescueBase_C_GetDeltaSecondsRate");
static_assert(sizeof(BP_AJBRescueBase_C_GetDeltaSecondsRate) == 0x000030, "Wrong size on BP_AJBRescueBase_C_GetDeltaSecondsRate");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, Rate) == 0x000000, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, CallFunc_GetDeltaSecondsRate_Rate) == 0x000010, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::CallFunc_GetDeltaSecondsRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, CallFunc_CalcTimeToRevive_TimeToRevive) == 0x000024, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::CallFunc_CalcTimeToRevive_TimeToRevive' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRescueBase_C_GetDeltaSecondsRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_AJBRescueBase_C_GetDeltaSecondsRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}


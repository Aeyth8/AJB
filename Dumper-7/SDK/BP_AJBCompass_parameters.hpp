#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCompass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBCompass.BP_AJBCompass_C.ExecuteUbergraph_BP_AJBCompass
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0040(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameMiniMapMaterialController_C*> CallFunc_GetAllActorsOfClass_OutActors;  // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0060(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMiniMapMaterialController_C* CallFunc_Array_Get_Item;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue1;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0084(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0090(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default;                             // 0x00A8(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass) == 0x000008, "Wrong alignment on BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass");
static_assert(sizeof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass) == 0x0000B8, "Wrong size on BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, EntryPoint) == 0x000000, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00001C, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_HasLocalSharedController_ReturnValue) == 0x000034, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000038, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_GetCameraRotation_ReturnValue) == 0x000040, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_ComposeRotators_ReturnValue) == 0x000060, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_ComposeRotators_ReturnValue1) == 0x000078, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_ComposeRotators_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000084, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_RInterpTo_ReturnValue) == 0x000090, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Roll1) == 0x00009C, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Pitch1) == 0x0000A0, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_BreakRotator_Yaw1) == 0x0000A4, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, K2Node_Select_Default) == 0x0000A8, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B4, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass, CallFunc_IsValid_ReturnValue1) == 0x0000B5, "Member 'BP_AJBCompass_C_ExecuteUbergraph_BP_AJBCompass::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_AJBCompass.BP_AJBCompass_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBCompass_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCompass_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBCompass_C_ReceiveTick");
static_assert(sizeof(BP_AJBCompass_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBCompass_C_ReceiveTick");
static_assert(offsetof(BP_AJBCompass_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBCompass_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBCompass.BP_AJBCompass_C.SetupTargetCharacter
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBCompass_C_SetupTargetCharacter final
{
public:
	class AAJBInGameCharacter*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0018(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBCompass_C_SetupTargetCharacter) == 0x000008, "Wrong alignment on BP_AJBCompass_C_SetupTargetCharacter");
static_assert(sizeof(BP_AJBCompass_C_SetupTargetCharacter) == 0x000028, "Wrong size on BP_AJBCompass_C_SetupTargetCharacter");
static_assert(offsetof(BP_AJBCompass_C_SetupTargetCharacter, Target) == 0x000000, "Member 'BP_AJBCompass_C_SetupTargetCharacter::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_SetupTargetCharacter, Controller) == 0x000008, "Member 'BP_AJBCompass_C_SetupTargetCharacter::Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_SetupTargetCharacter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_AJBCompass_C_SetupTargetCharacter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_SetupTargetCharacter, CallFunc_GetCameraRotation_ReturnValue) == 0x000018, "Member 'BP_AJBCompass_C_SetupTargetCharacter::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");

// Function BP_AJBCompass.BP_AJBCompass_C.SetupWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBCompass_C_SetupWidget final
{
public:
	class UWB_Compass_C*                          CompassWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBCompass_C_SetupWidget) == 0x000008, "Wrong alignment on BP_AJBCompass_C_SetupWidget");
static_assert(sizeof(BP_AJBCompass_C_SetupWidget) == 0x000010, "Wrong size on BP_AJBCompass_C_SetupWidget");
static_assert(offsetof(BP_AJBCompass_C_SetupWidget, CompassWidget) == 0x000000, "Member 'BP_AJBCompass_C_SetupWidget::CompassWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBCompass_C_SetupWidget, Controller) == 0x000008, "Member 'BP_AJBCompass_C_SetupWidget::Controller' has a wrong offset!");

}


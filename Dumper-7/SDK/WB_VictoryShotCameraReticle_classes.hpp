#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_VictoryShotCameraReticle

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_VictoryShotCameraReticle.WB_VictoryShotCameraReticle_C
// 0x0028 (0x0230 - 0x0208)
class UWB_VictoryShotCameraReticle_C final : public UUserWidget
{
public:
	class UAJBImage*                              AJBImage_0;                                        // 0x0208(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_BottomLeft;                               // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_BottomRight;                              // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_TopLeft;                                  // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_TopRight;                                 // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_VictoryShotCameraReticle_C">();
	}
	static class UWB_VictoryShotCameraReticle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_VictoryShotCameraReticle_C>();
	}
};
static_assert(alignof(UWB_VictoryShotCameraReticle_C) == 0x000008, "Wrong alignment on UWB_VictoryShotCameraReticle_C");
static_assert(sizeof(UWB_VictoryShotCameraReticle_C) == 0x000230, "Wrong size on UWB_VictoryShotCameraReticle_C");
static_assert(offsetof(UWB_VictoryShotCameraReticle_C, AJBImage_0) == 0x000208, "Member 'UWB_VictoryShotCameraReticle_C::AJBImage_0' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShotCameraReticle_C, AJBImage_BottomLeft) == 0x000210, "Member 'UWB_VictoryShotCameraReticle_C::AJBImage_BottomLeft' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShotCameraReticle_C, AJBImage_BottomRight) == 0x000218, "Member 'UWB_VictoryShotCameraReticle_C::AJBImage_BottomRight' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShotCameraReticle_C, AJBImage_TopLeft) == 0x000220, "Member 'UWB_VictoryShotCameraReticle_C::AJBImage_TopLeft' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShotCameraReticle_C, AJBImage_TopRight) == 0x000228, "Member 'UWB_VictoryShotCameraReticle_C::AJBImage_TopRight' has a wrong offset!");

}


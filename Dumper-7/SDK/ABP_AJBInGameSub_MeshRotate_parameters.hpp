#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameSub_MeshRotate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_AJBInGameSub_MeshRotate.ABP_AJBInGameSub_MeshRotate_C.ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate
// 0x0030 (0x0030 - 0x0000)
struct ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcRootBoneRelativeYaw_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate) == 0x000008, "Wrong alignment on ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate");
static_assert(sizeof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate) == 0x000030, "Wrong size on ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, EntryPoint) == 0x000000, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, CallFunc_CalcRootBoneRelativeYaw_ReturnValue) == 0x000024, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::CallFunc_CalcRootBoneRelativeYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'ABP_AJBInGameSub_MeshRotate_C_ExecuteUbergraph_ABP_AJBInGameSub_MeshRotate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_AJBInGameSub_MeshRotate.ABP_AJBInGameSub_MeshRotate_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AJBInGameSub_MeshRotate_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_AJBInGameSub_MeshRotate.ABP_AJBInGameSub_MeshRotate_C.CalcRootBoneRelativeYaw
// 0x00C0 (0x00C0 - 0x0000)
struct ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_CurrentRootBoneWorldYaw;                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw) == 0x000010, "Wrong alignment on ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw");
static_assert(sizeof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw) == 0x0000C0, "Wrong size on ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, ReturnValue) == 0x000000, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_CurrentRootBoneWorldYaw) == 0x000004, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_CurrentRootBoneWorldYaw' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_bool_Variable) == 0x000008, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_bool_Variable1) == 0x000009, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_bool_Variable2) == 0x00000A, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_float_Variable) == 0x00000C, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, Temp_float_Variable1) == 0x000010, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_InverseTransformRotation_ReturnValue) == 0x00005C, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, K2Node_Select_Default) == 0x000074, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000078, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000088, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000091, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_Abs_ReturnValue) == 0x000094, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, K2Node_Select1_Default) == 0x000098, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00009C, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000A4, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, K2Node_Select2_Default) == 0x0000A8, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_FInterpTo_ReturnValue) == 0x0000B0, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Roll1) == 0x0000B4, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Pitch1) == 0x0000B8, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw, CallFunc_BreakRotator_Yaw1) == 0x0000BC, "Member 'ABP_AJBInGameSub_MeshRotate_C_CalcRootBoneRelativeYaw::CallFunc_BreakRotator_Yaw1' has a wrong offset!");

}


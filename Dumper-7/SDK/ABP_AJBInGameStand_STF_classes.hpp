#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AJBInGameStand_STF

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_AJBInGameStand_STF.ABP_AJBInGameStand_STF_C
// 0x0438 (0x0790 - 0x0358)
class UABP_AJBInGameStand_STF_C final : public UAnimInstance
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_007EE02C45B4D8A5346E92ABA1F5ECC0; // 0x0368(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49F402EB46FFEE08F7E8C391BBF725A7; // 0x03B0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_315446304759A034B1FFCBA4C9D6CAEC; // 0x03F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34F7D03E4D8F2021739D1DA0FDD17358; // 0x0440(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_0DEEB53F42E60A96FBEFC288AE51BF7D; // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_EA22D76847CD644BE2A9A3BAA733FB96; // 0x0538(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_BB8A57564168C9510067069711A75E8B; // 0x05E8(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_A12C5C574CC937178D2E848AF6BCF970; // 0x0630(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6A9E60E04BC65AE373566E82659418DD; // 0x0710(0x0070)()
	bool                                          IsOwnerMove;                                       // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OwnerMovementRate;                                 // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveRate;                                          // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_AJBInGameStand_STF(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_STF_AnimGraphNode_TransitionResult_315446304759A034B1FFCBA4C9D6CAEC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_AJBInGameStand_STF_AnimGraphNode_TransitionResult_49F402EB46FFEE08F7E8C391BBF725A7();
	void OwnerCanMove(bool* CanMove);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_AJBInGameStand_STF_C">();
	}
	static class UABP_AJBInGameStand_STF_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_AJBInGameStand_STF_C>();
	}
};
static_assert(alignof(UABP_AJBInGameStand_STF_C) == 0x000008, "Wrong alignment on UABP_AJBInGameStand_STF_C");
static_assert(sizeof(UABP_AJBInGameStand_STF_C) == 0x000790, "Wrong size on UABP_AJBInGameStand_STF_C");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, UberGraphFrame) == 0x000360, "Member 'UABP_AJBInGameStand_STF_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_Root_007EE02C45B4D8A5346E92ABA1F5ECC0) == 0x000368, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_Root_007EE02C45B4D8A5346E92ABA1F5ECC0' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_TransitionResult_49F402EB46FFEE08F7E8C391BBF725A7) == 0x0003B0, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_TransitionResult_49F402EB46FFEE08F7E8C391BBF725A7' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_TransitionResult_315446304759A034B1FFCBA4C9D6CAEC) == 0x0003F8, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_TransitionResult_315446304759A034B1FFCBA4C9D6CAEC' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_SequencePlayer_34F7D03E4D8F2021739D1DA0FDD17358) == 0x000440, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_SequencePlayer_34F7D03E4D8F2021739D1DA0FDD17358' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_StateResult_0DEEB53F42E60A96FBEFC288AE51BF7D) == 0x0004F0, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_StateResult_0DEEB53F42E60A96FBEFC288AE51BF7D' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_SequencePlayer_EA22D76847CD644BE2A9A3BAA733FB96) == 0x000538, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_SequencePlayer_EA22D76847CD644BE2A9A3BAA733FB96' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_StateResult_BB8A57564168C9510067069711A75E8B) == 0x0005E8, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_StateResult_BB8A57564168C9510067069711A75E8B' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_StateMachine_A12C5C574CC937178D2E848AF6BCF970) == 0x000630, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_StateMachine_A12C5C574CC937178D2E848AF6BCF970' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, AnimGraphNode_Slot_6A9E60E04BC65AE373566E82659418DD) == 0x000710, "Member 'UABP_AJBInGameStand_STF_C::AnimGraphNode_Slot_6A9E60E04BC65AE373566E82659418DD' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, IsOwnerMove) == 0x000780, "Member 'UABP_AJBInGameStand_STF_C::IsOwnerMove' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, OwnerMovementRate) == 0x000784, "Member 'UABP_AJBInGameStand_STF_C::OwnerMovementRate' has a wrong offset!");
static_assert(offsetof(UABP_AJBInGameStand_STF_C, MoveRate) == 0x000788, "Member 'UABP_AJBInGameStand_STF_C::MoveRate' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageDisplayManager

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AJB_structs.hpp"
#include "ST_DamageDisplayOverrideSetting_structs.hpp"
#include "E_DamageDisplayPosition_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.ExecuteUbergraph_BP_AJBDamageDisplayManager
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBDamageDisplayParams                K2Node_CustomEvent_Params;                         // 0x0008(0x0030)(NoDestructor)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDamageDisplayTarget_IsTarget;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameMovableStand_C*            K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDamageDisplayTarget_IsTarget1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager) == 0x000078, "Wrong size on BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, EntryPoint) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, K2Node_CustomEvent_Params) == 0x000008, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::K2Node_CustomEvent_Params' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000048, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000050, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_IsDamageDisplayTarget_IsTarget) == 0x000051, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_IsDamageDisplayTarget_IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand) == 0x000058, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::K2Node_DynamicCast_AsBP_AJBIn_Game_Movable_Stand' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, K2Node_DynamicCast_bSuccess1) == 0x000060, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x000068, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000070, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager, CallFunc_IsDamageDisplayTarget_IsTarget1) == 0x000071, "Member 'BP_AJBDamageDisplayManager_C_ExecuteUbergraph_BP_AJBDamageDisplayManager::CallFunc_IsDamageDisplayTarget_IsTarget1' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.RequestDamageDisplay
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBDamageDisplayManager_C_RequestDamageDisplay final
{
public:
	struct FAJBDamageDisplayParams                Params_0;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_RequestDamageDisplay) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_RequestDamageDisplay");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_RequestDamageDisplay) == 0x000030, "Wrong size on BP_AJBDamageDisplayManager_C_RequestDamageDisplay");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_RequestDamageDisplay, Params_0) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_RequestDamageDisplay::Params_0' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.SpawnDamageDisplay
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AJBDamageDisplayManager_C_SpawnDamageDisplay final
{
public:
	struct FAJBDamageDisplayParams                Params_0;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 CallFunc_GetViewTargetActor_ViewTargetActor;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeDisplayLocation_Location;             // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_DamageDisplay_C*                    CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindOverrideSetting_Success;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DamageDisplayOverrideSetting       CallFunc_FindOverrideSetting_OverrideSetting;      // 0x005C(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDamageDisplayEnabled_IsEnabled;         // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_InGameMain_C*                       CallFunc_FindAJBWidgetOfClass_OutWidget;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_SpawnDamageDisplay");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay) == 0x0000A0, "Wrong size on BP_AJBDamageDisplayManager_C_SpawnDamageDisplay");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, Params_0) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::Params_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_GetViewTargetActor_ViewTargetActor) == 0x000030, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_GetViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_MakeDisplayLocation_Location) == 0x000038, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_MakeDisplayLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_Create_ReturnValue) == 0x000050, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_FindOverrideSetting_Success) == 0x000058, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_FindOverrideSetting_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_FindOverrideSetting_OverrideSetting) == 0x00005C, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_FindOverrideSetting_OverrideSetting' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_IsDamageDisplayEnabled_IsEnabled) == 0x000075, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_IsDamageDisplayEnabled_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000076, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_IsPair_bPairCharacter) == 0x000077, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000078, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000080, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_FindAJBWidgetOfClass_OutWidget) == 0x000090, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_FindAJBWidgetOfClass_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_SpawnDamageDisplay, CallFunc_AddChild_ReturnValue) == 0x000098, "Member 'BP_AJBDamageDisplayManager_C_SpawnDamageDisplay::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.MakeDisplayLocation
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AJBDamageDisplayManager_C_MakeDisplayLocation final
{
public:
	struct FAJBDamageDisplayParams                Params_0;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FVector                                Location;                                          // 0x0030(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageDisplayPosition                       Temp_wildcard_Variable;                            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindOverrideSetting_Success;              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DamageDisplayOverrideSetting       CallFunc_FindOverrideSetting_OverrideSetting;      // 0x0040(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_MakeDisplayLocation");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation) == 0x0000B0, "Wrong size on BP_AJBDamageDisplayManager_C_MakeDisplayLocation");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, Params_0) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::Params_0' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, Location) == 0x000030, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, Temp_wildcard_Variable) == 0x00003C, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, K2Node_SwitchEnum_CmpSuccess) == 0x00003D, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_FindOverrideSetting_Success) == 0x00003E, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_FindOverrideSetting_Success' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_FindOverrideSetting_OverrideSetting) == 0x000040, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_FindOverrideSetting_OverrideSetting' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000064, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, K2Node_DynamicCast_AsCharacter) == 0x000070, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00007C, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_BreakVector_X) == 0x000088, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_BreakVector_Y) == 0x00008C, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000094, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00009C, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_MakeDisplayLocation, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BP_AJBDamageDisplayManager_C_MakeDisplayLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.IsDamageDisplayEnabled
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled final
{
public:
	bool                                          bException;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEnabled;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActiveBitesTheDust_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisabledDamageDisplay_ReturnValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled) == 0x000001, "Wrong alignment on BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled) == 0x000008, "Wrong size on BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, bException) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::bException' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, IsEnabled) == 0x000001, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_CheckActiveBitesTheDust_ReturnValue) == 0x000002, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_CheckActiveBitesTheDust_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_IsDisabledDamageDisplay_ReturnValue) == 0x000003, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_IsDisabledDamageDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_Not_PreBool_ReturnValue1) == 0x000005, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.ShouldDisplayZeroDamage
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDisplay;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0028(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage) == 0x000050, "Wrong size on BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, Target) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::Target' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, ShouldDisplay) == 0x000008, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::ShouldDisplay' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000010, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000028, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage, CallFunc_HasAnyTags_ReturnValue) == 0x000048, "Member 'BP_AJBDamageDisplayManager_C_ShouldDisplayZeroDamage::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.IsDamageDisplayTarget
// 0x0090 (0x0090 - 0x0000)
struct BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTarget;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempIsCharacter;                                   // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempIsNotStealth;                                  // 0x0016(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempIsVisibleFXEffect;                             // 0x0017(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempIsNotSelfDamage;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempIsNotFriendlyFire;                             // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInterface_C>    K2Node_DynamicCast_AsBI_AJBInterface;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDisableDamage_bDisableDamage;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0060(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayZeroDamage_ShouldDisplay;    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget) == 0x000090, "Wrong size on BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, DamagedActor) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, DamageCauser) == 0x000008, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, Damage) == 0x000010, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::Damage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, IsTarget) == 0x000014, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, TempIsCharacter) == 0x000015, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::TempIsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, TempIsNotStealth) == 0x000016, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::TempIsNotStealth' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, TempIsVisibleFXEffect) == 0x000017, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::TempIsVisibleFXEffect' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, TempIsNotSelfDamage) == 0x000018, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::TempIsNotSelfDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, TempIsNotFriendlyFire) == 0x000019, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::TempIsNotFriendlyFire' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x00001B, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001C, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_AsBI_AJBInterface) == 0x000020, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_AsBI_AJBInterface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_CheckDisableDamage_bDisableDamage) == 0x000031, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_CheckDisableDamage_bDisableDamage' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000038, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000048, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000060, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_MatchesAnyTags_ReturnValue) == 0x000080, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_Not_PreBool_ReturnValue1) == 0x000082, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_ShouldDisplayZeroDamage_ShouldDisplay) == 0x000083, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_ShouldDisplayZeroDamage_ShouldDisplay' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanOR_ReturnValue) == 0x000084, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_Not_PreBool_ReturnValue2) == 0x000086, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanAND_ReturnValue1) == 0x000087, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanOR_ReturnValue1) == 0x000088, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanAND_ReturnValue2) == 0x000089, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanAND_ReturnValue3) == 0x00008A, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget, CallFunc_BooleanAND_ReturnValue4) == 0x00008B, "Member 'BP_AJBDamageDisplayManager_C_IsDamageDisplayTarget::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");

// Function BP_AJBDamageDisplayManager.BP_AJBDamageDisplayManager_C.FindOverrideSetting
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBDamageDisplayManager_C_FindOverrideSetting final
{
public:
	struct FGameplayTag                           DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DamageDisplayOverrideSetting       OverrideSetting;                                   // 0x000C(0x0018)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_DamageDisplayOverrideSetting       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBDamageDisplayManager_C_FindOverrideSetting) == 0x000008, "Wrong alignment on BP_AJBDamageDisplayManager_C_FindOverrideSetting");
static_assert(sizeof(BP_AJBDamageDisplayManager_C_FindOverrideSetting) == 0x000050, "Wrong size on BP_AJBDamageDisplayManager_C_FindOverrideSetting");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, DamageType) == 0x000000, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::DamageType' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, Success) == 0x000008, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::Success' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, OverrideSetting) == 0x00000C, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::OverrideSetting' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, CallFunc_GetTagName_ReturnValue) == 0x000028, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AJBDamageDisplayManager_C_FindOverrideSetting, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_AJBDamageDisplayManager_C_FindOverrideSetting::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}


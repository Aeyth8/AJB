#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDamageAreaContext

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_DamageAreaInterval_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDamageAreaContext.BP_AJBDamageAreaContext_C
// 0x0128 (0x0218 - 0x00F0)
class UBP_AJBDamageAreaContext_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         Rep_BaseRadius;                                    // 0x00F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rep_TargetRadius;                                  // 0x00FC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rep_BaseLocation;                                  // 0x0100(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rep_TargetLocation;                                // 0x010C(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rep_PreviousLocationDiff;                          // 0x0118(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rep_CurrentIntervalIndex;                          // 0x0124(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rep_IntervalCountMax;                              // 0x0128(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationMoveDistanceRateMin;                       // 0x012C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationMoveDistanceRateMax;                       // 0x0130(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationMoveAngleDegMin;                           // 0x0134(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rep_UseTestData;                                   // 0x0138(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Rep_IntervalTestData;                              // 0x0140(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnIntervalSetupCompleted;                          // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FST_DamageAreaInterval                 Rep_CurrentInterval;                               // 0x0158(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnIntervalCompleted;                               // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Rep_InitialSetupCompleted;                         // 0x0180(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rep_ReductionStartTime;                            // 0x0184(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rep_ReductionCompleteTime;                         // 0x0188(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnRestart;                                         // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bRep_DebugPauseDamageArea;                         // 0x01A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rep_TimespanOfDebugPause;                          // 0x01A4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rep_TimespanOfDebugPauseStart;                     // 0x01A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnVanish;                                          // 0x01B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnStop;                                            // 0x01C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnStart;                                           // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimespan                              VanishedTimespanFromBattleStart;                   // 0x01E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVanished;                                       // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Rep_TargetLocationList;                            // 0x01F0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 Rep_RadiusList;                                    // 0x0200(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDisableReduction;                                 // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBDamageAreaContext(int32 EntryPoint);
	void MC_Start();
	void MC_Stop();
	void MC_Vanish();
	void MC_Restart(float BaseRadius, const struct FVector& BaseLocation);
	void ReceiveTick(float DeltaSeconds);
	void MC_IntervalCompleted();
	void MC_IntervalSetupCompleted(float BaseRadius, const struct FVector& BaseLocation, bool DoesNotReduction);
	bool ReductionStarted();
	struct FTimespan GetTimespanFromBattleStart();
	bool ReductionCompleted();
	bool ReductionPreAnnounced();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDamageAreaContext_C">();
	}
	static class UBP_AJBDamageAreaContext_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBDamageAreaContext_C>();
	}
};
static_assert(alignof(UBP_AJBDamageAreaContext_C) == 0x000008, "Wrong alignment on UBP_AJBDamageAreaContext_C");
static_assert(sizeof(UBP_AJBDamageAreaContext_C) == 0x000218, "Wrong size on UBP_AJBDamageAreaContext_C");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBDamageAreaContext_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_BaseRadius) == 0x0000F8, "Member 'UBP_AJBDamageAreaContext_C::Rep_BaseRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_TargetRadius) == 0x0000FC, "Member 'UBP_AJBDamageAreaContext_C::Rep_TargetRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_BaseLocation) == 0x000100, "Member 'UBP_AJBDamageAreaContext_C::Rep_BaseLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_TargetLocation) == 0x00010C, "Member 'UBP_AJBDamageAreaContext_C::Rep_TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_PreviousLocationDiff) == 0x000118, "Member 'UBP_AJBDamageAreaContext_C::Rep_PreviousLocationDiff' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_CurrentIntervalIndex) == 0x000124, "Member 'UBP_AJBDamageAreaContext_C::Rep_CurrentIntervalIndex' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_IntervalCountMax) == 0x000128, "Member 'UBP_AJBDamageAreaContext_C::Rep_IntervalCountMax' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, LocationMoveDistanceRateMin) == 0x00012C, "Member 'UBP_AJBDamageAreaContext_C::LocationMoveDistanceRateMin' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, LocationMoveDistanceRateMax) == 0x000130, "Member 'UBP_AJBDamageAreaContext_C::LocationMoveDistanceRateMax' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, LocationMoveAngleDegMin) == 0x000134, "Member 'UBP_AJBDamageAreaContext_C::LocationMoveAngleDegMin' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_UseTestData) == 0x000138, "Member 'UBP_AJBDamageAreaContext_C::Rep_UseTestData' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_IntervalTestData) == 0x000140, "Member 'UBP_AJBDamageAreaContext_C::Rep_IntervalTestData' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnIntervalSetupCompleted) == 0x000148, "Member 'UBP_AJBDamageAreaContext_C::OnIntervalSetupCompleted' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_CurrentInterval) == 0x000158, "Member 'UBP_AJBDamageAreaContext_C::Rep_CurrentInterval' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnIntervalCompleted) == 0x000170, "Member 'UBP_AJBDamageAreaContext_C::OnIntervalCompleted' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_InitialSetupCompleted) == 0x000180, "Member 'UBP_AJBDamageAreaContext_C::Rep_InitialSetupCompleted' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_ReductionStartTime) == 0x000184, "Member 'UBP_AJBDamageAreaContext_C::Rep_ReductionStartTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_ReductionCompleteTime) == 0x000188, "Member 'UBP_AJBDamageAreaContext_C::Rep_ReductionCompleteTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnRestart) == 0x000190, "Member 'UBP_AJBDamageAreaContext_C::OnRestart' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, bRep_DebugPauseDamageArea) == 0x0001A0, "Member 'UBP_AJBDamageAreaContext_C::bRep_DebugPauseDamageArea' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_TimespanOfDebugPause) == 0x0001A4, "Member 'UBP_AJBDamageAreaContext_C::Rep_TimespanOfDebugPause' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_TimespanOfDebugPauseStart) == 0x0001A8, "Member 'UBP_AJBDamageAreaContext_C::Rep_TimespanOfDebugPauseStart' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnVanish) == 0x0001B0, "Member 'UBP_AJBDamageAreaContext_C::OnVanish' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnStop) == 0x0001C0, "Member 'UBP_AJBDamageAreaContext_C::OnStop' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, OnStart) == 0x0001D0, "Member 'UBP_AJBDamageAreaContext_C::OnStart' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, VanishedTimespanFromBattleStart) == 0x0001E0, "Member 'UBP_AJBDamageAreaContext_C::VanishedTimespanFromBattleStart' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, bIsVanished) == 0x0001E8, "Member 'UBP_AJBDamageAreaContext_C::bIsVanished' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_TargetLocationList) == 0x0001F0, "Member 'UBP_AJBDamageAreaContext_C::Rep_TargetLocationList' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, Rep_RadiusList) == 0x000200, "Member 'UBP_AJBDamageAreaContext_C::Rep_RadiusList' has a wrong offset!");
static_assert(offsetof(UBP_AJBDamageAreaContext_C, bDisableReduction) == 0x000210, "Member 'UBP_AJBDamageAreaContext_C::bDisableReduction' has a wrong offset!");

}


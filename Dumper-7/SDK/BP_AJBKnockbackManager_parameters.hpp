#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKnockbackManager

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.ExecuteUbergraph_BP_AJBKnockbackManager
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Operator;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_PassiveTag;                     // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CauserType;                     // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Power;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue;                 // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager) == 0x000008, "Wrong alignment on BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager");
static_assert(sizeof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager) == 0x000088, "Wrong size on BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, EntryPoint) == 0x000000, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_CustomEvent_Operator) == 0x000028, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_CustomEvent_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_CustomEvent_PassiveTag) == 0x000030, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_CustomEvent_PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_CustomEvent_CauserType) == 0x000038, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_CustomEvent_CauserType' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000040, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, CallFunc_GetOwner_ReturnValue1) == 0x000058, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_DynamicCast_AsCharacter) == 0x000060, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_DynamicCast_bSuccess1) == 0x000068, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_CustomEvent_Direction) == 0x00006C, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_CustomEvent_Power) == 0x000078, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_CustomEvent_Power' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager, K2Node_MathExpression_ReturnValue) == 0x00007C, "Member 'BP_AJBKnockbackManager_C_ExecuteUbergraph_BP_AJBKnockbackManager::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.AddKnockbackResistPassive
// 0x0018 (0x0018 - 0x0000)
struct BP_AJBKnockbackManager_C_AddKnockbackResistPassive final
{
public:
	class UObject*                                Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PassiveTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKnockbackManager_C_AddKnockbackResistPassive) == 0x000008, "Wrong alignment on BP_AJBKnockbackManager_C_AddKnockbackResistPassive");
static_assert(sizeof(BP_AJBKnockbackManager_C_AddKnockbackResistPassive) == 0x000018, "Wrong size on BP_AJBKnockbackManager_C_AddKnockbackResistPassive");
static_assert(offsetof(BP_AJBKnockbackManager_C_AddKnockbackResistPassive, Operator) == 0x000000, "Member 'BP_AJBKnockbackManager_C_AddKnockbackResistPassive::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_AddKnockbackResistPassive, PassiveTag) == 0x000008, "Member 'BP_AJBKnockbackManager_C_AddKnockbackResistPassive::PassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_AddKnockbackResistPassive, CauserType) == 0x000010, "Member 'BP_AJBKnockbackManager_C_AddKnockbackResistPassive::CauserType' has a wrong offset!");

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.Knockback
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBKnockbackManager_C_Knockback final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Power;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKnockbackManager_C_Knockback) == 0x000004, "Wrong alignment on BP_AJBKnockbackManager_C_Knockback");
static_assert(sizeof(BP_AJBKnockbackManager_C_Knockback) == 0x000010, "Wrong size on BP_AJBKnockbackManager_C_Knockback");
static_assert(offsetof(BP_AJBKnockbackManager_C_Knockback, Direction) == 0x000000, "Member 'BP_AJBKnockbackManager_C_Knockback::Direction' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_Knockback, Power) == 0x00000C, "Member 'BP_AJBKnockbackManager_C_Knockback::Power' has a wrong offset!");

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.ApplyTargetKnockbackRate
// 0x0028 (0x0028 - 0x0000)
struct BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BasePower;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Power;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate) == 0x000008, "Wrong alignment on BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate");
static_assert(sizeof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate) == 0x000028, "Wrong size on BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, TargetActor) == 0x000000, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, BasePower) == 0x000008, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::BasePower' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, Power) == 0x00000C, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::Power' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000018, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000020, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_AJBKnockbackManager_C_ApplyTargetKnockbackRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.RequestKnockback_Server
// 0x0040 (0x0040 - 0x0000)
struct BP_AJBKnockbackManager_C_RequestKnockback_Server final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KnockbackBasePower;                                // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CauserTag;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ResistPassiveTag;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKnockbackTarget_IsTarget;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyTargetKnockbackRate_Power;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKnockbackManager_C_RequestKnockback_Server) == 0x000008, "Wrong alignment on BP_AJBKnockbackManager_C_RequestKnockback_Server");
static_assert(sizeof(BP_AJBKnockbackManager_C_RequestKnockback_Server) == 0x000040, "Wrong size on BP_AJBKnockbackManager_C_RequestKnockback_Server");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, Causer) == 0x000000, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, Direction) == 0x000008, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::Direction' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, KnockbackBasePower) == 0x000014, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::KnockbackBasePower' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, CauserTag) == 0x000018, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::CauserTag' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, ResistPassiveTag) == 0x000020, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::ResistPassiveTag' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, Success) == 0x000028, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::Success' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, CallFunc_IsKnockbackTarget_IsTarget) == 0x000029, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::CallFunc_IsKnockbackTarget_IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, CallFunc_ApplyTargetKnockbackRate_Power) == 0x000038, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::CallFunc_ApplyTargetKnockbackRate_Power' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_RequestKnockback_Server, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AJBKnockbackManager_C_RequestKnockback_Server::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBKnockbackManager.BP_AJBKnockbackManager_C.IsKnockbackTarget
// 0x0110 (0x0110 - 0x0000)
struct BP_AJBKnockbackManager_C_IsKnockbackTarget final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTarget;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CauserCharacter;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_DynamicCast_AsActor_Component;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBVanishingOfTimeSkill_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP1;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue2;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0098(0x0020)()
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue3;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkillState_bMatch1;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameCharacterProperty_C> K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetPropertyOwnerCharacterBP_CharacterBP;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPair_bPairCharacter;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue4;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP2;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess2;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPair_bPairCharacter1;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKnockbackManager_C_IsKnockbackTarget) == 0x000008, "Wrong alignment on BP_AJBKnockbackManager_C_IsKnockbackTarget");
static_assert(sizeof(BP_AJBKnockbackManager_C_IsKnockbackTarget) == 0x000110, "Wrong size on BP_AJBKnockbackManager_C_IsKnockbackTarget");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, Causer) == 0x000000, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, IsTarget) == 0x000008, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CauserCharacter) == 0x000010, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CauserCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_AsActor_Component) == 0x000020, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_AsActor_Component' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetOwner_ReturnValue1) == 0x000038, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000048, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000050, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_AsActor) == 0x000058, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_bSuccess1) == 0x000060, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_CharacterBP1) == 0x000068, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_CharacterBP1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_bSuccess1) == 0x000070, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetOwner_ReturnValue2) == 0x000078, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetOwner_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000080, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000098, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000B8, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_HasTag_ReturnValue) == 0x0000B9, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_CheckSkillState_bMatch) == 0x0000BA, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_MakeLiteralByte_ReturnValue1) == 0x0000BB, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetOwner_ReturnValue3) == 0x0000C0, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetOwner_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_CheckSkillState_bMatch1) == 0x0000C8, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_CheckSkillState_bMatch1' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property) == 0x0000D0, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_AsBI_AJBIn_Game_Character_Property' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, K2Node_DynamicCast_bSuccess3) == 0x0000E0, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_BooleanOR_ReturnValue) == 0x0000E1, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetPropertyOwnerCharacterBP_CharacterBP) == 0x0000E8, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetPropertyOwnerCharacterBP_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_IsPair_bPairCharacter) == 0x0000F0, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_IsPair_bPairCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetOwner_ReturnValue4) == 0x0000F8, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetOwner_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_CharacterBP2) == 0x000100, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_CharacterBP2' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_GetAJBCharacterFromActor_bSuccess2) == 0x000108, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_GetAJBCharacterFromActor_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_AJBKnockbackManager_C_IsKnockbackTarget, CallFunc_IsPair_bPairCharacter1) == 0x000109, "Member 'BP_AJBKnockbackManager_C_IsKnockbackTarget::CallFunc_IsPair_bPairCharacter1' has a wrong offset!");

}


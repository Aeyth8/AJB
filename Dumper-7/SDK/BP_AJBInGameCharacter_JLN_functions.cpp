#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameCharacter_JLN

#include "Basic.hpp"

#include "BP_AJBInGameCharacter_JLN_classes.hpp"
#include "BP_AJBInGameCharacter_JLN_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.ExecuteUbergraph_BP_AJBInGameCharacter_JLN
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_JLN_C::ExecuteUbergraph_BP_AJBInGameCharacter_JLN(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "ExecuteUbergraph_BP_AJBInGameCharacter_JLN");

	Params::BP_AJBInGameCharacter_JLN_C_ExecuteUbergraph_BP_AJBInGameCharacter_JLN Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.GetDummyShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_JLN_C::GetDummyShotLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "GetDummyShotLocation");

	Params::BP_AJBInGameCharacter_JLN_C_GetDummyShotLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.ShouldShowNGPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_JLN_C::ShouldShowNGPoint(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "ShouldShowNGPoint");

	Params::BP_AJBInGameCharacter_JLN_C_ShouldShowNGPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.GetShutTraceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameCharacter_JLN_C::GetShutTraceRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "GetShutTraceRadius");

	Params::BP_AJBInGameCharacter_JLN_C_GetShutTraceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.GetShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConsiderCharacterCapsuleRadius                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTag&              SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 Locations                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameCharacter_JLN_C::GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "GetShotLocation");

	Params::BP_AJBInGameCharacter_JLN_C_GetShotLocation Parms{};

	Parms.bConsiderCharacterCapsuleRadius = bConsiderCharacterCapsuleRadius;
	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.CheckLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bLocallyControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_JLN_C::CheckLocallyControlled(bool* bLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "CheckLocallyControlled");

	Params::BP_AJBInGameCharacter_JLN_C_CheckLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocallyControlled != nullptr)
		*bLocallyControlled = Parms.bLocallyControlled;
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.ReleasedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::ReleasedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "ReleasedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.PressedButton_ActiveSpecial
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::PressedButton_ActiveSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "PressedButton_ActiveSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.PressedButton_ActiveBase
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::PressedButton_ActiveBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "PressedButton_ActiveBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.ReleasedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::ReleasedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "ReleasedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.PressedButton_Ultimate
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::PressedButton_Ultimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "PressedButton_Ultimate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.PressedButton_Basic
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::PressedButton_Basic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "PressedButton_Basic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_JLN_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "NotifyTheWorld");

	Params::BP_AJBInGameCharacter_JLN_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameCharacter_JLN_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameCharacter_JLN.BP_AJBInGameCharacter_JLN_C.OnBeforeInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bShouldInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameCharacter_JLN_C::OnBeforeInteract(bool* bShouldInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameCharacter_JLN_C", "OnBeforeInteract");

	Params::BP_AJBInGameCharacter_JLN_C_OnBeforeInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldInteract != nullptr)
		*bShouldInteract = Parms.bShouldInteract;
}

}


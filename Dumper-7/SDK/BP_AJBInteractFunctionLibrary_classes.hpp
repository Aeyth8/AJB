#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInteractFunctionLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInteractFunctionLibrary.BP_AJBInteractFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBP_AJBInteractFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void FindInteractLocationForZipper(const struct FVector& Start, const struct FVector& End, float MaxGapWidth, const struct FGameplayTagContainer& DesiredInteractType, class UObject* __WorldContext, struct FGameplayTag* DecidedInteractType, struct FTransform* FirstTransform, struct FVector* SecondLocation, struct FVector* LocationOfInjectionCounterpart, struct FVector* LocationOfInjectionOrigin, class AActor** HitActor, class UPrimitiveComponent** HitComponent);
	static bool TestIfInteractableComponentHit(const struct FHitResult& HitResult, const struct FGameplayTagContainer& InteractTypesToCheck, class UObject* __WorldContext, struct FGameplayTag* InteractResult);
	static bool IsInteractableComponent(class UPrimitiveComponent* Component, const struct FGameplayTagContainer& InteractTypes, class UObject* __WorldContext, struct FGameplayTag* InteractResult);
	static bool GetValidStaticMeshFromComponent(class UActorComponent* Component, class UObject* __WorldContext, class UStaticMesh** StaticMesh);
	static bool HasValidGameplayTag(class UStaticMesh* StaticMesh, const struct FGameplayTagContainer& InteractTypes, const struct FGameplayTag& TargetInteractType, class UObject* __WorldContext, struct FGameplayTag* OutInteractType);
	static bool Box2DContainsBox2D(const struct FBox2D& BoxOuter, const struct FBox2D& BoxInner, class UObject* __WorldContext);
	static bool Box2DContainsPosition2D(const struct FBox2D& Box, const struct FVector2D& Position, class UObject* __WorldContext);
	static void TransformBox(const struct FBox& Box, const struct FTransform& Transform, class UObject* __WorldContext, struct FTransform* NewParam2);
	static void FindTraceLocationsFromPlayerCamera(class ABP_AJBInGamePlayerController_C* PlayerController, const struct FVector& InteractingActorLocation, float TraceDistanceStartFromCamera, float TraceDistanceEndFromCamera, float TraceRadius, class UObject* __WorldContext, bool* bTraceable, struct FVector* TraceStartLocation, struct FVector* TraceEndLocation);
	static float GetRadiusOfLargestCharacter(class UObject* __WorldContext);
	static bool IsInteractableHitAtFront(const struct FVector& FrontVector, const struct FHitResult& HitResult, class UObject* __WorldContext);
	static bool IsInteractableDirection(class ABP_AJBInGameCharacter_C* Character, class AActor* InteractTarget, float AngleFromForwardVector, class UObject* __WorldContext);
	static float GetHalfHeightOfLargestCharacter(class UObject* __WorldContext);
	static void AdjustLocationOfZipperInjection(bool AdjustOrigin, int32 TrialNum, float InInteractionBuffer, const struct FVector& CounterpartBaseWorldLocation, const struct FVector& CounterpartForwardVector, bool bDebug, class UObject* __WorldContext, bool* bFound, struct FVector* Location);
	static void FindTraceLocationsFromCharacterCamera(class ABP_AJBInGameCharacter_C* Character, const struct FVector& InteractingActorLocation, float TraceDistanceStartFromCamera, float TraceDistanceEndFromCamera, float TraceRadius, class UObject* __WorldContext, bool* bTraceable, struct FVector* TraceStartLocation, struct FVector* TraceEndLocation);
	static void GetPoliticWallDepth(class UActorComponent* Component, class UObject* __WorldContext, float* WallDepth);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInteractFunctionLibrary_C">();
	}
	static class UBP_AJBInteractFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInteractFunctionLibrary_C>();
	}
};
static_assert(alignof(UBP_AJBInteractFunctionLibrary_C) == 0x000008, "Wrong alignment on UBP_AJBInteractFunctionLibrary_C");
static_assert(sizeof(UBP_AJBInteractFunctionLibrary_C) == 0x000028, "Wrong size on UBP_AJBInteractFunctionLibrary_C");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AJBSignalPin

#include "Basic.hpp"

#include "WB_AJBSignalPin_classes.hpp"
#include "WB_AJBSignalPin_parameters.hpp"


namespace SDK
{

// Function WB_AJBSignalPin.WB_AJBSignalPin_C.ExecuteUbergraph_WB_AJBSignalPin
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::ExecuteUbergraph_WB_AJBSignalPin(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "ExecuteUbergraph_WB_AJBSignalPin");

	Params::WB_AJBSignalPin_C_ExecuteUbergraph_WB_AJBSignalPin Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.BndEvt__AJBButton_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWB_AJBSignalPin_C::BndEvt__AJBButton_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "BndEvt__AJBButton_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdatePinScale
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBSignalPin_C::UpdatePinScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "UpdatePinScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateArrowVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOutViewPosition                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector2D&                 ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::UpdateArrowVisibility(bool IsOutViewPosition, const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "UpdateArrowVisibility");

	Params::WB_AJBSignalPin_C_UpdateArrowVisibility Parms{};

	Parms.IsOutViewPosition = IsOutViewPosition;
	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetPinLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   PinLocation3D_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::SetPinLocation(const struct FVector& PinLocation3D_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "SetPinLocation");

	Params::WB_AJBSignalPin_C_SetPinLocation Parms{};

	Parms.PinLocation3D_0 = std::move(PinLocation3D_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateScreenPosition
// (BlueprintCallable, BlueprintEvent)

void UWB_AJBSignalPin_C::UpdateScreenPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "UpdateScreenPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "Tick");

	Params::WB_AJBSignalPin_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_AJBSignalPin_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_AJBSignalPin_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "PreConstruct");

	Params::WB_AJBSignalPin_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetIsPair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPair                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_AJBSignalPin_C::SetIsPair(bool bIsPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "SetIsPair");

	Params::WB_AJBSignalPin_C_SetIsPair Parms{};

	Parms.bIsPair = bIsPair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateBlurOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlurOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::UpdateBlurOffset(float BlurOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "UpdateBlurOffset");

	Params::WB_AJBSignalPin_C_UpdateBlurOffset Parms{};

	Parms.BlurOffset = BlurOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.SetSignalType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SignalTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::SetSignalType(const struct FGameplayTag& SignalTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "SetSignalType");

	Params::WB_AJBSignalPin_C_SetSignalType Parms{};

	Parms.SignalTypeTag = std::move(SignalTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.UpdateSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::UpdateSize(const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "UpdateSize");

	Params::WB_AJBSignalPin_C_UpdateSize Parms{};

	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.ClampScreenPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D&                       Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       NewPosition                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::ClampScreenPosition(struct FVector2D& Position, struct FVector2D* NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "ClampScreenPosition");

	Params::WB_AJBSignalPin_C_ClampScreenPosition Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	Position = std::move(Parms.Position);

	if (NewPosition != nullptr)
		*NewPosition = std::move(Parms.NewPosition);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetPinPosition
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_AJBSignalPin_C::GetPinPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "GetPinPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.IsInViewportPositionFun
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWB_AJBSignalPin_C::IsInViewportPositionFun(const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "IsInViewportPositionFun");

	Params::WB_AJBSignalPin_C_IsInViewportPositionFun Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetDpiScaledDesiredSize
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWB_AJBSignalPin_C::GetDpiScaledDesiredSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "GetDpiScaledDesiredSize");

	Params::WB_AJBSignalPin_C_GetDpiScaledDesiredSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetTargetPositionOutOfView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWB_AJBSignalPin_C::GetTargetPositionOutOfView(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "GetTargetPositionOutOfView");

	Params::WB_AJBSignalPin_C_GetTargetPositionOutOfView Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.GetOrthant
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Orthant                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::GetOrthant(const struct FVector2D& ScreenPosition, int32* Orthant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "GetOrthant");

	Params::WB_AJBSignalPin_C_GetOrthant Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Orthant != nullptr)
		*Orthant = Parms.Orthant;
}


// Function WB_AJBSignalPin.WB_AJBSignalPin_C.PlayVanishAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsTimeUp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  AnimationLength                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_AJBSignalPin_C::PlayVanishAnimation(bool bIsTimeUp, float* AnimationLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_AJBSignalPin_C", "PlayVanishAnimation");

	Params::WB_AJBSignalPin_C_PlayVanishAnimation Parms{};

	Parms.bIsTimeUp = bIsTimeUp;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimationLength != nullptr)
		*AnimationLength = Parms.AnimationLength;
}

}


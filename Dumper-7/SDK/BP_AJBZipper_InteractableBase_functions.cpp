#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_InteractableBase

#include "Basic.hpp"

#include "BP_AJBZipper_InteractableBase_classes.hpp"
#include "BP_AJBZipper_InteractableBase_parameters.hpp"


namespace SDK
{

// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.ExecuteUbergraph_BP_AJBZipper_InteractableBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::ExecuteUbergraph_BP_AJBZipper_InteractableBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "ExecuteUbergraph_BP_AJBZipper_InteractableBase");

	Params::BP_AJBZipper_InteractableBase_C_ExecuteUbergraph_BP_AJBZipper_InteractableBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.MC_DisableInteract
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_InteractableBase_C::MC_DisableInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "MC_DisableInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnLifeTimeElapsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::OnLifeTimeElapsed(class AActor* DestroyingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnLifeTimeElapsed");

	Params::BP_AJBZipper_InteractableBase_C_OnLifeTimeElapsed Parms{};

	Parms.DestroyingActor = DestroyingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_InteractableBase_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "NotifyTheWorld");

	Params::BP_AJBZipper_InteractableBase_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBZipper_InteractableBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnInteractionBlocked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::OnInteractionBlocked(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnInteractionBlocked");

	Params::BP_AJBZipper_InteractableBase_C_OnInteractionBlocked Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnSucceededLongPress_Local
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_InteractableBase_C::OnSucceededLongPress_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnSucceededLongPress_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnROSInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ServerIsInteractingPlayer                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_InteractableBase_C::OnROSInteract(class AActor* InteractingActor, bool ServerIsInteractingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnROSInteract");

	Params::BP_AJBZipper_InteractableBase_C_OnROSInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.ServerIsInteractingPlayer = ServerIsInteractingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::OnInteract(class AActor* InteractActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnInteract");

	Params::BP_AJBZipper_InteractableBase_C_OnInteract Parms{};

	Parms.InteractActor = InteractActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.GetLocationOfInjection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_AJBZipper_InteractableBase_C::GetLocationOfInjection(class UStaticMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "GetLocationOfInjection");

	Params::BP_AJBZipper_InteractableBase_C_GetLocationOfInjection Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.DisableInteractLocally
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_InteractableBase_C::DisableInteractLocally()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "DisableInteractLocally");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.Interactable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TraceLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBZipper_InteractableBase_C::Interactable(class ABP_AJBInGameCharacter_C* Character, float TraceLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "Interactable");

	Params::BP_AJBZipper_InteractableBase_C_Interactable Parms{};

	Parms.Character = Character;
	Parms.TraceLength = TraceLength;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.InteractInstantly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBZipper_InteractableBase_C::InteractInstantly(class ABP_AJBInGameCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "InteractInstantly");

	Params::BP_AJBZipper_InteractableBase_C_InteractInstantly Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.TryGetInteractableText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText*                            InteractMessage                                        (Parm, OutParm)

void ABP_AJBZipper_InteractableBase_C::TryGetInteractableText(class ABP_AJBInGameCharacter_C* OperatorCharacter, bool* bSuccess, class FText* InteractMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "TryGetInteractableText");

	Params::BP_AJBZipper_InteractableBase_C_TryGetInteractableText Parms{};

	Parms.OperatorCharacter = OperatorCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (InteractMessage != nullptr)
		*InteractMessage = std::move(Parms.InteractMessage);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.CheckErrorCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bErrorCondition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// uint8*                                  ErrorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::CheckErrorCondition(bool* bErrorCondition, uint8* ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "CheckErrorCondition");

	Params::BP_AJBZipper_InteractableBase_C_CheckErrorCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bErrorCondition != nullptr)
		*bErrorCondition = Parms.bErrorCondition;

	if (ErrorType != nullptr)
		*ErrorType = Parms.ErrorType;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_InteractableBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.OnLocalInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_InteractableBase_C::OnLocalInteract(class AActor* InteractingActor, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "OnLocalInteract");

	Params::BP_AJBZipper_InteractableBase_C_OnLocalInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.GetInteractState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8*                                  InteractState                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::GetInteractState(uint8* InteractState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "GetInteractState");

	Params::BP_AJBZipper_InteractableBase_C_GetInteractState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractState != nullptr)
		*InteractState = Parms.InteractState;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.GetInteractPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::GetInteractPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "GetInteractPriority");

	Params::BP_AJBZipper_InteractableBase_C_GetInteractPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.GetInteractBoundForCulling
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Center                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_InteractableBase_C::GetInteractBoundForCulling(class AActor* InteractingActor, struct FVector* Center, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "GetInteractBoundForCulling");

	Params::BP_AJBZipper_InteractableBase_C_GetInteractBoundForCulling Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Center != nullptr)
		*Center = std::move(Parms.Center);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.IfNeedsExclusiveInteractStrictly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBZipper_InteractableBase_C::IfNeedsExclusiveInteractStrictly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "IfNeedsExclusiveInteractStrictly");

	Params::BP_AJBZipper_InteractableBase_C_IfNeedsExclusiveInteractStrictly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.IfBlockInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBZipper_InteractableBase_C::IfBlockInteract(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "IfBlockInteract");

	Params::BP_AJBZipper_InteractableBase_C_IfBlockInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_InteractableBase.BP_AJBZipper_InteractableBase_C.ShouldPrioritizedThanPrepaidSkillCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bShouldPriorirized                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_InteractableBase_C::ShouldPrioritizedThanPrepaidSkillCancel(bool* bShouldPriorirized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_InteractableBase_C", "ShouldPrioritizedThanPrepaidSkillCancel");

	Params::BP_AJBZipper_InteractableBase_C_ShouldPrioritizedThanPrepaidSkillCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldPriorirized != nullptr)
		*bShouldPriorirized = Parms.bShouldPriorirized;
}

}


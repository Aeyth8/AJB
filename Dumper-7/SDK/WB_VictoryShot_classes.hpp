#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_VictoryShot

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "AJB_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_VictoryShot.WB_VictoryShot_C
// 0x0128 (0x03E8 - 0x02C0)
class UWB_VictoryShot_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_StartFinishPhase;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_StartShotPhase;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_0;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_1;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_2;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_0;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_finishTakePictureText;                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AJBTextBlock_GuidText;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ShopExchangeFlowroot;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ShotMessageRoot;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          Text_Copyright;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VictoryShot_finishTextBar;                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VictoryShot_TextBar;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VictoryShot_TitleBar;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ExchangeScoreBoard_C*               WB_ExchangeScoreBoard;                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GameModeView_C*                     WB_GameModeView;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_RadioChat_C*                        WB_RadioChat;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VictoryShotCameraFlash_C*           WB_VictoryShotCameraFlash;                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VictoryShotCameraGuide_C*           WB_VictoryShotCameraGuide;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VictoryShotCameraReticle_C*         WB_VictoryShotCameraReticle;                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VictoryShotCustomizeSelecter_C*     WB_VictoryShotCustomizeSelecter_Filter;            // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VictoryShotResult_C*                WB_VictoryShotResult;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   FlowStep;                                          // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAJBPadIconType                               PadType;                                           // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PosingTime;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShotTime;                                          // 0x0390(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinishTime;                                        // 0x0394(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnTimeupPosingDispatcher;                          // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnTimeupShotDispatcher;                            // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnTimeupVictoryShotDispatcher;                     // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnFinishedFlashAnimDispatcher;                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bPlayFlash;                                        // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUploadSuccess;                                    // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_VictoryShot(int32 EntryPoint);
	void OnDecidedFilterR(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnDecidedFilterL(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void PlayFlashFadeIn();
	void OnSwitchFlowStep();
	void OnFinishFlashAnim();
	void PlayFlashAnimation();
	void Construct();
	void ResetStepDispatcherDoOnce();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnOpeningWindow();
	void OnClosingWindow();
	void UIMode_ResultOnly();
	void ChangeFlowStep(class FName NextFlowStep);
	void UpdateCountDownTimer(float Delta, float MaxTime, bool* bZero);
	void SetUploadedResult(bool bUploadSuccess_0);
	class FText GetVictoryShotText();
	void ChangeFilter(int32 Value);
	bool OnInputTurnRate(float Value);
	bool OnInputReleasedUp();
	bool OnInputReleasedTouch();
	bool OnInputReleasedRight();
	bool OnInputReleasedR2();
	bool OnInputReleasedR1();
	bool OnInputReleasedLeft();
	bool OnInputReleasedL3();
	bool OnInputReleasedL2();
	bool OnInputReleasedL1();
	bool OnInputReleasedDown();
	bool OnInputReleasedDecide();
	bool OnInputReleasedCancel();
	bool OnInputPressedUp();
	bool OnInputPressedTouch(const float LocationX, const float LocationY);
	bool OnInputPressedRight();
	bool OnInputPressedR2();
	bool OnInputPressedR1();
	bool OnInputPressedLeft();
	bool OnInputPressedL3();
	bool OnInputPressedL2();
	bool OnInputPressedL1();
	bool OnInputPressedDown();
	bool OnInputPressedDecide();
	bool OnInputPressedCancel();
	bool OnInputMoveRight(float Value);
	bool OnInputMoveForward(float Value);
	bool OnInputLookupRate(float Value);
	bool IsModeless();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_VictoryShot_C">();
	}
	static class UWB_VictoryShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_VictoryShot_C>();
	}
};
static_assert(alignof(UWB_VictoryShot_C) == 0x000008, "Wrong alignment on UWB_VictoryShot_C");
static_assert(sizeof(UWB_VictoryShot_C) == 0x0003E8, "Wrong size on UWB_VictoryShot_C");
static_assert(offsetof(UWB_VictoryShot_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_VictoryShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, Anim_StartFinishPhase) == 0x0002C8, "Member 'UWB_VictoryShot_C::Anim_StartFinishPhase' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, Anim_StartShotPhase) == 0x0002D0, "Member 'UWB_VictoryShot_C::Anim_StartShotPhase' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, Anim_Appear) == 0x0002D8, "Member 'UWB_VictoryShot_C::Anim_Appear' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBImage_0) == 0x0002E0, "Member 'UWB_VictoryShot_C::AJBImage_0' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBImage_1) == 0x0002E8, "Member 'UWB_VictoryShot_C::AJBImage_1' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBImage_2) == 0x0002F0, "Member 'UWB_VictoryShot_C::AJBImage_2' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBTextBlock_0) == 0x0002F8, "Member 'UWB_VictoryShot_C::AJBTextBlock_0' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBTextBlock_finishTakePictureText) == 0x000300, "Member 'UWB_VictoryShot_C::AJBTextBlock_finishTakePictureText' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, AJBTextBlock_GuidText) == 0x000308, "Member 'UWB_VictoryShot_C::AJBTextBlock_GuidText' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, ShopExchangeFlowroot) == 0x000310, "Member 'UWB_VictoryShot_C::ShopExchangeFlowroot' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, ShotMessageRoot) == 0x000318, "Member 'UWB_VictoryShot_C::ShotMessageRoot' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, Text_Copyright) == 0x000320, "Member 'UWB_VictoryShot_C::Text_Copyright' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, VictoryShot_finishTextBar) == 0x000328, "Member 'UWB_VictoryShot_C::VictoryShot_finishTextBar' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, VictoryShot_TextBar) == 0x000330, "Member 'UWB_VictoryShot_C::VictoryShot_TextBar' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, VictoryShot_TitleBar) == 0x000338, "Member 'UWB_VictoryShot_C::VictoryShot_TitleBar' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_ExchangeScoreBoard) == 0x000340, "Member 'UWB_VictoryShot_C::WB_ExchangeScoreBoard' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_GameModeView) == 0x000348, "Member 'UWB_VictoryShot_C::WB_GameModeView' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_RadioChat) == 0x000350, "Member 'UWB_VictoryShot_C::WB_RadioChat' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_VictoryShotCameraFlash) == 0x000358, "Member 'UWB_VictoryShot_C::WB_VictoryShotCameraFlash' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_VictoryShotCameraGuide) == 0x000360, "Member 'UWB_VictoryShot_C::WB_VictoryShotCameraGuide' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_VictoryShotCameraReticle) == 0x000368, "Member 'UWB_VictoryShot_C::WB_VictoryShotCameraReticle' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_VictoryShotCustomizeSelecter_Filter) == 0x000370, "Member 'UWB_VictoryShot_C::WB_VictoryShotCustomizeSelecter_Filter' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, WB_VictoryShotResult) == 0x000378, "Member 'UWB_VictoryShot_C::WB_VictoryShotResult' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, FlowStep) == 0x000380, "Member 'UWB_VictoryShot_C::FlowStep' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, PadType) == 0x000388, "Member 'UWB_VictoryShot_C::PadType' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, PosingTime) == 0x00038C, "Member 'UWB_VictoryShot_C::PosingTime' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, ShotTime) == 0x000390, "Member 'UWB_VictoryShot_C::ShotTime' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, FinishTime) == 0x000394, "Member 'UWB_VictoryShot_C::FinishTime' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, CurrentTime) == 0x000398, "Member 'UWB_VictoryShot_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, OnTimeupPosingDispatcher) == 0x0003A0, "Member 'UWB_VictoryShot_C::OnTimeupPosingDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, OnTimeupShotDispatcher) == 0x0003B0, "Member 'UWB_VictoryShot_C::OnTimeupShotDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, OnTimeupVictoryShotDispatcher) == 0x0003C0, "Member 'UWB_VictoryShot_C::OnTimeupVictoryShotDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, OnFinishedFlashAnimDispatcher) == 0x0003D0, "Member 'UWB_VictoryShot_C::OnFinishedFlashAnimDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, bPlayFlash) == 0x0003E0, "Member 'UWB_VictoryShot_C::bPlayFlash' has a wrong offset!");
static_assert(offsetof(UWB_VictoryShot_C, bUploadSuccess) == 0x0003E1, "Member 'UWB_VictoryShot_C::bUploadSuccess' has a wrong offset!");

}


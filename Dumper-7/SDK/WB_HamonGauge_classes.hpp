#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_HamonGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_HamonGauge.WB_HamonGauge_C
// 0x00D8 (0x02E0 - 0x0208)
class UWB_HamonGauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Success_2;                                         // 0x0210(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Success_1;                                         // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       HamonEnd;                                          // 0x0220(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       HamonStart;                                        // 0x0228(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BarRoot;                                           // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EffectRoot;                                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              img_Aura;                                          // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Bar_v2;                                        // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Button;                                        // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect1_v2;                                    // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Effect2_v2;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Gauge;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Gauge_v2;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_GaugeAura_v2;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Pointer01_v2;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Pointer02_v2;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              Img_Wave;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Pointer;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Wave;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Gauge;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Aura;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisibilityValid;                                  // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VisibilityTimeAfterSkillInactive;                  // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed_In;                                    // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed_Out;                                   // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentOpacity;                                    // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               TargetUICharacter;                                 // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_HamonGauge(int32 EntryPoint);
	void Initialize(class ABP_AJBInGameCharacter_C* TargetUICharacter_0);
	void OnSkillStarted();
	void OnDecideResult(uint8 Result, float StateTimeRatio);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PlayEndAnimation();
	void PlayStartAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_HamonGauge_C">();
	}
	static class UWB_HamonGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_HamonGauge_C>();
	}
};
static_assert(alignof(UWB_HamonGauge_C) == 0x000008, "Wrong alignment on UWB_HamonGauge_C");
static_assert(sizeof(UWB_HamonGauge_C) == 0x0002E0, "Wrong size on UWB_HamonGauge_C");
static_assert(offsetof(UWB_HamonGauge_C, UberGraphFrame) == 0x000208, "Member 'UWB_HamonGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Success_2) == 0x000210, "Member 'UWB_HamonGauge_C::Success_2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Success_1) == 0x000218, "Member 'UWB_HamonGauge_C::Success_1' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, HamonEnd) == 0x000220, "Member 'UWB_HamonGauge_C::HamonEnd' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, HamonStart) == 0x000228, "Member 'UWB_HamonGauge_C::HamonStart' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, BarRoot) == 0x000230, "Member 'UWB_HamonGauge_C::BarRoot' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, CanvasPanel_0) == 0x000238, "Member 'UWB_HamonGauge_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, EffectRoot) == 0x000240, "Member 'UWB_HamonGauge_C::EffectRoot' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, img_Aura) == 0x000248, "Member 'UWB_HamonGauge_C::img_Aura' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Bar_v2) == 0x000250, "Member 'UWB_HamonGauge_C::Img_Bar_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Button) == 0x000258, "Member 'UWB_HamonGauge_C::Img_Button' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Effect1_v2) == 0x000260, "Member 'UWB_HamonGauge_C::Img_Effect1_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Effect2_v2) == 0x000268, "Member 'UWB_HamonGauge_C::Img_Effect2_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Gauge) == 0x000270, "Member 'UWB_HamonGauge_C::Img_Gauge' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Gauge_v2) == 0x000278, "Member 'UWB_HamonGauge_C::Img_Gauge_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_GaugeAura_v2) == 0x000280, "Member 'UWB_HamonGauge_C::Img_GaugeAura_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Pointer01_v2) == 0x000288, "Member 'UWB_HamonGauge_C::Img_Pointer01_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Pointer02_v2) == 0x000290, "Member 'UWB_HamonGauge_C::Img_Pointer02_v2' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, Img_Wave) == 0x000298, "Member 'UWB_HamonGauge_C::Img_Wave' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, WidgetSwitcher_Pointer) == 0x0002A0, "Member 'UWB_HamonGauge_C::WidgetSwitcher_Pointer' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, DMI_Wave) == 0x0002A8, "Member 'UWB_HamonGauge_C::DMI_Wave' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, DMI_Gauge) == 0x0002B0, "Member 'UWB_HamonGauge_C::DMI_Gauge' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, DMI_Aura) == 0x0002B8, "Member 'UWB_HamonGauge_C::DMI_Aura' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, ElapsedTime) == 0x0002C0, "Member 'UWB_HamonGauge_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, bVisibilityValid) == 0x0002C4, "Member 'UWB_HamonGauge_C::bVisibilityValid' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, VisibilityTimeAfterSkillInactive) == 0x0002C8, "Member 'UWB_HamonGauge_C::VisibilityTimeAfterSkillInactive' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, InterpSpeed_In) == 0x0002CC, "Member 'UWB_HamonGauge_C::InterpSpeed_In' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, InterpSpeed_Out) == 0x0002D0, "Member 'UWB_HamonGauge_C::InterpSpeed_Out' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, CurrentOpacity) == 0x0002D4, "Member 'UWB_HamonGauge_C::CurrentOpacity' has a wrong offset!");
static_assert(offsetof(UWB_HamonGauge_C, TargetUICharacter) == 0x0002D8, "Member 'UWB_HamonGauge_C::TargetUICharacter' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBMovement_Paramed

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ExecuteUbergraph_BTS_AJBMovement_Paramed
// 0x0338 (0x0338 - 0x0000)
struct BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinite_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue1;  // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventTagLocker*                        CallFunc_SpawnEventTagLocker_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetInteractActor_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBGate_C*                          K2Node_DynamicCast_AsBP_AJBGate;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_IsHitSomethingForDestination_ReturnValue; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_AI_IsHitSomethingForDestination_DestinationOut; // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBodyJumpHeight_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_IsHitSomethingForDestination_ReturnValue1; // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_AI_IsHitSomethingForDestination_DestinationOut1; // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_FindVacantDirectionAround_ReturnValue; // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_FindVacantDirectionAround_Found;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AI_VectorDiffSq_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue; // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController2;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn2;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController1;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn1;                      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawDiffNormalizedDefault_ReturnValue;  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IfDebugDrawOnTask_ReturnValue;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBInGameAIRecognition_C*           CallFunc_GetRecognition_ReturnValue;               // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBInGameAIInputProxy_C*            CallFunc_GetInput_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_LookAtTargetActor;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchDiffNormalizedLookAtTarget_ReturnValue; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawDiffNormalizedLookAtTarget_ReturnValue; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue2;  // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchDiffNormalizedLookAtDir_ReturnValue; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue3;  // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawDiffNormalizedLookAtDir_ReturnValue; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchDiffNormalizedForward_ReturnValue; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue4;  // 0x01A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue1;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue2;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C3[0x5];                                      // 0x01C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventTagLocker*                        CallFunc_SpawnEventTagLocker_ReturnValue1;         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue3;            // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue4;            // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue5;            // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchDiffNormalizedForward_ReturnValue1; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatParam_ReturnValue;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatParam_Found;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatParam_ReturnValue1;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatParam_Found1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue3;                      // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue4;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue5;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue6;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraTurnDegreeToInputScale_ReturnValue; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraLookUpDegreeToInputScale_ReturnValue; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidVectorValue_ReturnValue;           // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameAIImaginaryCharacter_C*    CallFunc_GetControllingImaginaryCharacter_ReturnValue; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocation_ReturnValue;                  // 0x0240(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x024C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndoor_ReturnValue;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotation_ReturnValue;                  // 0x025C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0268(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue1; // 0x0274(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0280(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue2;       // 0x028C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue2; // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue2;                      // 0x02B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue3;       // 0x02C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue3; // 0x02D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue3;                      // 0x02E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X3;                           // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1; // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidAILocation_ReturnValue;            // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue6;            // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Temp_struct_Variable;                              // 0x0304(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventTagLocked_ReturnValue7;            // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidVectorValue_ReturnValue1;          // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316[0x2];                                      // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasDestinationToGo_ReturnValue;           // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select1_Default;                            // 0x0328(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed) == 0x000338, "Wrong size on BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, EntryPoint) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000004, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_MakeRotFromX_ReturnValue) == 0x000010, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsFinite_ReturnValue) == 0x000028, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsFinite_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_VSizeXY_ReturnValue) == 0x00002C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsVector_ReturnValue1) == 0x000034, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_RotateAngleAxis_ReturnValue) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_RandomFloatInRange_ReturnValue) == 0x00004C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000050, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue) == 0x000054, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_SpawnEventTagLocker_ReturnValue) == 0x000058, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_SpawnEventTagLocker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000060, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetInteractActor_ReturnValue) == 0x000068, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetInteractActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_DynamicCast_AsBP_AJBGate) == 0x000070, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_DynamicCast_AsBP_AJBGate' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_IsHitSomethingForDestination_ReturnValue) == 0x000094, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_IsHitSomethingForDestination_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_IsHitSomethingForDestination_DestinationOut) == 0x000098, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_IsHitSomethingForDestination_DestinationOut' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBodyJumpHeight_ReturnValue) == 0x0000A4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBodyJumpHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_IsHitSomethingForDestination_ReturnValue1) == 0x0000B4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_IsHitSomethingForDestination_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_IsHitSomethingForDestination_DestinationOut1) == 0x0000B8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_IsHitSomethingForDestination_DestinationOut1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_FindVacantDirectionAround_ReturnValue) == 0x0000C4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_FindVacantDirectionAround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_FindVacantDirectionAround_Found) == 0x0000D0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_FindVacantDirectionAround_Found' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_VectorDiffSq_ReturnValue) == 0x0000D4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_VectorDiffSq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue) == 0x0000D8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0000E4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Normal_ReturnValue) == 0x0000E8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_X) == 0x0000F4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Z) == 0x0000FC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x000101, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanAND_ReturnValue) == 0x000102, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_OwnerController2) == 0x000108, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_OwnerController2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_ControlledPawn2) == 0x000110, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_ControlledPawn2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_DeltaSeconds) == 0x000118, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_OwnerController1) == 0x000120, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_OwnerController1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_ControlledPawn1) == 0x000128, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_ControlledPawn1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetYawDiffNormalizedDefault_ReturnValue) == 0x000130, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetYawDiffNormalizedDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IfDebugDrawOnTask_ReturnValue) == 0x000134, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IfDebugDrawOnTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Abs_ReturnValue) == 0x000138, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetRecognition_ReturnValue) == 0x000140, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetRecognition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetInput_ReturnValue) == 0x000148, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x000150, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue) == 0x000158, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetRawActorFromBlackboardCharacterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_CustomEvent_LookAtTargetActor) == 0x000160, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_CustomEvent_LookAtTargetActor' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetPitchDiffNormalizedLookAtTarget_ReturnValue) == 0x000168, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetPitchDiffNormalizedLookAtTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetYawDiffNormalizedLookAtTarget_ReturnValue) == 0x00016C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetYawDiffNormalizedLookAtTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsVector_ReturnValue2) == 0x000174, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetPitchDiffNormalizedLookAtDir_ReturnValue) == 0x000180, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetPitchDiffNormalizedLookAtDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsVector_ReturnValue3) == 0x000184, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetYawDiffNormalizedLookAtDir_ReturnValue) == 0x000190, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetYawDiffNormalizedLookAtDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000194, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000198, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetPitchDiffNormalizedForward_ReturnValue) == 0x00019C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetPitchDiffNormalizedForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboardValueAsVector_ReturnValue4) == 0x0001A0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboardValueAsVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_OwnerController) == 0x0001B0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Event_ControlledPawn) == 0x0001B8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue1) == 0x0001C0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue2) == 0x0001C1, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Has_Been_Initd_Variable) == 0x0001C2, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_SpawnEventTagLocker_ReturnValue1) == 0x0001C8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_SpawnEventTagLocker_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Has_Been_Initd_Variable1) == 0x0001D0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_IsClosed_Variable) == 0x0001D1, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue3) == 0x0001D2, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_IsClosed_Variable1) == 0x0001D3, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Variable) == 0x0001D4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue4) == 0x0001D5, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue5) == 0x0001D6, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001D8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0001DC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0001E0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue) == 0x0001E4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Select_Default) == 0x0001E8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue1) == 0x0001EC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0001F0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetPitchDiffNormalizedForward_ReturnValue1) == 0x0001F4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetPitchDiffNormalizedForward_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue2) == 0x0001F8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetFloatParam_ReturnValue) == 0x0001FC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetFloatParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetFloatParam_Found) == 0x000200, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetFloatParam_Found' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetFloatParam_ReturnValue1) == 0x000204, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetFloatParam_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetFloatParam_Found1) == 0x000208, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetFloatParam_Found1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x00020C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000210, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue3) == 0x000214, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue4) == 0x000218, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x00021C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x000220, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue5) == 0x000224, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_FClamp_ReturnValue6) == 0x000228, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_FClamp_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetCameraTurnDegreeToInputScale_ReturnValue) == 0x00022C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetCameraTurnDegreeToInputScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetCameraLookUpDegreeToInputScale_ReturnValue) == 0x000230, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetCameraLookUpDegreeToInputScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsValidVectorValue_ReturnValue) == 0x000234, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsValidVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetControllingImaginaryCharacter_ReturnValue) == 0x000238, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetControllingImaginaryCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetLocation_ReturnValue) == 0x000240, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetForwardVector_ReturnValue) == 0x00024C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsIndoor_ReturnValue) == 0x000258, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsIndoor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetRotation_ReturnValue) == 0x00025C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000268, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue1) == 0x000274, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Normal_ReturnValue1) == 0x000280, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Subtract_VectorVector_ReturnValue2) == 0x00028C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Subtract_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_X1) == 0x000298, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Y1) == 0x00029C, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Z1) == 0x0002A0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue2) == 0x0002A4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Normal_ReturnValue2) == 0x0002B0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Normal_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_X2) == 0x0002BC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Y2) == 0x0002C0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Z2) == 0x0002C4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Subtract_VectorVector_ReturnValue3) == 0x0002C8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Subtract_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue3) == 0x0002D4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_AI_ProjectVectorOnCharacterForwardRightZero_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Normal_ReturnValue3) == 0x0002E0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Normal_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_X3) == 0x0002EC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Y3) == 0x0002F0, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BreakVector_Z3) == 0x0002F4, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Less_FloatFloat_ReturnValue2) == 0x0002F8, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_SelectFloat_ReturnValue) == 0x0002FC, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1) == 0x000300, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Has_Been_Initd_Variable2) == 0x000301, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsValidAILocation_ReturnValue) == 0x000302, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsValidAILocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue6) == 0x000303, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_struct_Variable) == 0x000304, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanOR_ReturnValue) == 0x000310, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanAND_ReturnValue1) == 0x000311, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsEventTagLocked_ReturnValue7) == 0x000312, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsEventTagLocked_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanOR_ReturnValue1) == 0x000313, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_IsValidVectorValue_ReturnValue1) == 0x000314, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_IsValidVectorValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanAND_ReturnValue2) == 0x000315, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_GetBlackboard_ReturnValue) == 0x000318, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_IsClosed_Variable2) == 0x000320, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_HasDestinationToGo_ReturnValue) == 0x000321, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_HasDestinationToGo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_Not_PreBool_ReturnValue) == 0x000322, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, CallFunc_BooleanOR_ReturnValue2) == 0x000323, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, Temp_bool_Variable1) == 0x000324, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed, K2Node_Select1_Default) == 0x000328, "Member 'BTS_AJBMovement_Paramed_C_ExecuteUbergraph_BTS_AJBMovement_Paramed::K2Node_Select1_Default' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.InputMovementLookingAtTarget
// 0x0008 (0x0008 - 0x0000)
struct BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget final
{
public:
	class AActor*                                 LookAtTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget) == 0x000008, "Wrong size on BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget, LookAtTargetActor) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_InputMovementLookingAtTarget::LookAtTargetActor' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_AJBMovement_Paramed_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_ReceiveActivationAI");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_AJBMovement_Paramed_C_ReceiveActivationAI");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_AJBMovement_Paramed_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_ReceiveTickAI");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_AJBMovement_Paramed_C_ReceiveTickAI");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_AJBMovement_Paramed_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedDefault
// 0x0068 (0x0068 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault final
{
public:
	struct FBlackboardKeySelector                 DestinationKey;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault) == 0x000068, "Wrong size on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, DestinationKey) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::DestinationKey' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, ReturnValue) == 0x000028, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x00002C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_FindLookAtRotation_ReturnValue) == 0x000044, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Roll1) == 0x000050, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Pitch1) == 0x000054, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_BreakRotator_Yaw1) == 0x000058, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault, CallFunc_NormalizeAxis_ReturnValue) == 0x000060, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedDefault::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedLookAtTarget
// 0x0048 (0x0048 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget final
{
public:
	class AActor*                                 LookAtTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget) == 0x000048, "Wrong size on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, LookAtTargetActor) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::LookAtTargetActor' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, ReturnValue) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000024, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Roll1) == 0x000030, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Pitch1) == 0x000034, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Yaw1) == 0x000038, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget, CallFunc_NormalizeAxis_ReturnValue) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtTarget::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetYawDiffNormalizedLookAtDir
// 0x0068 (0x0068 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir final
{
public:
	struct FBlackboardKeySelector                 LookAtDirKey;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0044(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir) == 0x000068, "Wrong size on BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, LookAtDirKey) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::LookAtDirKey' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, ReturnValue) == 0x000028, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x00002C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_MakeRotFromX_ReturnValue) == 0x000044, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Roll1) == 0x000050, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Pitch1) == 0x000054, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_BreakRotator_Yaw1) == 0x000058, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir, CallFunc_NormalizeAxis_ReturnValue) == 0x000060, "Member 'BTS_AJBMovement_Paramed_C_GetYawDiffNormalizedLookAtDir::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedForward
// 0x0058 (0x0058 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0034(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward) == 0x000004, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward) == 0x000058, "Wrong size on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, ReturnValue) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakVector_X) == 0x000010, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakVector_Y) == 0x000014, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakVector_Z) == 0x000018, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_FindLookAtRotation_ReturnValue) == 0x000034, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Roll1) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Pitch1) == 0x000044, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_BreakRotator_Yaw1) == 0x000048, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_ClampAngle_ReturnValue) == 0x00004C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward, CallFunc_NormalizeAxis_ReturnValue) == 0x000054, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedForward::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedLookAtTarget
// 0x0050 (0x0050 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget final
{
public:
	class AActor*                                 LookAtTargetActor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget) == 0x000050, "Wrong size on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, LookAtTargetActor) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::LookAtTargetActor' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, ReturnValue) == 0x000008, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000024, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Roll1) == 0x000030, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Pitch1) == 0x000034, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_BreakRotator_Yaw1) == 0x000038, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_ClampAngle_ReturnValue) == 0x000040, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget, CallFunc_NormalizeAxis_ReturnValue) == 0x000048, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtTarget::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

// Function BTS_AJBMovement_Paramed.BTS_AJBMovement_Paramed_C.GetPitchDiffNormalizedLookAtDir
// 0x0068 (0x0068 - 0x0000)
struct BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir final
{
public:
	struct FBlackboardKeySelector                 LookAtDirKey;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0038(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir) == 0x000008, "Wrong alignment on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir");
static_assert(sizeof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir) == 0x000068, "Wrong size on BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, LookAtDirKey) == 0x000000, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::LookAtDirKey' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, ReturnValue) == 0x000028, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x00002C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_MakeRotFromX_ReturnValue) == 0x000038, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Roll1) == 0x000050, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Pitch1) == 0x000054, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_BreakRotator_Yaw1) == 0x000058, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_ClampAngle_ReturnValue) == 0x00005C, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000060, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir, CallFunc_NormalizeAxis_ReturnValue) == 0x000064, "Member 'BTS_AJBMovement_Paramed_C_GetPitchDiffNormalizedLookAtDir::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");

}


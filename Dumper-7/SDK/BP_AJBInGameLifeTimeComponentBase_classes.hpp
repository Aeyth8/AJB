#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameLifeTimeComponentBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBInGameLifeTimeComponentBase.BP_AJBInGameLifeTimeComponentBase_C
// 0x0018 (0x0108 - 0x00F0)
class UBP_AJBInGameLifeTimeComponentBase_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         LifeTime;                                          // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevTime;                                          // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingLifeTime;                                 // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBInGameLifeTimeComponentBase(int32 EntryPoint);
	void OnDeactivated(class UActorComponent* Component);
	void OnLifeTimeExpired();
	void ReceiveTick(float DeltaSeconds);
	void OnActivated(class UActorComponent* Component, bool bReset);
	void ReceiveBeginPlay();
	void GetElapsedTimeInGame(float* ElapsedTime);
	void SetLifeTime(float LifeTime_0);
	void UpdateRemainingTime();
	void ResetRemainingLifeTime();
	void GetRemainingLifeTime(float* RemainingLifeTime_0);
	void HasLifeTimeExpired(bool* HasExpired);
	void IsBlockedToExpiredEvent(bool* IsBlocked);
	void IsTimerPaused(bool* IsPaused);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBInGameLifeTimeComponentBase_C">();
	}
	static class UBP_AJBInGameLifeTimeComponentBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBInGameLifeTimeComponentBase_C>();
	}
};
static_assert(alignof(UBP_AJBInGameLifeTimeComponentBase_C) == 0x000008, "Wrong alignment on UBP_AJBInGameLifeTimeComponentBase_C");
static_assert(sizeof(UBP_AJBInGameLifeTimeComponentBase_C) == 0x000108, "Wrong size on UBP_AJBInGameLifeTimeComponentBase_C");
static_assert(offsetof(UBP_AJBInGameLifeTimeComponentBase_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBInGameLifeTimeComponentBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTimeComponentBase_C, LifeTime) == 0x0000F8, "Member 'UBP_AJBInGameLifeTimeComponentBase_C::LifeTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTimeComponentBase_C, PrevTime) == 0x0000FC, "Member 'UBP_AJBInGameLifeTimeComponentBase_C::PrevTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBInGameLifeTimeComponentBase_C, RemainingLifeTime) == 0x000100, "Member 'UBP_AJBInGameLifeTimeComponentBase_C::RemainingLifeTime' has a wrong offset!");

}


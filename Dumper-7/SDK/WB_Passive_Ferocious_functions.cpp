#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Passive_Ferocious

#include "Basic.hpp"

#include "WB_Passive_Ferocious_classes.hpp"
#include "WB_Passive_Ferocious_parameters.hpp"


namespace SDK
{

// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.ExecuteUbergraph_WB_Passive_Ferocious
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Passive_Ferocious_C::ExecuteUbergraph_WB_Passive_Ferocious(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "ExecuteUbergraph_WB_Passive_Ferocious");

	Params::WB_Passive_Ferocious_C_ExecuteUbergraph_WB_Passive_Ferocious Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.ActiveFerociousUI
// (BlueprintCallable, BlueprintEvent)

void UWB_Passive_Ferocious_C::ActiveFerociousUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "ActiveFerociousUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Passive_Ferocious_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "Tick");

	Params::WB_Passive_Ferocious_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.OnRegisterSkillComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWB_Passive_Ferocious_C::OnRegisterSkillComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "OnRegisterSkillComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.OnActiveSkillWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWB_Passive_Ferocious_C::OnActiveSkillWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "OnActiveSkillWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.OnOutsideComponentUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Passive_Ferocious_C::OnOutsideComponentUpdate(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "OnOutsideComponentUpdate");

	Params::WB_Passive_Ferocious_C_OnOutsideComponentUpdate Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Passive_Ferocious.WB_Passive_Ferocious_C.OnInactiveSkillWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWB_Passive_Ferocious_C::OnInactiveSkillWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Passive_Ferocious_C", "OnInactiveSkillWidget");

	UObject::ProcessEvent(Func, nullptr);
}

}


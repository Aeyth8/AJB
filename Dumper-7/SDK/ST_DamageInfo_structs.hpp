#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_DamageInfo

#include "Basic.hpp"

#include "AJB_structs.hpp"


namespace SDK
{

// UserDefinedStruct ST_DamageInfo.ST_DamageInfo
// 0x0003 (0x0003 - 0x0000)
struct FST_DamageInfo final
{
public:
	bool                                          bShouldSpawnDamageParticle_8_853F07C54B6555EBFE225B982797D48D; // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLongRange_7_F121315A4D354B6523C2A4B3E328187A;   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESkillAttackType                              AttackType_12_7DA6D74E448AF79E92FE57A1AD120299;    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FST_DamageInfo) == 0x000001, "Wrong alignment on FST_DamageInfo");
static_assert(sizeof(FST_DamageInfo) == 0x000003, "Wrong size on FST_DamageInfo");
static_assert(offsetof(FST_DamageInfo, bShouldSpawnDamageParticle_8_853F07C54B6555EBFE225B982797D48D) == 0x000000, "Member 'FST_DamageInfo::bShouldSpawnDamageParticle_8_853F07C54B6555EBFE225B982797D48D' has a wrong offset!");
static_assert(offsetof(FST_DamageInfo, bIsLongRange_7_F121315A4D354B6523C2A4B3E328187A) == 0x000001, "Member 'FST_DamageInfo::bIsLongRange_7_F121315A4D354B6523C2A4B3E328187A' has a wrong offset!");
static_assert(offsetof(FST_DamageInfo, AttackType_12_7DA6D74E448AF79E92FE57A1AD120299) == 0x000002, "Member 'FST_DamageInfo::AttackType_12_7DA6D74E448AF79E92FE57A1AD120299' has a wrong offset!");

}


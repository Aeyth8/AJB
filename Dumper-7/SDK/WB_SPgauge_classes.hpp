#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SPgauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_SPgauge.WB_SPgauge_C
// 0x0090 (0x0298 - 0x0208)
class UWB_SPgauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UAJBTextBlock*                          AJBTextBlock_LevelCount;                           // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_0;                                      // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_1;                                      // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_2;                                      // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_3;                                      // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_4;                                      // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_5;                                      // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_6;                                      // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_7;                                      // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_8;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_9;                                      // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPframe_C*                          WB_SPframe_10;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_SPframe_C*>                  WB_SPframes;                                       // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CachedSP;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   GrowupTags;                                        // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WB_SPgauge(int32 EntryPoint);
	void SetupDisplay(class AAJBInGameCharacter* TargetCharacter);
	void UpdateDisplay(class AAJBInGameCharacter* TargetCharacter);
	void Construct();
	void SetAwakingAbilityFrame(int32 TargetIndex, bool bAwakingAbilityIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_SPgauge_C">();
	}
	static class UWB_SPgauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_SPgauge_C>();
	}
};
static_assert(alignof(UWB_SPgauge_C) == 0x000008, "Wrong alignment on UWB_SPgauge_C");
static_assert(sizeof(UWB_SPgauge_C) == 0x000298, "Wrong size on UWB_SPgauge_C");
static_assert(offsetof(UWB_SPgauge_C, UberGraphFrame) == 0x000208, "Member 'UWB_SPgauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, AJBTextBlock_LevelCount) == 0x000210, "Member 'UWB_SPgauge_C::AJBTextBlock_LevelCount' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_0) == 0x000218, "Member 'UWB_SPgauge_C::WB_SPframe_0' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_1) == 0x000220, "Member 'UWB_SPgauge_C::WB_SPframe_1' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_2) == 0x000228, "Member 'UWB_SPgauge_C::WB_SPframe_2' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_3) == 0x000230, "Member 'UWB_SPgauge_C::WB_SPframe_3' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_4) == 0x000238, "Member 'UWB_SPgauge_C::WB_SPframe_4' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_5) == 0x000240, "Member 'UWB_SPgauge_C::WB_SPframe_5' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_6) == 0x000248, "Member 'UWB_SPgauge_C::WB_SPframe_6' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_7) == 0x000250, "Member 'UWB_SPgauge_C::WB_SPframe_7' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_8) == 0x000258, "Member 'UWB_SPgauge_C::WB_SPframe_8' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_9) == 0x000260, "Member 'UWB_SPgauge_C::WB_SPframe_9' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframe_10) == 0x000268, "Member 'UWB_SPgauge_C::WB_SPframe_10' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, WB_SPframes) == 0x000270, "Member 'UWB_SPgauge_C::WB_SPframes' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, CachedSP) == 0x000280, "Member 'UWB_SPgauge_C::CachedSP' has a wrong offset!");
static_assert(offsetof(UWB_SPgauge_C, GrowupTags) == 0x000288, "Member 'UWB_SPgauge_C::GrowupTags' has a wrong offset!");

}


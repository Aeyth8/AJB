#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_HamonTypeSkill

#include "Basic.hpp"

#include "BI_HamonTypeSkill_classes.hpp"
#include "BI_HamonTypeSkill_parameters.hpp"


namespace SDK
{

// Function BI_HamonTypeSkill.BI_HamonTypeSkill_C.IsHamonRateEnabledSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_HamonTypeSkill_C::IsHamonRateEnabledSkill(bool* IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_HamonTypeSkill_C", "IsHamonRateEnabledSkill");

	Params::BI_HamonTypeSkill_C_IsHamonRateEnabledSkill Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function BI_HamonTypeSkill.BI_HamonTypeSkill_C.ShouldApplyHamonRateDirectly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   ShouldApplyDirectly                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_HamonTypeSkill_C::ShouldApplyHamonRateDirectly(bool* ShouldApplyDirectly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_HamonTypeSkill_C", "ShouldApplyHamonRateDirectly");

	Params::BI_HamonTypeSkill_C_ShouldApplyHamonRateDirectly Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ShouldApplyDirectly != nullptr)
		*ShouldApplyDirectly = Parms.ShouldApplyDirectly;
}


// Function BI_HamonTypeSkill.BI_HamonTypeSkill_C.GetVampireDamageRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  VampireDamageRate                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_HamonTypeSkill_C::GetVampireDamageRate(float* VampireDamageRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BI_HamonTypeSkill_C", "GetVampireDamageRate");

	Params::BI_HamonTypeSkill_C_GetVampireDamageRate Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (VampireDamageRate != nullptr)
		*VampireDamageRate = Parms.VampireDamageRate;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBPlacementSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBPlacementSkill.BP_AJBPlacementSkill_C
// 0x0138 (0x0320 - 0x01E8)
#pragma pack(push, 0x1)
class alignas(0x10) UBP_AJBPlacementSkill_C : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBPlacementSkill_C;             // 0x01E8(0x0008)(Transient, DuplicateTransient)
	bool                                          bReservedPlacement;                                // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCompletedPlacement;                               // 0x01F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReserveAction;                                    // 0x01F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PreviewObject;                                     // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AJBPlacementBase_C*>         Rep_SpawnedObjectList;                             // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UClass*                                 SpawnPreviewClass;                                 // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnObjectClass;                                  // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ActionMontage;                                     // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceDistance_cm_;                                 // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceStartDistanceFromCamera_cm_;                  // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceDistanceOnGravityLoad_cm_;                    // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceDistanceOnSeparate_cm_;                       // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceRadius;                                       // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPossiblePlacement;                                // 0x023C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PlacementTransform;                                // 0x0240(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         DefaultPlacementLimit;                             // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlacementDelayTime;                                // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      TraceObjectTypes;                                  // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         TotalPlacementLimit;                               // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PlacementVoiceTag;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   EndBlockerTag;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor_Local_;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseIncreaseProcessAsSettingNum;                   // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         DangerousActorClassList;                           // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                         ExclusionHitActorClassList;                        // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bHidePreviewGuideOnSpawn;                          // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDuringSpawnOnOwner;                               // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugShowPlacementCollision;                      // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCheckStateOnHidePreviewGuide;                     // 0x02D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInterpPreview;                                    // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0xB];                                      // 0x02D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PlacementTransformCache;                           // 0x02E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         InterpPreviewSpeed;                                // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBPlacementSkill(int32 EntryPoint);
	void OnCheckSpawnObjectServer(const struct FTransform& Transform, class AActor* TargetActor);
	void OnSpawnObject(bool bPlacement, class AActor* Actor);
	void MC_SpawnObject(bool bPlacement, class AActor* Target);
	void OnReadyToDestroy(class ABP_AJBPlacementBase_C* SelfObject);
	void ClearingOldObject();
	void SpawnNewObject(const struct FTransform& Transform, class AActor* TargetActor);
	void ROS_SpawnObject(const struct FTransform& Transform, class AActor* TargetActor);
	void SpawnObject();
	void DestroyPreviewObject_Local(bool bHidePreviewGuide);
	void SpawnPreviewObject_Local();
	void OnStateEnd(bool bCancel);
	void MC_StateEnd(bool bCancel);
	void ROS_StateEnd(bool bCancel);
	void MC_BeginState_Action();
	void ROS_BeginState_Action();
	void BeginState_ActionCore();
	void StateEnd_Local(bool bCancel);
	void TickState_Action();
	void TickState_Ready(float DeltaSeconds);
	void StateTick(float DeltaSeconds);
	void BeginState_Action();
	void BeginState_Ready();
	void OnCompleted_7B45FB9D406D5826C78546BC397EB84D(class FName NotifyName);
	void OnBlendOut_7B45FB9D406D5826C78546BC397EB84D(class FName NotifyName);
	void OnInterrupted_7B45FB9D406D5826C78546BC397EB84D(class FName NotifyName);
	void OnNotifyBegin_7B45FB9D406D5826C78546BC397EB84D(class FName NotifyName);
	void OnNotifyEnd_7B45FB9D406D5826C78546BC397EB84D(class FName NotifyName);
	void ReserveAction();
	void TraceObjectTransform(bool* bPossiblePlacement_0, struct FTransform* Transform, class AActor** TargetActor);
	void GetTraceInfo(bool SkipAutoPlayTestModeCheck, bool* bTracable, struct FVector* TraceStartLocation, struct FVector* TraceEndLocation);
	void UpdateTraceInfo();
	void ApplyTraceInfo(float DeltaSeconds);
	void IncreasePlacementLimit(int32 Value);
	void CheckArriveLimit(bool* bArriveLimit);
	void CalcValidatedObjectNum(int32* Num);
	void CalcMostOldestObject(class AActor** Object);
	void ChangePreviewUI(bool bPossiblePlacement_0);
	void SpawnObjectCore(const struct FTransform& SpawnTransform, class ABP_AJBPlacementBase_C** SpawnObject);
	void SpawnPreviewObjectCore(class AActor** SpawnObject);
	void TryDestroyPreviewObject();
	void AddToObjectList(class AActor* TargetActor);
	void TryClearingPlacement_Server_(class UObject* Object);
	void TryToSpeakPlacementVoice();
	void GetInteractionActorLocation(bool* bSuccess, struct FVector* InteractionActorLocation);
	void CheckActionStateEnd(bool* bActionStateEnd);
	void CheckCharacterCondition(class ABP_AJBInGameCharacter_C* CharacterBP, bool* bIgnore);
	void CheckHitAround(const struct FTransform& Transform, bool* bRecognize);
	void GetPlacementVectorValue(class FName ElementName, class FName ValueName, bool* bSuccess, struct FVector* Value);
	void CheckHitActorClass(class AActor* Actor, TArray<class UClass*>& Array, bool* bRecognize);
	void CheckDuringSpawnOnOwner(bool* bDuringSpawn);
	void DecreasePlacementLimit(int32 Value);
	void ChangeVisual();
	void CalcTraceDistance(bool bGravityLoad, bool bSeparate, float* TraceDistance);
	void OnDisconnected();
	void ReceiveBeginPlay();
	void OnCancel();
	void OnActive();
	void OnInactive();
	void OnReady();
	void ReceiveTick(float DeltaSeconds);
	void Increase_Local(int32 Num);
	void InitializeVariables();
	bool CheckSkillAction();
	void Increase_Server(int32 Num);
	void Decrease_Server(int32 Num);
	void Decrease_Local(int32 Num);

	bool IsInPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBPlacementSkill_C">();
	}
	static class UBP_AJBPlacementSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBPlacementSkill_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_AJBPlacementSkill_C) == 0x000010, "Wrong alignment on UBP_AJBPlacementSkill_C");
static_assert(sizeof(UBP_AJBPlacementSkill_C) == 0x000320, "Wrong size on UBP_AJBPlacementSkill_C");
static_assert(offsetof(UBP_AJBPlacementSkill_C, UberGraphFrame_BP_AJBPlacementSkill_C) == 0x0001E8, "Member 'UBP_AJBPlacementSkill_C::UberGraphFrame_BP_AJBPlacementSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bReservedPlacement) == 0x0001F0, "Member 'UBP_AJBPlacementSkill_C::bReservedPlacement' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bCompletedPlacement) == 0x0001F1, "Member 'UBP_AJBPlacementSkill_C::bCompletedPlacement' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bReserveAction) == 0x0001F2, "Member 'UBP_AJBPlacementSkill_C::bReserveAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, PreviewObject) == 0x0001F8, "Member 'UBP_AJBPlacementSkill_C::PreviewObject' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, Rep_SpawnedObjectList) == 0x000200, "Member 'UBP_AJBPlacementSkill_C::Rep_SpawnedObjectList' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, SpawnPreviewClass) == 0x000210, "Member 'UBP_AJBPlacementSkill_C::SpawnPreviewClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, SpawnObjectClass) == 0x000218, "Member 'UBP_AJBPlacementSkill_C::SpawnObjectClass' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, ActionMontage) == 0x000220, "Member 'UBP_AJBPlacementSkill_C::ActionMontage' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceDistance_cm_) == 0x000228, "Member 'UBP_AJBPlacementSkill_C::TraceDistance_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceStartDistanceFromCamera_cm_) == 0x00022C, "Member 'UBP_AJBPlacementSkill_C::TraceStartDistanceFromCamera_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceDistanceOnGravityLoad_cm_) == 0x000230, "Member 'UBP_AJBPlacementSkill_C::TraceDistanceOnGravityLoad_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceDistanceOnSeparate_cm_) == 0x000234, "Member 'UBP_AJBPlacementSkill_C::TraceDistanceOnSeparate_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceRadius) == 0x000238, "Member 'UBP_AJBPlacementSkill_C::TraceRadius' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bPossiblePlacement) == 0x00023C, "Member 'UBP_AJBPlacementSkill_C::bPossiblePlacement' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, PlacementTransform) == 0x000240, "Member 'UBP_AJBPlacementSkill_C::PlacementTransform' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, DefaultPlacementLimit) == 0x000270, "Member 'UBP_AJBPlacementSkill_C::DefaultPlacementLimit' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, PlacementDelayTime) == 0x000274, "Member 'UBP_AJBPlacementSkill_C::PlacementDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TraceObjectTypes) == 0x000278, "Member 'UBP_AJBPlacementSkill_C::TraceObjectTypes' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TotalPlacementLimit) == 0x000288, "Member 'UBP_AJBPlacementSkill_C::TotalPlacementLimit' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, PlacementVoiceTag) == 0x000290, "Member 'UBP_AJBPlacementSkill_C::PlacementVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, EndBlockerTag) == 0x000298, "Member 'UBP_AJBPlacementSkill_C::EndBlockerTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, TargetActor_Local_) == 0x0002A0, "Member 'UBP_AJBPlacementSkill_C::TargetActor_Local_' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bUseIncreaseProcessAsSettingNum) == 0x0002A8, "Member 'UBP_AJBPlacementSkill_C::bUseIncreaseProcessAsSettingNum' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, DangerousActorClassList) == 0x0002B0, "Member 'UBP_AJBPlacementSkill_C::DangerousActorClassList' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, ExclusionHitActorClassList) == 0x0002C0, "Member 'UBP_AJBPlacementSkill_C::ExclusionHitActorClassList' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bHidePreviewGuideOnSpawn) == 0x0002D0, "Member 'UBP_AJBPlacementSkill_C::bHidePreviewGuideOnSpawn' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bDuringSpawnOnOwner) == 0x0002D1, "Member 'UBP_AJBPlacementSkill_C::bDuringSpawnOnOwner' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bDebugShowPlacementCollision) == 0x0002D2, "Member 'UBP_AJBPlacementSkill_C::bDebugShowPlacementCollision' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bCheckStateOnHidePreviewGuide) == 0x0002D3, "Member 'UBP_AJBPlacementSkill_C::bCheckStateOnHidePreviewGuide' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, bInterpPreview) == 0x0002D4, "Member 'UBP_AJBPlacementSkill_C::bInterpPreview' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, PlacementTransformCache) == 0x0002E0, "Member 'UBP_AJBPlacementSkill_C::PlacementTransformCache' has a wrong offset!");
static_assert(offsetof(UBP_AJBPlacementSkill_C, InterpPreviewSpeed) == 0x000310, "Member 'UBP_AJBPlacementSkill_C::InterpPreviewSpeed' has a wrong offset!");

}


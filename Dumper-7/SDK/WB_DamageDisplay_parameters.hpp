#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DamageDisplay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_DamageDisplay.WB_DamageDisplay_C.ExecuteUbergraph_WB_DamageDisplay
// 0x0168 (0x0168 - 0x0000)
struct WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextType_TextType;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	int32                                         CallFunc_MakeLiteralInt_ReturnValue1;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue2;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTargetLocationOnScreen_LocationOnScreen; // 0x0050(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0068(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select2_Default;                            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0090(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeOffsetWithRandom_Offset;              // 0x00CC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_GetTextWidget_TextWidget;                 // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_GetTextWidget_TextWidget1;                // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_GetTextWidget_TextWidget2;                // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextType_TextType1;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select3_Default;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select4_Default;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0118(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay) == 0x000008, "Wrong alignment on WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay");
static_assert(sizeof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay) == 0x000168, "Wrong size on WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, EntryPoint) == 0x000000, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTextType_TextType) == 0x000004, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTextType_TextType' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_int_Variable) == 0x000008, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_int_Variable1) == 0x00000C, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_int_Variable2) == 0x000010, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_bool_Variable) == 0x000014, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000018, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_MakeLiteralInt_ReturnValue) == 0x000024, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000029, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_MakeLiteralInt_ReturnValue1) == 0x000048, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_MakeLiteralInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_MakeLiteralInt_ReturnValue2) == 0x00004C, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_MakeLiteralInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTargetLocationOnScreen_LocationOnScreen) == 0x000050, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTargetLocationOnScreen_LocationOnScreen' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetDesiredSize_ReturnValue) == 0x000060, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_bool_Variable1) == 0x000078, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, Temp_bool_Variable2) == 0x000079, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Select_Default) == 0x00007C, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Select1_Default) == 0x000080, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Select2_Default) == 0x000088, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Event_MyGeometry) == 0x000090, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Event_InDeltaTime) == 0x0000C8, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_MakeOffsetWithRandom_Offset) == 0x0000CC, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_MakeOffsetWithRandom_Offset' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTextWidget_TextWidget) == 0x0000D8, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTextWidget_TextWidget' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTextWidget_TextWidget1) == 0x0000E0, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTextWidget_TextWidget1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTextWidget_TextWidget2) == 0x0000E8, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTextWidget_TextWidget2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, CallFunc_GetTextType_TextType1) == 0x0000F0, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::CallFunc_GetTextType_TextType1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Select3_Default) == 0x0000F8, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_Select4_Default) == 0x000100, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay, K2Node_MakeStruct_SlateFontInfo) == 0x000118, "Member 'WB_DamageDisplay_C_ExecuteUbergraph_WB_DamageDisplay::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_DamageDisplay_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_Tick) == 0x000004, "Wrong alignment on WB_DamageDisplay_C_Tick");
static_assert(sizeof(WB_DamageDisplay_C_Tick) == 0x00003C, "Wrong size on WB_DamageDisplay_C_Tick");
static_assert(offsetof(WB_DamageDisplay_C_Tick, MyGeometry) == 0x000000, "Member 'WB_DamageDisplay_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_DamageDisplay_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.GetScaledWidgetSize
// 0x001C (0x001C - 0x0000)
struct WB_DamageDisplay_C_GetScaledWidgetSize final
{
public:
	struct FVector2D                              WidgetSize;                                        // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_GetScaledWidgetSize) == 0x000004, "Wrong alignment on WB_DamageDisplay_C_GetScaledWidgetSize");
static_assert(sizeof(WB_DamageDisplay_C_GetScaledWidgetSize) == 0x00001C, "Wrong size on WB_DamageDisplay_C_GetScaledWidgetSize");
static_assert(offsetof(WB_DamageDisplay_C_GetScaledWidgetSize, WidgetSize) == 0x000000, "Member 'WB_DamageDisplay_C_GetScaledWidgetSize::WidgetSize' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetScaledWidgetSize, CallFunc_GetViewportScale_ReturnValue) == 0x000008, "Member 'WB_DamageDisplay_C_GetScaledWidgetSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetScaledWidgetSize, CallFunc_GetDesiredSize_ReturnValue) == 0x00000C, "Member 'WB_DamageDisplay_C_GetScaledWidgetSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetScaledWidgetSize, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000014, "Member 'WB_DamageDisplay_C_GetScaledWidgetSize::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTargetLocationOnScreen
// 0x0160 (0x0160 - 0x0000)
struct WB_DamageDisplay_C_GetTargetLocationOnScreen final
{
public:
	struct FVector2D                              LocationOnScreen;                                  // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScaledWidgetSize_WidgetSize;           // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue1;        // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScaledWidgetSize_WidgetSize1;          // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0050(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue2;        // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue1;   // 0x00A0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x00B4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue3;        // 0x00C8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue2;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x00D8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00E0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00F8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue4;        // 0x0114(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue2;   // 0x0120(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue1;      // 0x0128(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue1;        // 0x0130(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue2;        // 0x0138(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue3;        // 0x0140(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithinViewport_IsWithinViewport;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue5;        // 0x014C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_GetTargetLocationOnScreen) == 0x000010, "Wrong alignment on WB_DamageDisplay_C_GetTargetLocationOnScreen");
static_assert(sizeof(WB_DamageDisplay_C_GetTargetLocationOnScreen) == 0x000160, "Wrong size on WB_DamageDisplay_C_GetTargetLocationOnScreen");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, LocationOnScreen) == 0x000000, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::LocationOnScreen' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetScaledWidgetSize_WidgetSize) == 0x000008, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetScaledWidgetSize_WidgetSize' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetViewportSize_ReturnValue) == 0x000010, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000018, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue1) == 0x000020, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetViewportScale_ReturnValue) == 0x000028, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00002C, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetScaledWidgetSize_WidgetSize1) == 0x000034, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetScaledWidgetSize_WidgetSize1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector2D_X) == 0x00003C, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetViewportScale_ReturnValue1) == 0x000044, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetViewportScale_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000050, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue2) == 0x000060, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Subtract_Vector2DVector2D_ReturnValue1) == 0x0000A0, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Subtract_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000A8, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetDesiredSize_ReturnValue) == 0x0000B4, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector_X) == 0x0000BC, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector_Z) == 0x0000C4, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue3) == 0x0000C8, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetViewportScale_ReturnValue2) == 0x0000D4, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetViewportScale_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_MakeVector2D_ReturnValue1) == 0x0000D8, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000E0, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_GetPlayerController_ReturnValue) == 0x0000E8, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000F0, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000F8, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000100, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector2D_X1) == 0x000104, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_BreakVector2D_Y1) == 0x000108, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Abs_ReturnValue) == 0x00010C, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Abs_ReturnValue1) == 0x000110, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue4) == 0x000114, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_FMin_ReturnValue) == 0x00011C, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Subtract_Vector2DVector2D_ReturnValue2) == 0x000120, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Subtract_Vector2DVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Multiply_Vector2DFloat_ReturnValue1) == 0x000128, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Multiply_Vector2DFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Add_Vector2DVector2D_ReturnValue1) == 0x000130, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Add_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Add_Vector2DVector2D_ReturnValue2) == 0x000138, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Add_Vector2DVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Add_Vector2DVector2D_ReturnValue3) == 0x000140, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Add_Vector2DVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_IsWithinViewport_IsWithinViewport) == 0x000148, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_IsWithinViewport_IsWithinViewport' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTargetLocationOnScreen, CallFunc_Divide_Vector2DFloat_ReturnValue5) == 0x00014C, "Member 'WB_DamageDisplay_C_GetTargetLocationOnScreen::CallFunc_Divide_Vector2DFloat_ReturnValue5' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.IsWithinViewport
// 0x004C (0x004C - 0x0000)
struct WB_DamageDisplay_C_IsWithinViewport final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWithinViewport_0;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetScaledWidgetSize_WidgetSize;           // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue1;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DamageDisplay_C_IsWithinViewport) == 0x000004, "Wrong alignment on WB_DamageDisplay_C_IsWithinViewport");
static_assert(sizeof(WB_DamageDisplay_C_IsWithinViewport) == 0x00004C, "Wrong size on WB_DamageDisplay_C_IsWithinViewport");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, Location) == 0x000000, "Member 'WB_DamageDisplay_C_IsWithinViewport::Location' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, IsWithinViewport_0) == 0x000008, "Member 'WB_DamageDisplay_C_IsWithinViewport::IsWithinViewport_0' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_GetScaledWidgetSize_WidgetSize) == 0x00000C, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_GetScaledWidgetSize_WidgetSize' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_X) == 0x000014, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_X1) == 0x00001C, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_Y1) == 0x000020, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_GetViewportSize_ReturnValue) == 0x000024, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_GetViewportScale_ReturnValue) == 0x00002C, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000030, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_X2) == 0x000040, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BreakVector2D_Y2) == 0x000044, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000048, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_InRange_FloatFloat_ReturnValue1) == 0x000049, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_InRange_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_IsWithinViewport, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'WB_DamageDisplay_C_IsWithinViewport::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.MakeOffsetWithRandom
// 0x0068 (0x0068 - 0x0000)
struct WB_DamageDisplay_C_MakeOffsetWithRandom final
{
public:
	struct FVector2D                              Offset_0;                                          // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Minus;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RandomOffset;                                      // 0x000C(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RandomOffsetRange;                                 // 0x0014(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue1;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x003C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_MakeOffsetWithRandom) == 0x000004, "Wrong alignment on WB_DamageDisplay_C_MakeOffsetWithRandom");
static_assert(sizeof(WB_DamageDisplay_C_MakeOffsetWithRandom) == 0x000068, "Wrong size on WB_DamageDisplay_C_MakeOffsetWithRandom");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, Offset_0) == 0x000000, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::Offset_0' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, Minus) == 0x000008, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::Minus' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, RandomOffset) == 0x00000C, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::RandomOffset' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, RandomOffsetRange) == 0x000014, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::RandomOffsetRange' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, Temp_bool_Variable) == 0x00001C, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, K2Node_MathExpression_ReturnValue) == 0x000030, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, K2Node_MathExpression_ReturnValue1) == 0x000034, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::K2Node_MathExpression_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, Temp_bool_Variable1) == 0x000038, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_MakeVector2D_ReturnValue) == 0x00003C, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_X1) == 0x000044, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_Y1) == 0x000048, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_X2) == 0x00004C, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_BreakVector2D_Y2) == 0x000050, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000055, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, K2Node_Select_Default) == 0x000058, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, K2Node_Select1_Default) == 0x00005C, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_MakeOffsetWithRandom, CallFunc_MakeVector2D_ReturnValue1) == 0x000060, "Member 'WB_DamageDisplay_C_MakeOffsetWithRandom::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTextType
// 0x0004 (0x0004 - 0x0000)
struct WB_DamageDisplay_C_GetTextType final
{
public:
	int32                                         TextType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_GetTextType) == 0x000004, "Wrong alignment on WB_DamageDisplay_C_GetTextType");
static_assert(sizeof(WB_DamageDisplay_C_GetTextType) == 0x000004, "Wrong size on WB_DamageDisplay_C_GetTextType");
static_assert(offsetof(WB_DamageDisplay_C_GetTextType, TextType) == 0x000000, "Member 'WB_DamageDisplay_C_GetTextType::TextType' has a wrong offset!");

// Function WB_DamageDisplay.WB_DamageDisplay_C.GetTextWidget
// 0x0018 (0x0018 - 0x0000)
struct WB_DamageDisplay_C_GetTextWidget final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextType_TextType;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DamageDisplay_C_GetTextWidget) == 0x000008, "Wrong alignment on WB_DamageDisplay_C_GetTextWidget");
static_assert(sizeof(WB_DamageDisplay_C_GetTextWidget) == 0x000018, "Wrong size on WB_DamageDisplay_C_GetTextWidget");
static_assert(offsetof(WB_DamageDisplay_C_GetTextWidget, TextWidget) == 0x000000, "Member 'WB_DamageDisplay_C_GetTextWidget::TextWidget' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTextWidget, Temp_int_Variable) == 0x000008, "Member 'WB_DamageDisplay_C_GetTextWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTextWidget, CallFunc_GetTextType_TextType) == 0x00000C, "Member 'WB_DamageDisplay_C_GetTextWidget::CallFunc_GetTextType_TextType' has a wrong offset!");
static_assert(offsetof(WB_DamageDisplay_C_GetTextWidget, K2Node_Select_Default) == 0x000010, "Member 'WB_DamageDisplay_C_GetTextWidget::K2Node_Select_Default' has a wrong offset!");

}


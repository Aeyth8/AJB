#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugInputCountComponent

#include "Basic.hpp"

#include "E_StickInputDirection_structs.hpp"


namespace SDK::Params
{

// Function BP_DebugInputCountComponent.BP_DebugInputCountComponent_C.ExecuteUbergraph_BP_DebugInputCountComponent
// 0x0258 (0x0258 - 0x0000)
struct BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue1;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGamePlayerController*             K2Node_DynamicCast_AsAJBIn_Game_Player_Controller; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DevOnly_GetMoveRightInputvalue_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DevOnly_GetMoveForwardInputvalue_ReturnValue; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DevOnly_GetLookupRateInputvalue_ReturnValue; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DevOnly_GetTurnRateInputvalue_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DirectionIsChanged_bIsChanged;            // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         CallFunc_DirectionIsChanged_NewDirection;          // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DirectionIsChanged_bIsChanged1;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         CallFunc_DirectionIsChanged_NewDirection1;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DirectionToString_Result;                 // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DevOnly_GetL3Pressed_ReturnValue;         // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DevOnly_GetR3Pressed_ReturnValue;         // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue3;           // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select1_Default;                            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select2_Default;                            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DirectionToString_Result1;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue6;               // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue7;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue8;               // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue9;               // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue10;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue11;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select3_Default;                            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue12;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue13;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue14;              // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue15;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent) == 0x000008, "Wrong alignment on BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent");
static_assert(sizeof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent) == 0x000258, "Wrong size on BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, EntryPoint) == 0x000000, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_MakeLiteralByte_ReturnValue1) == 0x000018, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_MakeLiteralByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_bool_Variable) == 0x000019, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_int_Variable) == 0x00001C, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_int_Variable1) == 0x000020, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_bool_Variable1) == 0x000024, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_int_Variable2) == 0x000028, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_int_Variable3) == 0x00002C, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_bool_Variable2) == 0x000030, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_string_Variable) == 0x000038, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_string_Variable1) == 0x000048, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_bool_Variable3) == 0x000058, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_string_Variable2) == 0x000060, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, Temp_string_Variable3) == 0x000070, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_DynamicCast_AsAJBIn_Game_Player_Controller) == 0x000090, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_DynamicCast_AsAJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetMoveRightInputvalue_ReturnValue) == 0x00009C, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetMoveRightInputvalue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetMoveForwardInputvalue_ReturnValue) == 0x0000A0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetMoveForwardInputvalue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetLookupRateInputvalue_ReturnValue) == 0x0000A4, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetLookupRateInputvalue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetTurnRateInputvalue_ReturnValue) == 0x0000A8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetTurnRateInputvalue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000B2, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Not_PreBool_ReturnValue) == 0x0000B3, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x0000B4, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionIsChanged_bIsChanged) == 0x0000B6, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionIsChanged_bIsChanged' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionIsChanged_NewDirection) == 0x0000B7, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionIsChanged_NewDirection' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionIsChanged_bIsChanged1) == 0x0000B8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionIsChanged_bIsChanged1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionIsChanged_NewDirection1) == 0x0000B9, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionIsChanged_NewDirection1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionToString_Result) == 0x0000C0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionToString_Result' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Conv_IntToString_ReturnValue1) == 0x0000D0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000F0, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Conv_IntToString_ReturnValue2) == 0x000100, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue2) == 0x000110, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue3) == 0x000128, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Add_IntInt_ReturnValue1) == 0x000138, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetL3Pressed_ReturnValue) == 0x00013C, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetL3Pressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Not_PreBool_ReturnValue1) == 0x00013D, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_BooleanAND_ReturnValue1) == 0x00013E, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DevOnly_GetR3Pressed_ReturnValue) == 0x00013F, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DevOnly_GetR3Pressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_Select_Default) == 0x000140, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Add_IntInt_ReturnValue2) == 0x000144, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Not_PreBool_ReturnValue2) == 0x000148, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_BooleanAND_ReturnValue2) == 0x000149, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x00014A, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_NotEqual_ByteByte_ReturnValue3) == 0x00014B, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_NotEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_Select1_Default) == 0x00014C, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_BooleanAND_ReturnValue3) == 0x000150, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Add_IntInt_ReturnValue3) == 0x000154, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Conv_IntToString_ReturnValue3) == 0x000158, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_Select2_Default) == 0x000168, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_DirectionToString_Result1) == 0x000178, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_DirectionToString_Result1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue4) == 0x000188, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue5) == 0x000198, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue6) == 0x0001A8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue7) == 0x0001B8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue8) == 0x0001C8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue9) == 0x0001D8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue10) == 0x0001E8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue11) == 0x0001F8, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, K2Node_Select3_Default) == 0x000208, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue12) == 0x000218, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue13) == 0x000228, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue14) == 0x000238, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent, CallFunc_Concat_StrStr_ReturnValue15) == 0x000248, "Member 'BP_DebugInputCountComponent_C_ExecuteUbergraph_BP_DebugInputCountComponent::CallFunc_Concat_StrStr_ReturnValue15' has a wrong offset!");

// Function BP_DebugInputCountComponent.BP_DebugInputCountComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DebugInputCountComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugInputCountComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DebugInputCountComponent_C_ReceiveTick");
static_assert(sizeof(BP_DebugInputCountComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_DebugInputCountComponent_C_ReceiveTick");
static_assert(offsetof(BP_DebugInputCountComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DebugInputCountComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DebugInputCountComponent.BP_DebugInputCountComponent_C.DirectionIsChanged
// 0x00B8 (0x00B8 - 0x0000)
struct BP_DebugInputCountComponent_C_DirectionIsChanged final
{
public:
	E_StickInputDirection                         BeforeDirection;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputX;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         inputY;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputThresholdForNeutral;                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MarginDegreeForDetectingChanging;                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChanged;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         NewDirection;                                      // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputY_Corrected;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputX_Corrected;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_InputDegree;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable1;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable2;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable4;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable6;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable7;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable8;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable9;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable10;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable11;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         CallFunc_DegreeToDirection_ReturnValue;            // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         CallFunc_DegreeToDirection_ReturnValue1;           // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         CallFunc_DegreeToDirection_ReturnValue2;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable1;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue1;      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         K2Node_Select3_Default;                            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue2;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         K2Node_Select4_Default;                            // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugInputCountComponent_C_DirectionIsChanged) == 0x000004, "Wrong alignment on BP_DebugInputCountComponent_C_DirectionIsChanged");
static_assert(sizeof(BP_DebugInputCountComponent_C_DirectionIsChanged) == 0x0000B8, "Wrong size on BP_DebugInputCountComponent_C_DirectionIsChanged");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, BeforeDirection) == 0x000000, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::BeforeDirection' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, InputX) == 0x000004, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::InputX' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, inputY) == 0x000008, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::inputY' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, InputThresholdForNeutral) == 0x00000C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::InputThresholdForNeutral' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, MarginDegreeForDetectingChanging) == 0x000010, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::MarginDegreeForDetectingChanging' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, bIsChanged) == 0x000014, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::bIsChanged' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, NewDirection) == 0x000015, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::NewDirection' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, InputY_Corrected) == 0x000018, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::InputY_Corrected' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, InputX_Corrected) == 0x00001C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::InputX_Corrected' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_InputDegree) == 0x000020, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_InputDegree' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable) == 0x000024, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_bool_Variable) == 0x000028, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable1) == 0x00002C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_byte_Variable) == 0x000030, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable2) == 0x000034, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable3) == 0x000038, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable4) == 0x00003C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable5) == 0x000040, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable6) == 0x000044, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable6' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable7) == 0x000048, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable7' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable8) == 0x00004C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable8' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable9) == 0x000050, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable9' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable10) == 0x000054, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable10' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_float_Variable11) == 0x000058, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_float_Variable11' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_bool_Variable1) == 0x00005C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_DegreeToDirection_ReturnValue) == 0x00005D, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_DegreeToDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005E, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_DegreeToDirection_ReturnValue1) == 0x00005F, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_DegreeToDirection_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_bool_Variable2) == 0x000060, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_DegreeToDirection_ReturnValue2) == 0x000061, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_DegreeToDirection_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000062, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, K2Node_Select_Default) == 0x000064, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_byte_Variable1) == 0x000068, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x000069, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, Temp_bool_Variable3) == 0x00006A, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00006C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000074, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_DegAtan2_ReturnValue) == 0x000078, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Abs_ReturnValue1) == 0x000084, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000089, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, K2Node_Select1_Default) == 0x00008C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, K2Node_Select2_Default) == 0x000090, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_NearlyEqual_FloatFloat_ReturnValue1) == 0x000095, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_NearlyEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_BooleanAND_ReturnValue) == 0x000096, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Less_FloatFloat_ReturnValue) == 0x000097, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_MakeLiteralFloat_ReturnValue1) == 0x00009C, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_MakeLiteralFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_BooleanAND_ReturnValue1) == 0x0000A0, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0000A4, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x0000A9, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, K2Node_Select3_Default) == 0x0000AA, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_MakeLiteralFloat_ReturnValue2) == 0x0000AC, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_MakeLiteralFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0000B0, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0000B4, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_BooleanOR_ReturnValue) == 0x0000B5, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B6, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionIsChanged, K2Node_Select4_Default) == 0x0000B7, "Member 'BP_DebugInputCountComponent_C_DirectionIsChanged::K2Node_Select4_Default' has a wrong offset!");

// Function BP_DebugInputCountComponent.BP_DebugInputCountComponent_C.DegreeToDirection
// 0x002C (0x002C - 0x0000)
struct BP_DebugInputCountComponent_C_DegreeToDirection final
{
public:
	float                                         Degree;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable4;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable5;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable6;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable7;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable8;                               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_StickInputDirection                         K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugInputCountComponent_C_DegreeToDirection) == 0x000004, "Wrong alignment on BP_DebugInputCountComponent_C_DegreeToDirection");
static_assert(sizeof(BP_DebugInputCountComponent_C_DegreeToDirection) == 0x00002C, "Wrong size on BP_DebugInputCountComponent_C_DegreeToDirection");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Degree) == 0x000000, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Degree' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, ReturnValue) == 0x000004, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable) == 0x000005, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable1) == 0x000006, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable2) == 0x000007, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable3) == 0x000008, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable4) == 0x000009, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable5) == 0x00000A, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable6) == 0x00000B, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable7) == 0x00000C, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_byte_Variable8) == 0x00000D, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_int_Variable) == 0x000010, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, Temp_int_Variable1) == 0x000024, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DegreeToDirection, K2Node_Select_Default) == 0x000029, "Member 'BP_DebugInputCountComponent_C_DegreeToDirection::K2Node_Select_Default' has a wrong offset!");

// Function BP_DebugInputCountComponent.BP_DebugInputCountComponent_C.DirectionToString
// 0x00D0 (0x00D0 - 0x0000)
struct BP_DebugInputCountComponent_C_DirectionToString final
{
public:
	E_StickInputDirection                         Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Result;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	E_StickInputDirection                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable2;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable4;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable5;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable6;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable7;                             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable8;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable9;                             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugInputCountComponent_C_DirectionToString) == 0x000008, "Wrong alignment on BP_DebugInputCountComponent_C_DirectionToString");
static_assert(sizeof(BP_DebugInputCountComponent_C_DirectionToString) == 0x0000D0, "Wrong size on BP_DebugInputCountComponent_C_DirectionToString");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Direction) == 0x000000, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Direction' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Result) == 0x000008, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Result' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_byte_Variable) == 0x000018, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable) == 0x000020, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable1) == 0x000030, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable2) == 0x000040, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable3) == 0x000050, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable4) == 0x000060, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable5) == 0x000070, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable6) == 0x000080, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable7) == 0x000090, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable8) == 0x0000A0, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, Temp_string_Variable9) == 0x0000B0, "Member 'BP_DebugInputCountComponent_C_DirectionToString::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(BP_DebugInputCountComponent_C_DirectionToString, K2Node_Select_Default) == 0x0000C0, "Member 'BP_DebugInputCountComponent_C_DirectionToString::K2Node_Select_Default' has a wrong offset!");

}


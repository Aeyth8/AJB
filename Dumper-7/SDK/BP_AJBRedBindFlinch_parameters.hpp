#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBRedBindFlinch

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBRedBindFlinch.BP_AJBRedBindFlinch_C.ExecuteUbergraph_BP_AJBRedBindFlinch
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bTriggeredByStand1;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_Event_Operator;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                K2Node_Event_Timing;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnable;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bOperatorIsEmpty;                     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTriggeredByStand;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0050(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_Event_Causer;                               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBRedBindSkill_C*                  K2Node_DynamicCast_AsBP_AJBRed_Bind_Skill;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch) == 0x000008, "Wrong alignment on BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch");
static_assert(sizeof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch) == 0x000098, "Wrong size on BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, EntryPoint) == 0x000000, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000005, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_bTriggeredByStand1) == 0x000006, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_bTriggeredByStand1' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_Operator) == 0x000010, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_Time) == 0x000018, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_Timing) == 0x00001C, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_bEnable) == 0x00001D, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_bOperatorIsEmpty) == 0x00001E, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_bOperatorIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000028, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_IsValid_ReturnValue1) == 0x000031, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000038, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent) == 0x000040, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_RequestWwiseEventAttachedOnLocal_AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_bTriggeredByStand) == 0x000048, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_bTriggeredByStand' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_IsValid_ReturnValue2) == 0x000049, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, Temp_delegate_Variable) == 0x000050, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_Event_Causer) == 0x000060, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x000068, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_DynamicCast_AsBP_AJBRed_Bind_Skill) == 0x000070, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_DynamicCast_AsBP_AJBRed_Bind_Skill' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, K2Node_DynamicCast_bSuccess1) == 0x000078, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_GetOwner_ReturnValue1) == 0x000080, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_GetObjectClass_ReturnValue) == 0x000088, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000090, "Member 'BP_AJBRedBindFlinch_C_ExecuteUbergraph_BP_AJBRedBindFlinch::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_AJBRedBindFlinch.BP_AJBRedBindFlinch_C.UpdateLeftTime
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBRedBindFlinch_C_UpdateLeftTime final
{
public:
	class UObject*                                Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBRedBindFlinch_C_UpdateLeftTime) == 0x000008, "Wrong alignment on BP_AJBRedBindFlinch_C_UpdateLeftTime");
static_assert(sizeof(BP_AJBRedBindFlinch_C_UpdateLeftTime) == 0x000008, "Wrong size on BP_AJBRedBindFlinch_C_UpdateLeftTime");
static_assert(offsetof(BP_AJBRedBindFlinch_C_UpdateLeftTime, Causer) == 0x000000, "Member 'BP_AJBRedBindFlinch_C_UpdateLeftTime::Causer' has a wrong offset!");

// Function BP_AJBRedBindFlinch.BP_AJBRedBindFlinch_C.OnActionInactivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBRedBindFlinch_C_OnActionInactivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRedBindFlinch_C_OnActionInactivate) == 0x000001, "Wrong alignment on BP_AJBRedBindFlinch_C_OnActionInactivate");
static_assert(sizeof(BP_AJBRedBindFlinch_C_OnActionInactivate) == 0x000001, "Wrong size on BP_AJBRedBindFlinch_C_OnActionInactivate");
static_assert(offsetof(BP_AJBRedBindFlinch_C_OnActionInactivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBRedBindFlinch_C_OnActionInactivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBRedBindFlinch.BP_AJBRedBindFlinch_C.OnActionActivate
// 0x0001 (0x0001 - 0x0000)
struct BP_AJBRedBindFlinch_C_OnActionActivate final
{
public:
	bool                                          bTriggeredByStand;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRedBindFlinch_C_OnActionActivate) == 0x000001, "Wrong alignment on BP_AJBRedBindFlinch_C_OnActionActivate");
static_assert(sizeof(BP_AJBRedBindFlinch_C_OnActionActivate) == 0x000001, "Wrong size on BP_AJBRedBindFlinch_C_OnActionActivate");
static_assert(offsetof(BP_AJBRedBindFlinch_C_OnActionActivate, bTriggeredByStand) == 0x000000, "Member 'BP_AJBRedBindFlinch_C_OnActionActivate::bTriggeredByStand' has a wrong offset!");

// Function BP_AJBRedBindFlinch.BP_AJBRedBindFlinch_C.NotifyTheWorld
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBRedBindFlinch_C_NotifyTheWorld final
{
public:
	class AAJBInGameCharacter*                    Operator;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeneralTiming                                Timing;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOperatorIsEmpty;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBRedBindFlinch_C_NotifyTheWorld) == 0x000008, "Wrong alignment on BP_AJBRedBindFlinch_C_NotifyTheWorld");
static_assert(sizeof(BP_AJBRedBindFlinch_C_NotifyTheWorld) == 0x000010, "Wrong size on BP_AJBRedBindFlinch_C_NotifyTheWorld");
static_assert(offsetof(BP_AJBRedBindFlinch_C_NotifyTheWorld, Operator) == 0x000000, "Member 'BP_AJBRedBindFlinch_C_NotifyTheWorld::Operator' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_NotifyTheWorld, Time) == 0x000008, "Member 'BP_AJBRedBindFlinch_C_NotifyTheWorld::Time' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_NotifyTheWorld, Timing) == 0x00000C, "Member 'BP_AJBRedBindFlinch_C_NotifyTheWorld::Timing' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_NotifyTheWorld, bEnable) == 0x00000D, "Member 'BP_AJBRedBindFlinch_C_NotifyTheWorld::bEnable' has a wrong offset!");
static_assert(offsetof(BP_AJBRedBindFlinch_C_NotifyTheWorld, bOperatorIsEmpty) == 0x00000E, "Member 'BP_AJBRedBindFlinch_C_NotifyTheWorld::bOperatorIsEmpty' has a wrong offset!");

}


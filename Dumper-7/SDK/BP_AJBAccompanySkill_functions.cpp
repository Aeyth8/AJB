#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAccompanySkill

#include "Basic.hpp"

#include "BP_AJBAccompanySkill_classes.hpp"
#include "BP_AJBAccompanySkill_parameters.hpp"


namespace SDK
{

// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.ExecuteUbergraph_BP_AJBAccompanySkill
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAccompanySkill_C::ExecuteUbergraph_BP_AJBAccompanySkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "ExecuteUbergraph_BP_AJBAccompanySkill");

	Params::BP_AJBAccompanySkill_C_ExecuteUbergraph_BP_AJBAccompanySkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.EndSkill_Local
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBackwardAccompany                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::EndSkill_Local(bool bBackwardAccompany)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "EndSkill_Local");

	Params::BP_AJBAccompanySkill_C_EndSkill_Local Parms{};

	Parms.bBackwardAccompany = bBackwardAccompany;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.Local_ChangeAccompanyCameraType
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::Local_ChangeAccompanyCameraType(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "Local_ChangeAccompanyCameraType");

	Params::BP_AJBAccompanySkill_C_Local_ChangeAccompanyCameraType Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.MC_ChangeAccompanyCameraType
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::MC_ChangeAccompanyCameraType(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "MC_ChangeAccompanyCameraType");

	Params::BP_AJBAccompanySkill_C_MC_ChangeAccompanyCameraType Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.ROS_ChangeAccompanyCameraType
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::ROS_ChangeAccompanyCameraType(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "ROS_ChangeAccompanyCameraType");

	Params::BP_AJBAccompanySkill_C_ROS_ChangeAccompanyCameraType Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.ChangeAccompanyCameraType
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::ChangeAccompanyCameraType(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "ChangeAccompanyCameraType");

	Params::BP_AJBAccompanySkill_C_ChangeAccompanyCameraType Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.UpdateMP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAccompanySkill_C::UpdateMP(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "UpdateMP");

	Params::BP_AJBAccompanySkill_C_UpdateMP Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.CheckOtherSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_AJBInGameCharacter_C*         CharacterBP                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsActive_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AJBAccompanySkill_C::CheckOtherSkill(class ABP_AJBInGameCharacter_C* CharacterBP, bool* IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "CheckOtherSkill");

	Params::BP_AJBAccompanySkill_C_CheckOtherSkill Parms{};

	Parms.CharacterBP = CharacterBP;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive_0 != nullptr)
		*IsActive_0 = Parms.IsActive_0;
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.OnCancel
// (Event, Public, BlueprintEvent)

void UBP_AJBAccompanySkill_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.OnActive
// (Event, Public, BlueprintEvent)

void UBP_AJBAccompanySkill_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AJBAccompanySkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "ReceiveTick");

	Params::BP_AJBAccompanySkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBAccompanySkill.BP_AJBAccompanySkill_C.OnInactive
// (Event, Public, BlueprintEvent)

void UBP_AJBAccompanySkill_C::OnInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBAccompanySkill_C", "OnInactive");

	UObject::ProcessEvent(Func, nullptr);
}

}


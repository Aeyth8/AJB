#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAimSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBSkillBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBAimSkill.BP_AJBAimSkill_C
// 0x0020 (0x0208 - 0x01E8)
class UBP_AJBAimSkill_C : public UBP_AJBSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBAimSkill_C;                   // 0x01E8(0x0008)(Transient, DuplicateTransient)
	float                                         SpreadMinOnAim_1080p_;                             // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpreadMaxOnAim_1080p_;                             // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         s__BP_AJBAimSkill_C;                               // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedScaleOnAim;                               // 0x01FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraSpeedOnAim;                                  // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBAimSkill(int32 EntryPoint);
	void OnActive();
	void OnInactive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBAimSkill_C">();
	}
	static class UBP_AJBAimSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBAimSkill_C>();
	}
};
static_assert(alignof(UBP_AJBAimSkill_C) == 0x000008, "Wrong alignment on UBP_AJBAimSkill_C");
static_assert(sizeof(UBP_AJBAimSkill_C) == 0x000208, "Wrong size on UBP_AJBAimSkill_C");
static_assert(offsetof(UBP_AJBAimSkill_C, UberGraphFrame_BP_AJBAimSkill_C) == 0x0001E8, "Member 'UBP_AJBAimSkill_C::UberGraphFrame_BP_AJBAimSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBAimSkill_C, SpreadMinOnAim_1080p_) == 0x0001F0, "Member 'UBP_AJBAimSkill_C::SpreadMinOnAim_1080p_' has a wrong offset!");
static_assert(offsetof(UBP_AJBAimSkill_C, SpreadMaxOnAim_1080p_) == 0x0001F4, "Member 'UBP_AJBAimSkill_C::SpreadMaxOnAim_1080p_' has a wrong offset!");
static_assert(offsetof(UBP_AJBAimSkill_C, s__BP_AJBAimSkill_C) == 0x0001F8, "Member 'UBP_AJBAimSkill_C::s__BP_AJBAimSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBAimSkill_C, MoveSpeedScaleOnAim) == 0x0001FC, "Member 'UBP_AJBAimSkill_C::MoveSpeedScaleOnAim' has a wrong offset!");
static_assert(offsetof(UBP_AJBAimSkill_C, CameraSpeedOnAim) == 0x000200, "Member 'UBP_AJBAimSkill_C::CameraSpeedOnAim' has a wrong offset!");

}


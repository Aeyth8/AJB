#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_AJBMovementForMovableStand

#include "Basic.hpp"

#include "BTS_AJBMovementForMovableStand_classes.hpp"
#include "BTS_AJBMovementForMovableStand_parameters.hpp"


namespace SDK
{

// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.ExecuteUbergraph_BTS_AJBMovementForMovableStand
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovementForMovableStand_C::ExecuteUbergraph_BTS_AJBMovementForMovableStand(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "ExecuteUbergraph_BTS_AJBMovementForMovableStand");

	Params::BTS_AJBMovementForMovableStand_C_ExecuteUbergraph_BTS_AJBMovementForMovableStand Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.InputMovementOnFixedDirection
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovementForMovableStand_C::InputMovementOnFixedDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "InputMovementOnFixedDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.InputMovementLookinForDir
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovementForMovableStand_C::InputMovementLookinForDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "InputMovementLookinForDir");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.InputMovementLookingAtTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovementForMovableStand_C::InputMovementLookingAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "InputMovementLookingAtTarget");

	Params::BTS_AJBMovementForMovableStand_C_InputMovementLookingAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.InputMovementDefault
// (BlueprintCallable, BlueprintEvent)

void UBTS_AJBMovementForMovableStand_C::InputMovementDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "InputMovementDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.ReceiveActivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovementForMovableStand_C::ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "ReceiveActivationAI");

	Params::BTS_AJBMovementForMovableStand_C_ReceiveActivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovementForMovableStand_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "ReceiveTickAI");

	Params::BTS_AJBMovementForMovableStand_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetYawDiffNormalizedDefault
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    DestinationKey                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetYawDiffNormalizedDefault(const struct FBlackboardKeySelector& DestinationKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetYawDiffNormalizedDefault");

	Params::BTS_AJBMovementForMovableStand_C_GetYawDiffNormalizedDefault Parms{};

	Parms.DestinationKey = std::move(DestinationKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.InputMovement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Right                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Turn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LookUp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_AJBMovementForMovableStand_C::InputMovement(float Forward, float Right, float Turn, float LookUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "InputMovement");

	Params::BTS_AJBMovementForMovableStand_C_InputMovement Parms{};

	Parms.Forward = Forward;
	Parms.Right = Right;
	Parms.Turn = Turn;
	Parms.LookUp = LookUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetYawDiffNormalizedLookAtTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetYawDiffNormalizedLookAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetYawDiffNormalizedLookAtTarget");

	Params::BTS_AJBMovementForMovableStand_C_GetYawDiffNormalizedLookAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetYawDiffNormalizedLookAtDir
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    LookAtDirKey                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetYawDiffNormalizedLookAtDir(const struct FBlackboardKeySelector& LookAtDirKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetYawDiffNormalizedLookAtDir");

	Params::BTS_AJBMovementForMovableStand_C_GetYawDiffNormalizedLookAtDir Parms{};

	Parms.LookAtDirKey = std::move(LookAtDirKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetPitchDiffNormalizedDefault
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    DestinationKey                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetPitchDiffNormalizedDefault(const struct FBlackboardKeySelector& DestinationKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetPitchDiffNormalizedDefault");

	Params::BTS_AJBMovementForMovableStand_C_GetPitchDiffNormalizedDefault Parms{};

	Parms.DestinationKey = std::move(DestinationKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetPitchDiffNormalizedLookAtTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookAtTargetActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetPitchDiffNormalizedLookAtTarget(class AActor* LookAtTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetPitchDiffNormalizedLookAtTarget");

	Params::BTS_AJBMovementForMovableStand_C_GetPitchDiffNormalizedLookAtTarget Parms{};

	Parms.LookAtTargetActor = LookAtTargetActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTS_AJBMovementForMovableStand.BTS_AJBMovementForMovableStand_C.GetPitchDiffNormalizedLookAtDir
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FBlackboardKeySelector&    LookAtDirKey                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBTS_AJBMovementForMovableStand_C::GetPitchDiffNormalizedLookAtDir(const struct FBlackboardKeySelector& LookAtDirKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_AJBMovementForMovableStand_C", "GetPitchDiffNormalizedLookAtDir");

	Params::BTS_AJBMovementForMovableStand_C_GetPitchDiffNormalizedLookAtDir Parms{};

	Parms.LookAtDirKey = std::move(LookAtDirKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


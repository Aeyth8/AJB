#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBZipper_Hide

#include "Basic.hpp"

#include "BP_AJBZipper_Hide_classes.hpp"
#include "BP_AJBZipper_Hide_parameters.hpp"


namespace SDK
{

// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ExecuteUbergraph_BP_AJBZipper_Hide
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::ExecuteUbergraph_BP_AJBZipper_Hide(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ExecuteUbergraph_BP_AJBZipper_Hide");

	Params::BP_AJBZipper_Hide_C_ExecuteUbergraph_BP_AJBZipper_Hide Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnDamagedByNotCollision
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::OnDamagedByNotCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnDamagedByNotCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnReceiveDamageServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemainHP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageIsCut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNotUseCollision                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSelfDamage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::OnReceiveDamageServer(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCut, bool bNotUseCollision, bool bSelfDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnReceiveDamageServer");

	Params::BP_AJBZipper_Hide_C_OnReceiveDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageCauser = DamageCauser;
	Parms.bRemainHP = bRemainHP;
	Parms.bDamageIsCut = bDamageIsCut;
	Parms.bNotUseCollision = bNotUseCollision;
	Parms.bSelfDamage = bSelfDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.SetverSetupNotUseCollisionDamange
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::SetverSetupNotUseCollisionDamange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "SetverSetupNotUseCollisionDamange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ServerSetup_Prop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_InGameProp_C*                 BPProp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::ServerSetup_Prop(class ABP_InGameProp_C* BPProp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ServerSetup_Prop");

	Params::BP_AJBZipper_Hide_C_ServerSetup_Prop Parms{};

	Parms.BPProp = BPProp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ServerSetup_Decaling
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::ServerSetup_Decaling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ServerSetup_Decaling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ServerSetup_DamageArea
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::ServerSetup_DamageArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ServerSetup_DamageArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.CloseZipperOnHideBegin_OneShot
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::CloseZipperOnHideBegin_OneShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "CloseZipperOnHideBegin_OneShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.CloseZipperOnHideBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRestore                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::CloseZipperOnHideBegin(bool bRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "CloseZipperOnHideBegin");

	Params::BP_AJBZipper_Hide_C_CloseZipperOnHideBegin Parms{};

	Parms.bRestore = bRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.StateBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::StateBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "StateBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnSetViewTargetToNewSpectator
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::OnSetViewTargetToNewSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnSetViewTargetToNewSpectator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.MC_DamagedDuringTheWorld
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::MC_DamagedDuringTheWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "MC_DamagedDuringTheWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLifeTimeElapsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnLifeTimeElapsed(class AActor* DestroyingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnLifeTimeElapsed");

	Params::BP_AJBZipper_Hide_C_OnLifeTimeElapsed Parms{};

	Parms.DestroyingActor = DestroyingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.CloseZipperOnLifetimeExpired
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::CloseZipperOnLifetimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "CloseZipperOnLifetimeExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLifeTimeElapsedZipperHide_OnLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnLifeTimeElapsedZipperHide_OnLocal(class AActor* DestroyingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnLifeTimeElapsedZipperHide_OnLocal");

	Params::BP_AJBZipper_Hide_C_OnLifeTimeElapsedZipperHide_OnLocal Parms{};

	Parms.DestroyingActor = DestroyingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.SetAsCreatedZipper
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::SetAsCreatedZipper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "SetAsCreatedZipper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnSphereDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparatedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::Server_OnSphereDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_OnSphereDamaged");

	Params::BP_AJBZipper_Hide_C_Server_OnSphereDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.CutDamage = CutDamage;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.DamagePriority = DamagePriority;
	Parms.AttackDistance = AttackDistance;
	Parms.DamageCauser = DamageCauser;
	Parms.bWithSeparatedStandAttack = bWithSeparatedStandAttack;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_SetupOnDamagedEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::Server_SetupOnDamagedEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_SetupOnDamagedEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnDamagedByDamageArea
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnDamagedByDamageArea(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnDamagedByDamageArea");

	Params::BP_AJBZipper_Hide_C_OnDamagedByDamageArea Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnPropDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparetedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHitEnemysSeparatedStand                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::Server_OnPropDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool bHitEnemysSeparatedStand, bool bPenetrateAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_OnPropDamaged");

	Params::BP_AJBZipper_Hide_C_Server_OnPropDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.CutDamage = CutDamage;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.DamagePriority = DamagePriority;
	Parms.AttackDistance = AttackDistance;
	Parms.DamageCauser = DamageCauser;
	Parms.bWithSeparetedStandAttack = bWithSeparetedStandAttack;
	Parms.bHitEnemysSeparatedStand = bHitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnDecalingDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForHPAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageForAAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CutDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   SerialNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamagePriority                         DamagePriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttackDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSeparetedStandAttack                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitEnemysSeparatedStand                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrateAP                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::Server_OnDecalingDamaged(class AActor* DamagedActor, int32 DamageForHPAP, int32 DamageForAAP, int32 CutDamage, const struct FGameplayTag& DamageType, int32 SerialNumber, EDamagePriority DamagePriority, float AttackDistance, class AActor* DamageCauser, bool bWithSeparetedStandAttack, bool HitEnemysSeparatedStand, bool bPenetrateAP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_OnDecalingDamaged");

	Params::BP_AJBZipper_Hide_C_Server_OnDecalingDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageForHPAP = DamageForHPAP;
	Parms.DamageForAAP = DamageForAAP;
	Parms.CutDamage = CutDamage;
	Parms.DamageType = std::move(DamageType);
	Parms.SerialNumber = SerialNumber;
	Parms.DamagePriority = DamagePriority;
	Parms.AttackDistance = AttackDistance;
	Parms.DamageCauser = DamageCauser;
	Parms.bWithSeparetedStandAttack = bWithSeparetedStandAttack;
	Parms.HitEnemysSeparatedStand = HitEnemysSeparatedStand;
	Parms.bPenetrateAP = bPenetrateAP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_OnDamageAffectorDamageDetected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::Server_OnDamageAffectorDamageDetected(class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_OnDamageAffectorDamageDetected");

	Params::BP_AJBZipper_Hide_C_Server_OnDamageAffectorDamageDetected Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_SetSphereInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::Server_SetSphereInfo(float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_SetSphereInfo");

	Params::BP_AJBZipper_Hide_C_Server_SetSphereInfo Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnROSInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ServerIsInteractingPlayer                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::OnROSInteract(class AActor* InteractingActor, bool ServerIsInteractingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnROSInteract");

	Params::BP_AJBZipper_Hide_C_OnROSInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.ServerIsInteractingPlayer = ServerIsInteractingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ShowExitEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::ShowExitEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ShowExitEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ShowEnterEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::ShowEnterEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ShowEnterEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Server_StartToExitOnHiding
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::Server_StartToExitOnHiding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Server_StartToExitOnHiding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OpenCloseAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::OpenCloseAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OpenCloseAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.MC_OpenZipperOnHideEnd
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::MC_OpenZipperOnHideEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "MC_OpenZipperOnHideEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.MC_CloseZipperOnHideBegin
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::MC_CloseZipperOnHideBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "MC_CloseZipperOnHideBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBZipper_Hide_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.NotifyTheWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAJBInGameCharacter*              Operator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGeneralTiming                          Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOperatorIsEmpty                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "NotifyTheWorld");

	Params::BP_AJBZipper_Hide_C_NotifyTheWorld Parms{};

	Parms.Operator = Operator;
	Parms.Time = Time;
	Parms.Timing = Timing;
	Parms.bEnable = bEnable;
	Parms.bOperatorIsEmpty = bOperatorIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2");

	Params::BP_AJBZipper_Hide_C_OnCompleted_D89B826545FB119A5BCE5192FDD8DBA2 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2");

	Params::BP_AJBZipper_Hide_C_OnBlendOut_D89B826545FB119A5BCE5192FDD8DBA2 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2");

	Params::BP_AJBZipper_Hide_C_OnInterrupted_D89B826545FB119A5BCE5192FDD8DBA2 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2");

	Params::BP_AJBZipper_Hide_C_OnNotifyBegin_D89B826545FB119A5BCE5192FDD8DBA2 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBZipper_Hide_C::OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2");

	Params::BP_AJBZipper_Hide_C_OnNotifyEnd_D89B826545FB119A5BCE5192FDD8DBA2 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.Interactable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TraceLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AJBZipper_Hide_C::Interactable(class ABP_AJBInGameCharacter_C* Character, float TraceLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "Interactable");

	Params::BP_AJBZipper_Hide_C_Interactable Parms{};

	Parms.Character = Character;
	Parms.TraceLength = TraceLength;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.TryGetInteractableText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AJBInGameCharacter_C*         OperatorCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText*                            InteractMessage                                        (Parm, OutParm)

void ABP_AJBZipper_Hide_C::TryGetInteractableText(class ABP_AJBInGameCharacter_C* OperatorCharacter, bool* bSuccess, class FText* InteractMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "TryGetInteractableText");

	Params::BP_AJBZipper_Hide_C_TryGetInteractableText Parms{};

	Parms.OperatorCharacter = OperatorCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (InteractMessage != nullptr)
		*InteractMessage = std::move(Parms.InteractMessage);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.OnLocalInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBZipper_Hide_C::OnLocalInteract(class AActor* InteractingActor, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "OnLocalInteract");

	Params::BP_AJBZipper_Hide_C_OnLocalInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.DeactiveDamageDetection
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::DeactiveDamageDetection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "DeactiveDamageDetection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBZipper_Hide.BP_AJBZipper_Hide_C.NotifyToCharacterHidingPropDamaged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBZipper_Hide_C::NotifyToCharacterHidingPropDamaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBZipper_Hide_C", "NotifyToCharacterHidingPropDamaged");

	UObject::ProcessEvent(Func, nullptr);
}

}


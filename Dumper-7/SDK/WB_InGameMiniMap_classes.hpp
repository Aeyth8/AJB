#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_InGameMiniMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_InGameMiniMap.WB_InGameMiniMap_C
// 0x0050 (0x0258 - 0x0208)
class UWB_InGameMiniMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UAJBImage*                              AJBImage_0;                                        // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AreaEnd;                                           // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AreaNext;                                          // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBTextBlock*                          AreaTime;                                          // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              MiniMap;                                           // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PhaseInformation;                                  // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  WB_LandmarkableMap;                                // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bPlayingInGameOpening;                             // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStartAnimation;                                   // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMapMaterial;                               // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_InGameMiniMap(int32 EntryPoint);
	void SetVisiblePhaseInformation(bool Visible);
	void OnStopTimerAnimation();
	void OnStartTimerAnimation();
	void OnFinished_OpeningAnim();
	void OnOpen_InGameOpening(class UAJBWindowWidget* TargetWidget);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateDisplay();
	bool IsEnabledTick();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_InGameMiniMap_C">();
	}
	static class UWB_InGameMiniMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_InGameMiniMap_C>();
	}
};
static_assert(alignof(UWB_InGameMiniMap_C) == 0x000008, "Wrong alignment on UWB_InGameMiniMap_C");
static_assert(sizeof(UWB_InGameMiniMap_C) == 0x000258, "Wrong size on UWB_InGameMiniMap_C");
static_assert(offsetof(UWB_InGameMiniMap_C, UberGraphFrame) == 0x000208, "Member 'UWB_InGameMiniMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, AJBImage_0) == 0x000210, "Member 'UWB_InGameMiniMap_C::AJBImage_0' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, AreaEnd) == 0x000218, "Member 'UWB_InGameMiniMap_C::AreaEnd' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, AreaNext) == 0x000220, "Member 'UWB_InGameMiniMap_C::AreaNext' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, AreaTime) == 0x000228, "Member 'UWB_InGameMiniMap_C::AreaTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, MiniMap) == 0x000230, "Member 'UWB_InGameMiniMap_C::MiniMap' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, PhaseInformation) == 0x000238, "Member 'UWB_InGameMiniMap_C::PhaseInformation' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, WB_LandmarkableMap) == 0x000240, "Member 'UWB_InGameMiniMap_C::WB_LandmarkableMap' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, bPlayingInGameOpening) == 0x000248, "Member 'UWB_InGameMiniMap_C::bPlayingInGameOpening' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, bStartAnimation) == 0x000249, "Member 'UWB_InGameMiniMap_C::bStartAnimation' has a wrong offset!");
static_assert(offsetof(UWB_InGameMiniMap_C, OverrideMapMaterial) == 0x000250, "Member 'UWB_InGameMiniMap_C::OverrideMapMaterial' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBIronsandCamouflage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBIronsandCamouflage.BP_AJBIronsandCamouflage_C
// 0x0020 (0x0230 - 0x0210)
class UBP_AJBIronsandCamouflage_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBIronsandCamouflage_C;         // 0x0210(0x0008)(Transient, DuplicateTransient)
	bool                                          bCamouflageOwner;                                  // 0x0218(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CamouflageMaterialOwnerEnv;                        // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          ParticleEnd;                                       // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBIronsandCamouflage(int32 EntryPoint);
	void OnCanceledByReceiveCore(const struct FGameplayTag& DamageType);
	void OnCanceledByReceiveDamage(const struct FGameplayTag& DamageType);
	void UnbindOnReceiveDamage();
	void ROS_EndCamouflage();
	void EndCamouflageLocal();
	void ConsumeMP();
	void ChangeUIVisibility(bool bNewVisibility);
	void CamouflageOwnerEnv(bool bEnable);
	void CamouflageNotOwnerEnv(bool bEnable);
	void Camouflage(bool bEnable);
	void ChangeCamouflageType(bool bOwnerEnv);
	void CheckCamouflageCondition();
	void GetIronsandCamouflageSkill(class UBP_AJBIronsandCamouflageSkill_C** SkillComponent);
	void TryDisableUIVisibility();
	void ReceiveBeginPlay();
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void ReceiveTick(float DeltaSeconds);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBIronsandCamouflage_C">();
	}
	static class UBP_AJBIronsandCamouflage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBIronsandCamouflage_C>();
	}
};
static_assert(alignof(UBP_AJBIronsandCamouflage_C) == 0x000008, "Wrong alignment on UBP_AJBIronsandCamouflage_C");
static_assert(sizeof(UBP_AJBIronsandCamouflage_C) == 0x000230, "Wrong size on UBP_AJBIronsandCamouflage_C");
static_assert(offsetof(UBP_AJBIronsandCamouflage_C, UberGraphFrame_BP_AJBIronsandCamouflage_C) == 0x000210, "Member 'UBP_AJBIronsandCamouflage_C::UberGraphFrame_BP_AJBIronsandCamouflage_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBIronsandCamouflage_C, bCamouflageOwner) == 0x000218, "Member 'UBP_AJBIronsandCamouflage_C::bCamouflageOwner' has a wrong offset!");
static_assert(offsetof(UBP_AJBIronsandCamouflage_C, CamouflageMaterialOwnerEnv) == 0x000220, "Member 'UBP_AJBIronsandCamouflage_C::CamouflageMaterialOwnerEnv' has a wrong offset!");
static_assert(offsetof(UBP_AJBIronsandCamouflage_C, ParticleEnd) == 0x000228, "Member 'UBP_AJBIronsandCamouflage_C::ParticleEnd' has a wrong offset!");

}


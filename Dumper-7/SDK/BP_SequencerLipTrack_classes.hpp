#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerLipTrack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ELipType_structs.hpp"
#include "BP_SequencerTrackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SequencerLipTrack.BP_SequencerLipTrack_C
// 0x0028 (0x0360 - 0x0338)
class ABP_SequencerLipTrack_C final : public ABP_SequencerTrackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SequencerLipTrack_C;             // 0x0338(0x0008)(Transient, DuplicateTransient)
	ELipType                                      Lip;                                               // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActors;                                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CachedSkeletalMeshComponents;                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_SequencerLipTrack(int32 EntryPoint);
	void SkipTrack();
	void PreviewCheckTargetActor();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void FindPreviewTargetActor(class ASkeletalMeshActor** TargetActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SequencerLipTrack_C">();
	}
	static class ABP_SequencerLipTrack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SequencerLipTrack_C>();
	}
};
static_assert(alignof(ABP_SequencerLipTrack_C) == 0x000008, "Wrong alignment on ABP_SequencerLipTrack_C");
static_assert(sizeof(ABP_SequencerLipTrack_C) == 0x000360, "Wrong size on ABP_SequencerLipTrack_C");
static_assert(offsetof(ABP_SequencerLipTrack_C, UberGraphFrame_BP_SequencerLipTrack_C) == 0x000338, "Member 'ABP_SequencerLipTrack_C::UberGraphFrame_BP_SequencerLipTrack_C' has a wrong offset!");
static_assert(offsetof(ABP_SequencerLipTrack_C, Lip) == 0x000340, "Member 'ABP_SequencerLipTrack_C::Lip' has a wrong offset!");
static_assert(offsetof(ABP_SequencerLipTrack_C, TargetActors) == 0x000348, "Member 'ABP_SequencerLipTrack_C::TargetActors' has a wrong offset!");
static_assert(offsetof(ABP_SequencerLipTrack_C, CachedSkeletalMeshComponents) == 0x000350, "Member 'ABP_SequencerLipTrack_C::CachedSkeletalMeshComponents' has a wrong offset!");

}


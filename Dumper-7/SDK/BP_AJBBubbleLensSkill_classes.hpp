#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBBubbleLensSkill

#include "Basic.hpp"

#include "BP_AJBLaserSkill_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBBubbleLensSkill.BP_AJBBubbleLensSkill_C
// 0x0020 (0x0318 - 0x02F8)
class UBP_AJBBubbleLensSkill_C final : public UBP_AJBLaserSkill_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBBubbleLensSkill_C;            // 0x02F8(0x0008)(Transient, DuplicateTransient)
	float                                         CameraSpeedScale;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedScaleOnAction;                            // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRateToVampire___;                            // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHamonRateEnabled;                                // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DamageDecal_BubbleLens_C*           LaserImpactDamageDecal;                            // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBBubbleLensSkill(int32 EntryPoint);
	void Hide_LaserSkillGuideUI();
	void Show_LaserSkillGuideUI();
	void RemoveInSkillCondition();
	void ApplyInSkillCondition();
	void GetVampireDamageRate(float* VampireDamageRate);
	void ShouldApplyHamonRateDirectly(bool* ShouldApplyDirectly);
	void IsHamonRateEnabledSkill(bool* IsEnabled);
	void Stop_LaserParticle_Impact();
	void Play_LaserParticle_Impact(const struct FVector& Location);
	void BeginState_Ready_Local();
	void EndState_Local();
	void GetLaserLaunchComponents(TArray<class USceneComponent*>* LaserLaunchComponents);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBBubbleLensSkill_C">();
	}
	static class UBP_AJBBubbleLensSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBBubbleLensSkill_C>();
	}
};
static_assert(alignof(UBP_AJBBubbleLensSkill_C) == 0x000008, "Wrong alignment on UBP_AJBBubbleLensSkill_C");
static_assert(sizeof(UBP_AJBBubbleLensSkill_C) == 0x000318, "Wrong size on UBP_AJBBubbleLensSkill_C");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, UberGraphFrame_BP_AJBBubbleLensSkill_C) == 0x0002F8, "Member 'UBP_AJBBubbleLensSkill_C::UberGraphFrame_BP_AJBBubbleLensSkill_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, CameraSpeedScale) == 0x000300, "Member 'UBP_AJBBubbleLensSkill_C::CameraSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, MoveSpeedScaleOnAction) == 0x000304, "Member 'UBP_AJBBubbleLensSkill_C::MoveSpeedScaleOnAction' has a wrong offset!");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, DamageRateToVampire___) == 0x000308, "Member 'UBP_AJBBubbleLensSkill_C::DamageRateToVampire___' has a wrong offset!");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, IsHamonRateEnabled) == 0x00030C, "Member 'UBP_AJBBubbleLensSkill_C::IsHamonRateEnabled' has a wrong offset!");
static_assert(offsetof(UBP_AJBBubbleLensSkill_C, LaserImpactDamageDecal) == 0x000310, "Member 'UBP_AJBBubbleLensSkill_C::LaserImpactDamageDecal' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_S28

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.ExecuteUbergraph_BP_AJBInGameStand_S28
// 0x0098 (0x0098 - 0x0000)
struct BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28");
static_assert(sizeof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28) == 0x000098, "Wrong size on BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, EntryPoint) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CustomEvent_NotifyName4) == 0x000008, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CustomEvent_NotifyName3) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CustomEvent_NotifyName2) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CreateDelegate_OutputDelegate2) == 0x000040, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CustomEvent_NotifyName1) == 0x000050, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CreateDelegate_OutputDelegate3) == 0x000058, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CustomEvent_NotifyName) == 0x000068, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, K2Node_CreateDelegate_OutputDelegate4) == 0x000070, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, Temp_name_Variable) == 0x000080, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000088, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_AJBInGameStand_S28_C_ExecuteUbergraph_BP_AJBInGameStand_S28::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(sizeof(BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong size on BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(offsetof(BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_OnCompleted_7ABC2DE74FF6C021DD5B6DB29CFDDE76::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(sizeof(BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong size on BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(offsetof(BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_OnBlendOut_7ABC2DE74FF6C021DD5B6DB29CFDDE76::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(sizeof(BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong size on BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(offsetof(BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_OnInterrupted_7ABC2DE74FF6C021DD5B6DB29CFDDE76::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(sizeof(BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong size on BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(offsetof(BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_OnNotifyBegin_7ABC2DE74FF6C021DD5B6DB29CFDDE76::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(sizeof(BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76) == 0x000008, "Wrong size on BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76");
static_assert(offsetof(BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76, NotifyName) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_OnNotifyEnd_7ABC2DE74FF6C021DD5B6DB29CFDDE76::NotifyName' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetStandAttackOffset
// 0x0058 (0x0058 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetStandAttackOffset final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandAttackOffset;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBRobSdSkill_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRushS28Skill_C*                  CallFunc_GetComponentByClass_ReturnValue1;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPoliticStandAttackOffset_StandAttackOffset; // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetStandAttackOffset) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetStandAttackOffset");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetStandAttackOffset) == 0x000058, "Wrong size on BP_AJBInGameStand_S28_C_GetStandAttackOffset");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, StandAttackOffset) == 0x000004, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, Temp_int_Variable) == 0x000018, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CallFunc_GetComponentByClass_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CallFunc_GetPoliticStandAttackOffset_StandAttackOffset) == 0x000048, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CallFunc_GetPoliticStandAttackOffset_StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetStandAttackOffset, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_AJBInGameStand_S28_C_GetStandAttackOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetAttackRange
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetAttackRange final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRange;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOperatingSeparatedStand_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBRobSdSkill_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRushS28Skill_C*                  CallFunc_GetComponentByClass_ReturnValue1;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPoliticStandAttackOffset_StandAttackOffset; // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetAttackRange) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetAttackRange");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetAttackRange) == 0x000078, "Wrong size on BP_AJBInGameStand_S28_C_GetAttackRange");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, AttackRange) == 0x000004, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::AttackRange' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, Temp_int_Variable) == 0x000024, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_IsOperatingSeparatedStand_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_IsOperatingSeparatedStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_GetComponentByClass_ReturnValue1) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, K2Node_Select_Default) == 0x000040, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_GetPoliticStandAttackOffset_StandAttackOffset) == 0x00004C, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_GetPoliticStandAttackOffset_StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius) == 0x000064, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, K2Node_Select1_Default) == 0x00006C, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackRange, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000074, "Member 'BP_AJBInGameStand_S28_C_GetAttackRange::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetAttackCollisionRadius
// 0x0048 (0x0048 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetAttackCollisionRadius final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBRobSdSkill_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBRushS28Skill_C*                  CallFunc_GetComponentByClass_ReturnValue1;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AJBCloseRangeSkill_C*               K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetAttackCollisionRadius");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius) == 0x000048, "Wrong size on BP_AJBInGameStand_S28_C_GetAttackCollisionRadius");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, Radius) == 0x000004, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, Temp_int_Variable) == 0x000010, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000018, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CallFunc_GetComponentByClass_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, K2Node_Select_Default) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius) == 0x000040, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CallFunc_GetPoliticAttackCollisionRadius_AttackCollisionRadius' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackCollisionRadius, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_AJBInGameStand_S28_C_GetAttackCollisionRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetAttackLocation
// 0x0078 (0x0078 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetAttackLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchedActorHomeLocation_Location;    // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x003C(0x000C)(IsPlainOldData, NoDestructor)
	class UBP_AJBCloseRangeSkill_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPoliticStandAttackOffset_StandAttackOffset; // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetAttackLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetAttackLocation");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetAttackLocation) == 0x000078, "Wrong size on BP_AJBInGameStand_S28_C_GetAttackLocation");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, TargetLocation) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, Location) == 0x00000C, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_GetLaunchedActorHomeLocation_Location) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_GetLaunchedActorHomeLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000030, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_FindLookAtRotation_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_GetPoliticStandAttackOffset_StandAttackOffset) == 0x000050, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_GetPoliticStandAttackOffset_StandAttackOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000060, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetAttackLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_AJBInGameStand_S28_C_GetAttackLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetLaunchedActorHomeLocation
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Character;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFixedLocation_Location;                // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppearance_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFixedLocation_Location1;               // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0054(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation) == 0x000060, "Wrong size on BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, Location) == 0x000004, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, Temp_bool_Variable) == 0x000018, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_AsBP_AJBIn_Game_Character) == 0x000020, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_AsBP_AJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_GetFixedLocation_Location) == 0x00002C, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_GetFixedLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_IsAppearance_ReturnValue) == 0x000039, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_IsAppearance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, CallFunc_GetFixedLocation_Location1) == 0x000048, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::CallFunc_GetFixedLocation_Location1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation, K2Node_Select_Default) == 0x000054, "Member 'BP_AJBInGameStand_S28_C_GetLaunchedActorHomeLocation::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetCloseRangeLaunchedActor
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor final
{
public:
	int32                                         CloseRangeSkillNo;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LaunchedActor;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor) == 0x000008, "Wrong alignment on BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor) == 0x000010, "Wrong size on BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor, CloseRangeSkillNo) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor::CloseRangeSkillNo' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor, LaunchedActor) == 0x000008, "Member 'BP_AJBInGameStand_S28_C_GetCloseRangeLaunchedActor::LaunchedActor' has a wrong offset!");

// Function BP_AJBInGameStand_S28.BP_AJBInGameStand_S28_C.GetDamageActorTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation) == 0x000004, "Wrong alignment on BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation");
static_assert(sizeof(BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation) == 0x00000C, "Wrong size on BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation");
static_assert(offsetof(BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation, Location) == 0x000000, "Member 'BP_AJBInGameStand_S28_C_GetDamageActorTargetLocation::Location' has a wrong offset!");

}


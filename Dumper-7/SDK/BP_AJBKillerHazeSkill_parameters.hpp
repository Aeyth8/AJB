#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKillerHazeSkill

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.ExecuteUbergraph_BP_AJBKillerHazeSkill
// 0x0030 (0x0030 - 0x0000)
struct BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_PPH_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocalSharedController_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill) == 0x000008, "Wrong alignment on BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill) == 0x000030, "Wrong size on BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, EntryPoint) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000008, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000010, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH) == 0x000020, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill, CallFunc_HasLocalSharedController_ReturnValue) == 0x000029, "Member 'BP_AJBKillerHazeSkill_C_ExecuteUbergraph_BP_AJBKillerHazeSkill::CallFunc_HasLocalSharedController_ReturnValue' has a wrong offset!");

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.TrySpawnKillerHazeAffecter
// 0x0060 (0x0060 - 0x0000)
struct BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PassiveSkillTime;                                  // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverridedScale;                                    // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SerialNumber_0;                                    // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveTime;                                        // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBVirusSmokeAffecterKillerHaze_C*  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter) == 0x000010, "Wrong alignment on BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter) == 0x000060, "Wrong size on BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, SpawnTransform) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, Owner) == 0x000030, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::Owner' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, PassiveSkillTime) == 0x000038, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::PassiveSkillTime' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, OverridedScale) == 0x00003C, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::OverridedScale' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, SerialNumber_0) == 0x000040, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::SerialNumber_0' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, ActiveTime) == 0x000044, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::ActiveTime' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_AJBKillerHazeSkill_C_TrySpawnKillerHazeAffecter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.AddToMultipleLocations
// 0x001C (0x001C - 0x0000)
struct BP_AJBKillerHazeSkill_C_AddToMultipleLocations final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSerialNumber;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations) == 0x000004, "Wrong alignment on BP_AJBKillerHazeSkill_C_AddToMultipleLocations");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations) == 0x00001C, "Wrong size on BP_AJBKillerHazeSkill_C_AddToMultipleLocations");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations, Location) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_AddToMultipleLocations::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations, Scale) == 0x00000C, "Member 'BP_AJBKillerHazeSkill_C_AddToMultipleLocations::Scale' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations, InSerialNumber) == 0x000010, "Member 'BP_AJBKillerHazeSkill_C_AddToMultipleLocations::InSerialNumber' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations, DelayTime) == 0x000014, "Member 'BP_AJBKillerHazeSkill_C_AddToMultipleLocations::DelayTime' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_AddToMultipleLocations, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AJBKillerHazeSkill_C_AddToMultipleLocations::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.GetPoliticActionTime
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBKillerHazeSkill_C_GetPoliticActionTime final
{
public:
	float                                         ActionTime;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_AJBGameplayTagOwnerInterface_C> K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetGameplayTags_TagContainerCopy;         // 0x0028(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPoliticActionTime_ActionTime;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime) == 0x000008, "Wrong alignment on BP_AJBKillerHazeSkill_C_GetPoliticActionTime");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime) == 0x000050, "Wrong size on BP_AJBKillerHazeSkill_C_GetPoliticActionTime");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, ActionTime) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::ActionTime' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface) == 0x000010, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::K2Node_DynamicCast_AsBI_AJBGameplay_Tag_Owner_Interface' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, CallFunc_GetGameplayTags_TagContainerCopy) == 0x000028, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::CallFunc_GetGameplayTags_TagContainerCopy' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, CallFunc_MatchesAnyTags_ReturnValue) == 0x000048, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_GetPoliticActionTime, CallFunc_GetPoliticActionTime_ActionTime) == 0x00004C, "Member 'BP_AJBKillerHazeSkill_C_GetPoliticActionTime::CallFunc_GetPoliticActionTime_ActionTime' has a wrong offset!");

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.CanUseSkill
// 0x0088 (0x0088 - 0x0000)
struct BP_AJBKillerHazeSkill_C_CanUseSkill final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          TempReturnValue;                                   // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TempFactorTagContainer;                            // 0x0028(0x0020)(Edit, BlueprintVisible)
	class AAJBInGameStand*                        CallFunc_GetOwnerStand_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_CanUseSkill_TagContainer;                 // 0x0050(0x0020)()
	bool                                          CallFunc_CanUseSkill_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameStand_PPH_C*               K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PossibleDecreaseCapsule_bPossibleDecrease; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_CanUseSkill) == 0x000008, "Wrong alignment on BP_AJBKillerHazeSkill_C_CanUseSkill");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_CanUseSkill) == 0x000088, "Wrong size on BP_AJBKillerHazeSkill_C_CanUseSkill");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, TagContainer) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, ReturnValue) == 0x000020, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, TempReturnValue) == 0x000021, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::TempReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, TempFactorTagContainer) == 0x000028, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::TempFactorTagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, CallFunc_GetOwnerStand_ReturnValue) == 0x000048, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::CallFunc_GetOwnerStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, CallFunc_CanUseSkill_TagContainer) == 0x000050, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::CallFunc_CanUseSkill_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, CallFunc_CanUseSkill_ReturnValue) == 0x000070, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::CallFunc_CanUseSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH) == 0x000078, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::K2Node_DynamicCast_AsBP_AJBIn_Game_Stand_PPH' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, CallFunc_PossibleDecreaseCapsule_bPossibleDecrease) == 0x000081, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::CallFunc_PossibleDecreaseCapsule_bPossibleDecrease' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_CanUseSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'BP_AJBKillerHazeSkill_C_CanUseSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AJBKillerHazeSkill.BP_AJBKillerHazeSkill_C.IsInPreview
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBKillerHazeSkill_C_IsInPreview final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPreview_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBKillerHazeSkill_C_IsInPreview) == 0x000001, "Wrong alignment on BP_AJBKillerHazeSkill_C_IsInPreview");
static_assert(sizeof(BP_AJBKillerHazeSkill_C_IsInPreview) == 0x000004, "Wrong size on BP_AJBKillerHazeSkill_C_IsInPreview");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_IsInPreview, ReturnValue) == 0x000000, "Member 'BP_AJBKillerHazeSkill_C_IsInPreview::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_IsInPreview, CallFunc_IsInPreview_ReturnValue) == 0x000001, "Member 'BP_AJBKillerHazeSkill_C_IsInPreview::CallFunc_IsInPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_IsInPreview, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AJBKillerHazeSkill_C_IsInPreview::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBKillerHazeSkill_C_IsInPreview, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_AJBKillerHazeSkill_C_IsInPreview::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBTutorialTriggerSender_Character

#include "Basic.hpp"

#include "BP_AJBTutorialTriggerSender_classes.hpp"
#include "Engine_structs.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBTutorialTriggerSender_Character.BP_AJBTutorialTriggerSender_Character_C
// 0x0050 (0x0150 - 0x0100)
class UBP_AJBTutorialTriggerSender_Character_C final : public UBP_AJBTutorialTriggerSender_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBTutorialTriggerSender_Character_C; // 0x0100(0x0008)(Transient, DuplicateTransient)
	class ABP_AJBInGameCharacter_C*               PlayerCharacterBP;                                 // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LastDefeatedEnemy;                                 // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeFromLastDefeating;                      // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JudgeTimeToStayMurderScene;                        // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MurderSceneRadius_cm_;                             // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBInGameCharacter_C*>       AICharacters;                                      // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         AttackRangeRadius_cm_;                             // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRangeDotProduct;                             // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnemyIsNearlyInAttackRange;                       // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ContinuousTimeEnemyIsInAttackRange;                // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSecToPromptAttack;                             // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugMode;                                        // 0x014C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBTutorialTriggerSender_Character(int32 EntryPoint);
	void OnSkillFailedToUse(const struct FGameplayTagContainer& FactorTags);
	void OnSkillActivated(class UBP_AJBSkillBase_C* ActivatedSkill);
	void OnSkillMissed_Player(const struct FGameplayTag& SkillTag, bool bHitObject);
	void OnGiveDamage_Player(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageReceiver, bool bRemainHP, bool bDamageIsCut, int32 SerialNumber, bool DamageReceiverIsPlayer, bool bWithSeparatedStandAttack, bool bEnemysSeparateStand, bool bSelfDamage, bool IsEndured);
	void OnHPChanged_Player(int32 HP);
	void OnSkillUnlocked_Player(EAJBSkillType SkillType);
	void OnGetItem_Player(const struct FGameplayTag& ItemTag);
	void OnControlCamera_Player();
	void OnMove_Player();
	void OnJump_Player();
	void OnCrouch_Player();
	void OnReceiveDamage_Player(int32 Damage, const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bRemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP, bool IsEndured);
	void BindAICharacterEvents(class ABP_AJBInGameCharacter_C* CharacterBP);
	void BindPlayerCharacterEvents(class ABP_AJBInGameCharacter_C* CharacterBP);
	void OnCharacterDead_CPU(const struct FGameplayTag& DamageType, class AActor* DeadActor, class AActor* DamageCauser);
	void BindOwnerActorEvents();
	void RecreateAIArrayForDebug();
	void OnOpenTheGame();
	void OnTick_JudgeEnemyIsNearlyInAttackRange(float DeltaSeconds);
	void OnTick_JudgeToStayMurderScene(float DeltaSeconds);
	void ReceiveTick(float DeltaSeconds);
	void SendTutorialTrigger_ReceivedDamage(const struct FGameplayTag& DamageType, class AActor* DamageCauser, bool bIsRemainHP, bool bDamageIsCutByStatus, bool bDamageIsCutByAAP);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBTutorialTriggerSender_Character_C">();
	}
	static class UBP_AJBTutorialTriggerSender_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBTutorialTriggerSender_Character_C>();
	}
};
static_assert(alignof(UBP_AJBTutorialTriggerSender_Character_C) == 0x000008, "Wrong alignment on UBP_AJBTutorialTriggerSender_Character_C");
static_assert(sizeof(UBP_AJBTutorialTriggerSender_Character_C) == 0x000150, "Wrong size on UBP_AJBTutorialTriggerSender_Character_C");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, UberGraphFrame_BP_AJBTutorialTriggerSender_Character_C) == 0x000100, "Member 'UBP_AJBTutorialTriggerSender_Character_C::UberGraphFrame_BP_AJBTutorialTriggerSender_Character_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, PlayerCharacterBP) == 0x000108, "Member 'UBP_AJBTutorialTriggerSender_Character_C::PlayerCharacterBP' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, LastDefeatedEnemy) == 0x000110, "Member 'UBP_AJBTutorialTriggerSender_Character_C::LastDefeatedEnemy' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, ElapsedTimeFromLastDefeating) == 0x000118, "Member 'UBP_AJBTutorialTriggerSender_Character_C::ElapsedTimeFromLastDefeating' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, JudgeTimeToStayMurderScene) == 0x00011C, "Member 'UBP_AJBTutorialTriggerSender_Character_C::JudgeTimeToStayMurderScene' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, MurderSceneRadius_cm_) == 0x000120, "Member 'UBP_AJBTutorialTriggerSender_Character_C::MurderSceneRadius_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, AICharacters) == 0x000128, "Member 'UBP_AJBTutorialTriggerSender_Character_C::AICharacters' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, AttackRangeRadius_cm_) == 0x000138, "Member 'UBP_AJBTutorialTriggerSender_Character_C::AttackRangeRadius_cm_' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, AttackRangeDotProduct) == 0x00013C, "Member 'UBP_AJBTutorialTriggerSender_Character_C::AttackRangeDotProduct' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, bEnemyIsNearlyInAttackRange) == 0x000140, "Member 'UBP_AJBTutorialTriggerSender_Character_C::bEnemyIsNearlyInAttackRange' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, ContinuousTimeEnemyIsInAttackRange) == 0x000144, "Member 'UBP_AJBTutorialTriggerSender_Character_C::ContinuousTimeEnemyIsInAttackRange' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, TimeSecToPromptAttack) == 0x000148, "Member 'UBP_AJBTutorialTriggerSender_Character_C::TimeSecToPromptAttack' has a wrong offset!");
static_assert(offsetof(UBP_AJBTutorialTriggerSender_Character_C, bDebugMode) == 0x00014C, "Member 'UBP_AJBTutorialTriggerSender_Character_C::bDebugMode' has a wrong offset!");

}


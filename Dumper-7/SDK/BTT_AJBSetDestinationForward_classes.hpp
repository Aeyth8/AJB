#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AJBSetDestinationForward

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_AJBSetDestinationForward.BTT_AJBSetDestinationForward_C
// 0x0068 (0x0108 - 0x00A0)
class UBTT_AJBSetDestinationForward_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(Transient, DuplicateTransient)
	float                                         Distance;                                          // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 DestinationKey;                                    // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBlackboardKeySelector                 RO_LookForDirKey;                                  // 0x00D8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                          bUseLookForDir;                                    // 0x0100(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BTT_AJBSetDestinationForward(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_AJBSetDestinationForward_C">();
	}
	static class UBTT_AJBSetDestinationForward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_AJBSetDestinationForward_C>();
	}
};
static_assert(alignof(UBTT_AJBSetDestinationForward_C) == 0x000008, "Wrong alignment on UBTT_AJBSetDestinationForward_C");
static_assert(sizeof(UBTT_AJBSetDestinationForward_C) == 0x000108, "Wrong size on UBTT_AJBSetDestinationForward_C");
static_assert(offsetof(UBTT_AJBSetDestinationForward_C, UberGraphFrame) == 0x0000A0, "Member 'UBTT_AJBSetDestinationForward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_AJBSetDestinationForward_C, Distance) == 0x0000A8, "Member 'UBTT_AJBSetDestinationForward_C::Distance' has a wrong offset!");
static_assert(offsetof(UBTT_AJBSetDestinationForward_C, DestinationKey) == 0x0000B0, "Member 'UBTT_AJBSetDestinationForward_C::DestinationKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBSetDestinationForward_C, RO_LookForDirKey) == 0x0000D8, "Member 'UBTT_AJBSetDestinationForward_C::RO_LookForDirKey' has a wrong offset!");
static_assert(offsetof(UBTT_AJBSetDestinationForward_C, bUseLookForDir) == 0x000100, "Member 'UBTT_AJBSetDestinationForward_C::bUseLookForDir' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Compass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WB_Compass.WB_Compass_C.ExecuteUbergraph_WB_Compass
// 0x0120 (0x0120 - 0x0000)
struct WB_Compass_C_ExecuteUbergraph_WB_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0xA];                                        // 0x0006(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition1;            // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LandmarkableMap_C*                  K2Node_CustomEvent_MapWidget1;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalTypeTag1;                 // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NormalizedPosition;             // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  K2Node_CustomEvent_MapWidget;                      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_SignalTypeTag;                  // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromMap;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_bIsValid;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameHUD*                          CallFunc_GetAJBInGameHUD_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_AJBInGameHUD_C>    K2Node_DynamicCast_AsBI_AJBIn_Game_HUD;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBUIMapManager_C*                  CallFunc_GetUIMapManager_Manager;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AJBUIMapManager_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_PlayModeIsPair_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBUIMapManager_C*                  CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue1;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue2;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue1;   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Compass_C_ExecuteUbergraph_WB_Compass) == 0x000010, "Wrong alignment on WB_Compass_C_ExecuteUbergraph_WB_Compass");
static_assert(sizeof(WB_Compass_C_ExecuteUbergraph_WB_Compass) == 0x000120, "Wrong size on WB_Compass_C_ExecuteUbergraph_WB_Compass");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, EntryPoint) == 0x000000, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_byte_Variable) == 0x000004, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_byte_Variable1) == 0x000005, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_NormalizedPosition1) == 0x000054, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_NormalizedPosition1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_MapWidget1) == 0x000060, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_MapWidget1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_SignalTypeTag1) == 0x000068, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_SignalTypeTag1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_NormalizedPosition) == 0x000070, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_NormalizedPosition' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_MapWidget) == 0x000078, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_MapWidget' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_SignalTypeTag) == 0x000080, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_SignalTypeTag' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_CustomEvent_FromMap) == 0x000088, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_CustomEvent_FromMap' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetAJBInGameHUD_bIsValid) == 0x000089, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetAJBInGameHUD_bIsValid' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetAJBInGameHUD_ReturnValue) == 0x000090, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetAJBInGameHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_bool_Variable) == 0x000098, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_DynamicCast_AsBI_AJBIn_Game_HUD) == 0x0000A0, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_DynamicCast_AsBI_AJBIn_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetUIMapManager_Manager) == 0x0000B8, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetUIMapManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_bool_Variable1) == 0x0000C0, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_PlayModeIsPair_ReturnValue) == 0x0000D8, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_PlayModeIsPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_byte_Variable2) == 0x0000EC, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_Greater_IntInt_ReturnValue) == 0x0000ED, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, Temp_byte_Variable3) == 0x0000EE, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000F0, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_Select_Default) == 0x0000F8, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetDynamicMaterial_ReturnValue1) == 0x000100, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetDynamicMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_GetDynamicMaterial_ReturnValue2) == 0x000108, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_GetDynamicMaterial_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, CallFunc_NotEqual_Vector2DVector2D_ReturnValue1) == 0x000110, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::CallFunc_NotEqual_Vector2DVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_ExecuteUbergraph_WB_Compass, K2Node_Select1_Default) == 0x000111, "Member 'WB_Compass_C_ExecuteUbergraph_WB_Compass::K2Node_Select1_Default' has a wrong offset!");

// Function WB_Compass.WB_Compass_C.OnStickedPlayerMarker
// 0x0020 (0x0020 - 0x0000)
struct WB_Compass_C_OnStickedPlayerMarker final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  MapWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          FromMap;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Compass_C_OnStickedPlayerMarker) == 0x000008, "Wrong alignment on WB_Compass_C_OnStickedPlayerMarker");
static_assert(sizeof(WB_Compass_C_OnStickedPlayerMarker) == 0x000020, "Wrong size on WB_Compass_C_OnStickedPlayerMarker");
static_assert(offsetof(WB_Compass_C_OnStickedPlayerMarker, NormalizedPosition) == 0x000000, "Member 'WB_Compass_C_OnStickedPlayerMarker::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_OnStickedPlayerMarker, MapWidget) == 0x000008, "Member 'WB_Compass_C_OnStickedPlayerMarker::MapWidget' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_OnStickedPlayerMarker, SignalTypeTag) == 0x000010, "Member 'WB_Compass_C_OnStickedPlayerMarker::SignalTypeTag' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_OnStickedPlayerMarker, FromMap) == 0x000018, "Member 'WB_Compass_C_OnStickedPlayerMarker::FromMap' has a wrong offset!");

// Function WB_Compass.WB_Compass_C.OnStickedPairMarker
// 0x0018 (0x0018 - 0x0000)
struct WB_Compass_C_OnStickedPairMarker final
{
public:
	struct FVector2D                              NormalizedPosition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_LandmarkableMap_C*                  MapWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SignalTypeTag;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Compass_C_OnStickedPairMarker) == 0x000008, "Wrong alignment on WB_Compass_C_OnStickedPairMarker");
static_assert(sizeof(WB_Compass_C_OnStickedPairMarker) == 0x000018, "Wrong size on WB_Compass_C_OnStickedPairMarker");
static_assert(offsetof(WB_Compass_C_OnStickedPairMarker, NormalizedPosition) == 0x000000, "Member 'WB_Compass_C_OnStickedPairMarker::NormalizedPosition' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_OnStickedPairMarker, MapWidget) == 0x000008, "Member 'WB_Compass_C_OnStickedPairMarker::MapWidget' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_OnStickedPairMarker, SignalTypeTag) == 0x000010, "Member 'WB_Compass_C_OnStickedPairMarker::SignalTypeTag' has a wrong offset!");

// Function WB_Compass.WB_Compass_C.Update
// 0x0018 (0x0018 - 0x0000)
struct WB_Compass_C_Update final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCompassWaypoint_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCompassWaypoint_ReturnValue1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Compass_C_Update) == 0x000004, "Wrong alignment on WB_Compass_C_Update");
static_assert(sizeof(WB_Compass_C_Update) == 0x000018, "Wrong size on WB_Compass_C_Update");
static_assert(offsetof(WB_Compass_C_Update, Yaw) == 0x000000, "Member 'WB_Compass_C_Update::Yaw' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WB_Compass_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_IsValid_ReturnValue1) == 0x000005, "Member 'WB_Compass_C_Update::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_IsValid_ReturnValue2) == 0x000006, "Member 'WB_Compass_C_Update::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_GetCompassWaypoint_ReturnValue) == 0x000008, "Member 'WB_Compass_C_Update::CallFunc_GetCompassWaypoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_GetCompassWaypoint_ReturnValue1) == 0x00000C, "Member 'WB_Compass_C_Update::CallFunc_GetCompassWaypoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_Compass_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Compass_C_Update, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000014, "Member 'WB_Compass_C_Update::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

}


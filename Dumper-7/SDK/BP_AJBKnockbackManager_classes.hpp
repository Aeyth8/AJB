#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBKnockbackManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "BP_AJBComponentBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBKnockbackManager.BP_AJBKnockbackManager_C
// 0x0010 (0x0100 - 0x00F0)
class UBP_AJBKnockbackManager_C final : public UBP_AJBComponentBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	bool                                          UseLaunchInsteadOfImpulse;                         // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EAJBKnockbackStrategy                         KnockbackStrategy;                                 // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBKnockbackManager(int32 EntryPoint);
	void AddKnockbackResistPassive(class UObject* Operator, const struct FGameplayTag& PassiveTag, const struct FGameplayTag& CauserType);
	void Knockback(const struct FVector& Direction, float Power);
	void ApplyTargetKnockbackRate(class AActor* TargetActor, float BasePower, float* Power);
	void RequestKnockback_Server(class UObject* Causer, const struct FVector& Direction, float KnockbackBasePower, const struct FGameplayTag& CauserTag, const struct FGameplayTag& ResistPassiveTag, bool* Success);
	void IsKnockbackTarget(class UObject* Causer, bool* IsTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBKnockbackManager_C">();
	}
	static class UBP_AJBKnockbackManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBKnockbackManager_C>();
	}
};
static_assert(alignof(UBP_AJBKnockbackManager_C) == 0x000008, "Wrong alignment on UBP_AJBKnockbackManager_C");
static_assert(sizeof(UBP_AJBKnockbackManager_C) == 0x000100, "Wrong size on UBP_AJBKnockbackManager_C");
static_assert(offsetof(UBP_AJBKnockbackManager_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBKnockbackManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBKnockbackManager_C, UseLaunchInsteadOfImpulse) == 0x0000F8, "Member 'UBP_AJBKnockbackManager_C::UseLaunchInsteadOfImpulse' has a wrong offset!");
static_assert(offsetof(UBP_AJBKnockbackManager_C, KnockbackStrategy) == 0x0000F9, "Member 'UBP_AJBKnockbackManager_C::KnockbackStrategy' has a wrong offset!");

}


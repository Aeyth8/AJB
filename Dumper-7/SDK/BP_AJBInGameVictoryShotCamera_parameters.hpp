#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameVictoryShotCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.ExecuteUbergraph_BP_AJBInGameVictoryShotCamera
// 0x01A8 (0x01A8 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable4;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value3;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x006C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value1;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x008C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable6;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue1;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraConfigScale_UpDownScale;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraConfigScale_RightLeftScale;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraConfigScale_UpDownScale1;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraConfigScale_RightLeftScale1;    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacterBase*                K2Node_CustomEvent_LastOwningCharacter;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable7;                              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value;                                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0114(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Select2_Default;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select3_Default;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue2;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeStateFromPlayerController_ReturnValue; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               CallFunc_GetAJBCharacterFromActor_CharacterBP;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBCharacterFromActor_bSuccess;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select4_Default;                            // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGamePlayerController_C*        K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera) == 0x000008, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera) == 0x0001A8, "Wrong size on BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, EntryPoint) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_bool_Variable) == 0x000004, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable) == 0x000008, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable1) == 0x00000C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_bool_Variable1) == 0x000010, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable2) == 0x000014, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable3) == 0x000018, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable4) == 0x000030, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Event_Value3) == 0x000038, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Event_Value3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetActorRightVector_ReturnValue) == 0x00003C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Event_Value2) == 0x000048, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Event_Value2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable5) == 0x000050, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_bool_Variable2) == 0x000054, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000058, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000068, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetControlRotation_ReturnValue) == 0x00006C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000078, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Event_Value1) == 0x000088, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Event_Value1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_MakeRotator_ReturnValue) == 0x00008C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable6) == 0x0000A4, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetWorldDeltaSeconds_ReturnValue1) == 0x0000A8, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetWorldDeltaSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0000AC, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B0, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0000BC, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_CalcCameraConfigScale_UpDownScale) == 0x0000C0, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_CalcCameraConfigScale_UpDownScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_CalcCameraConfigScale_RightLeftScale) == 0x0000C4, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_CalcCameraConfigScale_RightLeftScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_CalcCameraConfigScale_UpDownScale1) == 0x0000C8, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_CalcCameraConfigScale_UpDownScale1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_CalcCameraConfigScale_RightLeftScale1) == 0x0000CC, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_CalcCameraConfigScale_RightLeftScale1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x0000D0, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x0000D4, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D8, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_CustomEvent_LastOwningCharacter) == 0x0000E8, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_CustomEvent_LastOwningCharacter' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_float_Variable7) == 0x0000F4, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_float_Variable7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Event_Value) == 0x0000F8, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_IsServer_ReturnValue) == 0x0000FC, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Event_DeltaSeconds) == 0x000100, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_bool_Variable3) == 0x000104, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Select_Default) == 0x000108, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Select1_Default) == 0x00010C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_MakeVector_ReturnValue) == 0x000114, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_CreateDelegate_OutputDelegate1) == 0x000120, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Select2_Default) == 0x000130, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Select3_Default) == 0x000134, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetWorldDeltaSeconds_ReturnValue2) == 0x000138, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetWorldDeltaSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Add_FloatFloat_ReturnValue1) == 0x00013C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x000140, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x000144, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000148, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_FClamp_ReturnValue) == 0x00014C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_IsValid_ReturnValue1) == 0x000150, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000151, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000158, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_ChangeStateFromPlayerController_ReturnValue) == 0x000160, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_ChangeStateFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_IsDedicatedServer_ReturnValue) == 0x000161, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, Temp_bool_Variable4) == 0x000162, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetAJBCharacterFromActor_CharacterBP) == 0x000168, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetAJBCharacterFromActor_CharacterBP' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_GetAJBCharacterFromActor_bSuccess) == 0x000170, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_GetAJBCharacterFromActor_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_Select4_Default) == 0x000174, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Normal_ReturnValue) == 0x000180, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00018C, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller) == 0x000198, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_DynamicCast_AsBP_AJBIn_Game_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_AJBInGameVictoryShotCamera_C_ExecuteUbergraph_BP_AJBInGameVictoryShotCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_ReceiveTick");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_ReceiveTick");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.MoveForward
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_MoveForward final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_MoveForward) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_MoveForward");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_MoveForward) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_MoveForward");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_MoveForward, Value) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_MoveForward::Value' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.ROC_PreparePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed final
{
public:
	class AAJBInGameCharacterBase*                LastOwningCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed) == 0x000008, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed) == 0x000008, "Wrong size on BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed, LastOwningCharacter) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_ROC_PreparePossessed::LastOwningCharacter' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.LookupRate
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_LookupRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_LookupRate) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_LookupRate");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_LookupRate) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_LookupRate");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_LookupRate, Value) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_LookupRate::Value' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.TurnRate
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_TurnRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_TurnRate) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_TurnRate");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_TurnRate) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_TurnRate");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_TurnRate, Value) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_TurnRate::Value' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.MoveRight
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_MoveRight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_MoveRight) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_MoveRight");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_MoveRight) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_MoveRight");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_MoveRight, Value) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_MoveRight::Value' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.CalcCameraConfigScale
// 0x0038 (0x0038 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale final
{
public:
	float                                         UpDownScale;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightLeftScale;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable2;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBGameInstance_bSuccess;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBGameInstance_C*                  CallFunc_GetAJBGameInstance_AJB_Game_Instance;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale) == 0x000008, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale) == 0x000038, "Wrong size on BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, UpDownScale) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::UpDownScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, RightLeftScale) == 0x000004, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::RightLeftScale' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_bool_Variable) == 0x000008, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_float_Variable) == 0x00000C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_float_Variable1) == 0x000010, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_bool_Variable1) == 0x000014, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_float_Variable2) == 0x000018, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, Temp_float_Variable3) == 0x00001C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, CallFunc_GetAJBGameInstance_bSuccess) == 0x000020, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::CallFunc_GetAJBGameInstance_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, CallFunc_GetAJBGameInstance_AJB_Game_Instance) == 0x000028, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::CallFunc_GetAJBGameInstance_AJB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, K2Node_Select_Default) == 0x000030, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale, K2Node_Select1_Default) == 0x000034, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcCameraConfigScale::K2Node_Select1_Default' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.RollCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_RollCamera final
{
public:
	bool                                          bright;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TempValue;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcRollValue_bPossibleRoll;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcRollValue_OutValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_RollCamera) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_RollCamera");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_RollCamera) == 0x000010, "Wrong size on BP_AJBInGameVictoryShotCamera_C_RollCamera");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCamera, bright) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCamera::bright' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCamera, TempValue) == 0x000004, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCamera::TempValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCamera, CallFunc_CalcRollValue_bPossibleRoll) == 0x000008, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCamera::CallFunc_CalcRollValue_bPossibleRoll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCamera, CallFunc_CalcRollValue_OutValue) == 0x00000C, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCamera::CallFunc_CalcRollValue_OutValue' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.CalcRollValue
// 0x0068 (0x0068 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_CalcRollValue final
{
public:
	bool                                          bright;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPossibleRoll;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempExcessValue;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempAfterRoll;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempValue;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable3;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_CalcRollValue");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue) == 0x000068, "Wrong size on BP_AJBInGameVictoryShotCamera_C_CalcRollValue");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, bright) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::bright' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, bPossibleRoll) == 0x000001, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::bPossibleRoll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, OutValue) == 0x000004, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::OutValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, TempExcessValue) == 0x000008, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::TempExcessValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, TempAfterRoll) == 0x00000C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::TempAfterRoll' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, TempValue) == 0x000010, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::TempValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_bool_Variable) == 0x000014, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_bool_Variable1) == 0x000015, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_bool_Variable2) == 0x000016, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_float_Variable) == 0x000018, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_float_Variable1) == 0x00001C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_float_Variable2) == 0x000020, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, K2Node_Select_Default) == 0x00002C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000030, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000034, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_float_Variable3) == 0x000038, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, K2Node_Select1_Default) == 0x00003C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, K2Node_Select2_Default) == 0x000044, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, Temp_bool_Variable3) == 0x000048, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, K2Node_Select3_Default) == 0x00004C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000050, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00005C, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000060, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_CalcRollValue, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000064, "Member 'BP_AJBInGameVictoryShotCamera_C_CalcRollValue::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.ResetCameraRoll
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll) == 0x000004, "Wrong size on BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_ResetCameraRoll::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AJBInGameVictoryShotCamera.BP_AJBInGameVictoryShotCamera_C.RollCameraCore
// 0x0008 (0x0008 - 0x0000)
struct BP_AJBInGameVictoryShotCamera_C_RollCameraCore final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBInGameVictoryShotCamera_C_RollCameraCore) == 0x000004, "Wrong alignment on BP_AJBInGameVictoryShotCamera_C_RollCameraCore");
static_assert(sizeof(BP_AJBInGameVictoryShotCamera_C_RollCameraCore) == 0x000008, "Wrong size on BP_AJBInGameVictoryShotCamera_C_RollCameraCore");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCameraCore, InValue) == 0x000000, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCameraCore::InValue' has a wrong offset!");
static_assert(offsetof(BP_AJBInGameVictoryShotCamera_C_RollCameraCore, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AJBInGameVictoryShotCamera_C_RollCameraCore::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}


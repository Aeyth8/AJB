#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBOutGameProxy

#include "Basic.hpp"

#include "BP_AJBOutGameProxy_classes.hpp"
#include "BP_AJBOutGameProxy_parameters.hpp"


namespace SDK
{

// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ExecuteUbergraph_BP_AJBOutGameProxy
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ExecuteUbergraph_BP_AJBOutGameProxy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ExecuteUbergraph_BP_AJBOutGameProxy");

	Params::BP_AJBOutGameProxy_C_ExecuteUbergraph_BP_AJBOutGameProxy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_SendClientReplicated
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   SelectedCharacterID                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_SendClientReplicated(uint8 SelectedCharacterID, const class FString& CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_SendClientReplicated");

	Params::BP_AJBOutGameProxy_C_ROS_SendClientReplicated Parms{};

	Parms.SelectedCharacterID = SelectedCharacterID;
	Parms.CustomData = std::move(CustomData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_OnStopMatching
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROS_OnStopMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_OnStopMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_UpdateDamageAreaInfo
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaTypeID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   DamageAreaCenter                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageAreaRadius                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SelectAreaSize                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AreaRangeLimit                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_UpdateDamageAreaInfo(int32 AreaTypeID, const struct FVector& DamageAreaCenter, float DamageAreaRadius, float SelectAreaSize, float AreaRangeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_UpdateDamageAreaInfo");

	Params::BP_AJBOutGameProxy_C_ROC_UpdateDamageAreaInfo Parms{};

	Parms.AreaTypeID = AreaTypeID;
	Parms.DamageAreaCenter = std::move(DamageAreaCenter);
	Parms.DamageAreaRadius = DamageAreaRadius;
	Parms.SelectAreaSize = SelectAreaSize;
	Parms.AreaRangeLimit = AreaRangeLimit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_UpdateDamageAreaInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROS_UpdateDamageAreaInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_UpdateDamageAreaInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_LoginOtherPlayer
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_LoginOtherPlayer(int32 PlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_LoginOtherPlayer");

	Params::BP_AJBOutGameProxy_C_ROC_LoginOtherPlayer Parms{};

	Parms.PlayerNum = PlayerNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_ResponseInGameInfo
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDateTime&                 MatchEndTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_ResponseInGameInfo(const struct FDateTime& MatchEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_ResponseInGameInfo");

	Params::BP_AJBOutGameProxy_C_ROC_ResponseInGameInfo Parms{};

	Parms.MatchEndTime = std::move(MatchEndTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_ResponseSelectEndTime
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDateTime&                 EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_ResponseSelectEndTime(const struct FDateTime& EndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_ResponseSelectEndTime");

	Params::BP_AJBOutGameProxy_C_ROC_ResponseSelectEndTime Parms{};

	Parms.EndTime = std::move(EndTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_RequestSelectEndTime
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROS_RequestSelectEndTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_RequestSelectEndTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_TimeOutSelectStartLocation
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROC_TimeOutSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_TimeOutSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.CheckTimeoutSelectStartLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::CheckTimeoutSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "CheckTimeoutSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_BeginSelectStartLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROS_BeginSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_BeginSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnCheckMatching
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnCheckMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnCheckMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_StartMatching
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_StartMatching(uint8 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_StartMatching");

	Params::BP_AJBOutGameProxy_C_ROS_StartMatching Parms{};

	Parms.CharacterID = CharacterID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_FinishMatching
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ROC_FinishMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_FinishMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_UpdateMatchingNPC
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Charactor_ID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   StartLocationX                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   StartLocationY                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   CheckIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_UpdateMatchingNPC(uint8 Team_ID, uint8 Charactor_ID, uint8 StartLocationX, uint8 StartLocationY, uint8 CheckIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_UpdateMatchingNPC");

	Params::BP_AJBOutGameProxy_C_ROC_UpdateMatchingNPC Parms{};

	Parms.Team_ID = Team_ID;
	Parms.Charactor_ID = Charactor_ID;
	Parms.StartLocationX = StartLocationX;
	Parms.StartLocationY = StartLocationY;
	Parms.CheckIndex = CheckIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_UpdateMatchingNPC
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   CheckIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_UpdateMatchingNPC(uint8 CheckIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_UpdateMatchingNPC");

	Params::BP_AJBOutGameProxy_C_ROS_UpdateMatchingNPC Parms{};

	Parms.CheckIndex = CheckIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestUpdateMatchingData
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestUpdateMatchingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestUpdateMatchingData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestUpdateMatchingPlayerInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestUpdateMatchingPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestUpdateMatchingPlayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_ResponseMatchingPlayerInfo
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// uint8                                   Charactor_ID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   CheckIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_ResponseMatchingPlayerInfo(uint8 PlayerID, uint8 Team_ID, const class FString& Name_0, uint8 Charactor_ID, uint8 CheckIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_ResponseMatchingPlayerInfo");

	Params::BP_AJBOutGameProxy_C_ROC_ResponseMatchingPlayerInfo Parms{};

	Parms.PlayerID = PlayerID;
	Parms.Team_ID = Team_ID;
	Parms.Name_0 = std::move(Name_0);
	Parms.Charactor_ID = Charactor_ID;
	Parms.CheckIndex = CheckIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_RequestMatchingPlayerInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   CheckIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_RequestMatchingPlayerInfo(uint8 CheckIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_RequestMatchingPlayerInfo");

	Params::BP_AJBOutGameProxy_C_ROS_RequestMatchingPlayerInfo Parms{};

	Parms.CheckIndex = CheckIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_SelectedStartLocation
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// EResultStartLocation                    Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Player_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_SelectedStartLocation(EResultStartLocation Result, uint8 Player_ID, uint8 X, uint8 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_SelectedStartLocation");

	Params::BP_AJBOutGameProxy_C_ROC_SelectedStartLocation Parms{};

	Parms.Result = Result;
	Parms.Player_ID = Player_ID;
	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_SelectStartLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_SelectStartLocation(uint8 PlayerID, uint8 X, uint8 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_SelectStartLocation");

	Params::BP_AJBOutGameProxy_C_ROS_SelectStartLocation Parms{};

	Parms.PlayerID = PlayerID;
	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotHeldMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnNotHeldMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotHeldMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnSuccessBreakupmatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnSuccessBreakupmatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnSuccessBreakupmatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.GotoInGame
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::GotoInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "GotoInGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.WaitStartMatching
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::WaitStartMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "WaitStartMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnServerError
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnServerError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnServerError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnFaildMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnFaildMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnFaildMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.GameServer_CheckTimeOutSelectStartLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::GameServer_CheckTimeOutSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "GameServer_CheckTimeOutSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnFinishedSelectedStartLocation
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnFinishedSelectedStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnFinishedSelectedStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnUpdateNPCInfo
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnUpdateNPCInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnUpdateNPCInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnCheckMatching_Local
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnCheckMatching_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnCheckMatching_Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnStartMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnStartMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnStartMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnUpdateMatchingStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bComplete                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnUpdateMatchingStatus(bool bComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnUpdateMatchingStatus");

	Params::BP_AJBOutGameProxy_C_OnUpdateMatchingStatus Parms{};

	Parms.bComplete = bComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseSelectStartLocation
// (Event, Public, BlueprintEvent)
// Parameters:
// EResultStartLocation                    Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    UserID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnResponseSelectStartLocation(EResultStartLocation Result, int32 X, int32 Y, const class FString& UserID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseSelectStartLocation");

	Params::BP_AJBOutGameProxy_C_OnResponseSelectStartLocation Parms{};

	Parms.Result = Result;
	Parms.X = X;
	Parms.Y = Y;
	Parms.UserID = std::move(UserID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseDeletePairIDMatch
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseDeletePairIDMatch(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseDeletePairIDMatch");

	Params::BP_AJBOutGameProxy_C_OnResponseDeletePairIDMatch Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseTimeoutPairIDMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnResponseTimeoutPairIDMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseTimeoutPairIDMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponsePairIDMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnResponsePairIDMatching(bool bSuccessMatching, int32 RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponsePairIDMatching");

	Params::BP_AJBOutGameProxy_C_OnResponsePairIDMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseTimeoutPairMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnResponseTimeoutPairMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseTimeoutPairMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnExpendPairRoom
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnExpendPairRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnExpendPairRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnTimeOutRandomMatching
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnTimeOutRandomMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnTimeOutRandomMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnTimeupCharacterSelect
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnTimeupCharacterSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnTimeupCharacterSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseRandomPairMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseRandomPairMatching(bool bSuccessMatching)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseRandomPairMatching");

	Params::BP_AJBOutGameProxy_C_OnResponseRandomPairMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyUpdatePairMatchingRoomInfo
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnNotifyUpdatePairMatchingRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyUpdatePairMatchingRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponsePairMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccessMatching                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FMatchingPlayerInfo&       PairMatchingPlayerInfo                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBOutGameProxy_C::OnResponsePairMatching(bool bSuccessMatching, const struct FMatchingPlayerInfo& PairMatchingPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponsePairMatching");

	Params::BP_AJBOutGameProxy_C_OnResponsePairMatching Parms{};

	Parms.bSuccessMatching = bSuccessMatching;
	Parms.PairMatchingPlayerInfo = std::move(PairMatchingPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseEnterRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseEnterRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseEnterRoom");

	Params::BP_AJBOutGameProxy_C_OnResponseEnterRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseDeleteRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseDeleteRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseDeleteRoom");

	Params::BP_AJBOutGameProxy_C_OnResponseDeleteRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseCreateRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseCreateRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseCreateRoom");

	Params::BP_AJBOutGameProxy_C_OnResponseCreateRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyUpdateSelectCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFinished                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FRoomPlayerInfo&           RoomPlayerInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_AJBOutGameProxy_C::OnNotifyUpdateSelectCharacter(bool bFinished, const struct FRoomPlayerInfo& RoomPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyUpdateSelectCharacter");

	Params::BP_AJBOutGameProxy_C_OnNotifyUpdateSelectCharacter Parms{};

	Parms.bFinished = bFinished;
	Parms.RoomPlayerInfo = std::move(RoomPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.WaitConnectPairMatchingRoom
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::WaitConnectPairMatchingRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "WaitConnectPairMatchingRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyFailedStartedMatch
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnNotifyFailedStartedMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyFailedStartedMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseUpdateTenpoRoomInfo
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnResponseUpdateTenpoRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseUpdateTenpoRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnTenpoEnterRoomTimeOut
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnTenpoEnterRoomTimeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnTenpoEnterRoomTimeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnTimeOutTenpoCharacterSelect
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnTimeOutTenpoCharacterSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnTimeOutTenpoCharacterSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyTenpoGameSettings
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CPUNum                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ExchangeMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnNotifyTenpoGameSettings(int32 CPUNum, bool ExchangeMode, int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyTenpoGameSettings");

	Params::BP_AJBOutGameProxy_C_OnNotifyTenpoGameSettings Parms{};

	Parms.CPUNum = CPUNum;
	Parms.ExchangeMode = ExchangeMode;
	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyUpdateTenpoMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// ETenpoMatchingResult                    Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnNotifyUpdateTenpoMatching(ETenpoMatchingResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyUpdateTenpoMatching");

	Params::BP_AJBOutGameProxy_C_OnNotifyUpdateTenpoMatching Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.WaitTenpoHostLogined
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::WaitTenpoHostLogined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "WaitTenpoHostLogined");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseTenpoStartMatching
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseTenpoStartMatching(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseTenpoStartMatching");

	Params::BP_AJBOutGameProxy_C_OnResponseTenpoStartMatching Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnFinieshedLoginTenpoMatching
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnFinieshedLoginTenpoMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnFinieshedLoginTenpoMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseTenpoDeleteRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::OnResponseTenpoDeleteRoom(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseTenpoDeleteRoom");

	Params::BP_AJBOutGameProxy_C_OnResponseTenpoDeleteRoom Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnResponseTenpoEnterRoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ETenpoRoomEnterResult                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnResponseTenpoEnterRoom(bool bSuccess, ETenpoRoomEnterResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnResponseTenpoEnterRoom");

	Params::BP_AJBOutGameProxy_C_OnResponseTenpoEnterRoom Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNotifyUpdateTenpoRoomInfo
// (Event, Public, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnNotifyUpdateTenpoRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNotifyUpdateTenpoRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.WaitConnectTenpoMatching
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::WaitConnectTenpoMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "WaitConnectTenpoMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROC_DownloadCustomData
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    EncodeCustomData_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// uint8                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROC_DownloadCustomData(uint8 PlayerID, const class FString& EncodeCustomData_0, uint8 CharacterID, uint8 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROC_DownloadCustomData");

	Params::BP_AJBOutGameProxy_C_ROC_DownloadCustomData Parms{};

	Parms.PlayerID = PlayerID;
	Parms.EncodeCustomData_0 = std::move(EncodeCustomData_0);
	Parms.CharacterID = CharacterID;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ROS_StartUpdateCustomData
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::ROS_StartUpdateCustomData(uint8 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ROS_StartUpdateCustomData");

	Params::BP_AJBOutGameProxy_C_ROS_StartUpdateCustomData Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ResuestUpdateCustomData
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ResuestUpdateCustomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ResuestUpdateCustomData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SelectStartLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStartLocation&            StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::SelectStartLocation(const struct FStartLocation& StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SelectStartLocation");

	Params::BP_AJBOutGameProxy_C_SelectStartLocation Parms{};

	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SetStartLocation_LocalGameInstance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FStartLocation&            Start_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::SetStartLocation_LocalGameInstance(uint8 PlayerID, const struct FStartLocation& Start_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SetStartLocation_LocalGameInstance");

	Params::BP_AJBOutGameProxy_C_SetStartLocation_LocalGameInstance Parms{};

	Parms.PlayerID = PlayerID;
	Parms.Start_Location = std::move(Start_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.TrySelectStartLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FStartLocation&            SelectStartLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// EResultStartLocation*                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::TrySelectStartLocation(uint8 PlayerID, const struct FStartLocation& SelectStartLocation, EResultStartLocation* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "TrySelectStartLocation");

	Params::BP_AJBOutGameProxy_C_TrySelectStartLocation Parms{};

	Parms.PlayerID = PlayerID;
	Parms.SelectStartLocation = std::move(SelectStartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.JoinMatching
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::JoinMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "JoinMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.BeginSelectStartLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::BeginSelectStartLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "BeginSelectStartLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.InitializeNetAPI
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::InitializeNetAPI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "InitializeNetAPI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnNetSocketResponse
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNetSocketEvent*                  Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OnNetSocketResponse(class UNetSocketEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnNetSocketResponse");

	Params::BP_AJBOutGameProxy_C_OnNetSocketResponse Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.NetSocketConnect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsRetry                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::NetSocketConnect(bool bIsRetry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "NetSocketConnect");

	Params::BP_AJBOutGameProxy_C_NetSocketConnect Parms{};

	Parms.bIsRetry = bIsRetry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.NetSocketDisconnect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::NetSocketDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "NetSocketDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_GetRoomInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_GetRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_GetRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_CreateRoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RoomNo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_CreateRoom(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_CreateRoom");

	Params::BP_AJBOutGameProxy_C_RequestSocket_CreateRoom Parms{};

	Parms.RoomNo = RoomNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_DeleteRoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_DeleteRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_DeleteRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_PairRandomMatch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_PairRandomMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_PairRandomMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_GetRoomInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_GetRoomInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_GetRoomInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_EnterRoom
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeLimit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_EnterRoom(int32 TimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_EnterRoom");

	Params::BP_AJBOutGameProxy_C_RequestSocket_Tenpo_EnterRoom Parms{};

	Parms.TimeLimit = TimeLimit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_ExitRoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_ExitRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_ExitRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_GameSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsExchangeMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_GameSetting(bool IsExchangeMode, int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_GameSetting");

	Params::BP_AJBOutGameProxy_C_RequestSocket_Tenpo_GameSetting Parms{};

	Parms.IsExchangeMode = IsExchangeMode;
	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_ChangeCharacter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_ChangeCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_ChangeCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_StartLocation_GetNPCInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_StartLocation_GetNPCInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_StartLocation_GetNPCInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_StartLocation_GetPlayerInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_StartLocation_GetPlayerInfo(int32 X, int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_StartLocation_GetPlayerInfo");

	Params::BP_AJBOutGameProxy_C_RequestSocket_StartLocation_GetPlayerInfo Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_MatchingStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReconnect                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::RequestSocket_MatchingStart(bool IsReconnect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_MatchingStart");

	Params::BP_AJBOutGameProxy_C_RequestSocket_MatchingStart Parms{};

	Parms.IsReconnect = IsReconnect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_EnterRoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RoomNo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_EnterRoom(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_EnterRoom");

	Params::BP_AJBOutGameProxy_C_RequestSocket_EnterRoom Parms{};

	Parms.RoomNo = RoomNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.AddMatchingPlayerInfoLocal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// uint8                                   TeamID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   CharactorID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::AddMatchingPlayerInfoLocal(uint8 PlayerID, const class FString& PlayerName, uint8 TeamID, uint8 CharactorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "AddMatchingPlayerInfoLocal");

	Params::BP_AJBOutGameProxy_C_AddMatchingPlayerInfoLocal Parms{};

	Parms.PlayerID = PlayerID;
	Parms.PlayerName = std::move(PlayerName);
	Parms.TeamID = TeamID;
	Parms.CharactorID = CharactorID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.IsRuntimeMatching
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Is                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::IsRuntimeMatching(bool* Is)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "IsRuntimeMatching");

	Params::BP_AJBOutGameProxy_C_IsRuntimeMatching Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is != nullptr)
		*Is = Parms.Is;
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SetDummyData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MatchingPlayerNum                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::SetDummyData(int32 MatchingPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SetDummyData");

	Params::BP_AJBOutGameProxy_C_SetDummyData Parms{};

	Parms.MatchingPlayerNum = MatchingPlayerNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.AddDummyData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    GameServerUserID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Temp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::AddDummyData(uint8 PlayerID, const class FString& GameServerUserID, const class FString& Temp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "AddDummyData");

	Params::BP_AJBOutGameProxy_C_AddDummyData Parms{};

	Parms.PlayerID = PlayerID;
	Parms.GameServerUserID = std::move(GameServerUserID);
	Parms.Temp = std::move(Temp);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OpenNextLevel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OpenNextLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OpenNextLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OpenNoticeErrorLevel
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAJBNetAPIResult                        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::OpenNoticeErrorLevel(EAJBNetAPIResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OpenNoticeErrorLevel");

	Params::BP_AJBOutGameProxy_C_OpenNoticeErrorLevel Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.CalcMatchingTimeoutSecond
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_AJBOutGameProxy_C::CalcMatchingTimeoutSecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "CalcMatchingTimeoutSecond");

	Params::BP_AJBOutGameProxy_C_CalcMatchingTimeoutSecond Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartPairMatchingRoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartPairMatchingRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartPairMatchingRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestCreateRoom
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RoomNo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestCreateRoom(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestCreateRoom");

	Params::BP_AJBOutGameProxy_C_RequestCreateRoom Parms{};

	Parms.RoomNo = RoomNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestRoomIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RoomNo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestRoomIn(int32 RoomNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestRoomIn");

	Params::BP_AJBOutGameProxy_C_RequestRoomIn Parms{};

	Parms.RoomNo = RoomNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestRandomPairMatch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestRandomPairMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestRandomPairMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartCharacterSelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartCharacterSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartCharacterSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_StartLocation_PartnerNPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_StartLocation_PartnerNPC(int32 X, int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_StartLocation_PartnerNPC");

	Params::BP_AJBOutGameProxy_C_RequestSocket_StartLocation_PartnerNPC Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestDeleteRoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestDeleteRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestDeleteRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartTenpoRoomMatching
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartTenpoRoomMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartTenpoRoomMatching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestEnterTenpoRoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeLimit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestEnterTenpoRoom(int32 TimeLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestEnterTenpoRoom");

	Params::BP_AJBOutGameProxy_C_RequestEnterTenpoRoom Parms{};

	Parms.TimeLimit = TimeLimit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestDeleteTenpoRoom
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestDeleteTenpoRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestDeleteTenpoRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.DecisionTenpoMatching
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::DecisionTenpoMatching(int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "DecisionTenpoMatching");

	Params::BP_AJBOutGameProxy_C_DecisionTenpoMatching Parms{};

	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.GotoTenpoSession
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::GotoTenpoSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "GotoTenpoSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SendSelectedCharacter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::SendSelectedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SendSelectedCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_StartMatching
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_StartMatching(int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_StartMatching");

	Params::BP_AJBOutGameProxy_C_RequestSocket_Tenpo_StartMatching Parms{};

	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_Tenpo_Logined
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_Tenpo_Logined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_Tenpo_Logined");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SendTenpGameSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ExchangeMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::SendTenpGameSettings(bool ExchangeMode, int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SendTenpGameSettings");

	Params::BP_AJBOutGameProxy_C_SendTenpGameSettings Parms{};

	Parms.ExchangeMode = ExchangeMode;
	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.CheckTenpoMatchingAllLogin
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::CheckTenpoMatchingAllLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "CheckTenpoMatchingAllLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.SetupedClient
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::SetupedClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "SetupedClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartTenpoHostServer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartTenpoHostServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartTenpoHostServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.IsFinishedTenpoMatching
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsFinishedTenpoMatching_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::IsFinishedTenpoMatching(bool* bIsFinishedTenpoMatching_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "IsFinishedTenpoMatching");

	Params::BP_AJBOutGameProxy_C_IsFinishedTenpoMatching Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsFinishedTenpoMatching_0 != nullptr)
		*bIsFinishedTenpoMatching_0 = Parms.bIsFinishedTenpoMatching_0;
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_MatchingFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_MatchingFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_MatchingFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.CheckTimeoutSelectStartLocationFunction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::CheckTimeoutSelectStartLocationFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "CheckTimeoutSelectStartLocationFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_MatchingBreakup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::RequestSocket_MatchingBreakup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_MatchingBreakup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.CanRandomRequestSocekt_StartLocation_GetPlayerInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bCan                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBOutGameProxy_C::CanRandomRequestSocekt_StartLocation_GetPlayerInfo(bool* bCan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "CanRandomRequestSocekt_StartLocation_GetPlayerInfo");

	Params::BP_AJBOutGameProxy_C_CanRandomRequestSocekt_StartLocation_GetPlayerInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCan != nullptr)
		*bCan = Parms.bCan;
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.InitializeExtendBPLock
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::InitializeExtendBPLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "InitializeExtendBPLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartExtendBPLock
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartExtendBPLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartExtendBPLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ReconnectRetry
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ReconnectRetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ReconnectRetry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StopExpendBPLock
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StopExpendBPLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StopExpendBPLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StartServerTest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StartServerTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StartServerTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.OnTimer_ServerTest
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::OnTimer_ServerTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "OnTimer_ServerTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.StopServerTest
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::StopServerTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "StopServerTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.ExtendBPLockOnce
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBOutGameProxy_C::ExtendBPLockOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "ExtendBPLockOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestPairIDMatch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PairMatchID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestPairIDMatch(const class FString& PairMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestPairIDMatch");

	Params::BP_AJBOutGameProxy_C_RequestPairIDMatch Parms{};

	Parms.PairMatchID = std::move(PairMatchID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_DeletePairIDMatch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PairMatchID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_DeletePairIDMatch(const class FString& PairMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_DeletePairIDMatch");

	Params::BP_AJBOutGameProxy_C_RequestSocket_DeletePairIDMatch Parms{};

	Parms.PairMatchID = std::move(PairMatchID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBOutGameProxy.BP_AJBOutGameProxy_C.RequestSocket_PairIDMatch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PairMatchID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AJBOutGameProxy_C::RequestSocket_PairIDMatch(const class FString& PairMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBOutGameProxy_C", "RequestSocket_PairIDMatch");

	Params::BP_AJBOutGameProxy_C_RequestSocket_PairIDMatch Parms{};

	Parms.PairMatchID = std::move(PairMatchID);

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameProjectileVirusCapsule

#include "Basic.hpp"

#include "BP_AJBInGameProjectileVirusCapsule_classes.hpp"
#include "BP_AJBInGameProjectileVirusCapsule_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.ExecuteUbergraph_BP_AJBInGameProjectileVirusCapsule
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameProjectileVirusCapsule_C::ExecuteUbergraph_BP_AJBInGameProjectileVirusCapsule(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "ExecuteUbergraph_BP_AJBInGameProjectileVirusCapsule");

	Params::BP_AJBInGameProjectileVirusCapsule_C_ExecuteUbergraph_BP_AJBInGameProjectileVirusCapsule Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.CalcActiveTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  ActiveTime_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameProjectileVirusCapsule_C::CalcActiveTime(float* ActiveTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "CalcActiveTime");

	Params::BP_AJBInGameProjectileVirusCapsule_C_CalcActiveTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveTime_0 != nullptr)
		*ActiveTime_0 = Parms.ActiveTime_0;
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.AddGravityScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResetGravityScale                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameProjectileVirusCapsule_C::AddGravityScale(bool bResetGravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "AddGravityScale");

	Params::BP_AJBInGameProjectileVirusCapsule_C_AddGravityScale Parms{};

	Parms.bResetGravityScale = bResetGravityScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameProjectileVirusCapsule_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "ReceiveTick");

	Params::BP_AJBInGameProjectileVirusCapsule_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.OnMC_ProjectileHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlockedByAAP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReflect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameProjectileVirusCapsule_C::OnMC_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, bool bHeadShot, EPhysicalSurface SurfaceType, bool bDisableDamage, float CuttingRate, bool bBlockedByAAP, bool bReflect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "OnMC_ProjectileHit");

	Params::BP_AJBInGameProjectileVirusCapsule_C_OnMC_ProjectileHit Parms{};

	Parms.HitActor = HitActor;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.bHeadShot = bHeadShot;
	Parms.SurfaceType = SurfaceType;
	Parms.bDisableDamage = bDisableDamage;
	Parms.CuttingRate = CuttingRate;
	Parms.bBlockedByAAP = bBlockedByAAP;
	Parms.bReflect = bReflect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.OnProjectileHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FromSweep                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrate_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFirstHit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameProjectileVirusCapsule_C::OnProjectileHit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult, bool bHeadShot, bool bPenetrate_0, bool bFirstHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "OnProjectileHit");

	Params::BP_AJBInGameProjectileVirusCapsule_C_OnProjectileHit Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);
	Parms.bHeadShot = bHeadShot;
	Parms.bPenetrate_0 = bPenetrate_0;
	Parms.bFirstHit = bFirstHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.OnROS_ProjectileHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHeadShot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPenetrate_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFirstHit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CuttingRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisableDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReflect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FRotator&                  ReflectRotation                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    bBlocking                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTag&              ReflectSkillTag_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bAvoidSkill                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameProjectileVirusCapsule_C::OnROS_ProjectileHit(class AActor* HitActor, const struct FVector& HitLocation_0, const struct FVector& HitNormal_0, bool bHeadShot, bool bPenetrate_0, bool bFirstHit, float CuttingRate, bool bDisableDamage, bool bReflect, const struct FRotator& ReflectRotation, bool bBlocking, const struct FGameplayTag& ReflectSkillTag_0, bool bAvoidSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "OnROS_ProjectileHit");

	Params::BP_AJBInGameProjectileVirusCapsule_C_OnROS_ProjectileHit Parms{};

	Parms.HitActor = HitActor;
	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);
	Parms.bHeadShot = bHeadShot;
	Parms.bPenetrate_0 = bPenetrate_0;
	Parms.bFirstHit = bFirstHit;
	Parms.CuttingRate = CuttingRate;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bReflect = bReflect;
	Parms.ReflectRotation = std::move(ReflectRotation);
	Parms.bBlocking = bBlocking;
	Parms.ReflectSkillTag_0 = std::move(ReflectSkillTag_0);
	Parms.bAvoidSkill = bAvoidSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameProjectileVirusCapsule.BP_AJBInGameProjectileVirusCapsule_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameProjectileVirusCapsule_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameProjectileVirusCapsule_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


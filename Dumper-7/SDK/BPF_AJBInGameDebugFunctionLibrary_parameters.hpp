#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_AJBInGameDebugFunctionLibrary

#include "Basic.hpp"

#include "AJB_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetControllerObjectNameFromActor
// 0x0068 (0x0068 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 StringIfNotHasController;                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor) == 0x000068, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, Actor) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, StringIfNotHasController) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::StringIfNotHasController' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, __WorldContext) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, ReturnValue) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, K2Node_DynamicCast_AsPawn) == 0x000038, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, CallFunc_IsValid_ReturnValue1) == 0x000050, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetControllerObjectNameFromActor::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetPairObjectsNameFromActor
// 0x0088 (0x0088 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 StringIfNotHasPair;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PairCharacterObjectName;                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PairControllerObjectName;                          // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    K2Node_DynamicCast_AsAJBIn_Game_Character;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor) == 0x000088, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, Actor) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, StringIfNotHasPair) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::StringIfNotHasPair' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, __WorldContext) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, PairCharacterObjectName) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::PairCharacterObjectName' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, PairControllerObjectName) == 0x000030, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::PairControllerObjectName' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, K2Node_DynamicCast_AsAJBIn_Game_Character) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::K2Node_DynamicCast_AsAJBIn_Game_Character' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_IsValid_ReturnValue1) == 0x000051, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_IsValid_ReturnValue2) == 0x000070, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor, CallFunc_GetObjectName_ReturnValue1) == 0x000078, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetPairObjectsNameFromActor::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenCharacterObjectName
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue1;                     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue2;                     // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName) == 0x000058, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, ObjectName) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::ObjectName' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, __WorldContext) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, ReturnValue) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, CallFunc_Replace_ReturnValue) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, CallFunc_Replace_ReturnValue1) == 0x000038, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::CallFunc_Replace_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName, CallFunc_Replace_ReturnValue2) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenCharacterObjectName::CallFunc_Replace_ReturnValue2' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugShortenControllerObjectName
// 0x0068 (0x0068 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue1;                     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue2;                     // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue3;                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName) == 0x000068, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, ObjectName) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::ObjectName' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, __WorldContext) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, ReturnValue) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, CallFunc_Replace_ReturnValue) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, CallFunc_Replace_ReturnValue1) == 0x000038, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::CallFunc_Replace_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, CallFunc_Replace_ReturnValue2) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::CallFunc_Replace_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName, CallFunc_Replace_ReturnValue3) == 0x000058, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugShortenControllerObjectName::CallFunc_Replace_ReturnValue3' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DebugGetAvailableCharacterTags
// 0x01E8 (0x01E8 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags final
{
public:
	bool                                          bAvailableNegotiationsCharacter;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelectable;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUsableAsNPC;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShipping;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FGameplayTag>        ReturnValue;                                       // 0x0010(0x0050)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TMap<class FName, struct FGameplayTag>        Result;                                            // 0x0060(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAJBCharacterInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x00E8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags) == 0x0001E8, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, bAvailableNegotiationsCharacter) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::bAvailableNegotiationsCharacter' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, bSelectable) == 0x000001, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::bSelectable' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, bUsableAsNPC) == 0x000002, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::bUsableAsNPC' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, bShipping) == 0x000003, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::bShipping' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, __WorldContext) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, ReturnValue) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, Result) == 0x000060, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::Result' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Not_PreBool_ReturnValue) == 0x0000B4, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Not_PreBool_ReturnValue1) == 0x0000B5, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Not_PreBool_ReturnValue2) == 0x0000BC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Not_PreBool_ReturnValue3) == 0x0000D8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001D8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_Less_IntInt_ReturnValue) == 0x0001D9, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanOR_ReturnValue) == 0x0001DA, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanOR_ReturnValue1) == 0x0001DB, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanOR_ReturnValue2) == 0x0001DC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanOR_ReturnValue3) == 0x0001DD, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanAND_ReturnValue) == 0x0001DE, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanAND_ReturnValue1) == 0x0001DF, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags, CallFunc_BooleanAND_ReturnValue2) == 0x0001E0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DebugGetAvailableCharacterTags::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawCross
// 0x0020 (0x0020 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawCross final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawCross");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross) == 0x000020, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawCross");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross, Location) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCross::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross, __WorldContext) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCross::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCross::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCross, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCross::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllCrosses
// 0x0018 (0x0018 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses) == 0x000018, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses, __WorldContext) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllCrosses::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawOutlineRect
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect final
{
public:
	struct FBox2D                                 Box;                                               // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect) == 0x000030, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect, Box) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect::Box' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect, __WorldContext) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawOutlineRect::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllOutlineRects
// 0x0018 (0x0018 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects) == 0x000018, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects, __WorldContext) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllOutlineRects::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawDebugText
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText) == 0x000030, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText, Text) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText::Text' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText, Location) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText, __WorldContext) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugText::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.ClearAllDebugTexts
// 0x0018 (0x0018 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts) == 0x000018, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts, __WorldContext) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_ClearAllDebugTexts::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawCrossWithColor
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor) == 0x000030, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor, Location) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor::Location' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor, Color) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor::Color' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor, __WorldContext) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawCrossWithColor::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawDebugGrid
// 0x01A8 (0x01A8 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid final
{
public:
	struct FVector                                CenterLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlaneRotation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector2D                              Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              GridNum;                                           // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         GridNumY;                                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GridNumX;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeY;                                             // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeX;                                             // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0064(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center;                                            // 0x0070(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BottomRight2D;                                     // 0x007C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BottomLeft2D;                                      // 0x0088(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TopRight2D;                                        // 0x0094(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TopLeft2D;                                         // 0x00A0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Minus;                                             // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeHalfY;                                         // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeHalfX;                                         // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue;                 // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue1;                // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue2;                // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue3;                // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue4;                // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue5;                // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                        K2Node_MakeArray_Array1;                           // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                K2Node_MathExpression_ReturnValue6;                // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue7;                // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue8;                // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue9;                // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue10;               // 0x018C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue11;               // 0x0198(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid) == 0x0001A8, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CenterLocation) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CenterLocation' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, PlaneRotation) == 0x00000C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::PlaneRotation' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Size) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Size' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, LineColor) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::LineColor' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, LifeTime) == 0x000030, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::LifeTime' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Thickness) == 0x000034, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Thickness' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, GridNum) == 0x000038, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::GridNum' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, __WorldContext) == 0x000040, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Rot) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Rot' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, GridNumY) == 0x000054, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::GridNumY' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, GridNumX) == 0x000058, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::GridNumX' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, SizeY) == 0x00005C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::SizeY' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, SizeX) == 0x000060, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::SizeX' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Normal) == 0x000064, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Normal' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Center) == 0x000070, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Center' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, BottomRight2D) == 0x00007C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::BottomRight2D' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, BottomLeft2D) == 0x000088, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::BottomLeft2D' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, TopRight2D) == 0x000094, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::TopRight2D' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, TopLeft2D) == 0x0000A0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::TopLeft2D' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Minus) == 0x0000AC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Minus' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, SizeHalfY) == 0x0000B0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::SizeHalfY' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, SizeHalfX) == 0x0000B4, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::SizeHalfX' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Temp_int_Variable) == 0x0000B8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C4, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000CC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Temp_int_Variable1) == 0x0000D0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue) == 0x0000D4, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue1) == 0x0000E0, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue2) == 0x0000EC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x0000F8, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Add_IntInt_ReturnValue1) == 0x0000FC, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, Temp_int_Variable2) == 0x000100, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_BreakVector2D_X) == 0x000104, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_BreakVector2D_Y) == 0x000108, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue3) == 0x00010C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue4) == 0x000118, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue5) == 0x000124, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000130, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Add_IntInt_ReturnValue2) == 0x000134, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MakeArray_Array) == 0x000138, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MakeArray_Array1) == 0x000148, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue6) == 0x000158, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue7) == 0x000164, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000170, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue8) == 0x000174, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue9) == 0x000180, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue10) == 0x00018C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid, K2Node_MathExpression_ReturnValue11) == 0x000198, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawDebugGrid::K2Node_MathExpression_ReturnValue11' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawBoxGauge
// 0x0038 (0x0038 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge final
{
public:
	struct FBox2D                                 Box;                                               // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         GaugeMax;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeValue;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge) == 0x000038, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, Box) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::Box' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, GaugeMax) == 0x000014, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::GaugeMax' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, GaugeValue) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::GaugeValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, __WorldContext) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000030, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGauge::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.DrawBoxGaugeWithColor
// 0x0058 (0x0058 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor final
{
public:
	struct FBox2D                                 Box;                                               // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         GaugeMax;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeValue;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutlineColor;                                      // 0x001C(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FilledColor;                                       // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugScreenDrawHelper_Success;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor) == 0x000058, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, Box) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::Box' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, GaugeMax) == 0x000014, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::GaugeMax' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, GaugeValue) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::GaugeValue' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, OutlineColor) == 0x00001C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::OutlineColor' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, FilledColor) == 0x00002C, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::FilledColor' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, __WorldContext) == 0x000040, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, CallFunc_GetDebugScreenDrawHelper_Success) == 0x000048, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::CallFunc_GetDebugScreenDrawHelper_Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor, CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper) == 0x000050, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_DrawBoxGaugeWithColor::CallFunc_GetDebugScreenDrawHelper_DebugScreenDrawHelper' has a wrong offset!");

// Function BPF_AJBInGameDebugFunctionLibrary.BPF_AJBInGameDebugFunctionLibrary_C.GetDebugScreenDrawHelper
// 0x0030 (0x0030 - 0x0000)
struct BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBDebugScreenDrawHelper_C*         DebugScreenDrawHelper;                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper) == 0x000008, "Wrong alignment on BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper");
static_assert(sizeof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper) == 0x000030, "Wrong size on BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, __WorldContext) == 0x000000, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, Success) == 0x000008, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::Success' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, DebugScreenDrawHelper) == 0x000010, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::DebugScreenDrawHelper' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x000018, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x000020, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPF_AJBInGameDebugFunctionLibrary_C_GetDebugScreenDrawHelper::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


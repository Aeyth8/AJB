#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBAIWaySpotFinder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.ExecuteUbergraph_BP_AJBAIWaySpotFinder
// 0x01D8 (0x01D8 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_AreaIndexX_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterLocation_ReturnValue;            // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_AreaIndexY_Variable;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Rest_Count_Of_Trial_Variable;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Area_Length_Variable;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x0070(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestLocationByLineTrace_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TestLocationByLineTrace_Location;         // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TestLocationByLineTrace_Normal;           // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestLocationByLandingLocationOverelap_ReturnValue; // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestLocationByLandingLocationOverelap_bHitLineTrace; // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TestLocationByLandingLocationOverelap_ModifiedLocation; // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestLocationByPathToStartPoint_ReturnValue; // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item1;                          // 0x010C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item2;                          // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_LineColor;                      // 0x0154(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item3;                          // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue5;                // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue6;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue6;                 // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue1;                // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x01A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue7;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder) == 0x000004, "Wrong alignment on BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder) == 0x0001D8, "Wrong size on BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, EntryPoint) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_AreaIndexX_Variable) == 0x00000C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_AreaIndexX_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000018, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue1) == 0x000020, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Array_Index_Variable1) == 0x000024, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_struct_Variable) == 0x000028, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Loop_Counter_Variable1) == 0x000038, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_GetCenterLocation_ReturnValue) == 0x00003C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_GetCenterLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue2) == 0x000048, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_AreaIndexY_Variable) == 0x000058, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_AreaIndexY_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue3) == 0x00005C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000060, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Rest_Count_Of_Trial_Variable) == 0x000064, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Rest_Count_Of_Trial_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_float_Area_Length_Variable) == 0x000068, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_float_Area_Length_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_struct_Variable1) == 0x000070, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Array_Index_Variable2) == 0x000080, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_X) == 0x000084, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Z) == 0x00008C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_X1) == 0x000090, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Y1) == 0x000094, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Z1) == 0x000098, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Loop_Counter_Variable2) == 0x00009C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue4) == 0x0000AC, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Array_Index_Variable3) == 0x0000B0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_Event_DeltaSeconds) == 0x0000C0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_CustomEvent_Location) == 0x0000C4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLineTrace_ReturnValue) == 0x0000D0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLineTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLineTrace_Location) == 0x0000D4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLineTrace_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLineTrace_Normal) == 0x0000E0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLineTrace_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLandingLocationOverelap_ReturnValue) == 0x0000EC, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLandingLocationOverelap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLandingLocationOverelap_bHitLineTrace) == 0x0000ED, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLandingLocationOverelap_bHitLineTrace' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByLandingLocationOverelap_ModifiedLocation) == 0x0000F0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByLandingLocationOverelap_ModifiedLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_TestLocationByPathToStartPoint_ReturnValue) == 0x0000FC, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_TestLocationByPathToStartPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000FD, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Variable) == 0x000100, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000104, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Get_Item1) == 0x00010C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue1) == 0x000118, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_bool_Variable) == 0x00011C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Loop_Counter_Variable3) == 0x000120, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Add_ReturnValue1) == 0x000124, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue1) == 0x000128, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Add_IntInt_ReturnValue5) == 0x00012C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue2) == 0x000130, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue2) == 0x000134, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Get_Item2) == 0x000138, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue3) == 0x000144, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue3) == 0x000148, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue4) == 0x00014C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue4) == 0x000150, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_CustomEvent_LineColor) == 0x000154, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_CustomEvent_LineColor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_CustomEvent_Duration) == 0x000164, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Get_Item3) == 0x000168, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue5) == 0x000174, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue5) == 0x000178, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_bool_Has_Been_Initd_Variable) == 0x000179, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Variable1) == 0x00017C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue6) == 0x000180, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_X2) == 0x000184, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Y2) == 0x000188, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_BreakVector_Z2) == 0x00018C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_MathExpression_ReturnValue) == 0x000190, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Less_IntInt_ReturnValue6) == 0x000194, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Less_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_MathExpression_ReturnValue1) == 0x000198, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_MathExpression_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_MakeVector_ReturnValue) == 0x00019C, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, K2Node_Select_Default) == 0x0001A8, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_bool_IsClosed_Variable) == 0x0001BC, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Array_Length_ReturnValue7) == 0x0001C0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Array_Length_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0001C4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_Max_ReturnValue) == 0x0001C8, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x0001CC, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, Temp_int_Variable2) == 0x0001D0, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x0001D4, "Member 'BP_AJBAIWaySpotFinder_C_ExecuteUbergraph_BP_AJBAIWaySpotFinder::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.DebugDrawWaySpots
// 0x0014 (0x0014 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots final
{
public:
	struct FLinearColor                           LineColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots) == 0x000004, "Wrong alignment on BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots) == 0x000014, "Wrong size on BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots, LineColor) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots::LineColor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots, Duration) == 0x000010, "Member 'BP_AJBAIWaySpotFinder_C_DebugDrawWaySpots::Duration' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.TestLocation
// 0x000C (0x000C - 0x0000)
struct BP_AJBAIWaySpotFinder_C_TestLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_TestLocation) == 0x000004, "Wrong alignment on BP_AJBAIWaySpotFinder_C_TestLocation");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_TestLocation) == 0x00000C, "Wrong size on BP_AJBAIWaySpotFinder_C_TestLocation");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocation, Location) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_TestLocation::Location' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AJBAIWaySpotFinder_C_ReceiveTick");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_ReceiveTick) == 0x000004, "Wrong size on BP_AJBAIWaySpotFinder_C_ReceiveTick");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.GetTriangleVerticesForLineTrace
// 0x0080 (0x0080 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToTriangleVertex;                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	struct FVector                                RotationVector;                                    // 0x0020(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Vertices;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace) == 0x000008, "Wrong alignment on BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace) == 0x000080, "Wrong size on BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, Location) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, DistanceToTriangleVertex) == 0x00000C, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::DistanceToTriangleVertex' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, ReturnValue) == 0x000010, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, RotationVector) == 0x000020, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::RotationVector' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, Vertices) == 0x000030, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::Vertices' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00004C, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, Temp_int_Variable) == 0x000050, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000054, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_RotateAngleAxis_ReturnValue) == 0x000058, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_AJBAIWaySpotFinder_C_GetTriangleVerticesForLineTrace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.TestLocationByLineTrace
// 0x0220 (0x0220 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace final
{
public:
	struct FVector                                TestLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x001C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FirstHitLocation;                                  // 0x0028(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SumHitLocation;                                    // 0x0034(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0040(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFailed;                                           // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                        CallFunc_GetTriangleVerticesForLineTrace_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0164(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x017C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InGameProp_C*                       K2Node_DynamicCast_AsBP_in_Game_Prop;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F[0x1];                                      // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0210(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace) == 0x000008, "Wrong alignment on BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace) == 0x000220, "Wrong size on BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, TestLocation) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::TestLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, ReturnValue) == 0x00000C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Location) == 0x000010, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Normal) == 0x00001C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, FirstHitLocation) == 0x000028, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::FirstHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, SumHitLocation) == 0x000034, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::SumHitLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, HitNormal) == 0x000040, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, bFailed) == 0x00004C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::bFailed' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Temp_object_Variable) == 0x000050, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_GetTriangleVerticesForLineTrace_ReturnValue) == 0x000060, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_GetTriangleVerticesForLineTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue) == 0x000078, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Array_Get_Item) == 0x00008C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000098, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakVector_X) == 0x0000A4, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_MakeVector_ReturnValue1) == 0x0000C0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000D0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000158, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000159, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015A, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_Time) == 0x00015C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_Distance) == 0x000160, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_Location) == 0x000164, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_Normal) == 0x00017C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0001BC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_TraceStart) == 0x0001C0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0001CC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, K2Node_DynamicCast_AsBP_in_Game_Prop) == 0x0001D8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::K2Node_DynamicCast_AsBP_in_Game_Prop' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E4, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_DegCos_ReturnValue) == 0x0001F0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Temp_bool_True_if_break_was_hit_Variable) == 0x0001F4, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Not_PreBool_ReturnValue) == 0x0001FD, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Temp_int_Loop_Counter_Variable) == 0x000200, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000208, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_BooleanAND_ReturnValue) == 0x00020C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, Temp_bool_Variable) == 0x00020D, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, CallFunc_Not_PreBool_ReturnValue1) == 0x00020E, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace, K2Node_Select_Default) == 0x000210, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLineTrace::K2Node_Select_Default' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.TestLocationByLandingLocationOverelap
// 0x0230 (0x0230 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap final
{
public:
	struct FVector                                TestLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bHitLineTrace;                                     // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ModifiedLocation;                                  // 0x001C(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZOffset;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearestLocation;                                   // 0x002C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearestDistance;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineTraceBaseVector;                               // 0x003C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceBaseLocation;                                 // 0x0048(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRadiusOfLargestCharacter_ReturnValue;  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue1; // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue1;             // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable1;                             // 0x00D0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0200(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x020C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_SphereOverlapComponents_OutComponents;    // 0x0218(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_SphereOverlapComponents_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap) == 0x000008, "Wrong alignment on BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap) == 0x000230, "Wrong size on BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, TestLocation) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::TestLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, HitNormal) == 0x00000C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, ReturnValue) == 0x000018, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, bHitLineTrace) == 0x000019, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::bHitLineTrace' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, ModifiedLocation) == 0x00001C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::ModifiedLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, ZOffset) == 0x000028, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::ZOffset' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, NearestLocation) == 0x00002C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::NearestLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, NearestDistance) == 0x000038, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::NearestDistance' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, LineTraceBaseVector) == 0x00003C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::LineTraceBaseVector' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, TraceBaseLocation) == 0x000048, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::TraceBaseLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, Temp_int_Variable) == 0x000054, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000058, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, Temp_object_Variable) == 0x000068, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Less_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000079, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_GetRadiusOfLargestCharacter_ReturnValue) == 0x00007C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_GetRadiusOfLargestCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue) == 0x000088, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_RotateAngleAxis_ReturnValue) == 0x000098, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue1) == 0x0000A8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_AITraceObjectTypesWithoutPlayers_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_RotateAngleAxis_ReturnValue1) == 0x0000C4, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_RotateAngleAxis_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, Temp_object_Variable1) == 0x0000D0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000F0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000178, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_Location) == 0x000184, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_Normal) == 0x00019C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_FaceIndex) == 0x0001DC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BreakHitResult_TraceEnd) == 0x0001EC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0001F8, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_BooleanOR_ReturnValue) == 0x0001F9, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000200, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_Add_VectorVector_ReturnValue1) == 0x00020C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_SphereOverlapComponents_OutComponents) == 0x000218, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_SphereOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap, CallFunc_SphereOverlapComponents_ReturnValue) == 0x000228, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByLandingLocationOverelap::CallFunc_SphereOverlapComponents_ReturnValue' has a wrong offset!");

// Function BP_AJBAIWaySpotFinder.BP_AJBAIWaySpotFinder_C.TestLocationByPathToStartPoint
// 0x0050 (0x0050 - 0x0000)
struct BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint final
{
public:
	struct FVector                                TestLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Square_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item1;                          // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint) == 0x000008, "Wrong alignment on BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint");
static_assert(sizeof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint) == 0x000050, "Wrong size on BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, TestLocation) == 0x000000, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::TestLocation' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, ReturnValue) == 0x00000C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Square_ReturnValue) == 0x000010, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000020, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Array_Get_Item1) == 0x000030, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_VSizeSquared_ReturnValue) == 0x000048, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AJBAIWaySpotFinder_C_TestLocationByPathToStartPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}


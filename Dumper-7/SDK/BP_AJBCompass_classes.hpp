#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCompass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBCompass.BP_AJBCompass_C
// 0x0030 (0x0120 - 0x00F0)
class UBP_AJBCompass_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(Transient, DuplicateTransient)
	float                                         DirectionOffsetDegrees;                            // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAJBInGameCharacter*                    TargetCharacter;                                   // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Compass_C*                          TargetWidget;                                      // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentViewRotation;                               // 0x0110(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ViewRotationInterpSpeed;                           // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBCompass(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetupTargetCharacter(class AAJBInGameCharacter* Target);
	void SetupWidget(class UWB_Compass_C* CompassWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBCompass_C">();
	}
	static class UBP_AJBCompass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBCompass_C>();
	}
};
static_assert(alignof(UBP_AJBCompass_C) == 0x000008, "Wrong alignment on UBP_AJBCompass_C");
static_assert(sizeof(UBP_AJBCompass_C) == 0x000120, "Wrong size on UBP_AJBCompass_C");
static_assert(offsetof(UBP_AJBCompass_C, UberGraphFrame) == 0x0000F0, "Member 'UBP_AJBCompass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AJBCompass_C, DirectionOffsetDegrees) == 0x0000F8, "Member 'UBP_AJBCompass_C::DirectionOffsetDegrees' has a wrong offset!");
static_assert(offsetof(UBP_AJBCompass_C, TargetCharacter) == 0x000100, "Member 'UBP_AJBCompass_C::TargetCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AJBCompass_C, TargetWidget) == 0x000108, "Member 'UBP_AJBCompass_C::TargetWidget' has a wrong offset!");
static_assert(offsetof(UBP_AJBCompass_C, CurrentViewRotation) == 0x000110, "Member 'UBP_AJBCompass_C::CurrentViewRotation' has a wrong offset!");
static_assert(offsetof(UBP_AJBCompass_C, ViewRotationInterpSpeed) == 0x00011C, "Member 'UBP_AJBCompass_C::ViewRotationInterpSpeed' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBFerocious

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBFerocious.BP_AJBFerocious_C
// 0x0050 (0x0260 - 0x0210)
class UBP_AJBFerocious_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBFerocious_C;                  // 0x0210(0x0008)(Transient, DuplicateTransient)
	class ABP_AJBInGameParticleEffect_C*          StandLoopParticle;                                 // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameParticleEffect_C*          StandEndParticle;                                  // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StandLoopParticleTag;                              // 0x0228(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StandEndParticleTag;                               // 0x0230(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InactivateSETag;                                   // 0x0238(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HealingMPSpeedScale;                               // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Defence___;                                        // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InactivateVoiceTag;                                // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           KillOnActiveVoiceTag;                              // 0x0250(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedScale;                                    // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDuringLastSurvivorDirection;                      // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AJBFerocious(int32 EntryPoint);
	void ActiveFerociousUI();
	void UnbindKillOnActive();
	void BindKillOnActive();
	void OnKill(const struct FGameplayTag& SkillTag, int32 SerialNumber, float AttackDistance, uint8 KilledCharacterId, bool bWithSeparatedStandAttack, bool bHitEnemysSeparatedStand, bool bFirstBlood, int32 UltimateSkillSerialNumberIfInEffect, float ElapsedTime, int32 DeadPlayerId, bool bIsLastDefeated, bool bPlayerKill, bool bSpecialKill, bool bSelfKill);
	void TryDestroyStandLoopParticle();
	void ChangeFerociousStatus(bool bEnable);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnContinuedParticleInactivated();
	void SpawnStandEndParticle();
	void OnRelatedCharacterBecomeLastSurvivor();
	void ActiveContinuedParticle(bool bActiveForOwner, bool bActiveForMovableStand);
	void ReceiveBeginPlay();
	void OnActionInactivate(bool bTriggeredByStand);
	void OnActionActivate(bool bTriggeredByStand);
	void NotifyTheWorld(class AAJBInGameCharacter* Operator, float Time, EGeneralTiming Timing, bool bEnable, bool bOperatorIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBFerocious_C">();
	}
	static class UBP_AJBFerocious_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBFerocious_C>();
	}
};
static_assert(alignof(UBP_AJBFerocious_C) == 0x000008, "Wrong alignment on UBP_AJBFerocious_C");
static_assert(sizeof(UBP_AJBFerocious_C) == 0x000260, "Wrong size on UBP_AJBFerocious_C");
static_assert(offsetof(UBP_AJBFerocious_C, UberGraphFrame_BP_AJBFerocious_C) == 0x000210, "Member 'UBP_AJBFerocious_C::UberGraphFrame_BP_AJBFerocious_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, StandLoopParticle) == 0x000218, "Member 'UBP_AJBFerocious_C::StandLoopParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, StandEndParticle) == 0x000220, "Member 'UBP_AJBFerocious_C::StandEndParticle' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, StandLoopParticleTag) == 0x000228, "Member 'UBP_AJBFerocious_C::StandLoopParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, StandEndParticleTag) == 0x000230, "Member 'UBP_AJBFerocious_C::StandEndParticleTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, InactivateSETag) == 0x000238, "Member 'UBP_AJBFerocious_C::InactivateSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, HealingMPSpeedScale) == 0x000240, "Member 'UBP_AJBFerocious_C::HealingMPSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, Defence___) == 0x000244, "Member 'UBP_AJBFerocious_C::Defence___' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, InactivateVoiceTag) == 0x000248, "Member 'UBP_AJBFerocious_C::InactivateVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, KillOnActiveVoiceTag) == 0x000250, "Member 'UBP_AJBFerocious_C::KillOnActiveVoiceTag' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, MoveSpeedScale) == 0x000258, "Member 'UBP_AJBFerocious_C::MoveSpeedScale' has a wrong offset!");
static_assert(offsetof(UBP_AJBFerocious_C, bDuringLastSurvivorDirection) == 0x00025C, "Member 'UBP_AJBFerocious_C::bDuringLastSurvivorDirection' has a wrong offset!");

}


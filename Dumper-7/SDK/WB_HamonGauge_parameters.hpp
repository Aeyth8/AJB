#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_HamonGauge

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_HamonGauge.WB_HamonGauge_C.ExecuteUbergraph_WB_HamonGauge
// 0x0100 (0x0100 - 0x0000)
struct WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue1;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Result;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_StateTimeRatio;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBHamonBreathingSkill_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkillState_bMatch;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBInGameCharacter_C*               K2Node_CustomEvent_TargetUICharacter;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AJBHamonBreathingSkill_C*           CallFunc_GetComponentByClass_ReturnValue1;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillActive_ReturnValue;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue2;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAJBInGameHUD_BP_bSuccess;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameHUD_C*                     CallFunc_GetAJBInGameHUD_BP_In_Game_HUD;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeHamonBreathingGaugeAngle_Angle;       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00DC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x00E4(0x001C)(NoDestructor)
};
static_assert(alignof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge) == 0x000008, "Wrong alignment on WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge");
static_assert(sizeof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge) == 0x000100, "Wrong size on WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, EntryPoint) == 0x000000, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_float_Variable) == 0x000004, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_float_Variable1) == 0x000008, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetDynamicMaterial_ReturnValue1) == 0x000018, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetDynamicMaterial_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_bool_Variable) == 0x000020, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_Event_MyGeometry) == 0x000024, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_CustomEvent_Result) == 0x000060, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_CustomEvent_StateTimeRatio) == 0x000064, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_CustomEvent_StateTimeRatio' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_CheckSkillState_bMatch) == 0x000079, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_CheckSkillState_bMatch' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_Select_Default) == 0x00007C, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_CustomEvent_TargetUICharacter) == 0x000080, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_CustomEvent_TargetUICharacter' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_float_Variable2) == 0x000088, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_float_Variable3) == 0x00008C, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_bool_Variable1) == 0x000090, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_Select1_Default) == 0x000094, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, Temp_bool_Variable2) == 0x000098, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetComponentByClass_ReturnValue1) == 0x0000A0, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetComponentByClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_Select2_Default) == 0x0000A8, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_IsSkillActive_ReturnValue) == 0x0000AC, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_IsSkillActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_FInterpTo_ReturnValue) == 0x0000B0, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_Not_PreBool_ReturnValue) == 0x0000B4, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetDynamicMaterial_ReturnValue2) == 0x0000B8, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetDynamicMaterial_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_IsValid_ReturnValue1) == 0x0000C0, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetAJBInGameHUD_BP_bSuccess) == 0x0000C1, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetAJBInGameHUD_BP_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_GetAJBInGameHUD_BP_In_Game_HUD) == 0x0000C8, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_GetAJBInGameHUD_BP_In_Game_HUD' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_MakeHamonBreathingGaugeAngle_Angle) == 0x0000D0, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_MakeHamonBreathingGaugeAngle_Angle' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_IsValid_ReturnValue2) == 0x0000D4, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_MapRangeClamped_ReturnValue) == 0x0000D8, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, CallFunc_MakeVector2D_ReturnValue) == 0x0000DC, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge, K2Node_MakeStruct_WidgetTransform) == 0x0000E4, "Member 'WB_HamonGauge_C_ExecuteUbergraph_WB_HamonGauge::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function WB_HamonGauge.WB_HamonGauge_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct WB_HamonGauge_C_Initialize final
{
public:
	class ABP_AJBInGameCharacter_C*               TargetUICharacter_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HamonGauge_C_Initialize) == 0x000008, "Wrong alignment on WB_HamonGauge_C_Initialize");
static_assert(sizeof(WB_HamonGauge_C_Initialize) == 0x000008, "Wrong size on WB_HamonGauge_C_Initialize");
static_assert(offsetof(WB_HamonGauge_C_Initialize, TargetUICharacter_0) == 0x000000, "Member 'WB_HamonGauge_C_Initialize::TargetUICharacter_0' has a wrong offset!");

// Function WB_HamonGauge.WB_HamonGauge_C.OnDecideResult
// 0x0008 (0x0008 - 0x0000)
struct WB_HamonGauge_C_OnDecideResult final
{
public:
	uint8                                         Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateTimeRatio;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HamonGauge_C_OnDecideResult) == 0x000004, "Wrong alignment on WB_HamonGauge_C_OnDecideResult");
static_assert(sizeof(WB_HamonGauge_C_OnDecideResult) == 0x000008, "Wrong size on WB_HamonGauge_C_OnDecideResult");
static_assert(offsetof(WB_HamonGauge_C_OnDecideResult, Result) == 0x000000, "Member 'WB_HamonGauge_C_OnDecideResult::Result' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_OnDecideResult, StateTimeRatio) == 0x000004, "Member 'WB_HamonGauge_C_OnDecideResult::StateTimeRatio' has a wrong offset!");

// Function WB_HamonGauge.WB_HamonGauge_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_HamonGauge_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HamonGauge_C_Tick) == 0x000004, "Wrong alignment on WB_HamonGauge_C_Tick");
static_assert(sizeof(WB_HamonGauge_C_Tick) == 0x00003C, "Wrong size on WB_HamonGauge_C_Tick");
static_assert(offsetof(WB_HamonGauge_C_Tick, MyGeometry) == 0x000000, "Member 'WB_HamonGauge_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_HamonGauge_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_HamonGauge_C_Tick::InDeltaTime' has a wrong offset!");

}


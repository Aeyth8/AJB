#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_InGameMain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AJB_structs.hpp"
#include "AJB_classes.hpp"
#include "UMG_structs.hpp"
#include "E_AJBInGamePvE_GamePhase_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_InGameMain.WB_InGameMain_C
// 0x02E0 (0x05A0 - 0x02C0)
class UWB_InGameMain_C final : public UAJBWindowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_OpeningHUD;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_DamageFlashEnd;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_DamageFlash;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_MpCircleFade;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              AJBImage_DamageEffect;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           DamageDisplayRoot;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GameplayOnlyRoot;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PBFrame_MP_Bar;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PBFrame_MP_Circle;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PvELayoutRoot;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ReticleRoot;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ShopCompetitionFlowRoot;                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ShopExchangeFlowroot;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBButton*                             SignalPinSpawnButton;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SignalPinsRoot;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_EndTrainingButton_C*                TrainingEndButton;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_AbilityActivateMessage_C*           WB_AbilityActivateMessage;                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ActionLogWindow_C*                  WB_ActionLogWindow;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Compass_C*                          WB_Compass;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_DamageAreaMessage_C*                WB_DamageAreaMessage;                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ExchangeScoreBoard_C*               WB_ExchangeScoreBoard;                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GameModeView_C*                     WB_GameModeView;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAJBImage*                              WB_HPandAP;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngameCustomizeSelecter_C*          WB_IngameCustomizeSelecter;                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_InGameMiniMap_C*                    WB_InGameMiniMap;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngamePlayerIcon_C*                 WB_IngamePlayerIcon;                               // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_InteractMessage_C*                  WB_InteractMessage;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_InteractProgressBar_C*              WB_InteractProgressBar;                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_KillReportMessage_C*                WB_KillReportMessage;                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LivingPlayerCount_C*                WB_LivingPlayerCount;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LivingPlayerCountMessage_C*         WB_LivingPlayerCountMessage_0;                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_O2_ProgressBar_C*                   WB_O2_ProgressBar;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PassiveMessage_C*                   WB_PassiveMessage;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerDownGauge_C*                  WB_PlayerDownGauge;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PvE_MatchInfo_C*                    WB_PvE_MatchInfo;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_RadioChat_C*                        WB_RadioChat;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_RemainingTime_C*                    WB_RemainingTime;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SelectOperationTypeButton_C*        WB_SelectOperationTypeButton;                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ShotNG_C*                           WB_ShotNG;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Skill_MD_C*                         WB_Skill_MD;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillGuide_C*                       WB_SkillGuide;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillIcon_C*                        WB_SkillIcon_L1;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillIcon_C*                        WB_SkillIcon_L2;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillIcon_C*                        WB_SkillIcon_R1;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillIcon_C*                        WB_SkillIcon_R2;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillPartsTimer_C*                  WB_SkillPartsTimer_1;                              // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillPartsTimer_C*                  WB_SkillPartsTimer_2;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillPartsTimer_C*                  WB_SkillPartsTimer_3;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SkillUnavailableMessage_C*          WB_SkillUnavailableMessage;                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SPgauge_C*                          WB_SPgauge;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_HamonGauge_C*                       WB_TestHamonGauge02;                               // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Tutorial_C*                         WB_Tutorial;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TutorialInGameInputGuide_C*         WB_TutorialInGameInputGuide;                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_UI_FollowPairInfo_C*                WB_UI_FollowPairInfo;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_VirusCapsuleList_C*                 WB_VirusCapsuleList;                               // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_MPbar_Circle;                                  // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPairMode;                                         // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AJBInGameCharacter_C*               TargetUICharacter;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_MPbar;                                         // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPBarBaseRate;                                     // 0x04A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPCircleBaseRate;                                  // 0x04A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        SkillTimerUserObjects;                             // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWB_SkillPartsTimer_C*>          TimerParts;                                        // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         LocalCriticalElapsedTime;                          // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CacheRepCriticalElapsedTime;                       // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayDisappearMPCircleAnim;                        // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnClickedTrainingEndButton;                        // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<int32, class UWB_UI_FollowPairInfo_C*>   ShopCompetitionFollowWidgets;                      // 0x04E8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         PreCachedMpPercentValue;                           // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           MPIncreasingTimer;                                 // 0x0540(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         MPIncreasingKeepTime;                              // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPBarIncreasingValue;                              // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPBarIncreasingTargetValue;                        // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPBarIncreasingInterpSpeed;                        // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnEndFadeInAnimDispatcher;                         // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         MPBarIncreasingDelayTime;                          // 0x0568(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPBarIncreasingDelayElapsedTime;                   // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AJBUIMapManager_C*                  UIMapManagerRef;                                   // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_HPandAPandCPbar;                               // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnClickedSelectOperationTypeButton;                // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInstanceDynamic*               DMI_HamonGauge;                                    // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_HamonBar;                                      // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_InGameMain(int32 EntryPoint);
	void UnbindsBeforeInit(class ABP_AJBInGameCharacter_C* NewUITarget);
	void OnDecidedFilterR(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnDecidedFilterL(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnSkillActivated(class UBP_AJBSkillBase_C* ActivatedSkill);
	void OnSuccess(uint8 Result, float StateTimeRatio);
	void BndEvt__WB_SelectOperationTypeButton_K2Node_ComponentBoundEvent_2_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void RemoveDevInput();
	void AddDevInput();
	void BndEvt__RadioChatDisplayButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void OnFinishedOpeningFadeInAnim();
	void FadeOutUI();
	void DelayInvisbleGameplayLayout();
	void OnResetMPIncreasingAnimation();
	void BndEvt__WB_EndTrainingButton_0_K2Node_ComponentBoundEvent_0_OnAJBButtonEvent__DelegateSignature(class UAJBButtonWidget* OwnerWidget, class UAJBButton* TargetButton);
	void OnFinishedDamageAnim();
	void ResetDamageHPFlashAnimation();
	void DamageHPFlashAnimation();
	void ForceDisappearMPCircle();
	void DisappearMPCircleAnim();
	void AppearMPCircleAnim();
	void OnClosingWindow();
	void OnOpeningWindow();
	void InitializeInGameMainUI(class ABP_AJBInGameCharacter_C* TargetCharacter);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void AddGameplayTagWithFloat(const struct FGameplayTag& Tag, float FloatValue);
	void RemoveGameplayTag(const struct FGameplayTag& Tag);
	void AddGameplayTag(const struct FGameplayTag& Tag, class UObject* Operator, class UObject* Target, const struct FGameplayTag& CauserType, int32 SerialNumber);
	void UpdateMP(float DeltaTime);
	void UpdateHPAndAPAndCP();
	void UpdateSP();
	void SetupDMI();
	void UpdateMPLevel();
	void UpdateDyingBar(float Delta);
	void UpdateDebugLog();
	void RegisterSkillTimer(class UObject* TimerPartsUser, class UWB_SkillPartsTimer_C** ReturValue);
	void UnregisterSkillTimer(class UObject* TimerPartsUser, class UWB_SkillPartsTimer_C* Timer);
	void HiddenSkillTimerParts();
	void InitializePlayModeDisplay();
	void InvisibleTrainingEndButton();
	class UWB_UI_FollowPairInfo_C* TryGetShopCompetitionFlowWidget(int32 FollowPlayerID);
	void SetVisibleGameplayLayout(bool bVisible);
	void SetVisibleShopCompetitionFlowLayout(bool bVisible);
	void UpdateOxygen();
	void UpdateVirusCapsule();
	void UpdatePvEWave();
	void UpdatePvETime();
	void UpdatePvEScore(float DeltaTime);
	void UpdateHamonUI();
	void ChangeFilter(int32 FilterIndex);
	void GetGameplayTags(struct FGameplayTagContainer* TagContainerCopy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_InGameMain_C">();
	}
	static class UWB_InGameMain_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_InGameMain_C>();
	}
};
static_assert(alignof(UWB_InGameMain_C) == 0x000008, "Wrong alignment on UWB_InGameMain_C");
static_assert(sizeof(UWB_InGameMain_C) == 0x0005A0, "Wrong size on UWB_InGameMain_C");
static_assert(offsetof(UWB_InGameMain_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_InGameMain_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, Anim_OpeningHUD) == 0x0002C8, "Member 'UWB_InGameMain_C::Anim_OpeningHUD' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, Anim_DamageFlashEnd) == 0x0002D0, "Member 'UWB_InGameMain_C::Anim_DamageFlashEnd' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, Anim_DamageFlash) == 0x0002D8, "Member 'UWB_InGameMain_C::Anim_DamageFlash' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, Anim_MpCircleFade) == 0x0002E0, "Member 'UWB_InGameMain_C::Anim_MpCircleFade' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, AJBImage_DamageEffect) == 0x0002E8, "Member 'UWB_InGameMain_C::AJBImage_DamageEffect' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DamageDisplayRoot) == 0x0002F0, "Member 'UWB_InGameMain_C::DamageDisplayRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, GameplayOnlyRoot) == 0x0002F8, "Member 'UWB_InGameMain_C::GameplayOnlyRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, PBFrame_MP_Bar) == 0x000300, "Member 'UWB_InGameMain_C::PBFrame_MP_Bar' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, PBFrame_MP_Circle) == 0x000308, "Member 'UWB_InGameMain_C::PBFrame_MP_Circle' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, PvELayoutRoot) == 0x000310, "Member 'UWB_InGameMain_C::PvELayoutRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, ReticleRoot) == 0x000318, "Member 'UWB_InGameMain_C::ReticleRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, ShopCompetitionFlowRoot) == 0x000320, "Member 'UWB_InGameMain_C::ShopCompetitionFlowRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, ShopExchangeFlowroot) == 0x000328, "Member 'UWB_InGameMain_C::ShopExchangeFlowroot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, SignalPinSpawnButton) == 0x000330, "Member 'UWB_InGameMain_C::SignalPinSpawnButton' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, SignalPinsRoot) == 0x000338, "Member 'UWB_InGameMain_C::SignalPinsRoot' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, TrainingEndButton) == 0x000340, "Member 'UWB_InGameMain_C::TrainingEndButton' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_AbilityActivateMessage) == 0x000348, "Member 'UWB_InGameMain_C::WB_AbilityActivateMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_ActionLogWindow) == 0x000350, "Member 'UWB_InGameMain_C::WB_ActionLogWindow' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_Compass) == 0x000358, "Member 'UWB_InGameMain_C::WB_Compass' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_DamageAreaMessage) == 0x000360, "Member 'UWB_InGameMain_C::WB_DamageAreaMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_ExchangeScoreBoard) == 0x000368, "Member 'UWB_InGameMain_C::WB_ExchangeScoreBoard' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_GameModeView) == 0x000370, "Member 'UWB_InGameMain_C::WB_GameModeView' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_HPandAP) == 0x000378, "Member 'UWB_InGameMain_C::WB_HPandAP' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_IngameCustomizeSelecter) == 0x000380, "Member 'UWB_InGameMain_C::WB_IngameCustomizeSelecter' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_InGameMiniMap) == 0x000388, "Member 'UWB_InGameMain_C::WB_InGameMiniMap' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_IngamePlayerIcon) == 0x000390, "Member 'UWB_InGameMain_C::WB_IngamePlayerIcon' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_InteractMessage) == 0x000398, "Member 'UWB_InGameMain_C::WB_InteractMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_InteractProgressBar) == 0x0003A0, "Member 'UWB_InGameMain_C::WB_InteractProgressBar' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_KillReportMessage) == 0x0003A8, "Member 'UWB_InGameMain_C::WB_KillReportMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_LivingPlayerCount) == 0x0003B0, "Member 'UWB_InGameMain_C::WB_LivingPlayerCount' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_LivingPlayerCountMessage_0) == 0x0003B8, "Member 'UWB_InGameMain_C::WB_LivingPlayerCountMessage_0' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_O2_ProgressBar) == 0x0003C0, "Member 'UWB_InGameMain_C::WB_O2_ProgressBar' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_PassiveMessage) == 0x0003C8, "Member 'UWB_InGameMain_C::WB_PassiveMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_PlayerDownGauge) == 0x0003D0, "Member 'UWB_InGameMain_C::WB_PlayerDownGauge' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_PvE_MatchInfo) == 0x0003D8, "Member 'UWB_InGameMain_C::WB_PvE_MatchInfo' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_RadioChat) == 0x0003E0, "Member 'UWB_InGameMain_C::WB_RadioChat' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_RemainingTime) == 0x0003E8, "Member 'UWB_InGameMain_C::WB_RemainingTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SelectOperationTypeButton) == 0x0003F0, "Member 'UWB_InGameMain_C::WB_SelectOperationTypeButton' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_ShotNG) == 0x0003F8, "Member 'UWB_InGameMain_C::WB_ShotNG' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_Skill_MD) == 0x000400, "Member 'UWB_InGameMain_C::WB_Skill_MD' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillGuide) == 0x000408, "Member 'UWB_InGameMain_C::WB_SkillGuide' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillIcon_L1) == 0x000410, "Member 'UWB_InGameMain_C::WB_SkillIcon_L1' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillIcon_L2) == 0x000418, "Member 'UWB_InGameMain_C::WB_SkillIcon_L2' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillIcon_R1) == 0x000420, "Member 'UWB_InGameMain_C::WB_SkillIcon_R1' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillIcon_R2) == 0x000428, "Member 'UWB_InGameMain_C::WB_SkillIcon_R2' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillPartsTimer_1) == 0x000430, "Member 'UWB_InGameMain_C::WB_SkillPartsTimer_1' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillPartsTimer_2) == 0x000438, "Member 'UWB_InGameMain_C::WB_SkillPartsTimer_2' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillPartsTimer_3) == 0x000440, "Member 'UWB_InGameMain_C::WB_SkillPartsTimer_3' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SkillUnavailableMessage) == 0x000448, "Member 'UWB_InGameMain_C::WB_SkillUnavailableMessage' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_SPgauge) == 0x000450, "Member 'UWB_InGameMain_C::WB_SPgauge' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_TestHamonGauge02) == 0x000458, "Member 'UWB_InGameMain_C::WB_TestHamonGauge02' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_Tutorial) == 0x000460, "Member 'UWB_InGameMain_C::WB_Tutorial' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_TutorialInGameInputGuide) == 0x000468, "Member 'UWB_InGameMain_C::WB_TutorialInGameInputGuide' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_UI_FollowPairInfo) == 0x000470, "Member 'UWB_InGameMain_C::WB_UI_FollowPairInfo' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, WB_VirusCapsuleList) == 0x000478, "Member 'UWB_InGameMain_C::WB_VirusCapsuleList' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DMI_MPbar_Circle) == 0x000480, "Member 'UWB_InGameMain_C::DMI_MPbar_Circle' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, bPairMode) == 0x000488, "Member 'UWB_InGameMain_C::bPairMode' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, TargetUICharacter) == 0x000490, "Member 'UWB_InGameMain_C::TargetUICharacter' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DMI_MPbar) == 0x000498, "Member 'UWB_InGameMain_C::DMI_MPbar' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarBaseRate) == 0x0004A0, "Member 'UWB_InGameMain_C::MPBarBaseRate' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPCircleBaseRate) == 0x0004A4, "Member 'UWB_InGameMain_C::MPCircleBaseRate' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, SkillTimerUserObjects) == 0x0004A8, "Member 'UWB_InGameMain_C::SkillTimerUserObjects' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, TimerParts) == 0x0004B8, "Member 'UWB_InGameMain_C::TimerParts' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, LocalCriticalElapsedTime) == 0x0004C8, "Member 'UWB_InGameMain_C::LocalCriticalElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, CacheRepCriticalElapsedTime) == 0x0004CC, "Member 'UWB_InGameMain_C::CacheRepCriticalElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, bPlayDisappearMPCircleAnim) == 0x0004D0, "Member 'UWB_InGameMain_C::bPlayDisappearMPCircleAnim' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, OnClickedTrainingEndButton) == 0x0004D8, "Member 'UWB_InGameMain_C::OnClickedTrainingEndButton' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, ShopCompetitionFollowWidgets) == 0x0004E8, "Member 'UWB_InGameMain_C::ShopCompetitionFollowWidgets' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, PreCachedMpPercentValue) == 0x000538, "Member 'UWB_InGameMain_C::PreCachedMpPercentValue' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPIncreasingTimer) == 0x000540, "Member 'UWB_InGameMain_C::MPIncreasingTimer' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPIncreasingKeepTime) == 0x000548, "Member 'UWB_InGameMain_C::MPIncreasingKeepTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarIncreasingValue) == 0x00054C, "Member 'UWB_InGameMain_C::MPBarIncreasingValue' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarIncreasingTargetValue) == 0x000550, "Member 'UWB_InGameMain_C::MPBarIncreasingTargetValue' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarIncreasingInterpSpeed) == 0x000554, "Member 'UWB_InGameMain_C::MPBarIncreasingInterpSpeed' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, OnEndFadeInAnimDispatcher) == 0x000558, "Member 'UWB_InGameMain_C::OnEndFadeInAnimDispatcher' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarIncreasingDelayTime) == 0x000568, "Member 'UWB_InGameMain_C::MPBarIncreasingDelayTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, MPBarIncreasingDelayElapsedTime) == 0x00056C, "Member 'UWB_InGameMain_C::MPBarIncreasingDelayElapsedTime' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, UIMapManagerRef) == 0x000570, "Member 'UWB_InGameMain_C::UIMapManagerRef' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DMI_HPandAPandCPbar) == 0x000578, "Member 'UWB_InGameMain_C::DMI_HPandAPandCPbar' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, OnClickedSelectOperationTypeButton) == 0x000580, "Member 'UWB_InGameMain_C::OnClickedSelectOperationTypeButton' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DMI_HamonGauge) == 0x000590, "Member 'UWB_InGameMain_C::DMI_HamonGauge' has a wrong offset!");
static_assert(offsetof(UWB_InGameMain_C, DMI_HamonBar) == 0x000598, "Member 'UWB_InGameMain_C::DMI_HamonBar' has a wrong offset!");

}


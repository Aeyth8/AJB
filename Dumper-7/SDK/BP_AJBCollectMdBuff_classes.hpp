#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBCollectMdBuff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_AJBPassiveSkillBase_classes.hpp"
#include "AJB_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBCollectMdBuff.BP_AJBCollectMdBuff_C
// 0x0078 (0x0288 - 0x0210)
class UBP_AJBCollectMdBuff_C final : public UBP_AJBPassiveSkillBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AJBCollectMdBuff_C;              // 0x0210(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           BuffSETag;                                         // 0x0218(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CurrentPhaseList;                                  // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   BuffTagList;                                       // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDebugPrintValueOnApply;                           // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fighter1st___;                                     // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fighter2nd___;                                     // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fighter3rd___;                                     // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gunner1st___;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gunner2nd___;                                      // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gunner3rd___;                                      // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disturb1st___;                                     // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disturb2nd___;                                     // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disturb3rd___;                                     // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hamon1st___;                                       // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hamon2nd___;                                       // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hamon3rd___;                                       // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimitNum;                                          // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HamonOnSeparate1st___;                             // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HamonOnSeparate2nd___;                             // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HamonOnSeparate3rd___;                             // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AJBCollectMdBuff(int32 EntryPoint);
	void ResetBuff();
	void RequestBuff(EAJBSkillType SkillType, const TArray<struct FST_CollectMdTargetInfo>& TargetList, int32 WBIndex);
	void ApplyBuff(TArray<struct FST_CollectMdTargetInfo>& TargetList, int32 WBIndex);
	void ConvertBattleTypeForIndex(ECharacterBattleType BattleType, int32* ApplyIndex);
	void CalcFighterParameter(int32 Phase, float* TotalParam, float* DiffParam);
	void CalcGunnerParameter(int32 Phase, float* TotalParam, float* DiffParam);
	void CalcDisturbParameter(int32 Phase, float* TotalParam, float* DiffParam);
	void CalcHamonParameter(int32 Phase, bool bOnSeparate, float* TotalParam, float* DiffParam);
	void ResetCurrentPhaseList();
	void ActiveContinuedParticle(bool bActiveForOwner, bool bActiveForMovableStand);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBCollectMdBuff_C">();
	}
	static class UBP_AJBCollectMdBuff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AJBCollectMdBuff_C>();
	}
};
static_assert(alignof(UBP_AJBCollectMdBuff_C) == 0x000008, "Wrong alignment on UBP_AJBCollectMdBuff_C");
static_assert(sizeof(UBP_AJBCollectMdBuff_C) == 0x000288, "Wrong size on UBP_AJBCollectMdBuff_C");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, UberGraphFrame_BP_AJBCollectMdBuff_C) == 0x000210, "Member 'UBP_AJBCollectMdBuff_C::UberGraphFrame_BP_AJBCollectMdBuff_C' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, BuffSETag) == 0x000218, "Member 'UBP_AJBCollectMdBuff_C::BuffSETag' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, CurrentPhaseList) == 0x000220, "Member 'UBP_AJBCollectMdBuff_C::CurrentPhaseList' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, BuffTagList) == 0x000230, "Member 'UBP_AJBCollectMdBuff_C::BuffTagList' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, bDebugPrintValueOnApply) == 0x000240, "Member 'UBP_AJBCollectMdBuff_C::bDebugPrintValueOnApply' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Fighter1st___) == 0x000244, "Member 'UBP_AJBCollectMdBuff_C::Fighter1st___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Fighter2nd___) == 0x000248, "Member 'UBP_AJBCollectMdBuff_C::Fighter2nd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Fighter3rd___) == 0x00024C, "Member 'UBP_AJBCollectMdBuff_C::Fighter3rd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Gunner1st___) == 0x000250, "Member 'UBP_AJBCollectMdBuff_C::Gunner1st___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Gunner2nd___) == 0x000254, "Member 'UBP_AJBCollectMdBuff_C::Gunner2nd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Gunner3rd___) == 0x000258, "Member 'UBP_AJBCollectMdBuff_C::Gunner3rd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Disturb1st___) == 0x00025C, "Member 'UBP_AJBCollectMdBuff_C::Disturb1st___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Disturb2nd___) == 0x000260, "Member 'UBP_AJBCollectMdBuff_C::Disturb2nd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Disturb3rd___) == 0x000264, "Member 'UBP_AJBCollectMdBuff_C::Disturb3rd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Hamon1st___) == 0x000268, "Member 'UBP_AJBCollectMdBuff_C::Hamon1st___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Hamon2nd___) == 0x00026C, "Member 'UBP_AJBCollectMdBuff_C::Hamon2nd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, Hamon3rd___) == 0x000270, "Member 'UBP_AJBCollectMdBuff_C::Hamon3rd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, LimitNum) == 0x000274, "Member 'UBP_AJBCollectMdBuff_C::LimitNum' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, HamonOnSeparate1st___) == 0x000278, "Member 'UBP_AJBCollectMdBuff_C::HamonOnSeparate1st___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, HamonOnSeparate2nd___) == 0x00027C, "Member 'UBP_AJBCollectMdBuff_C::HamonOnSeparate2nd___' has a wrong offset!");
static_assert(offsetof(UBP_AJBCollectMdBuff_C, HamonOnSeparate3rd___) == 0x000280, "Member 'UBP_AJBCollectMdBuff_C::HamonOnSeparate3rd___' has a wrong offset!");

}


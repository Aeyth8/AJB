#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBInGameStand_KQS

#include "Basic.hpp"

#include "BP_AJBInGameStand_KQS_classes.hpp"
#include "BP_AJBInGameStand_KQS_parameters.hpp"


namespace SDK
{

// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.ExecuteUbergraph_BP_AJBInGameStand_KQS
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::ExecuteUbergraph_BP_AJBInGameStand_KQS(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "ExecuteUbergraph_BP_AJBInGameStand_KQS");

	Params::BP_AJBInGameStand_KQS_C_ExecuteUbergraph_BP_AJBInGameStand_KQS Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnReady
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_KQS_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnReturn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_KQS_C::OnReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnLaunch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_KQS_C::OnLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnLaunch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnCompleted_7D45FDFB4F018EBBCEA75BB3FA07A718
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::OnCompleted_7D45FDFB4F018EBBCEA75BB3FA07A718(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnCompleted_7D45FDFB4F018EBBCEA75BB3FA07A718");

	Params::BP_AJBInGameStand_KQS_C_OnCompleted_7D45FDFB4F018EBBCEA75BB3FA07A718 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnBlendOut_7D45FDFB4F018EBBCEA75BB3FA07A718
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::OnBlendOut_7D45FDFB4F018EBBCEA75BB3FA07A718(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnBlendOut_7D45FDFB4F018EBBCEA75BB3FA07A718");

	Params::BP_AJBInGameStand_KQS_C_OnBlendOut_7D45FDFB4F018EBBCEA75BB3FA07A718 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnInterrupted_7D45FDFB4F018EBBCEA75BB3FA07A718
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::OnInterrupted_7D45FDFB4F018EBBCEA75BB3FA07A718(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnInterrupted_7D45FDFB4F018EBBCEA75BB3FA07A718");

	Params::BP_AJBInGameStand_KQS_C_OnInterrupted_7D45FDFB4F018EBBCEA75BB3FA07A718 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnNotifyBegin_7D45FDFB4F018EBBCEA75BB3FA07A718
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::OnNotifyBegin_7D45FDFB4F018EBBCEA75BB3FA07A718(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnNotifyBegin_7D45FDFB4F018EBBCEA75BB3FA07A718");

	Params::BP_AJBInGameStand_KQS_C_OnNotifyBegin_7D45FDFB4F018EBBCEA75BB3FA07A718 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.OnNotifyEnd_7D45FDFB4F018EBBCEA75BB3FA07A718
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::OnNotifyEnd_7D45FDFB4F018EBBCEA75BB3FA07A718(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "OnNotifyEnd_7D45FDFB4F018EBBCEA75BB3FA07A718");

	Params::BP_AJBInGameStand_KQS_C_OnNotifyEnd_7D45FDFB4F018EBBCEA75BB3FA07A718 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetStandAttackOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         StandAttackOffset                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetStandAttackOffset(int32 CloseRangeSkillNo, struct FVector* StandAttackOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetStandAttackOffset");

	Params::BP_AJBInGameStand_KQS_C_GetStandAttackOffset Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (StandAttackOffset != nullptr)
		*StandAttackOffset = std::move(Parms.StandAttackOffset);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetAttackRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  AttackRange                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetAttackRange(int32 CloseRangeSkillNo, float* AttackRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetAttackRange");

	Params::BP_AJBInGameStand_KQS_C_GetAttackRange Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (AttackRange != nullptr)
		*AttackRange = Parms.AttackRange;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetAttackCollisionRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetAttackCollisionRadius(int32 CloseRangeSkillNo, float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetAttackCollisionRadius");

	Params::BP_AJBInGameStand_KQS_C_GetAttackCollisionRadius Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetAttackLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetAttackLocation(const struct FVector& TargetLocation, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetAttackLocation");

	Params::BP_AJBInGameStand_KQS_C_GetAttackLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetLaunchedActorHomeLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetLaunchedActorHomeLocation(int32 CloseRangeSkillNo, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetLaunchedActorHomeLocation");

	Params::BP_AJBInGameStand_KQS_C_GetLaunchedActorHomeLocation Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetCloseRangeLaunchedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CloseRangeSkillNo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          LaunchedActor                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetCloseRangeLaunchedActor(int32 CloseRangeSkillNo, class AActor** LaunchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetCloseRangeLaunchedActor");

	Params::BP_AJBInGameStand_KQS_C_GetCloseRangeLaunchedActor Parms{};

	Parms.CloseRangeSkillNo = CloseRangeSkillNo;

	UObject::ProcessEvent(Func, &Parms);

	if (LaunchedActor != nullptr)
		*LaunchedActor = Parms.LaunchedActor;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetDamageActorTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetDamageActorTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetDamageActorTargetLocation");

	Params::BP_AJBInGameStand_KQS_C_GetDamageActorTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetDummyShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetDummyShotLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetDummyShotLocation");

	Params::BP_AJBInGameStand_KQS_C_GetDummyShotLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.PlayAppearMontage
// (BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_KQS_C::PlayAppearMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "PlayAppearMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.ShouldShowNGPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_KQS_C::ShouldShowNGPoint(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "ShouldShowNGPoint");

	Params::BP_AJBInGameStand_KQS_C_ShouldShowNGPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetShutTraceRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetShutTraceRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetShutTraceRadius");

	Params::BP_AJBInGameStand_KQS_C_GetShutTraceRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetShotLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConsiderCharacterCapsuleRadius                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FGameplayTag&              SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>*                 Locations                                              (Parm, OutParm, ZeroConstructor)

void ABP_AJBInGameStand_KQS_C::GetShotLocation(bool bConsiderCharacterCapsuleRadius, const struct FGameplayTag& SkillTag, TArray<struct FVector>* Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetShotLocation");

	Params::BP_AJBInGameStand_KQS_C_GetShotLocation Parms{};

	Parms.bConsiderCharacterCapsuleRadius = bConsiderCharacterCapsuleRadius;
	Parms.SkillTag = std::move(SkillTag);

	UObject::ProcessEvent(Func, &Parms);

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.CheckLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bLocallyControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AJBInGameStand_KQS_C::CheckLocallyControlled(bool* bLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "CheckLocallyControlled");

	Params::BP_AJBInGameStand_KQS_C_CheckLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocallyControlled != nullptr)
		*bLocallyControlled = Parms.bLocallyControlled;
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AJBInGameStand_KQS_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AJBInGameStand_KQS.BP_AJBInGameStand_KQS_C.GetTransitionRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AJBInGameStand_KQS_C::GetTransitionRate(float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AJBInGameStand_KQS_C", "GetTransitionRate");

	Params::BP_AJBInGameStand_KQS_C_GetTransitionRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AJBDebugAIStartPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AJBDebugAIStartPoint.BP_AJBDebugAIStartPoint_C
// 0x0090 (0x03B8 - 0x0328)
class ABP_AJBDebugAIStartPoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(Transient, DuplicateTransient)
	class UArrowComponent*                        ArrowForward;                                      // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnFinishedDelayForStartBehavior;                   // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bAutomaticSpawn;                                   // 0x0358(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayForAutomaticSpawn;                            // 0x035C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRepeatToSpawnByTimer;                             // 0x0360(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IntervalForRepeatingSpawnTimer;                    // 0x0364(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitForStartBehavior;                              // 0x0368(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CharacterTag;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBehaviorTree*                          BehaviorSubTree;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugForceFireSkill;                              // 0x0388(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AI_Level;                                          // 0x038C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRepeatToSpawnIfDead;                              // 0x0390(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRepeatToSpawnAtDeadLocation;                      // 0x0391(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DebugFlags;                                        // 0x0398(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void ExecuteUbergraph_BP_AJBDebugAIStartPoint(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Server_DebugSpawnNPC();
	void Server_DebugTriggerSpawnNPCAutomatically();
	void Server_DelayForStartBehavior(class ABP_AJBInGameAIController_C* AI_Controller);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AJBDebugAIStartPoint_C">();
	}
	static class ABP_AJBDebugAIStartPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AJBDebugAIStartPoint_C>();
	}
};
static_assert(alignof(ABP_AJBDebugAIStartPoint_C) == 0x000008, "Wrong alignment on ABP_AJBDebugAIStartPoint_C");
static_assert(sizeof(ABP_AJBDebugAIStartPoint_C) == 0x0003B8, "Wrong size on ABP_AJBDebugAIStartPoint_C");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, UberGraphFrame) == 0x000328, "Member 'ABP_AJBDebugAIStartPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, ArrowForward) == 0x000330, "Member 'ABP_AJBDebugAIStartPoint_C::ArrowForward' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, Arrow) == 0x000338, "Member 'ABP_AJBDebugAIStartPoint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_AJBDebugAIStartPoint_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, OnFinishedDelayForStartBehavior) == 0x000348, "Member 'ABP_AJBDebugAIStartPoint_C::OnFinishedDelayForStartBehavior' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, bAutomaticSpawn) == 0x000358, "Member 'ABP_AJBDebugAIStartPoint_C::bAutomaticSpawn' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, DelayForAutomaticSpawn) == 0x00035C, "Member 'ABP_AJBDebugAIStartPoint_C::DelayForAutomaticSpawn' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, bRepeatToSpawnByTimer) == 0x000360, "Member 'ABP_AJBDebugAIStartPoint_C::bRepeatToSpawnByTimer' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, IntervalForRepeatingSpawnTimer) == 0x000364, "Member 'ABP_AJBDebugAIStartPoint_C::IntervalForRepeatingSpawnTimer' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, WaitForStartBehavior) == 0x000368, "Member 'ABP_AJBDebugAIStartPoint_C::WaitForStartBehavior' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, CharacterTag) == 0x000370, "Member 'ABP_AJBDebugAIStartPoint_C::CharacterTag' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, BehaviorTree) == 0x000378, "Member 'ABP_AJBDebugAIStartPoint_C::BehaviorTree' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, BehaviorSubTree) == 0x000380, "Member 'ABP_AJBDebugAIStartPoint_C::BehaviorSubTree' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, bDebugForceFireSkill) == 0x000388, "Member 'ABP_AJBDebugAIStartPoint_C::bDebugForceFireSkill' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, AI_Level) == 0x00038C, "Member 'ABP_AJBDebugAIStartPoint_C::AI_Level' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, bRepeatToSpawnIfDead) == 0x000390, "Member 'ABP_AJBDebugAIStartPoint_C::bRepeatToSpawnIfDead' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, bRepeatToSpawnAtDeadLocation) == 0x000391, "Member 'ABP_AJBDebugAIStartPoint_C::bRepeatToSpawnAtDeadLocation' has a wrong offset!");
static_assert(offsetof(ABP_AJBDebugAIStartPoint_C, DebugFlags) == 0x000398, "Member 'ABP_AJBDebugAIStartPoint_C::DebugFlags' has a wrong offset!");

}


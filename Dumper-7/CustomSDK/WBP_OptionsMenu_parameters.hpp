#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionsMenu

#include "../SDK/Basic.hpp"

#include "../SDK/UMG_structs.hpp"
#include "../SDK/InputCore_structs.hpp"
#include "../SDK/SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.SetDLLCommitVersion
// 0x0028 (0x0028 - 0x0000)
struct WBP_OptionsMenu_C_SetDLLCommitVersion final
{
public:
	class FString                                 NewVersion;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WBP_OptionsMenu_C_SetDLLCommitVersion) == 0x000008, "Wrong alignment on WBP_OptionsMenu_C_SetDLLCommitVersion");
static_assert(sizeof(WBP_OptionsMenu_C_SetDLLCommitVersion) == 0x000028, "Wrong size on WBP_OptionsMenu_C_SetDLLCommitVersion");
static_assert(offsetof(WBP_OptionsMenu_C_SetDLLCommitVersion, NewVersion) == 0x000000, "Member 'WBP_OptionsMenu_C_SetDLLCommitVersion::NewVersion' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_SetDLLCommitVersion, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WBP_OptionsMenu_C_SetDLLCommitVersion::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.SetOnlineStatus
// 0x0003 (0x0003 - 0x0000)
struct WBP_OptionsMenu_C_SetOnlineStatus final
{
public:
	bool                                          bIsOnline;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              SetHidden;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              SetVisible;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_SetOnlineStatus) == 0x000001, "Wrong alignment on WBP_OptionsMenu_C_SetOnlineStatus");
static_assert(sizeof(WBP_OptionsMenu_C_SetOnlineStatus) == 0x000003, "Wrong size on WBP_OptionsMenu_C_SetOnlineStatus");
static_assert(offsetof(WBP_OptionsMenu_C_SetOnlineStatus, bIsOnline) == 0x000000, "Member 'WBP_OptionsMenu_C_SetOnlineStatus::bIsOnline' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_SetOnlineStatus, SetHidden) == 0x000001, "Member 'WBP_OptionsMenu_C_SetOnlineStatus::SetHidden' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_SetOnlineStatus, SetVisible) == 0x000002, "Member 'WBP_OptionsMenu_C_SetOnlineStatus::SetVisible' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.ToggleVisibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_OptionsMenu_C_ToggleVisibility final
{
public:
	ESlateVisibility                              NewVisibility;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenu_C_ToggleVisibility) == 0x000008, "Wrong alignment on WBP_OptionsMenu_C_ToggleVisibility");
static_assert(sizeof(WBP_OptionsMenu_C_ToggleVisibility) == 0x000018, "Wrong size on WBP_OptionsMenu_C_ToggleVisibility");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, NewVisibility) == 0x000000, "Member 'WBP_OptionsMenu_C_ToggleVisibility::NewVisibility' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_OptionsMenu_C_ToggleVisibility::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, CallFunc_IsStandalone_ReturnValue) == 0x000010, "Member 'WBP_OptionsMenu_C_ToggleVisibility::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'WBP_OptionsMenu_C_ToggleVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, CallFunc_SetGamePaused_ReturnValue) == 0x000012, "Member 'WBP_OptionsMenu_C_ToggleVisibility::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ToggleVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'WBP_OptionsMenu_C_ToggleVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.bVisibilityToESlate
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionsMenu_C_bVisibilityToESlate final
{
public:
	ESlateVisibility                              OutVisibility;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_bVisibilityToESlate) == 0x000001, "Wrong alignment on WBP_OptionsMenu_C_bVisibilityToESlate");
static_assert(sizeof(WBP_OptionsMenu_C_bVisibilityToESlate) == 0x000001, "Wrong size on WBP_OptionsMenu_C_bVisibilityToESlate");
static_assert(offsetof(WBP_OptionsMenu_C_bVisibilityToESlate, OutVisibility) == 0x000000, "Member 'WBP_OptionsMenu_C_bVisibilityToESlate::Visibility_0' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.GetDominatingTickRate
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionsMenu_C_GetDominatingTickRate final
{
public:
	float                                         DominatingTickRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_GetDominatingTickRate) == 0x000004, "Wrong alignment on WBP_OptionsMenu_C_GetDominatingTickRate");
static_assert(sizeof(WBP_OptionsMenu_C_GetDominatingTickRate) == 0x000004, "Wrong size on WBP_OptionsMenu_C_GetDominatingTickRate");
static_assert(offsetof(WBP_OptionsMenu_C_GetDominatingTickRate, DominatingTickRate) == 0x000000, "Member 'WBP_OptionsMenu_C_GetDominatingTickRate::NewParam' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.GetInputKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_OptionsMenu_C_GetInputKey final
{
public:
	struct FKey                                   OutputKey;                                        // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_GetInputKey) == 0x000008, "Wrong alignment on WBP_OptionsMenu_C_GetInputKey");
static_assert(sizeof(WBP_OptionsMenu_C_GetInputKey) == 0x000018, "Wrong size on WBP_OptionsMenu_C_GetInputKey");
static_assert(offsetof(WBP_OptionsMenu_C_GetInputKey, OutputKey) == 0x000000, "Member 'WBP_OptionsMenu_C_GetInputKey::InputKey_0' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.IsMenuVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionsMenu_C_IsMenuVisible final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenu_C_IsMenuVisible) == 0x000001, "Wrong alignment on WBP_OptionsMenu_C_IsMenuVisible");
static_assert(sizeof(WBP_OptionsMenu_C_IsMenuVisible) == 0x000001, "Wrong size on WBP_OptionsMenu_C_IsMenuVisible");
static_assert(offsetof(WBP_OptionsMenu_C_IsMenuVisible, Bool) == 0x000000, "Member 'WBP_OptionsMenu_C_IsMenuVisible::Bool' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.SetInputKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_OptionsMenu_C_SetInputKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_SetInputKey) == 0x000008, "Wrong alignment on WBP_OptionsMenu_C_SetInputKey");
static_assert(sizeof(WBP_OptionsMenu_C_SetInputKey) == 0x000018, "Wrong size on WBP_OptionsMenu_C_SetInputKey");
static_assert(offsetof(WBP_OptionsMenu_C_SetInputKey, NewKey) == 0x000000, "Member 'WBP_OptionsMenu_C_SetInputKey::NewKey' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionsMenu_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenu_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OptionsMenu_C_PreConstruct");
static_assert(sizeof(WBP_OptionsMenu_C_PreConstruct) == 0x000001, "Wrong size on WBP_OptionsMenu_C_PreConstruct");
static_assert(offsetof(WBP_OptionsMenu_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OptionsMenu_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_OptionsMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_Tick) == 0x000004, "Wrong alignment on WBP_OptionsMenu_C_Tick");
static_assert(sizeof(WBP_OptionsMenu_C_Tick) == 0x00003C, "Wrong size on WBP_OptionsMenu_C_Tick");
static_assert(offsetof(WBP_OptionsMenu_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_OptionsMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_OptionsMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_OptionsMenu.WBP_OptionsMenu_C.ExecuteUbergraph_WBP_OptionsMenu
// 0x0090 (0x0090 - 0x0000)
struct WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreateSessionCallbackProxy*            CallFunc_CreateSession_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0054(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu) == 0x000008, "Wrong alignment on WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu");
static_assert(sizeof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu) == 0x000090, "Wrong size on WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, EntryPoint) == 0x000000, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, K2Node_Event_IsDesignTime) == 0x000024, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_GetPlayerController_ReturnValue1) == 0x000040, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_CreateSession_ReturnValue) == 0x000048, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_CreateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000050, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, K2Node_Event_MyGeometry) == 0x000054, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu, K2Node_Event_InDeltaTime) == 0x00008C, "Member 'WBP_OptionsMenu_C_ExecuteUbergraph_WBP_OptionsMenu::K2Node_Event_InDeltaTime' has a wrong offset!");

}

